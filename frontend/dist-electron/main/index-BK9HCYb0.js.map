{"version":3,"file":"index-BK9HCYb0.js","sources":["../../electron/main/state.ts","../../node_modules/@langchain/core/dist/utils/json.js","../../node_modules/decamelize/index.js","../../node_modules/camelcase/index.js","../../node_modules/@langchain/core/dist/load/map_keys.js","../../node_modules/@langchain/core/dist/load/serializable.js","../../node_modules/@langchain/core/dist/messages/base.js","../../node_modules/@langchain/core/dist/messages/tool.js","../../node_modules/@langchain/core/dist/messages/ai.js","../../node_modules/@langchain/core/dist/messages/human.js","../../node_modules/@langchain/core/dist/messages/system.js","../../node_modules/@langchain/core/dist/errors/index.js","../../node_modules/@langchain/core/dist/tools/utils.js","../../node_modules/@langchain/core/dist/messages/utils.js","../../node_modules/p-retry/node_modules/retry/lib/retry_operation.js","../../node_modules/p-retry/node_modules/retry/lib/retry.js","../../node_modules/p-retry/node_modules/retry/index.js","../../node_modules/p-retry/index.js","../../node_modules/uuid/dist/max.js","../../node_modules/uuid/dist/nil.js","../../node_modules/uuid/dist/regex.js","../../node_modules/uuid/dist/validate.js","../../node_modules/uuid/dist/parse.js","../../node_modules/uuid/dist/stringify.js","../../node_modules/uuid/dist/rng.js","../../node_modules/uuid/dist/v1.js","../../node_modules/uuid/dist/v1ToV6.js","../../node_modules/uuid/dist/v35.js","../../node_modules/uuid/dist/md5.js","../../node_modules/uuid/dist/v3.js","../../node_modules/uuid/dist/native.js","../../node_modules/uuid/dist/v4.js","../../node_modules/uuid/dist/sha1.js","../../node_modules/uuid/dist/v5.js","../../node_modules/uuid/dist/v6.js","../../node_modules/uuid/dist/v6ToV1.js","../../node_modules/uuid/dist/v7.js","../../node_modules/uuid/dist/version.js","../../node_modules/uuid/dist/index.js","../../node_modules/uuid/wrapper.mjs","../../node_modules/eventemitter3/index.js","../../node_modules/p-finally/index.js","../../node_modules/p-timeout/index.js","../../node_modules/p-queue/dist/lower-bound.js","../../node_modules/p-queue/dist/priority-queue.js","../../node_modules/p-queue/dist/index.js","../../node_modules/langsmith/dist/singletons/fetch.js","../../node_modules/langsmith/dist/utils/async_caller.js","../../node_modules/langsmith/dist/utils/messages.js","../../node_modules/langsmith/dist/utils/_uuid.js","../../node_modules/langsmith/dist/utils/warn.js","../../node_modules/langsmith/dist/utils/prompts.js","../../node_modules/langsmith/dist/utils/error.js","../../node_modules/langsmith/dist/utils/fast-safe-stringify/index.js","../../node_modules/langsmith/dist/client.js","../../node_modules/langsmith/dist/index.js","../../node_modules/langsmith/dist/utils/env.js","../../node_modules/langsmith/dist/env.js","../../node_modules/langsmith/dist/singletons/constants.js","../../node_modules/langsmith/dist/run_trees.js","../../node_modules/langsmith/dist/singletons/traceable.js","../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","../../node_modules/@langchain/core/dist/utils/env.js","../../node_modules/@langchain/core/dist/callbacks/base.js","../../node_modules/@langchain/core/dist/tracers/base.js","../../node_modules/@langchain/core/node_modules/ansi-styles/index.js","../../node_modules/@langchain/core/dist/tracers/console.js","../../node_modules/@langchain/core/dist/singletons/tracer.js","../../node_modules/@langchain/core/dist/tracers/tracer_langchain.js","../../node_modules/@langchain/core/dist/singletons/async_local_storage/globals.js","../../node_modules/@langchain/core/dist/singletons/callbacks.js","../../node_modules/@langchain/core/dist/utils/callbacks.js","../../node_modules/@langchain/core/dist/singletons/async_local_storage/context.js","../../node_modules/@langchain/core/dist/callbacks/manager.js","../../node_modules/@langchain/core/dist/singletons/async_local_storage/index.js","../../node_modules/@langchain/core/dist/runnables/config.js","../../node_modules/@langchain/core/dist/utils/signal.js","../../node_modules/@langchain/core/dist/utils/stream.js","../../node_modules/@langchain/core/dist/tracers/log_stream.js","../../node_modules/@langchain/core/dist/outputs.js","../../node_modules/@langchain/core/dist/tracers/event_stream.js","../../node_modules/@langchain/core/dist/utils/async_caller.js","../../node_modules/@langchain/core/dist/tracers/root_listener.js","../../node_modules/@langchain/core/dist/runnables/utils.js","../../node_modules/zod-to-json-schema/dist/esm/Options.js","../../node_modules/zod-to-json-schema/dist/esm/Refs.js","../../node_modules/zod-to-json-schema/dist/esm/errorMessages.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/any.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/array.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/branded.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/catch.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/date.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/default.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/effects.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/enum.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/literal.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/string.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/record.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/map.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/never.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/null.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/union.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/number.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/object.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/optional.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/promise.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/set.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js","../../node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js","../../node_modules/zod-to-json-schema/dist/esm/parseDef.js","../../node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js","../../node_modules/@langchain/core/dist/runnables/graph_mermaid.js","../../node_modules/@langchain/core/dist/runnables/graph.js","../../node_modules/@langchain/core/dist/runnables/wrappers.js","../../node_modules/@langchain/core/dist/runnables/iter.js","../../node_modules/@langchain/core/dist/runnables/base.js","../../node_modules/drizzle-orm/entity.js","../../node_modules/drizzle-orm/logger.js","../../node_modules/drizzle-orm/table.utils.js","../../node_modules/drizzle-orm/table.js","../../node_modules/drizzle-orm/column.js","../../node_modules/drizzle-orm/column-builder.js","../../node_modules/drizzle-orm/pg-core/columns/enum.js","../../node_modules/drizzle-orm/subquery.js","../../node_modules/drizzle-orm/tracing.js","../../node_modules/drizzle-orm/view-common.js","../../node_modules/drizzle-orm/sql/sql.js","../../node_modules/drizzle-orm/utils.js","../../node_modules/drizzle-orm/pg-core/table.js","../../node_modules/drizzle-orm/pg-core/primary-keys.js","../../node_modules/drizzle-orm/sql/expressions/conditions.js","../../node_modules/drizzle-orm/sql/expressions/select.js","../../node_modules/drizzle-orm/relations.js","../../node_modules/drizzle-orm/alias.js","../../node_modules/drizzle-orm/selection-proxy.js","../../node_modules/drizzle-orm/query-promise.js","../../node_modules/drizzle-orm/sqlite-core/foreign-keys.js","../../node_modules/drizzle-orm/sqlite-core/unique-constraint.js","../../node_modules/drizzle-orm/sqlite-core/columns/common.js","../../node_modules/drizzle-orm/sqlite-core/columns/blob.js","../../node_modules/drizzle-orm/sqlite-core/columns/custom.js","../../node_modules/drizzle-orm/sqlite-core/columns/integer.js","../../node_modules/drizzle-orm/sqlite-core/columns/numeric.js","../../node_modules/drizzle-orm/sqlite-core/columns/real.js","../../node_modules/drizzle-orm/sqlite-core/columns/text.js","../../node_modules/drizzle-orm/sqlite-core/columns/all.js","../../node_modules/drizzle-orm/sqlite-core/table.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/delete.js","../../node_modules/drizzle-orm/casing.js","../../node_modules/drizzle-orm/errors.js","../../node_modules/drizzle-orm/sqlite-core/view-base.js","../../node_modules/drizzle-orm/sqlite-core/dialect.js","../../node_modules/drizzle-orm/query-builders/query-builder.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/select.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/query-builder.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/insert.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/update.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/count.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/query.js","../../node_modules/drizzle-orm/sqlite-core/query-builders/raw.js","../../node_modules/drizzle-orm/sqlite-core/db.js","../../node_modules/drizzle-orm/sqlite-core/session.js","../../node_modules/drizzle-orm/better-sqlite3/session.js","../../node_modules/drizzle-orm/better-sqlite3/driver.js","../../services/utils/logger.ts","../../services/database/schema.ts","../../services/database/index.ts","../../node_modules/@modelcontextprotocol/sdk/dist/esm/types.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/client/index.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/client/sse.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/shared/stdio.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js","../../node_modules/@modelcontextprotocol/sdk/dist/esm/client/websocket.js","../../services/syscmd/index.ts","../../services/connectServer.ts","../../services/utils/toolHandler.ts","../../services/mcpServer/index.ts","../../node_modules/@langchain/core/dist/utils/js-sha1/hash.js","../../node_modules/@langchain/core/dist/caches/base.js","../../node_modules/@langchain/core/dist/prompt_values.js","../../node_modules/base64-js/index.js","../../node_modules/js-tiktoken/dist/chunk-3652LHBA.js","../../node_modules/@langchain/core/dist/utils/tiktoken.js","../../node_modules/@langchain/core/dist/language_models/base.js","../../node_modules/@langchain/core/dist/runnables/passthrough.js","../../node_modules/@langchain/core/dist/utils/types/is_zod_schema.js","../../node_modules/@langchain/core/dist/language_models/chat_models.js","../../node_modules/langchain/dist/chat_models/universal.js","../../services/models/index.ts","../../services/utils/image.ts","../../services/processQuery.ts","../../services/prompt/system.ts","../../services/prompt/index.ts","../../services/utils/processHistory.ts","../../services/client.ts","../../services/routes/chat.ts","../../services/routes/compatible.ts","../../services/models/interface.ts","../../services/routes/config.ts","../../services/routes/modelVerify.ts","../../services/routes/tools.ts","../../services/routes/_index.ts","../../services/utils/fileHandler.ts","../../services/webServer.ts","../../node_modules/drizzle-orm/migrator.js","../../node_modules/drizzle-orm/better-sqlite3/migrator.js","../../electron/main/util.ts","../../electron/main/constant.ts","../../electron/main/service.ts","../../electron/main/update.ts","../../electron/config/keymap.ts","../../electron/config/index.ts","../../electron/main/ipc/env.ts","../../electron/main/store.ts","../../electron/main/platform/appimage.ts","../../electron/main/tray.ts","../../electron/main/ipc/system.ts","../../electron/main/ipc/util.ts","../../node_modules/openai/internal/qs/formats.mjs","../../node_modules/openai/internal/qs/utils.mjs","../../node_modules/openai/internal/qs/stringify.mjs","../../node_modules/openai/version.mjs","../../node_modules/openai/_shims/registry.mjs","../../node_modules/webidl-conversions/lib/index.js","../../node_modules/whatwg-url/lib/utils.js","../../node_modules/tr46/index.js","../../node_modules/whatwg-url/lib/url-state-machine.js","../../node_modules/whatwg-url/lib/URL-impl.js","../../node_modules/whatwg-url/lib/URL.js","../../node_modules/whatwg-url/lib/public-api.js","../../node_modules/node-fetch/lib/index.mjs","../../node_modules/web-streams-polyfill/dist/ponyfill.mjs","../../node_modules/formdata-node/lib/esm/isFunction.js","../../node_modules/formdata-node/lib/esm/blobHelpers.js","../../node_modules/formdata-node/lib/esm/Blob.js","../../node_modules/formdata-node/lib/esm/File.js","../../node_modules/formdata-node/lib/esm/isFile.js","../../node_modules/formdata-node/lib/esm/isBlob.js","../../node_modules/formdata-node/lib/esm/deprecateConstructorEntries.js","../../node_modules/formdata-node/lib/esm/FormData.js","../../node_modules/ms/index.js","../../node_modules/humanize-ms/index.js","../../node_modules/agentkeepalive/lib/constants.js","../../node_modules/agentkeepalive/lib/agent.js","../../node_modules/agentkeepalive/lib/https_agent.js","../../node_modules/agentkeepalive/index.js","../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../node_modules/abort-controller/dist/abort-controller.mjs","../../node_modules/form-data-encoder/lib/esm/util/createBoundary.js","../../node_modules/form-data-encoder/lib/esm/util/isPlainObject.js","../../node_modules/form-data-encoder/lib/esm/util/normalizeValue.js","../../node_modules/form-data-encoder/lib/esm/util/escapeName.js","../../node_modules/form-data-encoder/lib/esm/util/isFunction.js","../../node_modules/form-data-encoder/lib/esm/util/isFileLike.js","../../node_modules/form-data-encoder/lib/esm/util/isFormData.js","../../node_modules/form-data-encoder/lib/esm/FormDataEncoder.js","../../node_modules/openai/_shims/MultipartBody.mjs","../../node_modules/openai/_shims/node-runtime.mjs","../../node_modules/openai/_shims/index.mjs","../../node_modules/openai/error.mjs","../../node_modules/openai/internal/decoders/line.mjs","../../node_modules/openai/internal/stream-utils.mjs","../../node_modules/openai/streaming.mjs","../../node_modules/openai/uploads.mjs","../../node_modules/openai/core.mjs","../../node_modules/openai/pagination.mjs","../../node_modules/openai/resource.mjs","../../node_modules/openai/resources/chat/completions.mjs","../../node_modules/openai/resources/chat/chat.mjs","../../node_modules/openai/resources/audio/speech.mjs","../../node_modules/openai/resources/audio/transcriptions.mjs","../../node_modules/openai/resources/audio/translations.mjs","../../node_modules/openai/resources/audio/audio.mjs","../../node_modules/openai/resources/batches.mjs","../../node_modules/openai/resources/beta/assistants.mjs","../../node_modules/openai/lib/RunnableFunction.mjs","../../node_modules/openai/lib/chatCompletionUtils.mjs","../../node_modules/openai/lib/EventStream.mjs","../../node_modules/openai/lib/parser.mjs","../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../../node_modules/openai/lib/ChatCompletionRunner.mjs","../../node_modules/openai/_vendor/partial-json-parser/parser.mjs","../../node_modules/openai/lib/ChatCompletionStream.mjs","../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","../../node_modules/openai/resources/beta/chat/completions.mjs","../../node_modules/openai/resources/beta/chat/chat.mjs","../../node_modules/openai/resources/beta/realtime/sessions.mjs","../../node_modules/openai/resources/beta/realtime/realtime.mjs","../../node_modules/openai/lib/AssistantStream.mjs","../../node_modules/openai/resources/beta/threads/messages.mjs","../../node_modules/openai/resources/beta/threads/runs/steps.mjs","../../node_modules/openai/resources/beta/threads/runs/runs.mjs","../../node_modules/openai/resources/beta/threads/threads.mjs","../../node_modules/openai/lib/Util.mjs","../../node_modules/openai/resources/beta/vector-stores/files.mjs","../../node_modules/openai/resources/beta/vector-stores/file-batches.mjs","../../node_modules/openai/resources/beta/vector-stores/vector-stores.mjs","../../node_modules/openai/resources/beta/beta.mjs","../../node_modules/openai/resources/completions.mjs","../../node_modules/openai/resources/embeddings.mjs","../../node_modules/openai/resources/files.mjs","../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs","../../node_modules/openai/resources/images.mjs","../../node_modules/openai/resources/models.mjs","../../node_modules/openai/resources/moderations.mjs","../../node_modules/openai/resources/uploads/parts.mjs","../../node_modules/openai/resources/uploads/uploads.mjs","../../node_modules/openai/index.mjs","../../electron/main/ipc/llm.ts","../../electron/main/ipc/menu.ts","../../electron/main/ipc/index.ts","../../electron/main/protocol.ts","../../electron/main/index.ts"],"sourcesContent":["class AppState {\n  public isQuitting = true\n\n  public setIsQuitting(isQuitting: boolean) {\n    this.isQuitting = isQuitting\n  }\n}\n\nexport default new AppState()\n","export function parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const match = /```(json)?(.*)```/s.exec(s);\n    if (!match) {\n        return parser(s);\n    }\n    else {\n        return parser(match[2]);\n    }\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n","'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n","import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_kwargs = kwargs || {};\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n","import { Serializable } from \"../load/serializable.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        // Otherwise, add the second content as a new element of the list\n        return [...firstContent, { type: \"text\", text: secondContent }];\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * @deprecated\n     * Use {@link BaseMessage.content} instead.\n     */\n    get text() {\n        return typeof this.content === \"string\" ? this.content : \"\";\n    }\n    /** The type of the message. */\n    getType() {\n        return this._getType();\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            merged[key] += value;\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeObj, _mergeStatus, } from \"./base.js\";\nexport function isDirectToolOutput(x) {\n    return (x != null &&\n        typeof x === \"object\" &&\n        \"lc_direct_tool_output\" in x &&\n        x.lc_direct_tool_output === true);\n}\n/**\n * Represents a tool message in a conversation.\n */\nexport class ToolMessage extends BaseMessage {\n    static lc_name() {\n        return \"ToolMessage\";\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { tool_call_id: \"tool_call_id\" };\n    }\n    constructor(fields, tool_call_id, name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name, tool_call_id: tool_call_id };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_direct_tool_output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    _getType() {\n        return \"tool\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"tool\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nexport class ToolMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    static lc_name() {\n        return \"ToolMessageChunk\";\n    }\n    _getType() {\n        return \"tool\";\n    }\n    concat(chunk) {\n        return new ToolMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            artifact: _mergeObj(this.artifact, chunk.artifact),\n            tool_call_id: this.tool_call_id,\n            id: this.id ?? chunk.id,\n            status: _mergeStatus(this.status, chunk.status),\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\nexport function defaultToolCallParser(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCalls) {\n    const toolCalls = [];\n    const invalidToolCalls = [];\n    for (const toolCall of rawToolCalls) {\n        if (!toolCall.function) {\n            continue;\n        }\n        else {\n            const functionName = toolCall.function.name;\n            try {\n                const functionArgs = JSON.parse(toolCall.function.arguments);\n                const parsed = {\n                    name: functionName || \"\",\n                    args: functionArgs || {},\n                    id: toolCall.id,\n                };\n                toolCalls.push(parsed);\n            }\n            catch (error) {\n                invalidToolCalls.push({\n                    name: functionName,\n                    args: toolCall.function.arguments,\n                    id: toolCall.id,\n                    error: \"Malformed args.\",\n                });\n            }\n        }\n    }\n    return [toolCalls, invalidToolCalls];\n}\nexport function isToolMessage(x) {\n    return x._getType() === \"tool\";\n}\nexport function isToolMessageChunk(x) {\n    return x._getType() === \"tool\";\n}\n","import { parsePartialJson } from \"../utils/json.js\";\nimport { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeLists, } from \"./base.js\";\nimport { defaultToolCallParser, } from \"./tool.js\";\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = defaultToolCallParser(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n}\nexport function isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\nexport function isAIMessageChunk(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: fields.tool_calls ?? [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        else {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const toolCallChunk of fields.tool_call_chunks) {\n                let parsedArgs = {};\n                try {\n                    parsedArgs = parsePartialJson(toolCallChunk.args || \"{}\");\n                    if (parsedArgs === null ||\n                        typeof parsedArgs !== \"object\" ||\n                        Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name: toolCallChunk.name ?? \"\",\n                        args: parsedArgs,\n                        id: toolCallChunk.id,\n                        type: \"tool_call\",\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name: toolCallChunk.name,\n                        args: toolCallChunk.args,\n                        id: toolCallChunk.id,\n                        error: \"Malformed args.\",\n                        type: \"invalid_tool_call\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_chunks =\n            initParams.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            tool_call_chunks: this.tool_call_chunks,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n            id: this.id ?? chunk.id,\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = _mergeLists(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        if (this.usage_metadata !== undefined ||\n            chunk.usage_metadata !== undefined) {\n            const inputTokenDetails = {\n                ...((this.usage_metadata?.input_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.input_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.input_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_read !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_read !==\n                        undefined) && {\n                    cache_read: (this.usage_metadata?.input_token_details?.cache_read ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_read ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_creation !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_creation !==\n                        undefined) && {\n                    cache_creation: (this.usage_metadata?.input_token_details?.cache_creation ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_creation ?? 0),\n                }),\n            };\n            const outputTokenDetails = {\n                ...((this.usage_metadata?.output_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.output_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.output_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.output_token_details?.reasoning !==\n                    undefined ||\n                    chunk.usage_metadata?.output_token_details?.reasoning !==\n                        undefined) && {\n                    reasoning: (this.usage_metadata?.output_token_details?.reasoning ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.reasoning ?? 0),\n                }),\n            };\n            const left = this.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const right = chunk.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const usage_metadata = {\n                input_tokens: left.input_tokens + right.input_tokens,\n                output_tokens: left.output_tokens + right.output_tokens,\n                total_tokens: left.total_tokens + right.total_tokens,\n                // Do not include `input_token_details` / `output_token_details` keys in combined fields\n                // unless their values are defined.\n                ...(Object.keys(inputTokenDetails).length > 0 && {\n                    input_token_details: inputTokenDetails,\n                }),\n                ...(Object.keys(outputTokenDetails).length > 0 && {\n                    output_token_details: outputTokenDetails,\n                }),\n            };\n            combinedFields.usage_metadata = usage_metadata;\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a human message in a conversation.\n */\nexport class HumanMessage extends BaseMessage {\n    static lc_name() {\n        return \"HumanMessage\";\n    }\n    _getType() {\n        return \"human\";\n    }\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport class HumanMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"HumanMessageChunk\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    concat(chunk) {\n        return new HumanMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isHumanMessage(x) {\n    return x.getType() === \"human\";\n}\nexport function isHumanMessageChunk(x) {\n    return x.getType() === \"human\";\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isSystemMessage(x) {\n    return x._getType() === \"system\";\n}\nexport function isSystemMessageChunk(x) {\n    return x._getType() === \"system\";\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nexport function addLangChainErrorFields(error, lc_error_code) {\n    error.lc_error_code = lc_error_code;\n    error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n    return error;\n}\n","export function _isToolCall(toolCall) {\n    return !!(toolCall &&\n        typeof toolCall === \"object\" &&\n        \"type\" in toolCall &&\n        toolCall.type === \"tool_call\");\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n","import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction isSerializedConstructor(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        x.lc === 1 &&\n        Array.isArray(x.id) &&\n        x.kwargs != null &&\n        typeof x.kwargs === \"object\");\n}\nfunction _constructMessageFromParams(params) {\n    let type;\n    let rest;\n    // Support serialized messages\n    if (isSerializedConstructor(params)) {\n        const className = params.id.at(-1);\n        if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n            type = \"user\";\n        }\n        else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n            type = \"assistant\";\n        }\n        else if (className === \"SystemMessage\" ||\n            className === \"SystemMessageChunk\") {\n            type = \"system\";\n        }\n        else {\n            type = \"unknown\";\n        }\n        rest = params.kwargs;\n    }\n    else {\n        const { type: extractedType, ...otherParams } = params;\n        type = extractedType;\n        rest = otherParams;\n    }\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"developer\") {\n        return new SystemMessage({\n            ...rest,\n            additional_kwargs: {\n                ...rest.additional_kwargs,\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else {\n        const error = addLangChainErrorFields(new Error(`Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(params, null, 2)}`), \"MESSAGE_COERCION_FAILURE\");\n        throw error;\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = 'ffffffff-ffff-ffff-ffff-ffffffffffff';","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = '00000000-0000-0000-0000-000000000000';","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\nvar _default = exports.default = validate;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nvar _default = exports.default = parse;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nvar _default = exports.default = stringify;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _nodeCrypto.default.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\nlet _clockseq;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node;\n  let clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v1;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v1ToV6;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v1ToV6(uuid) {\n  const v1Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\nvar _stringify = require(\"./stringify.js\");\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nconst DNS = exports.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL = exports.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return (0, _stringify.unsafeStringify)(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('md5').update(bytes).digest();\n}\nvar _default = exports.default = md5;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = exports.default = v3;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = exports.default = {\n  randomUUID: _nodeCrypto.default.randomUUID\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _native = _interopRequireDefault(require(\"./native.js\"));\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(rnds);\n}\nvar _default = exports.default = v4;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('sha1').update(bytes).digest();\n}\nvar _default = exports.default = sha1;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = exports.default = v5;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6;\nvar _stringify = require(\"./stringify.js\");\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n *\n * @param {object} options\n * @param {Uint8Array=} buf\n * @param {number=} offset\n * @returns\n */\nfunction v6(options = {}, buf, offset = 0) {\n  // v6 is v1 with different field layout, so we start with a v1 UUID, albeit\n  // with slightly different behavior around how the clock_seq and node fields\n  // are randomized, which is why we call v1 with _v6: true.\n  let bytes = (0, _v.default)({\n    ...options,\n    _v6: true\n  }, new Uint8Array(16));\n\n  // Reorder the fields to v6 layout.\n  bytes = (0, _v1ToV.default)(bytes);\n\n  // Return as a byte array if requested\n  if (buf) {\n    for (let i = 0; i < 16; i++) {\n      buf[offset + i] = bytes[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(bytes);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6ToV1;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v6 UUID to a v1 UUID\n *\n * @param {string|Uint8Array} uuid - The v6 UUID to convert to v6\n * @returns {string|Uint8Array} The v1 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v6ToV1(uuid) {\n  const v6Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v1Bytes = _v6ToV1(v6Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v1Bytes) : v1Bytes;\n}\n\n// Do the field transformation needed for v6 -> v1\nfunction _v6ToV1(v6Bytes) {\n  return Uint8Array.of((v6Bytes[3] & 0x0f) << 4 | v6Bytes[4] >> 4 & 0x0f, (v6Bytes[4] & 0x0f) << 4 | (v6Bytes[5] & 0xf0) >> 4, (v6Bytes[5] & 0x0f) << 4 | v6Bytes[6] & 0x0f, v6Bytes[7], (v6Bytes[1] & 0x0f) << 4 | (v6Bytes[2] & 0xf0) >> 4, (v6Bytes[2] & 0x0f) << 4 | (v6Bytes[3] & 0xf0) >> 4, 0x10 | (v6Bytes[0] & 0xf0) >> 4, (v6Bytes[0] & 0x0f) << 4 | (v6Bytes[1] & 0xf0) >> 4, v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nlet _seqLow = null;\nlet _seqHigh = null;\nlet _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  let i = buf && offset || 0;\n  const b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  const msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  let seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  let seqHigh = _seqHigh;\n  let seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v7;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nvar _default = exports.default = version;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MAX\", {\n  enumerable: true,\n  get: function () {\n    return _max.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v1ToV6\", {\n  enumerable: true,\n  get: function () {\n    return _v1ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"v6\", {\n  enumerable: true,\n  get: function () {\n    return _v5.default;\n  }\n});\nObject.defineProperty(exports, \"v6ToV1\", {\n  enumerable: true,\n  get: function () {\n    return _v6ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v7\", {\n  enumerable: true,\n  get: function () {\n    return _v6.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nvar _max = _interopRequireDefault(require(\"./max.js\"));\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\nvar _v5 = _interopRequireDefault(require(\"./v6.js\"));\nvar _v6ToV = _interopRequireDefault(require(\"./v6ToV1.js\"));\nvar _v6 = _interopRequireDefault(require(\"./v7.js\"));\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nvar _version = _interopRequireDefault(require(\"./version.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }","import uuid from './dist/index.js';\nexport const v1 = uuid.v1;\nexport const v1ToV6 = uuid.v1ToV6;\nexport const v3 = uuid.v3;\nexport const v4 = uuid.v4;\nexport const v5 = uuid.v5;\nexport const v6 = uuid.v6;\nexport const v6ToV1 = uuid.v6ToV1;\nexport const v7 = uuid.v7;\nexport const NIL = uuid.NIL;\nexport const MAX = uuid.MAX;\nexport const version = uuid.version;\nexport const validate = uuid.validate;\nexport const stringify = uuid.stringify;\nexport const parse = uuid.parse;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n","// Wrap the default fetch call due to issues with illegal invocations\n// in some environments:\n// https://stackoverflow.com/questions/69876859/why-does-bind-fix-failed-to-execute-fetch-on-window-illegal-invocation-err\n// @ts-expect-error Broad typing to support a range of fetch implementations\nconst DEFAULT_FETCH_IMPLEMENTATION = (...args) => fetch(...args);\nconst LANGSMITH_FETCH_IMPLEMENTATION_KEY = Symbol.for(\"ls:fetch_implementation\");\n/**\n * Overrides the fetch implementation used for LangSmith calls.\n * You should use this if you need to use an implementation of fetch\n * other than the default global (e.g. for dealing with proxies).\n * @param fetch The new fetch functino to use.\n */\nexport const overrideFetchImplementation = (fetch) => {\n    globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] = fetch;\n};\n/**\n * @internal\n */\nexport const _getFetchImplementation = () => {\n    return (globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] ??\n        DEFAULT_FETCH_IMPLEMENTATION);\n};\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nimport { _getFetchImplementation } from \"../singletons/fetch.js\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    408, // Request Timeout\n];\nconst STATUS_IGNORE = [\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedResponseHook\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        if (\"default\" in PQueueMod) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod.default({\n                concurrency: this.maxConcurrency,\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod({ concurrency: this.maxConcurrency });\n        }\n        this.onFailedResponseHook = params?.onFailedResponseHook;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        const onFailedResponseHook = this.onFailedResponseHook;\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            async onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const response = error?.response;\n                const status = response?.status;\n                if (status) {\n                    if (STATUS_NO_RETRY.includes(+status)) {\n                        throw error;\n                    }\n                    else if (STATUS_IGNORE.includes(+status)) {\n                        return;\n                    }\n                    if (onFailedResponseHook) {\n                        await onFailedResponseHook(response);\n                    }\n                }\n            },\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n            retries: this.maxRetries,\n            randomize: true,\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => _getFetchImplementation()(...args).then((res) => res.ok ? res : Promise.reject(res)));\n    }\n}\n","export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n","import * as uuid from \"uuid\";\nexport function assertUuid(str, which) {\n    if (!uuid.validate(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n","const warnedMessages = {};\nexport function warnOnce(message) {\n    if (!warnedMessages[message]) {\n        console.warn(message);\n        warnedMessages[message] = true;\n    }\n}\n","import { parse as parseVersion } from \"semver\";\nexport function isVersionGreaterOrEqual(current_version, target_version) {\n    const current = parseVersion(current_version);\n    const target = parseVersion(target_version);\n    if (!current || !target) {\n        throw new Error(\"Invalid version format.\");\n    }\n    return current.compare(target) >= 0;\n}\nexport function parsePromptIdentifier(identifier) {\n    if (!identifier ||\n        identifier.split(\"/\").length > 2 ||\n        identifier.startsWith(\"/\") ||\n        identifier.endsWith(\"/\") ||\n        identifier.split(\":\").length > 2) {\n        throw new Error(`Invalid identifier format: ${identifier}`);\n    }\n    const [ownerNamePart, commitPart] = identifier.split(\":\");\n    const commit = commitPart || \"latest\";\n    if (ownerNamePart.includes(\"/\")) {\n        const [owner, name] = ownerNamePart.split(\"/\", 2);\n        if (!owner || !name) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [owner, name, commit];\n    }\n    else {\n        if (!ownerNamePart) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [\"-\", ownerNamePart, commit];\n    }\n}\n","function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"LangSmithConflictError\";\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    let errorBody;\n    if (response.ok) {\n        if (consume) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    errorBody = await response.text();\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    throw new Error(fullMessage);\n}\n","/* eslint-disable */\n// @ts-nocheck\nvar LIMIT_REPLACE_NODE = \"[...]\";\nvar CIRCULAR_REPLACE_NODE = { result: \"[Circular]\" };\nvar arr = [];\nvar replacerStack = [];\nfunction defaultOptions() {\n    return {\n        depthLimit: Number.MAX_SAFE_INTEGER,\n        edgesLimit: Number.MAX_SAFE_INTEGER,\n    };\n}\n// Regular stringify\nexport function stringify(obj, replacer, spacer, options) {\n    try {\n        return JSON.stringify(obj, replacer, spacer);\n    }\n    catch (e) {\n        // Fall back to more complex stringify if circular reference\n        if (!e.message?.includes(\"Converting circular structure to JSON\")) {\n            console.warn(\"[WARNING]: LangSmith received unserializable value.\");\n            return \"[Unserializable]\";\n        }\n        console.warn(\"[WARNING]: LangSmith received circular JSON. This will decrease tracer performance.\");\n        if (typeof options === \"undefined\") {\n            options = defaultOptions();\n        }\n        decirc(obj, \"\", 0, [], undefined, 0, options);\n        var res;\n        try {\n            if (replacerStack.length === 0) {\n                res = JSON.stringify(obj, replacer, spacer);\n            }\n            else {\n                res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n            }\n        }\n        catch (_) {\n            return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n        }\n        finally {\n            while (arr.length !== 0) {\n                var part = arr.pop();\n                if (part.length === 4) {\n                    Object.defineProperty(part[0], part[1], part[3]);\n                }\n                else {\n                    part[0][part[1]] = part[2];\n                }\n            }\n        }\n        return res;\n    }\n}\nfunction setReplace(replace, val, k, parent) {\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n    if (propertyDescriptor.get !== undefined) {\n        if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: replace });\n            arr.push([parent, k, val, propertyDescriptor]);\n        }\n        else {\n            replacerStack.push([val, k, replace]);\n        }\n    }\n    else {\n        parent[k] = replace;\n        arr.push([parent, k, val]);\n    }\n}\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                decirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            var keys = Object.keys(val);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                decirc(val[key], key, i, stack, val, depth, options);\n            }\n        }\n        stack.pop();\n    }\n}\n// Stable-stringify\nfunction compareFunction(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction deterministicStringify(obj, replacer, spacer, options) {\n    if (typeof options === \"undefined\") {\n        options = defaultOptions();\n    }\n    var tmp = deterministicDecirc(obj, \"\", 0, [], undefined, 0, options) || obj;\n    var res;\n    try {\n        if (replacerStack.length === 0) {\n            res = JSON.stringify(tmp, replacer, spacer);\n        }\n        else {\n            res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n        }\n    }\n    catch (_) {\n        return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n    }\n    finally {\n        // Ensure that we restore the object as it was.\n        while (arr.length !== 0) {\n            var part = arr.pop();\n            if (part.length === 4) {\n                Object.defineProperty(part[0], part[1], part[3]);\n            }\n            else {\n                part[0][part[1]] = part[2];\n            }\n        }\n    }\n    return res;\n}\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        try {\n            if (typeof val.toJSON === \"function\") {\n                return;\n            }\n        }\n        catch (_) {\n            return;\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                deterministicDecirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Create a temporary object in the required way\n            var tmp = {};\n            var keys = Object.keys(val).sort(compareFunction);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                deterministicDecirc(val[key], key, i, stack, val, depth, options);\n                tmp[key] = val[key];\n            }\n            if (typeof parent !== \"undefined\") {\n                arr.push([parent, k, val]);\n                parent[k] = tmp;\n            }\n            else {\n                return tmp;\n            }\n        }\n        stack.pop();\n    }\n}\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues(replacer) {\n    replacer =\n        typeof replacer !== \"undefined\"\n            ? replacer\n            : function (k, v) {\n                return v;\n            };\n    return function (key, val) {\n        if (replacerStack.length > 0) {\n            for (var i = 0; i < replacerStack.length; i++) {\n                var part = replacerStack[i];\n                if (part[1] === key && part[0] === val) {\n                    val = part[2];\n                    replacerStack.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        return replacer.call(this, key, val);\n    };\n}\n","import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getEnvironmentVariable, getLangChainEnvVarsMetadata, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { __version__ } from \"./index.js\";\nimport { assertUuid } from \"./utils/_uuid.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { parsePromptIdentifier } from \"./utils/prompts.js\";\nimport { raiseForStatus } from \"./utils/error.js\";\nimport { _getFetchImplementation } from \"./singletons/fetch.js\";\nimport { stringify as stringifyForTracing } from \"./utils/fast-safe-stringify/index.js\";\nexport function mergeRuntimeEnvIntoRunCreate(run) {\n    const runtimeEnv = getRuntimeEnvironment();\n    const envVars = getLangChainEnvVarsMetadata();\n    const extra = run.extra ?? {};\n    const metadata = extra.metadata;\n    run.extra = {\n        ...extra,\n        runtime: {\n            ...runtimeEnv,\n            ...extra?.runtime,\n        },\n        metadata: {\n            ...envVars,\n            ...(envVars.revision_id || run.revision_id\n                ? { revision_id: run.revision_id ?? envVars.revision_id }\n                : {}),\n            ...metadata,\n        },\n    };\n    return run;\n}\nconst getTracingSamplingRate = () => {\n    const samplingRateStr = getLangSmithEnvironmentVariable(\"TRACING_SAMPLING_RATE\");\n    if (samplingRateStr === undefined) {\n        return undefined;\n    }\n    const samplingRate = parseFloat(samplingRateStr);\n    if (samplingRate < 0 || samplingRate > 1) {\n        throw new Error(`LANGSMITH_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`);\n    }\n    return samplingRate;\n};\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nconst handle429 = async (response) => {\n    if (response?.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") ?? \"30\", 10) * 1000;\n        if (retryAfter > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryAfter));\n            // Return directly after calling this check\n            return true;\n        }\n    }\n    // Fall back to existing status checks\n    return false;\n};\nexport class AutoBatchQueue {\n    constructor() {\n        Object.defineProperty(this, \"items\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"sizeBytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    peek() {\n        return this.items[0];\n    }\n    push(item) {\n        let itemPromiseResolve;\n        const itemPromise = new Promise((resolve) => {\n            // Setting itemPromiseResolve is synchronous with promise creation:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise\n            itemPromiseResolve = resolve;\n        });\n        const size = stringifyForTracing(item.item).length;\n        this.items.push({\n            action: item.action,\n            payload: item.item,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            itemPromiseResolve: itemPromiseResolve,\n            itemPromise,\n            size,\n        });\n        this.sizeBytes += size;\n        return itemPromise;\n    }\n    pop(upToSizeBytes) {\n        if (upToSizeBytes < 1) {\n            throw new Error(\"Number of bytes to pop off may not be less than 1.\");\n        }\n        const popped = [];\n        let poppedSizeBytes = 0;\n        // Pop items until we reach or exceed the size limit\n        while (poppedSizeBytes + (this.peek()?.size ?? 0) < upToSizeBytes &&\n            this.items.length > 0) {\n            const item = this.items.shift();\n            if (item) {\n                popped.push(item);\n                poppedSizeBytes += item.size;\n                this.sizeBytes -= item.size;\n            }\n        }\n        // If there is an item on the queue we were unable to pop,\n        // just return it as a single batch.\n        if (popped.length === 0 && this.items.length > 0) {\n            const item = this.items.shift();\n            popped.push(item);\n            poppedSizeBytes += item.size;\n            this.sizeBytes -= item.size;\n        }\n        return [\n            popped.map((it) => ({ action: it.action, item: it.payload })),\n            () => popped.forEach((it) => it.itemPromiseResolve()),\n        ];\n    }\n}\n// 20 MB\nexport const DEFAULT_BATCH_SIZE_LIMIT_BYTES = 20_971_520;\nconst SERVER_INFO_REQUEST_TIMEOUT = 2500;\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchIngestCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"hideInputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hideOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingSampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filteredPostUuids\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"autoBatchTracing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"autoBatchQueue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new AutoBatchQueue()\n        });\n        Object.defineProperty(this, \"autoBatchTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoBatchAggregationDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 250\n        });\n        Object.defineProperty(this, \"batchSizeBytesLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockOnRootRunFinalization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_TRACING_BACKGROUND\") === \"false\"\n        });\n        Object.defineProperty(this, \"traceBatchConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5\n        });\n        Object.defineProperty(this, \"_serverInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_getServerInfoPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"manualFlushMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.tracingSampleRate = getTracingSamplingRate();\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        if (this.apiUrl.endsWith(\"/\")) {\n            this.apiUrl = this.apiUrl.slice(0, -1);\n        }\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        if (this.webUrl?.endsWith(\"/\")) {\n            this.webUrl = this.webUrl.slice(0, -1);\n        }\n        this.timeout_ms = config.timeout_ms ?? 90_000;\n        this.caller = new AsyncCaller(config.callerOptions ?? {});\n        this.traceBatchConcurrency =\n            config.traceBatchConcurrency ?? this.traceBatchConcurrency;\n        if (this.traceBatchConcurrency < 1) {\n            throw new Error(\"Trace batch concurrency must be positive.\");\n        }\n        this.batchIngestCaller = new AsyncCaller({\n            maxRetries: 2,\n            maxConcurrency: this.traceBatchConcurrency,\n            ...(config.callerOptions ?? {}),\n            onFailedResponseHook: handle429,\n        });\n        this.hideInputs =\n            config.hideInputs ?? config.anonymizer ?? defaultConfig.hideInputs;\n        this.hideOutputs =\n            config.hideOutputs ?? config.anonymizer ?? defaultConfig.hideOutputs;\n        this.autoBatchTracing = config.autoBatchTracing ?? this.autoBatchTracing;\n        this.blockOnRootRunFinalization =\n            config.blockOnRootRunFinalization ?? this.blockOnRootRunFinalization;\n        this.batchSizeBytesLimit = config.batchSizeBytesLimit;\n        this.fetchOptions = config.fetchOptions || {};\n        this.manualFlushMode = config.manualFlushMode ?? this.manualFlushMode;\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getLangSmithEnvironmentVariable(\"API_KEY\");\n        const apiUrl = getLangSmithEnvironmentVariable(\"ENDPOINT\") ??\n            \"https://api.smith.langchain.com\";\n        const hideInputs = getLangSmithEnvironmentVariable(\"HIDE_INPUTS\") === \"true\";\n        const hideOutputs = getLangSmithEnvironmentVariable(\"HIDE_OUTPUTS\") === \"true\";\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n            hideInputs: hideInputs,\n            hideOutputs: hideOutputs,\n        };\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost:3000\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.includes(\"/api\") &&\n            !this.apiUrl.split(\".\", 1)[0].endsWith(\"api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"eu\")) {\n            this.webUrl = \"https://eu.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return this.webUrl;\n        }\n    }\n    get headers() {\n        const headers = {\n            \"User-Agent\": `langsmith-js/${__version__}`,\n        };\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    processInputs(inputs) {\n        if (this.hideInputs === false) {\n            return inputs;\n        }\n        if (this.hideInputs === true) {\n            return {};\n        }\n        if (typeof this.hideInputs === \"function\") {\n            return this.hideInputs(inputs);\n        }\n        return inputs;\n    }\n    processOutputs(outputs) {\n        if (this.hideOutputs === false) {\n            return outputs;\n        }\n        if (this.hideOutputs === true) {\n            return {};\n        }\n        if (typeof this.hideOutputs === \"function\") {\n            return this.hideOutputs(outputs);\n        }\n        return outputs;\n    }\n    prepareRunCreateOrUpdateInputs(run) {\n        const runParams = { ...run };\n        if (runParams.inputs !== undefined) {\n            runParams.inputs = this.processInputs(runParams.inputs);\n        }\n        if (runParams.outputs !== undefined) {\n            runParams.outputs = this.processOutputs(runParams.outputs);\n        }\n        return runParams;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `Failed to fetch ${path}`);\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams(), transform) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(_getFetchImplementation(), url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(response, `Failed to fetch ${path}`);\n            const items = transform\n                ? transform(await response.json())\n                : await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        const bodyParams = body ? { ...body } : {};\n        while (true) {\n            const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${path}`, {\n                method: requestMethod,\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: JSON.stringify(bodyParams),\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    _filterForSampling(runs, patch = false) {\n        if (this.tracingSampleRate === undefined) {\n            return runs;\n        }\n        if (patch) {\n            const sampled = [];\n            for (const run of runs) {\n                if (!this.filteredPostUuids.has(run.id)) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.delete(run.id);\n                }\n            }\n            return sampled;\n        }\n        else {\n            const sampled = [];\n            for (const run of runs) {\n                if ((run.id !== run.trace_id &&\n                    !this.filteredPostUuids.has(run.trace_id)) ||\n                    Math.random() < this.tracingSampleRate) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.add(run.id);\n                }\n            }\n            return sampled;\n        }\n    }\n    async _getBatchSizeLimitBytes() {\n        const serverInfo = await this._ensureServerInfo();\n        return (this.batchSizeBytesLimit ??\n            serverInfo.batch_ingest_config?.size_limit_bytes ??\n            DEFAULT_BATCH_SIZE_LIMIT_BYTES);\n    }\n    async _getMultiPartSupport() {\n        const serverInfo = await this._ensureServerInfo();\n        return (serverInfo.instance_flags?.dataset_examples_multipart_enabled ?? false);\n    }\n    drainAutoBatchQueue(batchSizeLimit) {\n        const promises = [];\n        while (this.autoBatchQueue.items.length > 0) {\n            const [batch, done] = this.autoBatchQueue.pop(batchSizeLimit);\n            if (!batch.length) {\n                done();\n                break;\n            }\n            const batchPromise = this._processBatch(batch, done).catch(console.error);\n            promises.push(batchPromise);\n        }\n        return Promise.all(promises);\n    }\n    async _processBatch(batch, done) {\n        if (!batch.length) {\n            done();\n            return;\n        }\n        try {\n            const ingestParams = {\n                runCreates: batch\n                    .filter((item) => item.action === \"create\")\n                    .map((item) => item.item),\n                runUpdates: batch\n                    .filter((item) => item.action === \"update\")\n                    .map((item) => item.item),\n            };\n            const serverInfo = await this._ensureServerInfo();\n            if (serverInfo?.batch_ingest_config?.use_multipart_endpoint) {\n                await this.multipartIngestRuns(ingestParams);\n            }\n            else {\n                await this.batchIngestRuns(ingestParams);\n            }\n        }\n        finally {\n            done();\n        }\n    }\n    async processRunOperation(item) {\n        clearTimeout(this.autoBatchTimeout);\n        this.autoBatchTimeout = undefined;\n        if (item.action === \"create\") {\n            item.item = mergeRuntimeEnvIntoRunCreate(item.item);\n        }\n        const itemPromise = this.autoBatchQueue.push(item);\n        if (this.manualFlushMode) {\n            // Rely on manual flushing in serverless environments\n            return itemPromise;\n        }\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        if (this.autoBatchQueue.sizeBytes > sizeLimitBytes) {\n            void this.drainAutoBatchQueue(sizeLimitBytes);\n        }\n        if (this.autoBatchQueue.items.length > 0) {\n            this.autoBatchTimeout = setTimeout(() => {\n                this.autoBatchTimeout = undefined;\n                void this.drainAutoBatchQueue(sizeLimitBytes);\n            }, this.autoBatchAggregationDelayMs);\n        }\n        return itemPromise;\n    }\n    async _getServerInfo() {\n        const response = await _getFetchImplementation()(`${this.apiUrl}/info`, {\n            method: \"GET\",\n            headers: { Accept: \"application/json\" },\n            signal: AbortSignal.timeout(SERVER_INFO_REQUEST_TIMEOUT),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get server info\");\n        return response.json();\n    }\n    async _ensureServerInfo() {\n        if (this._getServerInfoPromise === undefined) {\n            this._getServerInfoPromise = (async () => {\n                if (this._serverInfo === undefined) {\n                    try {\n                        this._serverInfo = await this._getServerInfo();\n                    }\n                    catch (e) {\n                        console.warn(`[WARNING]: LangSmith failed to fetch info on supported operations. Falling back to batch operations and default limits.`);\n                    }\n                }\n                return this._serverInfo ?? {};\n            })();\n        }\n        return this._getServerInfoPromise.then((serverInfo) => {\n            if (this._serverInfo === undefined) {\n                this._getServerInfoPromise = undefined;\n            }\n            return serverInfo;\n        });\n    }\n    async _getSettings() {\n        if (!this.settings) {\n            this.settings = this._get(\"/settings\");\n        }\n        return await this.settings;\n    }\n    /**\n     * Flushes current queued traces.\n     */\n    async flush() {\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        await this.drainAutoBatchQueue(sizeLimitBytes);\n    }\n    async createRun(run) {\n        if (!this._filterForSampling([run]).length) {\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = this.prepareRunCreateOrUpdateInputs({\n            session_name,\n            ...run,\n            start_time: run.start_time ?? Date.now(),\n        });\n        if (this.autoBatchTracing &&\n            runCreate.trace_id !== undefined &&\n            runCreate.dotted_order !== undefined) {\n            void this.processRunOperation({\n                action: \"create\",\n                item: runCreate,\n            }).catch(console.error);\n            return;\n        }\n        const mergedRunCreateParam = mergeRuntimeEnvIntoRunCreate(runCreate);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: stringifyForTracing(mergedRunCreateParam),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async batchIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        let preparedCreateParams = runCreates?.map((create) => this.prepareRunCreateOrUpdateInputs(create)) ?? [];\n        let preparedUpdateParams = runUpdates?.map((update) => this.prepareRunCreateOrUpdateInputs(update)) ?? [];\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        const rawBatch = {\n            post: this._filterForSampling(preparedCreateParams),\n            patch: this._filterForSampling(preparedUpdateParams, true),\n        };\n        if (!rawBatch.post.length && !rawBatch.patch.length) {\n            return;\n        }\n        const batchChunks = {\n            post: [],\n            patch: [],\n        };\n        for (const k of [\"post\", \"patch\"]) {\n            const key = k;\n            const batchItems = rawBatch[key].reverse();\n            let batchItem = batchItems.pop();\n            while (batchItem !== undefined) {\n                batchChunks[key].push(batchItem);\n                batchItem = batchItems.pop();\n            }\n        }\n        if (batchChunks.post.length > 0 || batchChunks.patch.length > 0) {\n            await this._postBatchIngestRuns(stringifyForTracing(batchChunks));\n        }\n    }\n    async _postBatchIngestRuns(body) {\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        const response = await this.batchIngestCaller.call(_getFetchImplementation(), `${this.apiUrl}/runs/batch`, {\n            method: \"POST\",\n            headers,\n            body: body,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"batch create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async multipartIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        // transform and convert to dicts\n        const allAttachments = {};\n        let preparedCreateParams = [];\n        for (const create of runCreates ?? []) {\n            const preparedCreate = this.prepareRunCreateOrUpdateInputs(create);\n            if (preparedCreate.id !== undefined &&\n                preparedCreate.attachments !== undefined) {\n                allAttachments[preparedCreate.id] = preparedCreate.attachments;\n            }\n            delete preparedCreate.attachments;\n            preparedCreateParams.push(preparedCreate);\n        }\n        let preparedUpdateParams = [];\n        for (const update of runUpdates ?? []) {\n            preparedUpdateParams.push(this.prepareRunCreateOrUpdateInputs(update));\n        }\n        // require trace_id and dotted_order\n        const invalidRunCreate = preparedCreateParams.find((runCreate) => {\n            return (runCreate.trace_id === undefined || runCreate.dotted_order === undefined);\n        });\n        if (invalidRunCreate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when creating a run`);\n        }\n        const invalidRunUpdate = preparedUpdateParams.find((runUpdate) => {\n            return (runUpdate.trace_id === undefined || runUpdate.dotted_order === undefined);\n        });\n        if (invalidRunUpdate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when updating a run`);\n        }\n        // combine post and patch dicts where possible\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        if (preparedCreateParams.length === 0 &&\n            preparedUpdateParams.length === 0) {\n            return;\n        }\n        // send the runs in multipart requests\n        const accumulatedContext = [];\n        const accumulatedParts = [];\n        for (const [method, payloads] of [\n            [\"post\", preparedCreateParams],\n            [\"patch\", preparedUpdateParams],\n        ]) {\n            for (const originalPayload of payloads) {\n                // collect fields to be sent as separate parts\n                const { inputs, outputs, events, attachments, ...payload } = originalPayload;\n                const fields = { inputs, outputs, events };\n                // encode the main run payload\n                const stringifiedPayload = stringifyForTracing(payload);\n                accumulatedParts.push({\n                    name: `${method}.${payload.id}`,\n                    payload: new Blob([stringifiedPayload], {\n                        type: `application/json; length=${stringifiedPayload.length}`, // encoding=gzip\n                    }),\n                });\n                // encode the fields we collected\n                for (const [key, value] of Object.entries(fields)) {\n                    if (value === undefined) {\n                        continue;\n                    }\n                    const stringifiedValue = stringifyForTracing(value);\n                    accumulatedParts.push({\n                        name: `${method}.${payload.id}.${key}`,\n                        payload: new Blob([stringifiedValue], {\n                            type: `application/json; length=${stringifiedValue.length}`,\n                        }),\n                    });\n                }\n                // encode the attachments\n                if (payload.id !== undefined) {\n                    const attachments = allAttachments[payload.id];\n                    if (attachments) {\n                        delete allAttachments[payload.id];\n                        for (const [name, attachment] of Object.entries(attachments)) {\n                            let contentType;\n                            let content;\n                            if (Array.isArray(attachment)) {\n                                [contentType, content] = attachment;\n                            }\n                            else {\n                                contentType = attachment.mimeType;\n                                content = attachment.data;\n                            }\n                            // Validate that the attachment name doesn't contain a '.'\n                            if (name.includes(\".\")) {\n                                console.warn(`Skipping attachment '${name}' for run ${payload.id}: Invalid attachment name. ` +\n                                    `Attachment names must not contain periods ('.'). Please rename the attachment and try again.`);\n                                continue;\n                            }\n                            accumulatedParts.push({\n                                name: `attachment.${payload.id}.${name}`,\n                                payload: new Blob([content], {\n                                    type: `${contentType}; length=${content.byteLength}`,\n                                }),\n                            });\n                        }\n                    }\n                }\n                // compute context\n                accumulatedContext.push(`trace=${payload.trace_id},id=${payload.id}`);\n            }\n        }\n        await this._sendMultipartRequest(accumulatedParts, accumulatedContext.join(\"; \"));\n    }\n    async _sendMultipartRequest(parts, context) {\n        try {\n            // Create multipart form data manually using Blobs\n            const boundary = \"----LangSmithFormBoundary\" + Math.random().toString(36).slice(2);\n            const chunks = [];\n            for (const part of parts) {\n                // Add field boundary\n                chunks.push(new Blob([`--${boundary}\\r\\n`]));\n                chunks.push(new Blob([\n                    `Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`,\n                    `Content-Type: ${part.payload.type}\\r\\n\\r\\n`,\n                ]));\n                chunks.push(part.payload);\n                chunks.push(new Blob([\"\\r\\n\"]));\n            }\n            // Add final boundary\n            chunks.push(new Blob([`--${boundary}--\\r\\n`]));\n            // Combine all chunks into a single Blob\n            const body = new Blob(chunks);\n            // Convert Blob to ArrayBuffer for compatibility\n            const arrayBuffer = await body.arrayBuffer();\n            const res = await this.batchIngestCaller.call(_getFetchImplementation(), `${this.apiUrl}/runs/multipart`, {\n                method: \"POST\",\n                headers: {\n                    ...this.headers,\n                    \"Content-Type\": `multipart/form-data; boundary=${boundary}`,\n                },\n                body: arrayBuffer,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"ingest multipart runs\", true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            console.warn(`${e.message.trim()}\\n\\nContext: ${context}`);\n        }\n    }\n    async updateRun(runId, run) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = this.processInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = this.processOutputs(run.outputs);\n        }\n        // TODO: Untangle types\n        const data = { ...run, id: runId };\n        if (!this._filterForSampling([data], true).length) {\n            return;\n        }\n        if (this.autoBatchTracing &&\n            data.trace_id !== undefined &&\n            data.dotted_order !== undefined) {\n            if (run.end_time !== undefined &&\n                data.parent_run_id === undefined &&\n                this.blockOnRootRunFinalization &&\n                !this.manualFlushMode) {\n                // Trigger batches as soon as a root trace ends and wait to ensure trace finishes\n                // in serverless environments.\n                await this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n                return;\n            }\n            else {\n                void this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n            }\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: stringifyForTracing(run),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update run\", true);\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns && run.child_run_ids) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getLangSmithEnvironmentVariable(\"PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (!(childRun.parent_run_id in treemap)) {\n                treemap[childRun.parent_run_id] = [];\n            }\n            treemap[childRun.parent_run_id].push(childRun);\n            runs[childRun.id] = childRun;\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    /**\n     * List runs from the LangSmith server.\n     * @param projectId - The ID of the project to filter by.\n     * @param projectName - The name of the project to filter by.\n     * @param parentRunId - The ID of the parent run to filter by.\n     * @param traceId - The ID of the trace to filter by.\n     * @param referenceExampleId - The ID of the reference example to filter by.\n     * @param startTime - The start time to filter by.\n     * @param isRoot - Indicates whether to only return root runs.\n     * @param runType - The run type to filter by.\n     * @param error - Indicates whether to filter by error runs.\n     * @param id - The ID of the run to filter by.\n     * @param query - The query string to filter by.\n     * @param filter - The filter string to apply to the run spans.\n     * @param traceFilter - The filter string to apply on the root run of the trace.\n     * @param limit - The maximum number of runs to retrieve.\n     * @returns {AsyncIterable<Run>} - The runs.\n     *\n     * @example\n     * // List all runs in a project\n     * const projectRuns = client.listRuns({ projectName: \"<your_project>\" });\n     *\n     * @example\n     * // List LLM and Chat runs in the last 24 hours\n     * const todaysLLMRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   start_time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n     *   run_type: \"llm\",\n     * });\n     *\n     * @example\n     * // List traces in a project\n     * const rootRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   execution_order: 1,\n     * });\n     *\n     * @example\n     * // List runs without errors\n     * const correctRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   error: false,\n     * });\n     *\n     * @example\n     * // List runs by run ID\n     * const runIds = [\n     *   \"a36092d2-4ad5-4fb4-9c0d-0dba9a2ed836\",\n     *   \"9398e6be-964f-4aa4-8ae9-ad78cd4b7074\",\n     * ];\n     * const selectedRuns = client.listRuns({ run_ids: runIds });\n     *\n     * @example\n     * // List all \"chain\" type runs that took more than 10 seconds and had `total_tokens` greater than 5000\n     * const chainRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(eq(run_type, \"chain\"), gt(latency, 10), gt(total_tokens, 5000))',\n     * });\n     *\n     * @example\n     * // List all runs called \"extractor\" whose root of the trace was assigned feedback \"user_score\" score of 1\n     * const goodExtractorRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'eq(name, \"extractor\")',\n     *   traceFilter: 'and(eq(feedback_key, \"user_score\"), eq(feedback_score, 1))',\n     * });\n     *\n     * @example\n     * // List all runs that started after a specific timestamp and either have \"error\" not equal to null or a \"Correctness\" feedback score equal to 0\n     * const complexRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(gt(start_time, \"2023-07-15T12:34:56Z\"), or(neq(error, null), and(eq(feedback_key, \"Correctness\"), eq(feedback_score, 0.0))))',\n     * });\n     *\n     * @example\n     * // List all runs where `tags` include \"experimental\" or \"beta\" and `latency` is greater than 2 seconds\n     * const taggedRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(or(has(tags, \"experimental\"), has(tags, \"beta\")), gt(latency, 2))',\n     * });\n     */\n    async *listRuns(props) {\n        const { projectId, projectName, parentRunId, traceId, referenceExampleId, startTime, executionOrder, isRoot, runType, error, id, query, filter, traceFilter, treeFilter, limit, select, } = props;\n        let projectIds = [];\n        if (projectId) {\n            projectIds = Array.isArray(projectId) ? projectId : [projectId];\n        }\n        if (projectName) {\n            const projectNames = Array.isArray(projectName)\n                ? projectName\n                : [projectName];\n            const projectIds_ = await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)));\n            projectIds.push(...projectIds_);\n        }\n        const default_select = [\n            \"app_path\",\n            \"child_run_ids\",\n            \"completion_cost\",\n            \"completion_tokens\",\n            \"dotted_order\",\n            \"end_time\",\n            \"error\",\n            \"events\",\n            \"extra\",\n            \"feedback_stats\",\n            \"first_token_time\",\n            \"id\",\n            \"inputs\",\n            \"name\",\n            \"outputs\",\n            \"parent_run_id\",\n            \"parent_run_ids\",\n            \"prompt_cost\",\n            \"prompt_tokens\",\n            \"reference_example_id\",\n            \"run_type\",\n            \"session_id\",\n            \"start_time\",\n            \"status\",\n            \"tags\",\n            \"total_cost\",\n            \"total_tokens\",\n            \"trace_id\",\n        ];\n        const body = {\n            session: projectIds.length ? projectIds : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            execution_order: executionOrder,\n            parent_run: parentRunId,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n            trace: traceId,\n            select: select ? select : default_select,\n            is_root: isRoot,\n        };\n        let runsYielded = 0;\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            if (limit) {\n                if (runsYielded >= limit) {\n                    break;\n                }\n                if (runs.length + runsYielded > limit) {\n                    const newRuns = runs.slice(0, limit - runsYielded);\n                    yield* newRuns;\n                    break;\n                }\n                runsYielded += runs.length;\n                yield* runs;\n            }\n            else {\n                yield* runs;\n            }\n        }\n    }\n    async getRunStats({ id, trace, parentRun, runType, projectNames, projectIds, referenceExampleIds, startTime, endTime, error, query, filter, traceFilter, treeFilter, isRoot, dataSourceType, }) {\n        let projectIds_ = projectIds || [];\n        if (projectNames) {\n            projectIds_ = [\n                ...(projectIds || []),\n                ...(await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)))),\n            ];\n        }\n        const payload = {\n            id,\n            trace,\n            parent_run: parentRun,\n            run_type: runType,\n            session: projectIds_,\n            reference_example: referenceExampleIds,\n            start_time: startTime,\n            end_time: endTime,\n            error,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            is_root: isRoot,\n            data_source_type: dataSourceType,\n        };\n        // Remove undefined values from the payload\n        const filteredPayload = Object.fromEntries(Object.entries(payload).filter(([_, value]) => value !== undefined));\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/stats`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(filteredPayload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare run\", true);\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare dataset\", true);\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/datasets`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    /**\n     * Get shared examples.\n     *\n     * @param {string} shareToken The share token to get examples for. A share token is the UUID (or LangSmith URL, including UUID) generated when explicitly marking an example as public.\n     * @param {Object} [options] Additional options for listing the examples.\n     * @param {string[] | undefined} [options.exampleIds] A list of example IDs to filter by.\n     * @returns {Promise<Example[]>} The shared examples.\n     */\n    async listSharedExamples(shareToken, options) {\n        const params = {};\n        if (options?.exampleIds) {\n            params.id = options.exampleIds;\n        }\n        const urlParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                value.forEach((v) => urlParams.append(key, v));\n            }\n            else {\n                urlParams.append(key, value);\n            }\n        });\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/public/${shareToken}/examples?${urlParams.toString()}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            if (\"detail\" in result) {\n                throw new Error(`Failed to list shared examples.\\nStatus: ${response.status}\\nMessage: ${result.detail.join(\"\\n\")}`);\n            }\n            throw new Error(`Failed to list shared examples: ${response.status} ${response.statusText}`);\n        }\n        return result.map((example) => ({\n            ...example,\n            _hostUrl: this.getHostUrl(),\n        }));\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const response = await this.caller.call(_getFetchImplementation(), endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create project\");\n        const result = await response.json();\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = {\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), endpoint, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update project\");\n        const result = await response.json();\n        return result;\n    }\n    async hasProject({ projectId, projectName, }) {\n        // TODO: Add a head request\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${path}?${params}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        try {\n            const result = await response.json();\n            if (!response.ok) {\n                return false;\n            }\n            // If it's OK and we're querying by name, need to check the list is not empty\n            if (Array.isArray(result)) {\n                return result.length > 0;\n            }\n            // projectId querying\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async readProject({ projectId, projectName, includeStats, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async getProjectUrl({ projectId, projectName, }) {\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide either projectName or projectId\");\n        }\n        const project = await this.readProject({ projectId, projectName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/projects/p/${project.id}`;\n    }\n    async getDatasetUrl({ datasetId, datasetName, }) {\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const dataset = await this.readDataset({ datasetId, datasetName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/datasets/${dataset.id}`;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, metadata, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`, true);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"upload CSV\");\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, inputsSchema, outputsSchema, metadata, } = {}) {\n        const body = {\n            name,\n            description,\n            extra: metadata ? { metadata } : undefined,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        if (inputsSchema) {\n            body.inputs_schema_definition = inputsSchema;\n        }\n        if (outputsSchema) {\n            body.outputs_schema_definition = outputsSchema;\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create dataset\");\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async hasDataset({ datasetId, datasetName, }) {\n        try {\n            await this.readDataset({ datasetId, datasetName });\n            return true;\n        }\n        catch (e) {\n            if (\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            e instanceof Error &&\n                e.message.toLocaleLowerCase().includes(\"not found\")) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    async diffDatasetVersions({ datasetId, datasetName, fromVersion, toVersion, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const urlParams = new URLSearchParams({\n            from_version: typeof fromVersion === \"string\"\n                ? fromVersion\n                : fromVersion.toISOString(),\n            to_version: typeof toVersion === \"string\" ? toVersion : toVersion.toISOString(),\n        });\n        const response = await this._get(`/datasets/${datasetId_}/versions/diff`, urlParams);\n        return response;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, metadata, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    /**\n     * Update a dataset\n     * @param props The dataset details to update\n     * @returns The updated dataset\n     */\n    async updateDataset(props) {\n        const { datasetId, datasetName, ...update } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${_datasetId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset\");\n        return (await response.json());\n    }\n    /**\n     * Updates a tag on a dataset.\n     *\n     * If the tag is already assigned to a different version of this dataset,\n     * the tag will be moved to the new version. The as_of parameter is used to\n     * determine which version of the dataset to apply the new tags to.\n     *\n     * It must be an exact version of the dataset to succeed. You can\n     * use the \"readDatasetVersion\" method to find the exact version\n     * to apply the tags to.\n     * @param params.datasetId The ID of the dataset to update. Must be provided if \"datasetName\" is not provided.\n     * @param params.datasetName The name of the dataset to update. Must be provided if \"datasetId\" is not provided.\n     * @param params.asOf The timestamp of the dataset to apply the new tags to.\n     * @param params.tag The new tag to apply to the dataset.\n     */\n    async updateDatasetTag(props) {\n        const { datasetId, datasetName, asOf, tag } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${_datasetId}/tags`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                as_of: typeof asOf === \"string\" ? asOf : asOf.toISOString(),\n                tag,\n            }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset tags\");\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async indexDataset({ datasetId, datasetName, tag, }) {\n        let datasetId_ = datasetId;\n        if (!datasetId_ && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (!datasetId_) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            tag: tag,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId_}/index`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"index dataset\");\n        await response.json();\n    }\n    /**\n     * Lets you run a similarity search query on a dataset.\n     *\n     * Requires the dataset to be indexed. Please see the `indexDataset` method to set up indexing.\n     *\n     * @param inputs      The input on which to run the similarity search. Must have the\n     *                    same schema as the dataset.\n     *\n     * @param datasetId   The dataset to search for similar examples.\n     *\n     * @param limit       The maximum number of examples to return. Will return the top `limit` most\n     *                    similar examples in order of most similar to least similar. If no similar\n     *                    examples are found, random examples will be returned.\n     *\n     * @param filter      A filter string to apply to the search. Only examples will be returned that\n     *                    match the filter string. Some examples of filters\n     *\n     *                    - eq(metadata.mykey, \"value\")\n     *                    - and(neq(metadata.my.nested.key, \"value\"), neq(metadata.mykey, \"value\"))\n     *                    - or(eq(metadata.mykey, \"value\"), eq(metadata.mykey, \"othervalue\"))\n     *\n     * @returns           A list of similar examples.\n     *\n     *\n     * @example\n     * dataset_id = \"123e4567-e89b-12d3-a456-426614174000\"\n     * inputs = {\"text\": \"How many people live in Berlin?\"}\n     * limit = 5\n     * examples = await client.similarExamples(inputs, dataset_id, limit)\n     */\n    async similarExamples(inputs, datasetId, limit, { filter, } = {}) {\n        const data = {\n            limit: limit,\n            inputs: inputs,\n        };\n        if (filter !== undefined) {\n            data[\"filter\"] = filter;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId}/search`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"fetch similar examples\");\n        const result = await response.json();\n        return result[\"examples\"];\n    }\n    async createExample(inputs, outputs, { datasetId, datasetName, createdAt, exampleId, metadata, split, sourceRunId, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = createdAt || new Date();\n        const data = {\n            dataset_id: datasetId_,\n            inputs,\n            outputs,\n            created_at: createdAt_?.toISOString(),\n            id: exampleId,\n            metadata,\n            split,\n            source_run_id: sourceRunId,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create example\");\n        const result = await response.json();\n        return result;\n    }\n    async createExamples(props) {\n        const { inputs, outputs, metadata, sourceRunIds, exampleIds, datasetId, datasetName, } = props;\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const formattedExamples = inputs.map((input, idx) => {\n            return {\n                dataset_id: datasetId_,\n                inputs: input,\n                outputs: outputs ? outputs[idx] : undefined,\n                metadata: metadata ? metadata[idx] : undefined,\n                split: props.splits ? props.splits[idx] : undefined,\n                id: exampleIds ? exampleIds[idx] : undefined,\n                source_run_id: sourceRunIds ? sourceRunIds[idx] : undefined,\n            };\n        });\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/bulk`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formattedExamples),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create examples\");\n        const result = await response.json();\n        return result;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const rawExample = await this._get(path);\n        const { attachment_urls, ...rest } = rawExample;\n        const example = rest;\n        if (attachment_urls) {\n            // add attachments back to the example\n            example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                acc[key.slice(\"attachment.\".length)] = {\n                    presigned_url: value.presigned_url,\n                    mime_type: value.mime_type,\n                };\n                return acc;\n            }, {});\n        }\n        return example;\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, asOf, splits, inlineS3Urls, metadata, limit, offset, filter, includeAttachments, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const inlineS3Urls_ = inlineS3Urls ?? true;\n        params.append(\"inline_s3_urls\", inlineS3Urls_.toString());\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (splits !== undefined) {\n            for (const split of splits) {\n                params.append(\"splits\", split);\n            }\n        }\n        if (metadata !== undefined) {\n            const serializedMetadata = JSON.stringify(metadata);\n            params.append(\"metadata\", serializedMetadata);\n        }\n        if (limit !== undefined) {\n            params.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            params.append(\"offset\", offset.toString());\n        }\n        if (filter !== undefined) {\n            params.append(\"filter\", filter);\n        }\n        if (includeAttachments === true) {\n            [\"attachment_urls\", \"outputs\", \"metadata\"].forEach((field) => params.append(\"select\", field));\n        }\n        let i = 0;\n        for await (const rawExamples of this._getPaginated(\"/examples\", params)) {\n            for (const rawExample of rawExamples) {\n                const { attachment_urls, ...rest } = rawExample;\n                const example = rest;\n                if (attachment_urls) {\n                    example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                        acc[key.slice(\"attachment.\".length)] = {\n                            presigned_url: value.presigned_url,\n                            mime_type: value.mime_type || undefined,\n                        };\n                        return acc;\n                    }, {});\n                }\n                yield example;\n                i++;\n            }\n            if (limit !== undefined && i >= limit) {\n                break;\n            }\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async updateExample(exampleId, update) {\n        assertUuid(exampleId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/${exampleId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update example\");\n        const result = await response.json();\n        return result;\n    }\n    async updateExamples(update) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/examples/bulk`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update examples\");\n        const result = await response.json();\n        return result;\n    }\n    /**\n     * Get dataset version by closest date or exact tag.\n     *\n     * Use this to resolve the nearest version to a given timestamp or for a given tag.\n     *\n     * @param options The options for getting the dataset version\n     * @param options.datasetId The ID of the dataset\n     * @param options.datasetName The name of the dataset\n     * @param options.asOf The timestamp of the dataset to retrieve\n     * @param options.tag The tag of the dataset to retrieve\n     * @returns The dataset version\n     */\n    async readDatasetVersion({ datasetId, datasetName, asOf, tag, }) {\n        let resolvedDatasetId;\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            resolvedDatasetId = dataset.id;\n        }\n        else {\n            resolvedDatasetId = datasetId;\n        }\n        assertUuid(resolvedDatasetId);\n        if ((asOf && tag) || (!asOf && !tag)) {\n            throw new Error(\"Exactly one of asOf and tag must be specified.\");\n        }\n        const params = new URLSearchParams();\n        if (asOf !== undefined) {\n            params.append(\"as_of\", typeof asOf === \"string\" ? asOf : asOf.toISOString());\n        }\n        if (tag !== undefined) {\n            params.append(\"tag\", tag);\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${resolvedDatasetId}/version?${params.toString()}`, {\n            method: \"GET\",\n            headers: { ...this.headers },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"read dataset version\");\n        return await response.json();\n    }\n    async listDatasetSplits({ datasetId, datasetName, asOf, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const params = new URLSearchParams();\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const response = await this._get(`/datasets/${datasetId_}/splits`, params);\n        return response;\n    }\n    async updateDatasetSplits({ datasetId, datasetName, splitName, exampleIds, remove = false, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            split_name: splitName,\n            examples: exampleIds.map((id) => {\n                assertUuid(id);\n                return id;\n            }),\n            remove,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/${datasetId_}/splits`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset splits\", true);\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\n     */\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, referenceExample, } = { loadChildRuns: false }) {\n        warnOnce(\"This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\");\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        const [_, feedbacks] = await this._logEvaluationFeedback(feedbackResult, run_, sourceInfo);\n        return feedbacks[0];\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, feedbackConfig, projectId, comparativeExperimentId, }) {\n        if (!runId && !projectId) {\n            throw new Error(\"One of runId or projectId must be provided\");\n        }\n        if (runId && projectId) {\n            throw new Error(\"Only one of runId or projectId can be provided\");\n        }\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score,\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n            comparative_experiment_id: comparativeExperimentId,\n            feedbackConfig,\n            session_id: projectId,\n        };\n        const url = `${this.apiUrl}/feedback`;\n        const response = await this.caller.call(_getFetchImplementation(), url, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create feedback\", true);\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = score;\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/feedback/${feedbackId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedbackUpdate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update feedback\", true);\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(_getFetchImplementation(), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n    /**\n     * Creates a presigned feedback token and URL.\n     *\n     * The token can be used to authorize feedback metrics without\n     * needing an API key. This is useful for giving browser-based\n     * applications the ability to submit feedback without needing\n     * to expose an API key.\n     *\n     * @param runId - The ID of the run.\n     * @param feedbackKey - The feedback key.\n     * @param options - Additional options for the token.\n     * @param options.expiration - The expiration time for the token.\n     *\n     * @returns A promise that resolves to a FeedbackIngestToken.\n     */\n    async createPresignedFeedbackToken(runId, feedbackKey, { expiration, feedbackConfig, } = {}) {\n        const body = {\n            run_id: runId,\n            feedback_key: feedbackKey,\n            feedback_config: feedbackConfig,\n        };\n        if (expiration) {\n            if (typeof expiration === \"string\") {\n                body[\"expires_at\"] = expiration;\n            }\n            else if (expiration?.hours || expiration?.minutes || expiration?.days) {\n                body[\"expires_in\"] = expiration;\n            }\n        }\n        else {\n            body[\"expires_in\"] = {\n                hours: 3,\n            };\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/feedback/tokens`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async createComparativeExperiment({ name, experimentIds, referenceDatasetId, createdAt, description, metadata, id, }) {\n        if (experimentIds.length === 0) {\n            throw new Error(\"At least one experiment is required\");\n        }\n        if (!referenceDatasetId) {\n            referenceDatasetId = (await this.readProject({\n                projectId: experimentIds[0],\n            })).reference_dataset_id;\n        }\n        if (!referenceDatasetId == null) {\n            throw new Error(\"A reference dataset is required\");\n        }\n        const body = {\n            id,\n            name,\n            experiment_ids: experimentIds,\n            reference_dataset_id: referenceDatasetId,\n            description,\n            created_at: (createdAt ?? new Date())?.toISOString(),\n            extra: {},\n        };\n        if (metadata)\n            body.extra[\"metadata\"] = metadata;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/datasets/comparative`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    /**\n     * Retrieves a list of presigned feedback tokens for a given run ID.\n     * @param runId The ID of the run.\n     * @returns An async iterable of FeedbackIngestToken objects.\n     */\n    async *listPresignedFeedbackTokens(runId) {\n        assertUuid(runId);\n        const params = new URLSearchParams({ run_id: runId });\n        for await (const tokens of this._getPaginated(\"/feedback/tokens\", params)) {\n            yield* tokens;\n        }\n    }\n    _selectEvalResults(results) {\n        let results_;\n        if (\"results\" in results) {\n            results_ = results.results;\n        }\n        else {\n            results_ = [results];\n        }\n        return results_;\n    }\n    async _logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const evalResults = this._selectEvalResults(evaluatorResponse);\n        const feedbacks = [];\n        for (const res of evalResults) {\n            let sourceInfo_ = sourceInfo || {};\n            if (res.evaluatorInfo) {\n                sourceInfo_ = { ...res.evaluatorInfo, ...sourceInfo_ };\n            }\n            let runId_ = null;\n            if (res.targetRunId) {\n                runId_ = res.targetRunId;\n            }\n            else if (run) {\n                runId_ = run.id;\n            }\n            feedbacks.push(await this.createFeedback(runId_, res.key, {\n                score: res.score,\n                value: res.value,\n                comment: res.comment,\n                correction: res.correction,\n                sourceInfo: sourceInfo_,\n                sourceRunId: res.sourceRunId,\n                feedbackConfig: res.feedbackConfig,\n                feedbackSourceType: \"model\",\n            }));\n        }\n        return [evalResults, feedbacks];\n    }\n    async logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const [results] = await this._logEvaluationFeedback(evaluatorResponse, run, sourceInfo);\n        return results;\n    }\n    /**\n     * API for managing annotation queues\n     */\n    /**\n     * List the annotation queues on the LangSmith API.\n     * @param options - The options for listing annotation queues\n     * @param options.queueIds - The IDs of the queues to filter by\n     * @param options.name - The name of the queue to filter by\n     * @param options.nameContains - The substring that the queue name should contain\n     * @param options.limit - The maximum number of queues to return\n     * @returns An iterator of AnnotationQueue objects\n     */\n    async *listAnnotationQueues(options = {}) {\n        const { queueIds, name, nameContains, limit } = options;\n        const params = new URLSearchParams();\n        if (queueIds) {\n            queueIds.forEach((id, i) => {\n                assertUuid(id, `queueIds[${i}]`);\n                params.append(\"ids\", id);\n            });\n        }\n        if (name)\n            params.append(\"name\", name);\n        if (nameContains)\n            params.append(\"name_contains\", nameContains);\n        params.append(\"limit\", (limit !== undefined ? Math.min(limit, 100) : 100).toString());\n        let count = 0;\n        for await (const queues of this._getPaginated(\"/annotation-queues\", params)) {\n            yield* queues;\n            count++;\n            if (limit !== undefined && count >= limit)\n                break;\n        }\n    }\n    /**\n     * Create an annotation queue on the LangSmith API.\n     * @param options - The options for creating an annotation queue\n     * @param options.name - The name of the annotation queue\n     * @param options.description - The description of the annotation queue\n     * @param options.queueId - The ID of the annotation queue\n     * @returns The created AnnotationQueue object\n     */\n    async createAnnotationQueue(options) {\n        const { name, description, queueId } = options;\n        const body = {\n            name,\n            description,\n            id: queueId || uuid.v4(),\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(Object.fromEntries(Object.entries(body).filter(([_, v]) => v !== undefined))),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create annotation queue\");\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Read an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to read\n     * @returns The AnnotationQueue object\n     */\n    async readAnnotationQueue(queueId) {\n        // TODO: Replace when actual endpoint is added\n        const queueIteratorResult = await this.listAnnotationQueues({\n            queueIds: [queueId],\n        }).next();\n        if (queueIteratorResult.done) {\n            throw new Error(`Annotation queue with ID ${queueId} not found`);\n        }\n        return queueIteratorResult.value;\n    }\n    /**\n     * Update an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to update\n     * @param options - The options for updating the annotation queue\n     * @param options.name - The new name for the annotation queue\n     * @param options.description - The new description for the annotation queue\n     */\n    async updateAnnotationQueue(queueId, options) {\n        const { name, description } = options;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name, description }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update annotation queue\");\n    }\n    /**\n     * Delete an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to delete\n     */\n    async deleteAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete annotation queue\");\n    }\n    /**\n     * Add runs to an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue\n     * @param runIds - The IDs of the runs to be added to the annotation queue\n     */\n    async addRunsToAnnotationQueue(queueId, runIds) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(runIds.map((id, i) => assertUuid(id, `runIds[${i}]`).toString())),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"add runs to annotation queue\");\n    }\n    /**\n     * Get a run from an annotation queue at the specified index.\n     * @param queueId - The ID of the annotation queue\n     * @param index - The index of the run to retrieve\n     * @returns A Promise that resolves to a RunWithAnnotationQueueInfo object\n     * @throws {Error} If the run is not found at the given index or for other API-related errors\n     */\n    async getRunFromAnnotationQueue(queueId, index) {\n        const baseUrl = `/annotation-queues/${assertUuid(queueId, \"queueId\")}/run`;\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}${baseUrl}/${index}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get run from annotation queue\");\n        return await response.json();\n    }\n    /**\n     * Delete a run from an an annotation queue.\n     * @param queueId - The ID of the annotation queue to delete the run from\n     * @param queueRunId - The ID of the run to delete from the annotation queue\n     */\n    async deleteRunFromAnnotationQueue(queueId, queueRunId) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs/${assertUuid(queueRunId, \"queueRunId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete run from annotation queue\");\n    }\n    /**\n     * Get the size of an annotation queue.\n     * @param queueId - The ID of the annotation queue\n     */\n    async getSizeFromAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/size`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get size from annotation queue\");\n        return await response.json();\n    }\n    async _currentTenantIsOwner(owner) {\n        const settings = await this._getSettings();\n        return owner == \"-\" || settings.tenant_handle === owner;\n    }\n    async _ownerConflictError(action, owner) {\n        const settings = await this._getSettings();\n        return new Error(`Cannot ${action} for another tenant.\\n\n      Current tenant: ${settings.tenant_handle}\\n\n      Requested tenant: ${owner}`);\n    }\n    async _getLatestCommitHash(promptOwnerAndName) {\n        const res = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${promptOwnerAndName}/?limit=${1}&offset=${0}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const json = await res.json();\n        if (!res.ok) {\n            const detail = typeof json.detail === \"string\"\n                ? json.detail\n                : JSON.stringify(json.detail);\n            const error = new Error(`Error ${res.status}: ${res.statusText}\\n${detail}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            error.statusCode = res.status;\n            throw error;\n        }\n        if (json.commits.length === 0) {\n            return undefined;\n        }\n        return json.commits[0].commit_hash;\n    }\n    async _likeOrUnlikePrompt(promptIdentifier, like) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/likes/${owner}/${promptName}`, {\n            method: \"POST\",\n            body: JSON.stringify({ like: like }),\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `${like ? \"like\" : \"unlike\"} prompt`);\n        return await response.json();\n    }\n    async _getPromptUrl(promptIdentifier) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}/${commitHash.substring(0, 8)}`;\n            }\n            else {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}`;\n            }\n        }\n        else {\n            const settings = await this._getSettings();\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/prompts/${promptName}/${commitHash.substring(0, 8)}?organizationId=${settings.id}`;\n            }\n            else {\n                return `${this.getHostUrl()}/prompts/${promptName}?organizationId=${settings.id}`;\n            }\n        }\n    }\n    async promptExists(promptIdentifier) {\n        const prompt = await this.getPrompt(promptIdentifier);\n        return !!prompt;\n    }\n    async likePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, true);\n    }\n    async unlikePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, false);\n    }\n    async *listCommits(promptOwnerAndName) {\n        for await (const commits of this._getPaginated(`/commits/${promptOwnerAndName}/`, new URLSearchParams(), (res) => res.commits)) {\n            yield* commits;\n        }\n    }\n    async *listPrompts(options) {\n        const params = new URLSearchParams();\n        params.append(\"sort_field\", options?.sortField ?? \"updated_at\");\n        params.append(\"sort_direction\", \"desc\");\n        params.append(\"is_archived\", (!!options?.isArchived).toString());\n        if (options?.isPublic !== undefined) {\n            params.append(\"is_public\", options.isPublic.toString());\n        }\n        if (options?.query) {\n            params.append(\"query\", options.query);\n        }\n        for await (const prompts of this._getPaginated(\"/repos\", params, (res) => res.repos)) {\n            yield* prompts;\n        }\n    }\n    async getPrompt(promptIdentifier) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        if (response.status === 404) {\n            return null;\n        }\n        await raiseForStatus(response, \"get prompt\");\n        const result = await response.json();\n        if (result.repo) {\n            return result.repo;\n        }\n        else {\n            return null;\n        }\n    }\n    async createPrompt(promptIdentifier, options) {\n        const settings = await this._getSettings();\n        if (options?.isPublic && !settings.tenant_handle) {\n            throw new Error(`Cannot create a public prompt without first\\n\n        creating a LangChain Hub handle. \n        You can add a handle by creating a public prompt at:\\n\n        https://smith.langchain.com/prompts`);\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"create a prompt\", owner);\n        }\n        const data = {\n            repo_handle: promptName,\n            ...(options?.description && { description: options.description }),\n            ...(options?.readme && { readme: options.readme }),\n            ...(options?.tags && { tags: options.tags }),\n            is_public: !!options?.isPublic,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create prompt\");\n        const { repo } = await response.json();\n        return repo;\n    }\n    async createCommit(promptIdentifier, object, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const resolvedParentCommitHash = options?.parentCommitHash === \"latest\" || !options?.parentCommitHash\n            ? await this._getLatestCommitHash(`${owner}/${promptName}`)\n            : options?.parentCommitHash;\n        const payload = {\n            manifest: JSON.parse(JSON.stringify(object)),\n            parent_commit: resolvedParentCommitHash,\n        };\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${owner}/${promptName}`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(payload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create commit\");\n        const result = await response.json();\n        return this._getPromptUrl(`${owner}/${promptName}${result.commit_hash ? `:${result.commit_hash}` : \"\"}`);\n    }\n    /**\n     * Update examples with attachments using multipart form data.\n     * @param updates List of ExampleUpdateWithAttachments objects to upsert\n     * @returns Promise with the update response\n     */\n    async updateExamplesMultipart(datasetId, updates = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith version does not allow using the multipart examples endpoint, please update to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of updates) {\n            const exampleId = example.id;\n            // Prepare the main example body\n            const exampleBody = {\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n            };\n            // Add main example data\n            const stringifiedExample = stringifyForTracing(exampleBody);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs\n            if (example.inputs) {\n                const stringifiedInputs = stringifyForTracing(example.inputs);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = stringifyForTracing(example.outputs);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n            if (example.attachments_operations) {\n                const stringifiedAttachmentsOperations = stringifyForTracing(example.attachments_operations);\n                const attachmentsOperationsBlob = new Blob([stringifiedAttachmentsOperations], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.attachments_operations`, attachmentsOperationsBlob);\n            }\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/v1/platform/datasets/${datasetId}/examples`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: formData,\n        });\n        const result = await response.json();\n        return result;\n    }\n    /**\n     * Upload examples with attachments using multipart form data.\n     * @param uploads List of ExampleUploadWithAttachments objects to upload\n     * @returns Promise with the upload response\n     */\n    async uploadExamplesMultipart(datasetId, uploads = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith version does not allow using the multipart examples endpoint, please update to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of uploads) {\n            const exampleId = (example.id ?? uuid.v4()).toString();\n            // Prepare the main example body\n            const exampleBody = {\n                created_at: example.created_at,\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n            };\n            // Add main example data\n            const stringifiedExample = stringifyForTracing(exampleBody);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs\n            const stringifiedInputs = stringifyForTracing(example.inputs);\n            const inputsBlob = new Blob([stringifiedInputs], {\n                type: \"application/json\",\n            });\n            formData.append(`${exampleId}.inputs`, inputsBlob);\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = stringifyForTracing(example.outputs);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/v1/platform/datasets/${datasetId}/examples`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async updatePrompt(promptIdentifier, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"update a prompt\", owner);\n        }\n        const payload = {};\n        if (options?.description !== undefined)\n            payload.description = options.description;\n        if (options?.readme !== undefined)\n            payload.readme = options.readme;\n        if (options?.tags !== undefined)\n            payload.tags = options.tags;\n        if (options?.isPublic !== undefined)\n            payload.is_public = options.isPublic;\n        if (options?.isArchived !== undefined)\n            payload.is_archived = options.isArchived;\n        // Check if payload is empty\n        if (Object.keys(payload).length === 0) {\n            throw new Error(\"No valid update options provided\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"PATCH\",\n            body: JSON.stringify(payload),\n            headers: {\n                ...this.headers,\n                \"Content-Type\": \"application/json\",\n            },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update prompt\");\n        return response.json();\n    }\n    async deletePrompt(promptIdentifier) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"delete a prompt\", owner);\n        }\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    async pullPromptCommit(promptIdentifier, options) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(), `${this.apiUrl}/commits/${owner}/${promptName}/${commitHash}${options?.includeModel ? \"?include_model=true\" : \"\"}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"pull prompt commit\");\n        const result = await response.json();\n        return {\n            owner,\n            repo: promptName,\n            commit_hash: result.commit_hash,\n            manifest: result.manifest,\n            examples: result.examples,\n        };\n    }\n    /**\n     * This method should not be used directly, use `import { pull } from \"langchain/hub\"` instead.\n     * Using this method directly returns the JSON string of the prompt rather than a LangChain object.\n     * @private\n     */\n    async _pullPrompt(promptIdentifier, options) {\n        const promptObject = await this.pullPromptCommit(promptIdentifier, {\n            includeModel: options?.includeModel,\n        });\n        const prompt = JSON.stringify(promptObject.manifest);\n        return prompt;\n    }\n    async pushPrompt(promptIdentifier, options) {\n        // Create or update prompt metadata\n        if (await this.promptExists(promptIdentifier)) {\n            if (options && Object.keys(options).some((key) => key !== \"object\")) {\n                await this.updatePrompt(promptIdentifier, {\n                    description: options?.description,\n                    readme: options?.readme,\n                    tags: options?.tags,\n                    isPublic: options?.isPublic,\n                });\n            }\n        }\n        else {\n            await this.createPrompt(promptIdentifier, {\n                description: options?.description,\n                readme: options?.readme,\n                tags: options?.tags,\n                isPublic: options?.isPublic,\n            });\n        }\n        if (!options?.object) {\n            return await this._getPromptUrl(promptIdentifier);\n        }\n        // Create a commit with the new manifest\n        const url = await this.createCommit(promptIdentifier, options?.object, {\n            parentCommitHash: options?.parentCommitHash,\n        });\n        return url;\n    }\n    /**\n     * Clone a public dataset to your own langsmith tenant.\n     * This operation is idempotent. If you already have a dataset with the given name,\n     * this function will do nothing.\n  \n     * @param {string} tokenOrUrl The token of the public dataset to clone.\n     * @param {Object} [options] Additional options for cloning the dataset.\n     * @param {string} [options.sourceApiUrl] The URL of the langsmith server where the data is hosted. Defaults to the API URL of your current client.\n     * @param {string} [options.datasetName] The name of the dataset to create in your tenant. Defaults to the name of the public dataset.\n     * @returns {Promise<void>}\n     */\n    async clonePublicDataset(tokenOrUrl, options = {}) {\n        const { sourceApiUrl = this.apiUrl, datasetName } = options;\n        const [parsedApiUrl, tokenUuid] = this.parseTokenOrUrl(tokenOrUrl, sourceApiUrl);\n        const sourceClient = new Client({\n            apiUrl: parsedApiUrl,\n            // Placeholder API key not needed anymore in most cases, but\n            // some private deployments may have API key-based rate limiting\n            // that would cause this to fail if we provide no value.\n            apiKey: \"placeholder\",\n        });\n        const ds = await sourceClient.readSharedDataset(tokenUuid);\n        const finalDatasetName = datasetName || ds.name;\n        try {\n            if (await this.hasDataset({ datasetId: finalDatasetName })) {\n                console.log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`);\n                return;\n            }\n        }\n        catch (_) {\n            // `.hasDataset` will throw an error if the dataset does not exist.\n            // no-op in that case\n        }\n        // Fetch examples first, then create the dataset\n        const examples = await sourceClient.listSharedExamples(tokenUuid);\n        const dataset = await this.createDataset(finalDatasetName, {\n            description: ds.description,\n            dataType: ds.data_type || \"kv\",\n            inputsSchema: ds.inputs_schema_definition ?? undefined,\n            outputsSchema: ds.outputs_schema_definition ?? undefined,\n        });\n        try {\n            await this.createExamples({\n                inputs: examples.map((e) => e.inputs),\n                outputs: examples.flatMap((e) => (e.outputs ? [e.outputs] : [])),\n                datasetId: dataset.id,\n            });\n        }\n        catch (e) {\n            console.error(`An error occurred while creating dataset ${finalDatasetName}. ` +\n                \"You should delete it manually.\");\n            throw e;\n        }\n    }\n    parseTokenOrUrl(urlOrToken, apiUrl, numParts = 2, kind = \"dataset\") {\n        // Try parsing as UUID\n        try {\n            assertUuid(urlOrToken); // Will throw if it's not a UUID.\n            return [apiUrl, urlOrToken];\n        }\n        catch (_) {\n            // no-op if it's not a uuid\n        }\n        // Parse as URL\n        try {\n            const parsedUrl = new URL(urlOrToken);\n            const pathParts = parsedUrl.pathname\n                .split(\"/\")\n                .filter((part) => part !== \"\");\n            if (pathParts.length >= numParts) {\n                const tokenUuid = pathParts[pathParts.length - numParts];\n                return [apiUrl, tokenUuid];\n            }\n            else {\n                throw new Error(`Invalid public ${kind} URL: ${urlOrToken}`);\n            }\n        }\n        catch (error) {\n            throw new Error(`Invalid public ${kind} URL or token: ${urlOrToken}`);\n        }\n    }\n    /**\n     * Awaits all pending trace batches. Useful for environments where\n     * you need to be sure that all tracing requests finish before execution ends,\n     * such as serverless environments.\n     *\n     * @example\n     * ```\n     * import { Client } from \"langsmith\";\n     *\n     * const client = new Client();\n     *\n     * try {\n     *   // Tracing happens here\n     *   ...\n     * } finally {\n     *   await client.awaitPendingTraceBatches();\n     * }\n     * ```\n     *\n     * @returns A promise that resolves once all currently pending traces have sent.\n     */\n    awaitPendingTraceBatches() {\n        if (this.manualFlushMode) {\n            console.warn(\"[WARNING]: When tracing in manual flush mode, you must call `await client.flush()` manually to submit trace batches.\");\n            return Promise.resolve();\n        }\n        return Promise.all([\n            ...this.autoBatchQueue.items.map(({ itemPromise }) => itemPromise),\n            this.batchIngestCaller.queue.onIdle(),\n        ]);\n    }\n}\n","export { Client, } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\nexport { overrideFetchImplementation } from \"./singletons/fetch.js\";\n// Update using yarn bump-version\nexport const __version__ = \"0.3.0\";\n","// Inlined from https://github.com/flexdinesh/browser-or-node\nimport { __version__ } from \"../index.js\";\nlet globalEnv;\nexport const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    if (globalEnv) {\n        return globalEnv;\n    }\n    if (isBrowser()) {\n        globalEnv = \"browser\";\n    }\n    else if (isNode()) {\n        globalEnv = \"node\";\n    }\n    else if (isWebWorker()) {\n        globalEnv = \"webworker\";\n    }\n    else if (isJsDom()) {\n        globalEnv = \"jsdom\";\n    }\n    else if (isDeno()) {\n        globalEnv = \"deno\";\n    }\n    else {\n        globalEnv = \"other\";\n    }\n    return globalEnv;\n};\nlet runtimeEnvironment;\nexport function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            sdk: \"langsmith-js\",\n            sdk_version: __version__,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\", \"token\", or \"secret\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if ((key.toLowerCase().includes(\"key\") ||\n            key.toLowerCase().includes(\"secret\") ||\n            key.toLowerCase().includes(\"token\")) &&\n            typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the LangChain-specific metadata from the current runtime environment.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific metadata environment variables.\n */\nexport function getLangChainEnvVarsMetadata() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    const excluded = [\n        \"LANGCHAIN_API_KEY\",\n        \"LANGCHAIN_ENDPOINT\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGCHAIN_PROJECT\",\n        \"LANGCHAIN_SESSION\",\n        \"LANGSMITH_API_KEY\",\n        \"LANGSMITH_ENDPOINT\",\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGSMITH_PROJECT\",\n        \"LANGSMITH_SESSION\",\n    ];\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if ((key.startsWith(\"LANGCHAIN_\") || key.startsWith(\"LANGSMITH_\")) &&\n            typeof value === \"string\" &&\n            !excluded.includes(key) &&\n            !key.toLowerCase().includes(\"key\") &&\n            !key.toLowerCase().includes(\"secret\") &&\n            !key.toLowerCase().includes(\"token\")) {\n            if (key === \"LANGCHAIN_REVISION_ID\") {\n                envVars[\"revision_id\"] = value;\n            }\n            else {\n                envVars[key] = value;\n            }\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            return Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function getLangSmithEnvironmentVariable(name) {\n    return (getEnvironmentVariable(`LANGSMITH_${name}`) ||\n        getEnvironmentVariable(`LANGCHAIN_${name}`));\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n","import { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\"TRACING_V2\", \"TRACING\"];\n    return !!envVars.find((envVar) => getLangSmithEnvironmentVariable(envVar) === \"true\");\n};\n","export const _LC_CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n","import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n        }\n        return new Baggage(metadata, tags);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order =\n                    this.parent_run.dotted_order + \".\" + currentDottedOrder;\n            }\n            else {\n                this.dotted_order = currentDottedOrder;\n            }\n        }\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getLangSmithEnvironmentVariable(\"PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n                \"default\",\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        if (!runExtra.runtime) {\n            runExtra.runtime = {};\n        }\n        if (runtimeEnv) {\n            for (const [k, v] of Object.entries(runtimeEnv)) {\n                if (!runExtra.runtime[k]) {\n                    runExtra.runtime[k] = v;\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        const persistedRun = {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n        };\n        return persistedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            const runCreate = await this._convertToCreate(this, runtimeEnv, true);\n            await this.client.createRun(runCreate);\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun() {\n        try {\n            const runUpdate = {\n                end_time: this.end_time,\n                error: this.error,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                parent_run_id: this.parent_run?.id,\n                reference_example_id: this.reference_example_id,\n                extra: this.extra,\n                events: this.events,\n                dotted_order: this.dotted_order,\n                trace_id: this.trace_id,\n                tags: this.tags,\n                attachments: this.attachments,\n            };\n            await this.client.updateRun(this.id, runUpdate);\n        }\n        catch (error) {\n            console.error(`Error in patchRun for run ${this.id}`, error);\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x !== undefined &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x !== undefined &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\n","import { isRunTree } from \"../run_trees.js\";\nclass MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_, callback) {\n        return callback();\n    }\n}\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nexport const AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\n/**\n * Return the current run tree from within a traceable-wrapped function.\n * Will throw an error if called outside of a traceable function.\n *\n * @returns The run tree for the given context.\n */\nexport const getCurrentRunTree = () => {\n    const runTree = AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    if (!isRunTree(runTree)) {\n        throw new Error([\n            \"Could not get the current run tree.\",\n            \"\",\n            \"Please make sure you are calling this method within a traceable function and that tracing is enabled.\",\n        ].join(\"\\n\"));\n    }\n    return runTree;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withRunTree(runTree, fn) {\n    const storage = AsyncLocalStorageProviderSingleton.getInstance();\n    return new Promise((resolve, reject) => {\n        storage.run(runTree, () => void Promise.resolve(fn()).then(resolve).catch(reject));\n    });\n}\nexport const ROOT = Symbol.for(\"langsmith:traceable:root\");\nexport function isTraceableFunction(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return typeof x === \"function\" && \"langsmith:traceable\" in x;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n","// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n","import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n","import { BaseCallbackHandler, } from \"../callbacks/base.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n","'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n","import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nlet client;\nexport const getDefaultLangChainClientSingleton = () => {\n    if (client === undefined) {\n        const clientParams = getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n            ? {\n                // LangSmith has its own backgrounding system\n                blockOnRootRunFinalization: true,\n            }\n            : {};\n        client = new Client(clientParams);\n    }\n    return client;\n};\nexport const setDefaultLangChainClientSingleton = (newClient) => {\n    client = newClient;\n};\n","import { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"../utils/env.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? getDefaultLangChainClientSingleton();\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async onRunUpdate(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            parent_run_id: run.parent_run_id,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    getRun(id) {\n        return this.runMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            // @ts-expect-error Types of property 'events' are incompatible.\n            this.runMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    convertToRunTree(id) {\n        const runTreeMap = {};\n        const runTreeList = [];\n        for (const [id, run] of this.runMap) {\n            // by converting the run map to a run tree, we are doing a copy\n            // thus, any mutation performed on the run tree will not be reflected\n            // back in the run map\n            // TODO: Stop using `this.runMap` in favour of LangSmith's `RunTree`\n            const runTree = new RunTree({\n                ...run,\n                child_runs: [],\n                parent_run: undefined,\n                // inherited properties\n                client: this.client,\n                project_name: this.projectName,\n                reference_example_id: this.exampleId,\n                tracingEnabled: true,\n            });\n            runTreeMap[id] = runTree;\n            runTreeList.push([id, run.dotted_order]);\n        }\n        runTreeList.sort((a, b) => {\n            if (!a[1] || !b[1])\n                return 0;\n            return a[1].localeCompare(b[1]);\n        });\n        for (const [id] of runTreeList) {\n            const run = this.runMap.get(id);\n            const runTree = runTreeMap[id];\n            if (!run || !runTree)\n                continue;\n            if (run.parent_run_id) {\n                const parentRunTree = runTreeMap[run.parent_run_id];\n                if (parentRunTree) {\n                    parentRunTree.child_runs.push(runTree);\n                    runTree.parent_run = parentRunTree;\n                }\n            }\n        }\n        return runTreeMap[id];\n    }\n    static getTraceableRunTree() {\n        try {\n            return getCurrentRunTree();\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n","export const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\nexport const setGlobalAsyncLocalStorageInstance = (instance) => {\n    globalThis[TRACING_ALS_KEY] = instance;\n};\nexport const getGlobalAsyncLocalStorageInstance = () => {\n    return globalThis[TRACING_ALS_KEY];\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\nexport function getQueue() {\n    if (typeof queue === \"undefined\") {\n        queue = createQueue();\n    }\n    return queue;\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        // Clear config since callbacks are not part of the root run\n        // Avoid using global singleton due to circuluar dependency issues\n        const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n        if (asyncLocalStorageInstance !== undefined) {\n            await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n        }\n        else {\n            await promiseFn();\n        }\n    }\n    else {\n        queue = getQueue();\n        void queue.add(async () => {\n            const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n            if (asyncLocalStorageInstance !== undefined) {\n                await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n            }\n            else {\n                await promiseFn();\n            }\n        });\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n","import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n","import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { _CONTEXT_VARIABLES_KEY, getGlobalAsyncLocalStorageInstance, } from \"./globals.js\";\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContextVariable(name, value) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        throw new Error(`Internal error: Global shared async local storage instance has not been initialized.`);\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n    contextVars[name] = value;\n    let newValue = {};\n    if (isRunTree(runTree)) {\n        newValue = new RunTree(runTree);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newValue[_CONTEXT_VARIABLES_KEY] = contextVars;\n    asyncLocalStorageInstance.enterWith(newValue);\n}\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable(name) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        return undefined;\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\nexport const _getConfigureHooks = () => getContextVariable(LC_CONFIGURE_HOOKS_KEY) || [];\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config) => {\n    if (config.envVar && !config.handlerClass) {\n        throw new Error(\"If envVar is set, handlerClass must also be set to a non-None value.\");\n    }\n    setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, isBaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport { getContextVariable, _getConfigureHooks, } from \"../singletons/async_local_storage/context.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                    // handoff between langchain and langsmith/traceable\n                    // override the parent run ID\n                    callbackManager._parentRunId =\n                        LangChainTracer.getTraceableRunTree()?.id ??\n                            callbackManager._parentRunId;\n                }\n            }\n        }\n        for (const { contextVar, inheritable = true, handlerClass, envVar, } of _getConfigureHooks()) {\n            const createIfNotInContext = envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n            let handler;\n            const contextVarValue = contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n            if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n                handler = contextVarValue;\n            }\n            else if (createIfNotInContext) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                handler = new handlerClass({});\n            }\n            if (handler !== undefined) {\n                if (!callbackManager) {\n                    callbackManager = new CallbackManager();\n                }\n                if (!callbackManager.handlers.some((h) => h.name === handler.name)) {\n                    callbackManager.addHandler(handler, inheritable);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @deprecated Use [`traceable`](https://docs.smith.langchain.com/observability/how_to_guides/tracing/annotate_code)\n * from \"langsmith\" instead.\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { getGlobalAsyncLocalStorageInstance, setGlobalAsyncLocalStorageInstance, _CONTEXT_VARIABLES_KEY, } from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n    enterWith(_store) {\n        return undefined;\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const previousValue = storage.getStore();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.convertToRunTree(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        if (previousValue !== undefined &&\n            previousValue[_CONTEXT_VARIABLES_KEY] !== undefined) {\n            runTree[_CONTEXT_VARIABLES_KEY] =\n                previousValue[_CONTEXT_VARIABLES_KEY];\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (getGlobalAsyncLocalStorageInstance() === undefined) {\n            setGlobalAsyncLocalStorageInstance(instance);\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n","import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"timeout\") {\n                if (copy.timeout === undefined) {\n                    copy.timeout = options.timeout;\n                }\n                else if (options.timeout !== undefined) {\n                    copy.timeout = Math.min(copy.timeout, options.timeout);\n                }\n            }\n            else if (key === \"signal\") {\n                if (copy.signal === undefined) {\n                    copy.signal = options.signal;\n                }\n                else if (options.signal !== undefined) {\n                    if (\"any\" in AbortSignal) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        copy.signal = AbortSignal.any([\n                            copy.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        copy.signal = options.signal;\n                    }\n                }\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig(config) {\n    const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    let empty = {\n        tags: [],\n        metadata: {},\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (implicitConfig) {\n        // Don't allow runId and runName to be loaded implicitly, as this can cause\n        // child runs to improperly inherit their parents' run ids.\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { runId, runName, ...rest } = implicitConfig;\n        empty = Object.entries(rest).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (config) {\n        empty = Object.entries(config).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (empty?.configurable) {\n        for (const key of Object.keys(empty.configurable)) {\n            if (PRIMITIVES.has(typeof empty.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = empty.configurable[key];\n            }\n        }\n    }\n    if (empty.timeout !== undefined) {\n        if (empty.timeout <= 0) {\n            throw new Error(\"Timeout must be a positive number\");\n        }\n        const timeoutSignal = AbortSignal.timeout(empty.timeout);\n        if (empty.signal !== undefined) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                empty.signal = AbortSignal.any([empty.signal, timeoutSignal]);\n            }\n        }\n        else {\n            empty.signal = timeoutSignal;\n        }\n        delete empty.timeout;\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function pickRunnableConfigKeys(config) {\n    return config\n        ? {\n            configurable: config.configurable,\n            recursionLimit: config.recursionLimit,\n            callbacks: config.callbacks,\n            tags: config.tags,\n            metadata: config.metadata,\n            maxConcurrency: config.maxConcurrency,\n            timeout: config.timeout,\n            signal: config.signal,\n        }\n        : undefined;\n}\n","export async function raceWithSignal(promise, signal) {\n    if (signal === undefined) {\n        return promise;\n    }\n    let listener;\n    return Promise.race([\n        promise.catch((err) => {\n            if (!signal?.aborted) {\n                throw err;\n            }\n            else {\n                return undefined;\n            }\n        }),\n        new Promise((_, reject) => {\n            listener = () => {\n                reject(new Error(\"Aborted\"));\n            };\n            signal.addEventListener(\"abort\", listener);\n            // Must be here inside the promise to avoid a race condition\n            if (signal.aborted) {\n                reject(new Error(\"Aborted\"));\n            }\n        }),\n    ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n","import { pickRunnableConfigKeys } from \"../runnables/config.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { raceWithSignal } from \"./signal.js\";\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(params) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = params.generator;\n        this.config = params.config;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.signal = params.signal ?? this.config?.signal;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(params.config), async () => {\n                this.firstResult = params.generator.next();\n                if (params.startSetup) {\n                    this.firstResult.then(params.startSetup).then(resolve, reject);\n                }\n                else {\n                    this.firstResult.then((_result) => resolve(undefined), reject);\n                }\n            }, true);\n        });\n    }\n    async next(...args) {\n        this.signal?.throwIfAborted();\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(this.config), this.signal\n            ? async () => {\n                return raceWithSignal(this.generator.next(...args), this.signal);\n            }\n            : async () => {\n                return this.generator.next(...args);\n            }, true);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, signal, ...args) {\n    const gen = new AsyncGeneratorWithSetup({\n        generator,\n        startSetup,\n        signal,\n    });\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n","import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = applyPatch({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new AIMessageChunk({\n                    id: `run-${run.id}`,\n                    content: token,\n                });\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n","export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { GenerationChunk } from \"../outputs.js\";\nfunction assignName({ name, serialized, }) {\n    if (name !== undefined) {\n        return name;\n    }\n    if (serialized?.name !== undefined) {\n        return serialized.name;\n    }\n    else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n        return serialized.id[serialized.id.length - 1];\n    }\n    return \"Unnamed\";\n}\nexport const isStreamEventsHandler = (handler) => handler.name === \"event_stream_tracer\";\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runInfoMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"tappedPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"event_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.runType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.runType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, outputStream) {\n        const firstChunk = await outputStream.next();\n        if (firstChunk.done) {\n            return;\n        }\n        const runInfo = this.runInfoMap.get(runId);\n        // Run has finished, don't issue any stream events.\n        // An example of this is for runnables that use the default\n        // implementation of .stream(), which delegates to .invoke()\n        // and calls .onChainEnd() before passing it to the iterator.\n        if (runInfo === undefined) {\n            yield firstChunk.value;\n            return;\n        }\n        // Match format from handlers below\n        function _formatOutputChunk(eventType, data) {\n            if (eventType === \"llm\" && typeof data === \"string\") {\n                return new GenerationChunk({ text: data });\n            }\n            return data;\n        }\n        let tappedPromise = this.tappedPromises.get(runId);\n        // if we are the first to tap, issue stream events\n        if (tappedPromise === undefined) {\n            let tappedPromiseResolver;\n            tappedPromise = new Promise((resolve) => {\n                tappedPromiseResolver = resolve;\n            });\n            this.tappedPromises.set(runId, tappedPromise);\n            try {\n                const event = {\n                    event: `on_${runInfo.runType}_stream`,\n                    run_id: runId,\n                    name: runInfo.name,\n                    tags: runInfo.tags,\n                    metadata: runInfo.metadata,\n                    data: {},\n                };\n                await this.send({\n                    ...event,\n                    data: {\n                        chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n                    },\n                }, runInfo);\n                yield firstChunk.value;\n                for await (const chunk of outputStream) {\n                    // Don't yield tool and retriever stream events\n                    if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n                        await this.send({\n                            ...event,\n                            data: {\n                                chunk: _formatOutputChunk(runInfo.runType, chunk),\n                            },\n                        }, runInfo);\n                    }\n                    yield chunk;\n                }\n            }\n            finally {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tappedPromiseResolver();\n                // Don't delete from the promises map to keep track of which runs have been tapped.\n            }\n        }\n        else {\n            // otherwise just pass through\n            yield firstChunk.value;\n            for await (const chunk of outputStream) {\n                yield chunk;\n            }\n        }\n    }\n    async send(payload, run) {\n        if (this._includeRun(run)) {\n            await this.writer.write(payload);\n        }\n    }\n    async sendEndEvent(payload, run) {\n        const tappedPromise = this.tappedPromises.get(payload.run_id);\n        if (tappedPromise !== undefined) {\n            void tappedPromise.then(() => {\n                void this.send(payload, run);\n            });\n        }\n        else {\n            await this.send(payload, run);\n        }\n    }\n    async onLLMStart(run) {\n        const runName = assignName(run);\n        const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: run.inputs,\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        const eventName = `on_${runType}_start`;\n        await this.send({\n            event: eventName,\n            data: {\n                input: run.inputs,\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onLLMNewToken(run, token, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs) {\n        const runInfo = this.runInfoMap.get(run.id);\n        let chunk;\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n        }\n        // Top-level streaming events are covered by tapOutputIterable\n        if (this.runInfoMap.size === 1) {\n            return;\n        }\n        if (runInfo.runType === \"chat_model\") {\n            eventName = \"on_chat_model_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n            }\n            else {\n                chunk = kwargs.chunk.message;\n            }\n        }\n        else if (runInfo.runType === \"llm\") {\n            eventName = \"on_llm_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new GenerationChunk({ text: token });\n            }\n            else {\n                chunk = kwargs.chunk;\n            }\n        }\n        else {\n            throw new Error(`Unexpected run type ${runInfo.runType}`);\n        }\n        await this.send({\n            event: eventName,\n            data: {\n                chunk,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onLLMEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const generations = run.outputs?.generations;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let output;\n        if (runInfo.runType === \"chat_model\") {\n            for (const generation of generations ?? []) {\n                if (output !== undefined) {\n                    break;\n                }\n                output = generation[0]?.message;\n            }\n            eventName = \"on_chat_model_end\";\n        }\n        else if (runInfo.runType === \"llm\") {\n            output = {\n                generations: generations?.map((generation) => {\n                    return generation.map((chunk) => {\n                        return {\n                            text: chunk.text,\n                            generationInfo: chunk.generationInfo,\n                        };\n                    });\n                }),\n                llmOutput: run.outputs?.llmOutput ?? {},\n            };\n            eventName = \"on_llm_end\";\n        }\n        else {\n            throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onChainStart(run) {\n        const runName = assignName(run);\n        const runType = run.run_type ?? \"chain\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: run.run_type,\n        };\n        let eventData = {};\n        // Workaround Runnable core code not sending input when transform streaming.\n        if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n            eventData = {};\n            runInfo.inputs = {};\n        }\n        else if (run.inputs.input !== undefined) {\n            eventData.input = run.inputs.input;\n            runInfo.inputs = run.inputs.input;\n        }\n        else {\n            eventData.input = run.inputs;\n            runInfo.inputs = run.inputs;\n        }\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: `on_${runType}_start`,\n            data: eventData,\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onChainEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const eventName = `on_${run.run_type}_end`;\n        const inputs = run.inputs ?? runInfo.inputs ?? {};\n        const outputs = run.outputs?.output ?? run.outputs;\n        const data = {\n            output: outputs,\n            input: inputs,\n        };\n        if (inputs.input && Object.keys(inputs).length === 1) {\n            data.input = inputs.input;\n            runInfo.inputs = inputs.input;\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data,\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolStart(run) {\n        const runName = assignName(run);\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: \"tool\",\n            inputs: run.inputs ?? {},\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_tool_start\",\n            data: {\n                input: run.inputs ?? {},\n            },\n            name: runName,\n            run_id: run.id,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n        }\n        if (runInfo.inputs === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`);\n        }\n        const output = run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n        await this.sendEndEvent({\n            event: \"on_tool_end\",\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onRetrieverStart(run) {\n        const runName = assignName(run);\n        const runType = \"retriever\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: {\n                query: run.inputs.query,\n            },\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_retriever_start\",\n            data: {\n                input: {\n                    query: run.inputs.query,\n                },\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onRetrieverEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n        }\n        await this.sendEndEvent({\n            event: \"on_retriever_end\",\n            data: {\n                output: run.outputs?.documents ?? run.outputs,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleCustomEvent(eventName, data, runId) {\n        const runInfo = this.runInfoMap.get(runId);\n        if (runInfo === undefined) {\n            throw new Error(`handleCustomEvent: Run ID ${runId} not found in run map.`);\n        }\n        await this.send({\n            event: \"on_custom_event\",\n            run_id: runId,\n            name: eventName,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n            data,\n        }, runInfo);\n    }\n    async finish() {\n        const pendingPromises = [...this.tappedPromises.values()];\n        void Promise.all(pendingPromises).finally(() => {\n            void this.writer.close();\n        });\n    }\n}\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            await this.argOnStart(run, this.config);\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                await this.argOnEnd(run, this.config);\n            }\n        }\n        else if (this.argOnError) {\n            await this.argOnError(run, this.config);\n        }\n    }\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","export function parseAnyDef() {\n    return {};\n}\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n","export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            let propOptional = propDef.isOptional();\n            if (propOptional && forceOptionalIntoNullable) {\n                if (propDef instanceof ZodOptional) {\n                    propDef = propDef._def.innerType;\n                }\n                if (!propDef.isNullable()) {\n                    propDef = propDef.nullable();\n                }\n                propOptional = false;\n            }\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propOptional ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseUnknownDef() {\n    return {};\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef, } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef, } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef, } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef, } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nimport { ignoreOverride } from \"./Options.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","function _escapeNodeLabel(nodeLabel) {\n    // Escapes the node label for Mermaid syntax.\n    return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\nconst MARKDOWN_SPECIAL_CHARS = [\"*\", \"_\", \"`\"];\nfunction _generateMermaidGraphStyles(nodeColors) {\n    let styles = \"\";\n    for (const [className, color] of Object.entries(nodeColors)) {\n        styles += `\\tclassDef ${className} ${color};\\n`;\n    }\n    return styles;\n}\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(nodes, edges, config) {\n    const { firstNode, lastNode, nodeColors, withStyles = true, curveStyle = \"linear\", wrapLabelNWords = 9, } = config ?? {};\n    // Initialize Mermaid graph configuration\n    let mermaidGraph = withStyles\n        ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n        : \"graph TD;\\n\";\n    if (withStyles) {\n        // Node formatting templates\n        const defaultClassLabel = \"default\";\n        const formatDict = {\n            [defaultClassLabel]: \"{0}({1})\",\n        };\n        if (firstNode !== undefined) {\n            formatDict[firstNode] = \"{0}([{1}]):::first\";\n        }\n        if (lastNode !== undefined) {\n            formatDict[lastNode] = \"{0}([{1}]):::last\";\n        }\n        // Add nodes to the graph\n        for (const [key, node] of Object.entries(nodes)) {\n            const nodeName = node.name.split(\":\").pop() ?? \"\";\n            const label = MARKDOWN_SPECIAL_CHARS.some((char) => nodeName.startsWith(char) && nodeName.endsWith(char))\n                ? `<p>${nodeName}</p>`\n                : nodeName;\n            let finalLabel = label;\n            if (Object.keys(node.metadata ?? {}).length) {\n                finalLabel += `<hr/><small><em>${Object.entries(node.metadata ?? {})\n                    .map(([k, v]) => `${k} = ${v}`)\n                    .join(\"\\n\")}</em></small>`;\n            }\n            const nodeLabel = (formatDict[key] ?? formatDict[defaultClassLabel])\n                .replace(\"{0}\", _escapeNodeLabel(key))\n                .replace(\"{1}\", finalLabel);\n            mermaidGraph += `\\t${nodeLabel}\\n`;\n        }\n    }\n    // Group edges by their common prefixes\n    const edgeGroups = {};\n    for (const edge of edges) {\n        const srcParts = edge.source.split(\":\");\n        const tgtParts = edge.target.split(\":\");\n        const commonPrefix = srcParts\n            .filter((src, i) => src === tgtParts[i])\n            .join(\":\");\n        if (!edgeGroups[commonPrefix]) {\n            edgeGroups[commonPrefix] = [];\n        }\n        edgeGroups[commonPrefix].push(edge);\n    }\n    const seenSubgraphs = new Set();\n    function addSubgraph(edges, prefix) {\n        const selfLoop = edges.length === 1 && edges[0].source === edges[0].target;\n        if (prefix && !selfLoop) {\n            const subgraph = prefix.split(\":\").pop();\n            if (seenSubgraphs.has(subgraph)) {\n                throw new Error(`Found duplicate subgraph '${subgraph}' -- this likely means that ` +\n                    \"you're reusing a subgraph node with the same name. \" +\n                    \"Please adjust your graph to have subgraph nodes with unique names.\");\n            }\n            seenSubgraphs.add(subgraph);\n            mermaidGraph += `\\tsubgraph ${subgraph}\\n`;\n        }\n        for (const edge of edges) {\n            const { source, target, data, conditional } = edge;\n            let edgeLabel = \"\";\n            if (data !== undefined) {\n                let edgeData = data;\n                const words = edgeData.split(\" \");\n                if (words.length > wrapLabelNWords) {\n                    edgeData = Array.from({ length: Math.ceil(words.length / wrapLabelNWords) }, (_, i) => words\n                        .slice(i * wrapLabelNWords, (i + 1) * wrapLabelNWords)\n                        .join(\" \")).join(\"&nbsp;<br>&nbsp;\");\n                }\n                edgeLabel = conditional\n                    ? ` -. &nbsp;${edgeData}&nbsp; .-> `\n                    : ` -- &nbsp;${edgeData}&nbsp; --> `;\n            }\n            else {\n                edgeLabel = conditional ? \" -.-> \" : \" --> \";\n            }\n            mermaidGraph += `\\t${_escapeNodeLabel(source)}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n        }\n        // Recursively add nested subgraphs\n        for (const nestedPrefix in edgeGroups) {\n            if (nestedPrefix.startsWith(`${prefix}:`) && nestedPrefix !== prefix) {\n                addSubgraph(edgeGroups[nestedPrefix], nestedPrefix);\n            }\n        }\n        if (prefix && !selfLoop) {\n            mermaidGraph += \"\\tend\\n\";\n        }\n    }\n    // Start with the top-level edges (no common prefix)\n    addSubgraph(edgeGroups[\"\"] ?? [], \"\");\n    // Add remaining subgraphs\n    for (const prefix in edgeGroups) {\n        if (!prefix.includes(\":\") && prefix !== \"\") {\n            addSubgraph(edgeGroups[prefix], prefix);\n        }\n    }\n    // Add custom styles for nodes\n    if (withStyles) {\n        mermaidGraph += _generateMermaidGraphStyles(nodeColors ?? {});\n    }\n    return mermaidGraph;\n}\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n */\nexport async function drawMermaidPng(mermaidSyntax, config) {\n    let { backgroundColor = \"white\" } = config ?? {};\n    // Use btoa for compatibility, assume ASCII\n    const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n    // Check if the background color is a hexadecimal color code using regex\n    if (backgroundColor !== undefined) {\n        const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n        if (!hexColorPattern.test(backgroundColor)) {\n            backgroundColor = `!${backgroundColor}`;\n        }\n    }\n    const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}`;\n    const res = await fetch(imageUrl);\n    if (!res.ok) {\n        throw new Error([\n            `Failed to render the graph using the Mermaid.INK API.`,\n            `Status code: ${res.status}`,\n            `Status text: ${res.statusText}`,\n        ].join(\"\\n\"));\n    }\n    const content = await res.blob();\n    return content;\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nfunction nodeDataStr(id, data) {\n    if (id !== undefined && !isUuid(id)) {\n        return id;\n    }\n    else if (isRunnableInterface(data)) {\n        try {\n            let dataStr = data.getName();\n            dataStr = dataStr.startsWith(\"Runnable\")\n                ? dataStr.slice(\"Runnable\".length)\n                : dataStr;\n            return dataStr;\n        }\n        catch (error) {\n            return data.getName();\n        }\n    }\n    else {\n        return data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...zodToJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor(params) {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.nodes = params?.nodes ?? this.nodes;\n        this.edges = params?.edges ?? this.edges;\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id ?? uuidv4();\n        const node = {\n            id: nodeId,\n            data,\n            name: nodeDataStr(id, data),\n            metadata,\n        };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        return _firstNode(this);\n    }\n    lastNode() {\n        return _lastNode(this);\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode && _firstNode(this, [firstNode.id])) {\n            this.removeNode(firstNode);\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode && _lastNode(this, [lastNode.id])) {\n            this.removeNode(lastNode);\n        }\n    }\n    /**\n     * Return a new graph with all nodes re-identified,\n     * using their unique, readable names where possible.\n     */\n    reid() {\n        const nodeLabels = Object.fromEntries(Object.values(this.nodes).map((node) => [node.id, node.name]));\n        const nodeLabelCounts = new Map();\n        Object.values(nodeLabels).forEach((label) => {\n            nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n        });\n        const getNodeId = (nodeId) => {\n            const label = nodeLabels[nodeId];\n            if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n                return label;\n            }\n            else {\n                return nodeId;\n            }\n        };\n        return new Graph({\n            nodes: Object.fromEntries(Object.entries(this.nodes).map(([id, node]) => [\n                getNodeId(id),\n                { ...node, id: getNodeId(id) },\n            ])),\n            edges: this.edges.map((edge) => ({\n                ...edge,\n                source: getNodeId(edge.source),\n                target: getNodeId(edge.target),\n            })),\n        });\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = {\n            default: \"fill:#f2f0ff,line-height:1.2\",\n            first: \"fill-opacity:0\",\n            last: \"fill:#bfb6fc\",\n        }, wrapLabelNWords, } = params ?? {};\n        const graph = this.reid();\n        const firstNode = graph.firstNode();\n        const lastNode = graph.lastNode();\n        return drawMermaid(graph.nodes, graph.edges, {\n            firstNode: firstNode?.id,\n            lastNode: lastNode?.id,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph, exclude = []) {\n    const targets = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.source))\n        .map((edge) => edge.target));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !targets.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph, exclude = []) {\n    const sources = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.target))\n        .map((edge) => edge.source));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !sources.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n","import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n","import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { pickRunnableConfigKeys } from \"./config.js\";\nexport function isIterableIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nexport const isIterator = (x) => x != null &&\n    typeof x === \"object\" &&\n    \"next\" in x &&\n    typeof x.next === \"function\";\nexport function isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nexport function* consumeIteratorInContext(context, iter) {\n    while (true) {\n        const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iter.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nexport async function* consumeAsyncIterableInContext(context, iter) {\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iterator.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n","import { z } from \"zod\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, pickRunnableConfigKeys, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param kwargs\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await outerThis.stream(input, config);\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * A runnable that delegates calls to another runnable with a set of kwargs.\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.bind({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.bind({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound.withRetry(fields),\n            kwargs: this.kwargs,\n            config: this.config,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke.bind(this), inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke.bind(this), input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"omitSequenceTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n        this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], nameOrFields) {\n        let extra = {};\n        if (typeof nameOrFields === \"string\") {\n            extra.name = nameOrFields;\n        }\n        else if (nameOrFields !== undefined) {\n            extra = nameOrFields;\n        }\n        return new RunnableSequence({\n            ...extra,\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke.bind(this), input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = sequence.invoke(25);\n *\n * // { years_to_fifty: 25, years_to_hundred: 75 }\n * ```\n */\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        const childConfig = patchConfig(otherConfigFields, {\n            callbacks: runManager?.getChild(),\n        });\n        const res = await AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n            let firstError;\n            for (const runnable of this.runnables()) {\n                config?.signal?.throwIfAborted();\n                try {\n                    const output = await runnable.invoke(input, childConfig);\n                    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                    return output;\n                }\n                catch (e) {\n                    if (firstError === undefined) {\n                        firstError = e;\n                    }\n                }\n            }\n            if (firstError === undefined) {\n                throw new Error(\"No error stored at end of fallback.\");\n            }\n            await runManager?.handleChainError(firstError);\n            throw firstError;\n        });\n        return res;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                const originalStream = await runnable.stream(input, childConfig);\n                stream = consumeAsyncIterableInContext(childConfig, originalStream);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output = output === undefined ? output : concat(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await this.schema.parseAsync(input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {z.ZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<z.ZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? fields.schema?.description;\n    if (fields.schema.constructor === z.ZodString) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({\n                input: z.string(),\n            })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n","const entityKind = Symbol.for(\"drizzle:entityKind\");\nconst hasOwnEntityKind = Symbol.for(\"drizzle:hasOwnEntityKind\");\nfunction is(value, type) {\n  if (!value || typeof value !== \"object\") {\n    return false;\n  }\n  if (value instanceof type) {\n    return true;\n  }\n  if (!Object.prototype.hasOwnProperty.call(type, entityKind)) {\n    throw new Error(\n      `Class \"${type.name ?? \"<unknown>\"}\" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`\n    );\n  }\n  let cls = Object.getPrototypeOf(value).constructor;\n  if (cls) {\n    while (cls) {\n      if (entityKind in cls && cls[entityKind] === type[entityKind]) {\n        return true;\n      }\n      cls = Object.getPrototypeOf(cls);\n    }\n  }\n  return false;\n}\nexport {\n  entityKind,\n  hasOwnEntityKind,\n  is\n};\n//# sourceMappingURL=entity.js.map","import { entityKind } from \"./entity.js\";\nclass ConsoleLogWriter {\n  static [entityKind] = \"ConsoleLogWriter\";\n  write(message) {\n    console.log(message);\n  }\n}\nclass DefaultLogger {\n  static [entityKind] = \"DefaultLogger\";\n  writer;\n  constructor(config) {\n    this.writer = config?.writer ?? new ConsoleLogWriter();\n  }\n  logQuery(query, params) {\n    const stringifiedParams = params.map((p) => {\n      try {\n        return JSON.stringify(p);\n      } catch {\n        return String(p);\n      }\n    });\n    const paramsStr = stringifiedParams.length ? ` -- params: [${stringifiedParams.join(\", \")}]` : \"\";\n    this.writer.write(`Query: ${query}${paramsStr}`);\n  }\n}\nclass NoopLogger {\n  static [entityKind] = \"NoopLogger\";\n  logQuery() {\n  }\n}\nexport {\n  ConsoleLogWriter,\n  DefaultLogger,\n  NoopLogger\n};\n//# sourceMappingURL=logger.js.map","const TableName = Symbol.for(\"drizzle:Name\");\nexport {\n  TableName\n};\n//# sourceMappingURL=table.utils.js.map","import { entityKind } from \"./entity.js\";\nimport { TableName } from \"./table.utils.js\";\nconst Schema = Symbol.for(\"drizzle:Schema\");\nconst Columns = Symbol.for(\"drizzle:Columns\");\nconst ExtraConfigColumns = Symbol.for(\"drizzle:ExtraConfigColumns\");\nconst OriginalName = Symbol.for(\"drizzle:OriginalName\");\nconst BaseName = Symbol.for(\"drizzle:BaseName\");\nconst IsAlias = Symbol.for(\"drizzle:IsAlias\");\nconst ExtraConfigBuilder = Symbol.for(\"drizzle:ExtraConfigBuilder\");\nconst IsDrizzleTable = Symbol.for(\"drizzle:IsDrizzleTable\");\nclass Table {\n  static [entityKind] = \"Table\";\n  /** @internal */\n  static Symbol = {\n    Name: TableName,\n    Schema,\n    OriginalName,\n    Columns,\n    ExtraConfigColumns,\n    BaseName,\n    IsAlias,\n    ExtraConfigBuilder\n  };\n  /**\n   * @internal\n   * Can be changed if the table is aliased.\n   */\n  [TableName];\n  /**\n   * @internal\n   * Used to store the original name of the table, before any aliasing.\n   */\n  [OriginalName];\n  /** @internal */\n  [Schema];\n  /** @internal */\n  [Columns];\n  /** @internal */\n  [ExtraConfigColumns];\n  /**\n   *  @internal\n   * Used to store the table name before the transformation via the `tableCreator` functions.\n   */\n  [BaseName];\n  /** @internal */\n  [IsAlias] = false;\n  /** @internal */\n  [IsDrizzleTable] = true;\n  /** @internal */\n  [ExtraConfigBuilder] = void 0;\n  constructor(name, schema, baseName) {\n    this[TableName] = this[OriginalName] = name;\n    this[Schema] = schema;\n    this[BaseName] = baseName;\n  }\n}\nfunction isTable(table) {\n  return typeof table === \"object\" && table !== null && IsDrizzleTable in table;\n}\nfunction getTableName(table) {\n  return table[TableName];\n}\nfunction getTableUniqueName(table) {\n  return `${table[Schema] ?? \"public\"}.${table[TableName]}`;\n}\nexport {\n  BaseName,\n  Columns,\n  ExtraConfigBuilder,\n  ExtraConfigColumns,\n  IsAlias,\n  OriginalName,\n  Schema,\n  Table,\n  getTableName,\n  getTableUniqueName,\n  isTable\n};\n//# sourceMappingURL=table.js.map","import { entityKind } from \"./entity.js\";\nclass Column {\n  constructor(table, config) {\n    this.table = table;\n    this.config = config;\n    this.name = config.name;\n    this.keyAsName = config.keyAsName;\n    this.notNull = config.notNull;\n    this.default = config.default;\n    this.defaultFn = config.defaultFn;\n    this.onUpdateFn = config.onUpdateFn;\n    this.hasDefault = config.hasDefault;\n    this.primary = config.primaryKey;\n    this.isUnique = config.isUnique;\n    this.uniqueName = config.uniqueName;\n    this.uniqueType = config.uniqueType;\n    this.dataType = config.dataType;\n    this.columnType = config.columnType;\n    this.generated = config.generated;\n    this.generatedIdentity = config.generatedIdentity;\n  }\n  static [entityKind] = \"Column\";\n  name;\n  keyAsName;\n  primary;\n  notNull;\n  default;\n  defaultFn;\n  onUpdateFn;\n  hasDefault;\n  isUnique;\n  uniqueName;\n  uniqueType;\n  dataType;\n  columnType;\n  enumValues = void 0;\n  generated = void 0;\n  generatedIdentity = void 0;\n  config;\n  mapFromDriverValue(value) {\n    return value;\n  }\n  mapToDriverValue(value) {\n    return value;\n  }\n  // ** @internal */\n  shouldDisableInsert() {\n    return this.config.generated !== void 0 && this.config.generated.type !== \"byDefault\";\n  }\n}\nexport {\n  Column\n};\n//# sourceMappingURL=column.js.map","import { entityKind } from \"./entity.js\";\nclass ColumnBuilder {\n  static [entityKind] = \"ColumnBuilder\";\n  config;\n  constructor(name, dataType, columnType) {\n    this.config = {\n      name,\n      keyAsName: name === \"\",\n      notNull: false,\n      default: void 0,\n      hasDefault: false,\n      primaryKey: false,\n      isUnique: false,\n      uniqueName: void 0,\n      uniqueType: void 0,\n      dataType,\n      columnType,\n      generated: void 0\n    };\n  }\n  /**\n   * Changes the data type of the column. Commonly used with `json` columns. Also, useful for branded types.\n   *\n   * @example\n   * ```ts\n   * const users = pgTable('users', {\n   * \tid: integer('id').$type<UserId>().primaryKey(),\n   * \tdetails: json('details').$type<UserDetails>().notNull(),\n   * });\n   * ```\n   */\n  $type() {\n    return this;\n  }\n  /**\n   * Adds a `not null` clause to the column definition.\n   *\n   * Affects the `select` model of the table - columns *without* `not null` will be nullable on select.\n   */\n  notNull() {\n    this.config.notNull = true;\n    return this;\n  }\n  /**\n   * Adds a `default <value>` clause to the column definition.\n   *\n   * Affects the `insert` model of the table - columns *with* `default` are optional on insert.\n   *\n   * If you need to set a dynamic default value, use {@link $defaultFn} instead.\n   */\n  default(value) {\n    this.config.default = value;\n    this.config.hasDefault = true;\n    return this;\n  }\n  /**\n   * Adds a dynamic default value to the column.\n   * The function will be called when the row is inserted, and the returned value will be used as the column value.\n   *\n   * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n   */\n  $defaultFn(fn) {\n    this.config.defaultFn = fn;\n    this.config.hasDefault = true;\n    return this;\n  }\n  /**\n   * Alias for {@link $defaultFn}.\n   */\n  $default = this.$defaultFn;\n  /**\n   * Adds a dynamic update value to the column.\n   * The function will be called when the row is updated, and the returned value will be used as the column value if none is provided.\n   * If no `default` (or `$defaultFn`) value is provided, the function will be called when the row is inserted as well, and the returned value will be used as the column value.\n   *\n   * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n   */\n  $onUpdateFn(fn) {\n    this.config.onUpdateFn = fn;\n    this.config.hasDefault = true;\n    return this;\n  }\n  /**\n   * Alias for {@link $onUpdateFn}.\n   */\n  $onUpdate = this.$onUpdateFn;\n  /**\n   * Adds a `primary key` clause to the column definition. This implicitly makes the column `not null`.\n   *\n   * In SQLite, `integer primary key` implicitly makes the column auto-incrementing.\n   */\n  primaryKey() {\n    this.config.primaryKey = true;\n    this.config.notNull = true;\n    return this;\n  }\n  /** @internal Sets the name of the column to the key within the table definition if a name was not given. */\n  setName(name) {\n    if (this.config.name !== \"\")\n      return;\n    this.config.name = name;\n  }\n}\nexport {\n  ColumnBuilder\n};\n//# sourceMappingURL=column-builder.js.map","import { entityKind } from \"../../entity.js\";\nimport { PgColumn, PgColumnBuilder } from \"./common.js\";\nconst isPgEnumSym = Symbol.for(\"drizzle:isPgEnum\");\nfunction isPgEnum(obj) {\n  return !!obj && typeof obj === \"function\" && isPgEnumSym in obj && obj[isPgEnumSym] === true;\n}\nclass PgEnumColumnBuilder extends PgColumnBuilder {\n  static [entityKind] = \"PgEnumColumnBuilder\";\n  constructor(name, enumInstance) {\n    super(name, \"string\", \"PgEnumColumn\");\n    this.config.enum = enumInstance;\n  }\n  /** @internal */\n  build(table) {\n    return new PgEnumColumn(\n      table,\n      this.config\n    );\n  }\n}\nclass PgEnumColumn extends PgColumn {\n  static [entityKind] = \"PgEnumColumn\";\n  enum = this.config.enum;\n  enumValues = this.config.enum.enumValues;\n  constructor(table, config) {\n    super(table, config);\n    this.enum = config.enum;\n  }\n  getSQLType() {\n    return this.enum.enumName;\n  }\n}\nfunction pgEnum(enumName, values) {\n  return pgEnumWithSchema(enumName, values, void 0);\n}\nfunction pgEnumWithSchema(enumName, values, schema) {\n  const enumInstance = Object.assign(\n    (name) => new PgEnumColumnBuilder(name ?? \"\", enumInstance),\n    {\n      enumName,\n      enumValues: values,\n      schema,\n      [isPgEnumSym]: true\n    }\n  );\n  return enumInstance;\n}\nexport {\n  PgEnumColumn,\n  PgEnumColumnBuilder,\n  isPgEnum,\n  pgEnum,\n  pgEnumWithSchema\n};\n//# sourceMappingURL=enum.js.map","import { entityKind } from \"./entity.js\";\nclass Subquery {\n  static [entityKind] = \"Subquery\";\n  constructor(sql, selection, alias, isWith = false) {\n    this._ = {\n      brand: \"Subquery\",\n      sql,\n      selectedFields: selection,\n      alias,\n      isWith\n    };\n  }\n  // getSQL(): SQL<unknown> {\n  // \treturn new SQL([this]);\n  // }\n}\nclass WithSubquery extends Subquery {\n  static [entityKind] = \"WithSubquery\";\n}\nexport {\n  Subquery,\n  WithSubquery\n};\n//# sourceMappingURL=subquery.js.map","import { iife } from \"./tracing-utils.js\";\nimport { npmVersion } from \"./version.js\";\nlet otel;\nlet rawTracer;\nconst tracer = {\n  startActiveSpan(name, fn) {\n    if (!otel) {\n      return fn();\n    }\n    if (!rawTracer) {\n      rawTracer = otel.trace.getTracer(\"drizzle-orm\", npmVersion);\n    }\n    return iife(\n      (otel2, rawTracer2) => rawTracer2.startActiveSpan(\n        name,\n        (span) => {\n          try {\n            return fn(span);\n          } catch (e) {\n            span.setStatus({\n              code: otel2.SpanStatusCode.ERROR,\n              message: e instanceof Error ? e.message : \"Unknown error\"\n              // eslint-disable-line no-instanceof/no-instanceof\n            });\n            throw e;\n          } finally {\n            span.end();\n          }\n        }\n      ),\n      otel,\n      rawTracer\n    );\n  }\n};\nexport {\n  tracer\n};\n//# sourceMappingURL=tracing.js.map","const ViewBaseConfig = Symbol.for(\"drizzle:ViewBaseConfig\");\nexport {\n  ViewBaseConfig\n};\n//# sourceMappingURL=view-common.js.map","import { entityKind, is } from \"../entity.js\";\nimport { isPgEnum } from \"../pg-core/columns/enum.js\";\nimport { Subquery } from \"../subquery.js\";\nimport { tracer } from \"../tracing.js\";\nimport { ViewBaseConfig } from \"../view-common.js\";\nimport { Column } from \"../column.js\";\nimport { IsAlias, Table } from \"../table.js\";\nclass FakePrimitiveParam {\n  static [entityKind] = \"FakePrimitiveParam\";\n}\nfunction isSQLWrapper(value) {\n  return value !== null && value !== void 0 && typeof value.getSQL === \"function\";\n}\nfunction mergeQueries(queries) {\n  const result = { sql: \"\", params: [] };\n  for (const query of queries) {\n    result.sql += query.sql;\n    result.params.push(...query.params);\n    if (query.typings?.length) {\n      if (!result.typings) {\n        result.typings = [];\n      }\n      result.typings.push(...query.typings);\n    }\n  }\n  return result;\n}\nclass StringChunk {\n  static [entityKind] = \"StringChunk\";\n  value;\n  constructor(value) {\n    this.value = Array.isArray(value) ? value : [value];\n  }\n  getSQL() {\n    return new SQL([this]);\n  }\n}\nclass SQL {\n  constructor(queryChunks) {\n    this.queryChunks = queryChunks;\n  }\n  static [entityKind] = \"SQL\";\n  /** @internal */\n  decoder = noopDecoder;\n  shouldInlineParams = false;\n  append(query) {\n    this.queryChunks.push(...query.queryChunks);\n    return this;\n  }\n  toQuery(config) {\n    return tracer.startActiveSpan(\"drizzle.buildSQL\", (span) => {\n      const query = this.buildQueryFromSourceParams(this.queryChunks, config);\n      span?.setAttributes({\n        \"drizzle.query.text\": query.sql,\n        \"drizzle.query.params\": JSON.stringify(query.params)\n      });\n      return query;\n    });\n  }\n  buildQueryFromSourceParams(chunks, _config) {\n    const config = Object.assign({}, _config, {\n      inlineParams: _config.inlineParams || this.shouldInlineParams,\n      paramStartIndex: _config.paramStartIndex || { value: 0 }\n    });\n    const {\n      casing,\n      escapeName,\n      escapeParam,\n      prepareTyping,\n      inlineParams,\n      paramStartIndex\n    } = config;\n    return mergeQueries(chunks.map((chunk) => {\n      if (is(chunk, StringChunk)) {\n        return { sql: chunk.value.join(\"\"), params: [] };\n      }\n      if (is(chunk, Name)) {\n        return { sql: escapeName(chunk.value), params: [] };\n      }\n      if (chunk === void 0) {\n        return { sql: \"\", params: [] };\n      }\n      if (Array.isArray(chunk)) {\n        const result = [new StringChunk(\"(\")];\n        for (const [i, p] of chunk.entries()) {\n          result.push(p);\n          if (i < chunk.length - 1) {\n            result.push(new StringChunk(\", \"));\n          }\n        }\n        result.push(new StringChunk(\")\"));\n        return this.buildQueryFromSourceParams(result, config);\n      }\n      if (is(chunk, SQL)) {\n        return this.buildQueryFromSourceParams(chunk.queryChunks, {\n          ...config,\n          inlineParams: inlineParams || chunk.shouldInlineParams\n        });\n      }\n      if (is(chunk, Table)) {\n        const schemaName = chunk[Table.Symbol.Schema];\n        const tableName = chunk[Table.Symbol.Name];\n        return {\n          sql: schemaName === void 0 ? escapeName(tableName) : escapeName(schemaName) + \".\" + escapeName(tableName),\n          params: []\n        };\n      }\n      if (is(chunk, Column)) {\n        const columnName = casing.getColumnCasing(chunk);\n        if (_config.invokeSource === \"indexes\") {\n          return { sql: escapeName(columnName), params: [] };\n        }\n        const schemaName = chunk.table[Table.Symbol.Schema];\n        return {\n          sql: chunk.table[IsAlias] || schemaName === void 0 ? escapeName(chunk.table[Table.Symbol.Name]) + \".\" + escapeName(columnName) : escapeName(schemaName) + \".\" + escapeName(chunk.table[Table.Symbol.Name]) + \".\" + escapeName(columnName),\n          params: []\n        };\n      }\n      if (is(chunk, View)) {\n        const schemaName = chunk[ViewBaseConfig].schema;\n        const viewName = chunk[ViewBaseConfig].name;\n        return {\n          sql: schemaName === void 0 ? escapeName(viewName) : escapeName(schemaName) + \".\" + escapeName(viewName),\n          params: []\n        };\n      }\n      if (is(chunk, Param)) {\n        if (is(chunk.value, Placeholder)) {\n          return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: [\"none\"] };\n        }\n        const mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);\n        if (is(mappedValue, SQL)) {\n          return this.buildQueryFromSourceParams([mappedValue], config);\n        }\n        if (inlineParams) {\n          return { sql: this.mapInlineParam(mappedValue, config), params: [] };\n        }\n        let typings = [\"none\"];\n        if (prepareTyping) {\n          typings = [prepareTyping(chunk.encoder)];\n        }\n        return { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };\n      }\n      if (is(chunk, Placeholder)) {\n        return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: [\"none\"] };\n      }\n      if (is(chunk, SQL.Aliased) && chunk.fieldAlias !== void 0) {\n        return { sql: escapeName(chunk.fieldAlias), params: [] };\n      }\n      if (is(chunk, Subquery)) {\n        if (chunk._.isWith) {\n          return { sql: escapeName(chunk._.alias), params: [] };\n        }\n        return this.buildQueryFromSourceParams([\n          new StringChunk(\"(\"),\n          chunk._.sql,\n          new StringChunk(\") \"),\n          new Name(chunk._.alias)\n        ], config);\n      }\n      if (isPgEnum(chunk)) {\n        if (chunk.schema) {\n          return { sql: escapeName(chunk.schema) + \".\" + escapeName(chunk.enumName), params: [] };\n        }\n        return { sql: escapeName(chunk.enumName), params: [] };\n      }\n      if (isSQLWrapper(chunk)) {\n        if (chunk.shouldOmitSQLParens?.()) {\n          return this.buildQueryFromSourceParams([chunk.getSQL()], config);\n        }\n        return this.buildQueryFromSourceParams([\n          new StringChunk(\"(\"),\n          chunk.getSQL(),\n          new StringChunk(\")\")\n        ], config);\n      }\n      if (inlineParams) {\n        return { sql: this.mapInlineParam(chunk, config), params: [] };\n      }\n      return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: [\"none\"] };\n    }));\n  }\n  mapInlineParam(chunk, { escapeString }) {\n    if (chunk === null) {\n      return \"null\";\n    }\n    if (typeof chunk === \"number\" || typeof chunk === \"boolean\") {\n      return chunk.toString();\n    }\n    if (typeof chunk === \"string\") {\n      return escapeString(chunk);\n    }\n    if (typeof chunk === \"object\") {\n      const mappedValueAsString = chunk.toString();\n      if (mappedValueAsString === \"[object Object]\") {\n        return escapeString(JSON.stringify(chunk));\n      }\n      return escapeString(mappedValueAsString);\n    }\n    throw new Error(\"Unexpected param value: \" + chunk);\n  }\n  getSQL() {\n    return this;\n  }\n  as(alias) {\n    if (alias === void 0) {\n      return this;\n    }\n    return new SQL.Aliased(this, alias);\n  }\n  mapWith(decoder) {\n    this.decoder = typeof decoder === \"function\" ? { mapFromDriverValue: decoder } : decoder;\n    return this;\n  }\n  inlineParams() {\n    this.shouldInlineParams = true;\n    return this;\n  }\n  /**\n   * This method is used to conditionally include a part of the query.\n   *\n   * @param condition - Condition to check\n   * @returns itself if the condition is `true`, otherwise `undefined`\n   */\n  if(condition) {\n    return condition ? this : void 0;\n  }\n}\nclass Name {\n  constructor(value) {\n    this.value = value;\n  }\n  static [entityKind] = \"Name\";\n  brand;\n  getSQL() {\n    return new SQL([this]);\n  }\n}\nfunction name(value) {\n  return new Name(value);\n}\nfunction isDriverValueEncoder(value) {\n  return typeof value === \"object\" && value !== null && \"mapToDriverValue\" in value && typeof value.mapToDriverValue === \"function\";\n}\nconst noopDecoder = {\n  mapFromDriverValue: (value) => value\n};\nconst noopEncoder = {\n  mapToDriverValue: (value) => value\n};\nconst noopMapper = {\n  ...noopDecoder,\n  ...noopEncoder\n};\nclass Param {\n  /**\n   * @param value - Parameter value\n   * @param encoder - Encoder to convert the value to a driver parameter\n   */\n  constructor(value, encoder = noopEncoder) {\n    this.value = value;\n    this.encoder = encoder;\n  }\n  static [entityKind] = \"Param\";\n  brand;\n  getSQL() {\n    return new SQL([this]);\n  }\n}\nfunction param(value, encoder) {\n  return new Param(value, encoder);\n}\nfunction sql(strings, ...params) {\n  const queryChunks = [];\n  if (params.length > 0 || strings.length > 0 && strings[0] !== \"\") {\n    queryChunks.push(new StringChunk(strings[0]));\n  }\n  for (const [paramIndex, param2] of params.entries()) {\n    queryChunks.push(param2, new StringChunk(strings[paramIndex + 1]));\n  }\n  return new SQL(queryChunks);\n}\n((sql2) => {\n  function empty() {\n    return new SQL([]);\n  }\n  sql2.empty = empty;\n  function fromList(list) {\n    return new SQL(list);\n  }\n  sql2.fromList = fromList;\n  function raw(str) {\n    return new SQL([new StringChunk(str)]);\n  }\n  sql2.raw = raw;\n  function join(chunks, separator) {\n    const result = [];\n    for (const [i, chunk] of chunks.entries()) {\n      if (i > 0 && separator !== void 0) {\n        result.push(separator);\n      }\n      result.push(chunk);\n    }\n    return new SQL(result);\n  }\n  sql2.join = join;\n  function identifier(value) {\n    return new Name(value);\n  }\n  sql2.identifier = identifier;\n  function placeholder2(name2) {\n    return new Placeholder(name2);\n  }\n  sql2.placeholder = placeholder2;\n  function param2(value, encoder) {\n    return new Param(value, encoder);\n  }\n  sql2.param = param2;\n})(sql || (sql = {}));\n((SQL2) => {\n  class Aliased {\n    constructor(sql2, fieldAlias) {\n      this.sql = sql2;\n      this.fieldAlias = fieldAlias;\n    }\n    static [entityKind] = \"SQL.Aliased\";\n    /** @internal */\n    isSelectionField = false;\n    getSQL() {\n      return this.sql;\n    }\n    /** @internal */\n    clone() {\n      return new Aliased(this.sql, this.fieldAlias);\n    }\n  }\n  SQL2.Aliased = Aliased;\n})(SQL || (SQL = {}));\nclass Placeholder {\n  constructor(name2) {\n    this.name = name2;\n  }\n  static [entityKind] = \"Placeholder\";\n  getSQL() {\n    return new SQL([this]);\n  }\n}\nfunction placeholder(name2) {\n  return new Placeholder(name2);\n}\nfunction fillPlaceholders(params, values) {\n  return params.map((p) => {\n    if (is(p, Placeholder)) {\n      if (!(p.name in values)) {\n        throw new Error(`No value for placeholder \"${p.name}\" was provided`);\n      }\n      return values[p.name];\n    }\n    if (is(p, Param) && is(p.value, Placeholder)) {\n      if (!(p.value.name in values)) {\n        throw new Error(`No value for placeholder \"${p.value.name}\" was provided`);\n      }\n      return p.encoder.mapToDriverValue(values[p.value.name]);\n    }\n    return p;\n  });\n}\nconst IsDrizzleView = Symbol.for(\"drizzle:IsDrizzleView\");\nclass View {\n  static [entityKind] = \"View\";\n  /** @internal */\n  [ViewBaseConfig];\n  /** @internal */\n  [IsDrizzleView] = true;\n  constructor({ name: name2, schema, selectedFields, query }) {\n    this[ViewBaseConfig] = {\n      name: name2,\n      originalName: name2,\n      schema,\n      selectedFields,\n      query,\n      isExisting: !query,\n      isAlias: false\n    };\n  }\n  getSQL() {\n    return new SQL([this]);\n  }\n}\nfunction isView(view) {\n  return typeof view === \"object\" && view !== null && IsDrizzleView in view;\n}\nColumn.prototype.getSQL = function() {\n  return new SQL([this]);\n};\nTable.prototype.getSQL = function() {\n  return new SQL([this]);\n};\nSubquery.prototype.getSQL = function() {\n  return new SQL([this]);\n};\nexport {\n  FakePrimitiveParam,\n  Name,\n  Param,\n  Placeholder,\n  SQL,\n  StringChunk,\n  View,\n  fillPlaceholders,\n  isDriverValueEncoder,\n  isSQLWrapper,\n  isView,\n  name,\n  noopDecoder,\n  noopEncoder,\n  noopMapper,\n  param,\n  placeholder,\n  sql\n};\n//# sourceMappingURL=sql.js.map","import { Column } from \"./column.js\";\nimport { is } from \"./entity.js\";\nimport { Param, SQL, View } from \"./sql/sql.js\";\nimport { Subquery } from \"./subquery.js\";\nimport { getTableName, Table } from \"./table.js\";\nimport { ViewBaseConfig } from \"./view-common.js\";\nfunction mapResultRow(columns, row, joinsNotNullableMap) {\n  const nullifyMap = {};\n  const result = columns.reduce(\n    (result2, { path, field }, columnIndex) => {\n      let decoder;\n      if (is(field, Column)) {\n        decoder = field;\n      } else if (is(field, SQL)) {\n        decoder = field.decoder;\n      } else {\n        decoder = field.sql.decoder;\n      }\n      let node = result2;\n      for (const [pathChunkIndex, pathChunk] of path.entries()) {\n        if (pathChunkIndex < path.length - 1) {\n          if (!(pathChunk in node)) {\n            node[pathChunk] = {};\n          }\n          node = node[pathChunk];\n        } else {\n          const rawValue = row[columnIndex];\n          const value = node[pathChunk] = rawValue === null ? null : decoder.mapFromDriverValue(rawValue);\n          if (joinsNotNullableMap && is(field, Column) && path.length === 2) {\n            const objectName = path[0];\n            if (!(objectName in nullifyMap)) {\n              nullifyMap[objectName] = value === null ? getTableName(field.table) : false;\n            } else if (typeof nullifyMap[objectName] === \"string\" && nullifyMap[objectName] !== getTableName(field.table)) {\n              nullifyMap[objectName] = false;\n            }\n          }\n        }\n      }\n      return result2;\n    },\n    {}\n  );\n  if (joinsNotNullableMap && Object.keys(nullifyMap).length > 0) {\n    for (const [objectName, tableName] of Object.entries(nullifyMap)) {\n      if (typeof tableName === \"string\" && !joinsNotNullableMap[tableName]) {\n        result[objectName] = null;\n      }\n    }\n  }\n  return result;\n}\nfunction orderSelectedFields(fields, pathPrefix) {\n  return Object.entries(fields).reduce((result, [name, field]) => {\n    if (typeof name !== \"string\") {\n      return result;\n    }\n    const newPath = pathPrefix ? [...pathPrefix, name] : [name];\n    if (is(field, Column) || is(field, SQL) || is(field, SQL.Aliased)) {\n      result.push({ path: newPath, field });\n    } else if (is(field, Table)) {\n      result.push(...orderSelectedFields(field[Table.Symbol.Columns], newPath));\n    } else {\n      result.push(...orderSelectedFields(field, newPath));\n    }\n    return result;\n  }, []);\n}\nfunction haveSameKeys(left, right) {\n  const leftKeys = Object.keys(left);\n  const rightKeys = Object.keys(right);\n  if (leftKeys.length !== rightKeys.length) {\n    return false;\n  }\n  for (const [index, key] of leftKeys.entries()) {\n    if (key !== rightKeys[index]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction mapUpdateSet(table, values) {\n  const entries = Object.entries(values).filter(([, value]) => value !== void 0).map(([key, value]) => {\n    if (is(value, SQL) || is(value, Column)) {\n      return [key, value];\n    } else {\n      return [key, new Param(value, table[Table.Symbol.Columns][key])];\n    }\n  });\n  if (entries.length === 0) {\n    throw new Error(\"No values to set\");\n  }\n  return Object.fromEntries(entries);\n}\nfunction applyMixins(baseClass, extendedClasses) {\n  for (const extendedClass of extendedClasses) {\n    for (const name of Object.getOwnPropertyNames(extendedClass.prototype)) {\n      if (name === \"constructor\")\n        continue;\n      Object.defineProperty(\n        baseClass.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(extendedClass.prototype, name) || /* @__PURE__ */ Object.create(null)\n      );\n    }\n  }\n}\nfunction getTableColumns(table) {\n  return table[Table.Symbol.Columns];\n}\nfunction getViewSelectedFields(view) {\n  return view[ViewBaseConfig].selectedFields;\n}\nfunction getTableLikeName(table) {\n  return is(table, Subquery) ? table._.alias : is(table, View) ? table[ViewBaseConfig].name : is(table, SQL) ? void 0 : table[Table.Symbol.IsAlias] ? table[Table.Symbol.Name] : table[Table.Symbol.BaseName];\n}\nfunction getColumnNameAndConfig(a, b) {\n  return {\n    name: typeof a === \"string\" && a.length > 0 ? a : \"\",\n    config: typeof a === \"object\" ? a : b\n  };\n}\nconst _ = {};\nconst __ = {};\nfunction isConfig(data) {\n  if (typeof data !== \"object\" || data === null)\n    return false;\n  if (data.constructor.name !== \"Object\")\n    return false;\n  if (\"logger\" in data) {\n    const type = typeof data[\"logger\"];\n    if (type !== \"boolean\" && (type !== \"object\" || typeof data[\"logger\"][\"logQuery\"] !== \"function\") && type !== \"undefined\")\n      return false;\n    return true;\n  }\n  if (\"schema\" in data) {\n    const type = typeof data[\"logger\"];\n    if (type !== \"object\" && type !== \"undefined\")\n      return false;\n    return true;\n  }\n  if (\"casing\" in data) {\n    const type = typeof data[\"logger\"];\n    if (type !== \"string\" && type !== \"undefined\")\n      return false;\n    return true;\n  }\n  if (\"mode\" in data) {\n    if (data[\"mode\"] !== \"default\" || data[\"mode\"] !== \"planetscale\" || data[\"mode\"] !== void 0)\n      return false;\n    return true;\n  }\n  if (\"connection\" in data) {\n    const type = typeof data[\"connection\"];\n    if (type !== \"string\" && type !== \"object\" && type !== \"undefined\")\n      return false;\n    return true;\n  }\n  if (\"client\" in data) {\n    const type = typeof data[\"client\"];\n    if (type !== \"object\" && type !== \"function\" && type !== \"undefined\")\n      return false;\n    return true;\n  }\n  if (Object.keys(data).length === 0)\n    return true;\n  return false;\n}\nexport {\n  applyMixins,\n  getColumnNameAndConfig,\n  getTableColumns,\n  getTableLikeName,\n  getViewSelectedFields,\n  haveSameKeys,\n  isConfig,\n  mapResultRow,\n  mapUpdateSet,\n  orderSelectedFields\n};\n//# sourceMappingURL=utils.js.map","import { entityKind } from \"../entity.js\";\nimport { Table } from \"../table.js\";\nimport { getPgColumnBuilders } from \"./columns/all.js\";\nconst InlineForeignKeys = Symbol.for(\"drizzle:PgInlineForeignKeys\");\nconst EnableRLS = Symbol.for(\"drizzle:EnableRLS\");\nclass PgTable extends Table {\n  static [entityKind] = \"PgTable\";\n  /** @internal */\n  static Symbol = Object.assign({}, Table.Symbol, {\n    InlineForeignKeys,\n    EnableRLS\n  });\n  /**@internal */\n  [InlineForeignKeys] = [];\n  /** @internal */\n  [EnableRLS] = false;\n  /** @internal */\n  [Table.Symbol.ExtraConfigBuilder] = void 0;\n}\nfunction pgTableWithSchema(name, columns, extraConfig, schema, baseName = name) {\n  const rawTable = new PgTable(name, schema, baseName);\n  const parsedColumns = typeof columns === \"function\" ? columns(getPgColumnBuilders()) : columns;\n  const builtColumns = Object.fromEntries(\n    Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {\n      const colBuilder = colBuilderBase;\n      colBuilder.setName(name2);\n      const column = colBuilder.build(rawTable);\n      rawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n      return [name2, column];\n    })\n  );\n  const builtColumnsForExtraConfig = Object.fromEntries(\n    Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {\n      const colBuilder = colBuilderBase;\n      colBuilder.setName(name2);\n      const column = colBuilder.buildExtraConfigColumn(rawTable);\n      return [name2, column];\n    })\n  );\n  const table = Object.assign(rawTable, builtColumns);\n  table[Table.Symbol.Columns] = builtColumns;\n  table[Table.Symbol.ExtraConfigColumns] = builtColumnsForExtraConfig;\n  if (extraConfig) {\n    table[PgTable.Symbol.ExtraConfigBuilder] = extraConfig;\n  }\n  return Object.assign(table, {\n    enableRLS: () => {\n      table[PgTable.Symbol.EnableRLS] = true;\n      return table;\n    }\n  });\n}\nconst pgTable = (name, columns, extraConfig) => {\n  return pgTableWithSchema(name, columns, extraConfig, void 0);\n};\nfunction pgTableCreator(customizeTableName) {\n  return (name, columns, extraConfig) => {\n    return pgTableWithSchema(customizeTableName(name), columns, extraConfig, void 0, name);\n  };\n}\nexport {\n  EnableRLS,\n  InlineForeignKeys,\n  PgTable,\n  pgTable,\n  pgTableCreator,\n  pgTableWithSchema\n};\n//# sourceMappingURL=table.js.map","import { entityKind } from \"../entity.js\";\nimport { PgTable } from \"./table.js\";\nfunction primaryKey(...config) {\n  if (config[0].columns) {\n    return new PrimaryKeyBuilder(config[0].columns, config[0].name);\n  }\n  return new PrimaryKeyBuilder(config);\n}\nclass PrimaryKeyBuilder {\n  static [entityKind] = \"PgPrimaryKeyBuilder\";\n  /** @internal */\n  columns;\n  /** @internal */\n  name;\n  constructor(columns, name) {\n    this.columns = columns;\n    this.name = name;\n  }\n  /** @internal */\n  build(table) {\n    return new PrimaryKey(table, this.columns, this.name);\n  }\n}\nclass PrimaryKey {\n  constructor(table, columns, name) {\n    this.table = table;\n    this.columns = columns;\n    this.name = name;\n  }\n  static [entityKind] = \"PgPrimaryKey\";\n  columns;\n  name;\n  getName() {\n    return this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column) => column.name).join(\"_\")}_pk`;\n  }\n}\nexport {\n  PrimaryKey,\n  PrimaryKeyBuilder,\n  primaryKey\n};\n//# sourceMappingURL=primary-keys.js.map","import { Column } from \"../../column.js\";\nimport { is } from \"../../entity.js\";\nimport { Table } from \"../../table.js\";\nimport {\n  isDriverValueEncoder,\n  isSQLWrapper,\n  Param,\n  Placeholder,\n  SQL,\n  sql,\n  StringChunk,\n  View\n} from \"../sql.js\";\nfunction bindIfParam(value, column) {\n  if (isDriverValueEncoder(column) && !isSQLWrapper(value) && !is(value, Param) && !is(value, Placeholder) && !is(value, Column) && !is(value, Table) && !is(value, View)) {\n    return new Param(value, column);\n  }\n  return value;\n}\nconst eq = (left, right) => {\n  return sql`${left} = ${bindIfParam(right, left)}`;\n};\nconst ne = (left, right) => {\n  return sql`${left} <> ${bindIfParam(right, left)}`;\n};\nfunction and(...unfilteredConditions) {\n  const conditions = unfilteredConditions.filter(\n    (c) => c !== void 0\n  );\n  if (conditions.length === 0) {\n    return void 0;\n  }\n  if (conditions.length === 1) {\n    return new SQL(conditions);\n  }\n  return new SQL([\n    new StringChunk(\"(\"),\n    sql.join(conditions, new StringChunk(\" and \")),\n    new StringChunk(\")\")\n  ]);\n}\nfunction or(...unfilteredConditions) {\n  const conditions = unfilteredConditions.filter(\n    (c) => c !== void 0\n  );\n  if (conditions.length === 0) {\n    return void 0;\n  }\n  if (conditions.length === 1) {\n    return new SQL(conditions);\n  }\n  return new SQL([\n    new StringChunk(\"(\"),\n    sql.join(conditions, new StringChunk(\" or \")),\n    new StringChunk(\")\")\n  ]);\n}\nfunction not(condition) {\n  return sql`not ${condition}`;\n}\nconst gt = (left, right) => {\n  return sql`${left} > ${bindIfParam(right, left)}`;\n};\nconst gte = (left, right) => {\n  return sql`${left} >= ${bindIfParam(right, left)}`;\n};\nconst lt = (left, right) => {\n  return sql`${left} < ${bindIfParam(right, left)}`;\n};\nconst lte = (left, right) => {\n  return sql`${left} <= ${bindIfParam(right, left)}`;\n};\nfunction inArray(column, values) {\n  if (Array.isArray(values)) {\n    if (values.length === 0) {\n      return sql`false`;\n    }\n    return sql`${column} in ${values.map((v) => bindIfParam(v, column))}`;\n  }\n  return sql`${column} in ${bindIfParam(values, column)}`;\n}\nfunction notInArray(column, values) {\n  if (Array.isArray(values)) {\n    if (values.length === 0) {\n      return sql`true`;\n    }\n    return sql`${column} not in ${values.map((v) => bindIfParam(v, column))}`;\n  }\n  return sql`${column} not in ${bindIfParam(values, column)}`;\n}\nfunction isNull(value) {\n  return sql`${value} is null`;\n}\nfunction isNotNull(value) {\n  return sql`${value} is not null`;\n}\nfunction exists(subquery) {\n  return sql`exists ${subquery}`;\n}\nfunction notExists(subquery) {\n  return sql`not exists ${subquery}`;\n}\nfunction between(column, min, max) {\n  return sql`${column} between ${bindIfParam(min, column)} and ${bindIfParam(\n    max,\n    column\n  )}`;\n}\nfunction notBetween(column, min, max) {\n  return sql`${column} not between ${bindIfParam(\n    min,\n    column\n  )} and ${bindIfParam(max, column)}`;\n}\nfunction like(column, value) {\n  return sql`${column} like ${value}`;\n}\nfunction notLike(column, value) {\n  return sql`${column} not like ${value}`;\n}\nfunction ilike(column, value) {\n  return sql`${column} ilike ${value}`;\n}\nfunction notIlike(column, value) {\n  return sql`${column} not ilike ${value}`;\n}\nfunction arrayContains(column, values) {\n  if (Array.isArray(values)) {\n    if (values.length === 0) {\n      throw new Error(\"arrayContains requires at least one value\");\n    }\n    const array = sql`${bindIfParam(values, column)}`;\n    return sql`${column} @> ${array}`;\n  }\n  return sql`${column} @> ${bindIfParam(values, column)}`;\n}\nfunction arrayContained(column, values) {\n  if (Array.isArray(values)) {\n    if (values.length === 0) {\n      throw new Error(\"arrayContained requires at least one value\");\n    }\n    const array = sql`${bindIfParam(values, column)}`;\n    return sql`${column} <@ ${array}`;\n  }\n  return sql`${column} <@ ${bindIfParam(values, column)}`;\n}\nfunction arrayOverlaps(column, values) {\n  if (Array.isArray(values)) {\n    if (values.length === 0) {\n      throw new Error(\"arrayOverlaps requires at least one value\");\n    }\n    const array = sql`${bindIfParam(values, column)}`;\n    return sql`${column} && ${array}`;\n  }\n  return sql`${column} && ${bindIfParam(values, column)}`;\n}\nexport {\n  and,\n  arrayContained,\n  arrayContains,\n  arrayOverlaps,\n  between,\n  bindIfParam,\n  eq,\n  exists,\n  gt,\n  gte,\n  ilike,\n  inArray,\n  isNotNull,\n  isNull,\n  like,\n  lt,\n  lte,\n  ne,\n  not,\n  notBetween,\n  notExists,\n  notIlike,\n  notInArray,\n  notLike,\n  or\n};\n//# sourceMappingURL=conditions.js.map","import { sql } from \"../sql.js\";\nfunction asc(column) {\n  return sql`${column} asc`;\n}\nfunction desc(column) {\n  return sql`${column} desc`;\n}\nexport {\n  asc,\n  desc\n};\n//# sourceMappingURL=select.js.map","import { getTableUniqueName, Table } from \"./table.js\";\nimport { Column } from \"./column.js\";\nimport { entityKind, is } from \"./entity.js\";\nimport { PrimaryKeyBuilder } from \"./pg-core/primary-keys.js\";\nimport {\n  and,\n  asc,\n  between,\n  desc,\n  eq,\n  exists,\n  gt,\n  gte,\n  ilike,\n  inArray,\n  isNotNull,\n  isNull,\n  like,\n  lt,\n  lte,\n  ne,\n  not,\n  notBetween,\n  notExists,\n  notIlike,\n  notInArray,\n  notLike,\n  or\n} from \"./sql/expressions/index.js\";\nimport { SQL, sql } from \"./sql/sql.js\";\nclass Relation {\n  constructor(sourceTable, referencedTable, relationName) {\n    this.sourceTable = sourceTable;\n    this.referencedTable = referencedTable;\n    this.relationName = relationName;\n    this.referencedTableName = referencedTable[Table.Symbol.Name];\n  }\n  static [entityKind] = \"Relation\";\n  referencedTableName;\n  fieldName;\n}\nclass Relations {\n  constructor(table, config) {\n    this.table = table;\n    this.config = config;\n  }\n  static [entityKind] = \"Relations\";\n}\nclass One extends Relation {\n  constructor(sourceTable, referencedTable, config, isNullable) {\n    super(sourceTable, referencedTable, config?.relationName);\n    this.config = config;\n    this.isNullable = isNullable;\n  }\n  static [entityKind] = \"One\";\n  withFieldName(fieldName) {\n    const relation = new One(\n      this.sourceTable,\n      this.referencedTable,\n      this.config,\n      this.isNullable\n    );\n    relation.fieldName = fieldName;\n    return relation;\n  }\n}\nclass Many extends Relation {\n  constructor(sourceTable, referencedTable, config) {\n    super(sourceTable, referencedTable, config?.relationName);\n    this.config = config;\n  }\n  static [entityKind] = \"Many\";\n  withFieldName(fieldName) {\n    const relation = new Many(\n      this.sourceTable,\n      this.referencedTable,\n      this.config\n    );\n    relation.fieldName = fieldName;\n    return relation;\n  }\n}\nfunction getOperators() {\n  return {\n    and,\n    between,\n    eq,\n    exists,\n    gt,\n    gte,\n    ilike,\n    inArray,\n    isNull,\n    isNotNull,\n    like,\n    lt,\n    lte,\n    ne,\n    not,\n    notBetween,\n    notExists,\n    notLike,\n    notIlike,\n    notInArray,\n    or,\n    sql\n  };\n}\nfunction getOrderByOperators() {\n  return {\n    sql,\n    asc,\n    desc\n  };\n}\nfunction extractTablesRelationalConfig(schema, configHelpers) {\n  if (Object.keys(schema).length === 1 && \"default\" in schema && !is(schema[\"default\"], Table)) {\n    schema = schema[\"default\"];\n  }\n  const tableNamesMap = {};\n  const relationsBuffer = {};\n  const tablesConfig = {};\n  for (const [key, value] of Object.entries(schema)) {\n    if (is(value, Table)) {\n      const dbName = getTableUniqueName(value);\n      const bufferedRelations = relationsBuffer[dbName];\n      tableNamesMap[dbName] = key;\n      tablesConfig[key] = {\n        tsName: key,\n        dbName: value[Table.Symbol.Name],\n        schema: value[Table.Symbol.Schema],\n        columns: value[Table.Symbol.Columns],\n        relations: bufferedRelations?.relations ?? {},\n        primaryKey: bufferedRelations?.primaryKey ?? []\n      };\n      for (const column of Object.values(\n        value[Table.Symbol.Columns]\n      )) {\n        if (column.primary) {\n          tablesConfig[key].primaryKey.push(column);\n        }\n      }\n      const extraConfig = value[Table.Symbol.ExtraConfigBuilder]?.(value[Table.Symbol.ExtraConfigColumns]);\n      if (extraConfig) {\n        for (const configEntry of Object.values(extraConfig)) {\n          if (is(configEntry, PrimaryKeyBuilder)) {\n            tablesConfig[key].primaryKey.push(...configEntry.columns);\n          }\n        }\n      }\n    } else if (is(value, Relations)) {\n      const dbName = getTableUniqueName(value.table);\n      const tableName = tableNamesMap[dbName];\n      const relations2 = value.config(\n        configHelpers(value.table)\n      );\n      let primaryKey;\n      for (const [relationName, relation] of Object.entries(relations2)) {\n        if (tableName) {\n          const tableConfig = tablesConfig[tableName];\n          tableConfig.relations[relationName] = relation;\n          if (primaryKey) {\n            tableConfig.primaryKey.push(...primaryKey);\n          }\n        } else {\n          if (!(dbName in relationsBuffer)) {\n            relationsBuffer[dbName] = {\n              relations: {},\n              primaryKey\n            };\n          }\n          relationsBuffer[dbName].relations[relationName] = relation;\n        }\n      }\n    }\n  }\n  return { tables: tablesConfig, tableNamesMap };\n}\nfunction relations(table, relations2) {\n  return new Relations(\n    table,\n    (helpers) => Object.fromEntries(\n      Object.entries(relations2(helpers)).map(([key, value]) => [\n        key,\n        value.withFieldName(key)\n      ])\n    )\n  );\n}\nfunction createOne(sourceTable) {\n  return function one(table, config) {\n    return new One(\n      sourceTable,\n      table,\n      config,\n      config?.fields.reduce((res, f) => res && f.notNull, true) ?? false\n    );\n  };\n}\nfunction createMany(sourceTable) {\n  return function many(referencedTable, config) {\n    return new Many(sourceTable, referencedTable, config);\n  };\n}\nfunction normalizeRelation(schema, tableNamesMap, relation) {\n  if (is(relation, One) && relation.config) {\n    return {\n      fields: relation.config.fields,\n      references: relation.config.references\n    };\n  }\n  const referencedTableTsName = tableNamesMap[getTableUniqueName(relation.referencedTable)];\n  if (!referencedTableTsName) {\n    throw new Error(\n      `Table \"${relation.referencedTable[Table.Symbol.Name]}\" not found in schema`\n    );\n  }\n  const referencedTableConfig = schema[referencedTableTsName];\n  if (!referencedTableConfig) {\n    throw new Error(`Table \"${referencedTableTsName}\" not found in schema`);\n  }\n  const sourceTable = relation.sourceTable;\n  const sourceTableTsName = tableNamesMap[getTableUniqueName(sourceTable)];\n  if (!sourceTableTsName) {\n    throw new Error(\n      `Table \"${sourceTable[Table.Symbol.Name]}\" not found in schema`\n    );\n  }\n  const reverseRelations = [];\n  for (const referencedTableRelation of Object.values(\n    referencedTableConfig.relations\n  )) {\n    if (relation.relationName && relation !== referencedTableRelation && referencedTableRelation.relationName === relation.relationName || !relation.relationName && referencedTableRelation.referencedTable === relation.sourceTable) {\n      reverseRelations.push(referencedTableRelation);\n    }\n  }\n  if (reverseRelations.length > 1) {\n    throw relation.relationName ? new Error(\n      `There are multiple relations with name \"${relation.relationName}\" in table \"${referencedTableTsName}\"`\n    ) : new Error(\n      `There are multiple relations between \"${referencedTableTsName}\" and \"${relation.sourceTable[Table.Symbol.Name]}\". Please specify relation name`\n    );\n  }\n  if (reverseRelations[0] && is(reverseRelations[0], One) && reverseRelations[0].config) {\n    return {\n      fields: reverseRelations[0].config.references,\n      references: reverseRelations[0].config.fields\n    };\n  }\n  throw new Error(\n    `There is not enough information to infer relation \"${sourceTableTsName}.${relation.fieldName}\"`\n  );\n}\nfunction createTableRelationsHelpers(sourceTable) {\n  return {\n    one: createOne(sourceTable),\n    many: createMany(sourceTable)\n  };\n}\nfunction mapRelationalRow(tablesConfig, tableConfig, row, buildQueryResultSelection, mapColumnValue = (value) => value) {\n  const result = {};\n  for (const [\n    selectionItemIndex,\n    selectionItem\n  ] of buildQueryResultSelection.entries()) {\n    if (selectionItem.isJson) {\n      const relation = tableConfig.relations[selectionItem.tsKey];\n      const rawSubRows = row[selectionItemIndex];\n      const subRows = typeof rawSubRows === \"string\" ? JSON.parse(rawSubRows) : rawSubRows;\n      result[selectionItem.tsKey] = is(relation, One) ? subRows && mapRelationalRow(\n        tablesConfig,\n        tablesConfig[selectionItem.relationTableTsKey],\n        subRows,\n        selectionItem.selection,\n        mapColumnValue\n      ) : subRows.map(\n        (subRow) => mapRelationalRow(\n          tablesConfig,\n          tablesConfig[selectionItem.relationTableTsKey],\n          subRow,\n          selectionItem.selection,\n          mapColumnValue\n        )\n      );\n    } else {\n      const value = mapColumnValue(row[selectionItemIndex]);\n      const field = selectionItem.field;\n      let decoder;\n      if (is(field, Column)) {\n        decoder = field;\n      } else if (is(field, SQL)) {\n        decoder = field.decoder;\n      } else {\n        decoder = field.sql.decoder;\n      }\n      result[selectionItem.tsKey] = value === null ? null : decoder.mapFromDriverValue(value);\n    }\n  }\n  return result;\n}\nexport {\n  Many,\n  One,\n  Relation,\n  Relations,\n  createMany,\n  createOne,\n  createTableRelationsHelpers,\n  extractTablesRelationalConfig,\n  getOperators,\n  getOrderByOperators,\n  mapRelationalRow,\n  normalizeRelation,\n  relations\n};\n//# sourceMappingURL=relations.js.map","import { Column } from \"./column.js\";\nimport { entityKind, is } from \"./entity.js\";\nimport { SQL, sql } from \"./sql/sql.js\";\nimport { Table } from \"./table.js\";\nimport { ViewBaseConfig } from \"./view-common.js\";\nclass ColumnAliasProxyHandler {\n  constructor(table) {\n    this.table = table;\n  }\n  static [entityKind] = \"ColumnAliasProxyHandler\";\n  get(columnObj, prop) {\n    if (prop === \"table\") {\n      return this.table;\n    }\n    return columnObj[prop];\n  }\n}\nclass TableAliasProxyHandler {\n  constructor(alias, replaceOriginalName) {\n    this.alias = alias;\n    this.replaceOriginalName = replaceOriginalName;\n  }\n  static [entityKind] = \"TableAliasProxyHandler\";\n  get(target, prop) {\n    if (prop === Table.Symbol.IsAlias) {\n      return true;\n    }\n    if (prop === Table.Symbol.Name) {\n      return this.alias;\n    }\n    if (this.replaceOriginalName && prop === Table.Symbol.OriginalName) {\n      return this.alias;\n    }\n    if (prop === ViewBaseConfig) {\n      return {\n        ...target[ViewBaseConfig],\n        name: this.alias,\n        isAlias: true\n      };\n    }\n    if (prop === Table.Symbol.Columns) {\n      const columns = target[Table.Symbol.Columns];\n      if (!columns) {\n        return columns;\n      }\n      const proxiedColumns = {};\n      Object.keys(columns).map((key) => {\n        proxiedColumns[key] = new Proxy(\n          columns[key],\n          new ColumnAliasProxyHandler(new Proxy(target, this))\n        );\n      });\n      return proxiedColumns;\n    }\n    const value = target[prop];\n    if (is(value, Column)) {\n      return new Proxy(value, new ColumnAliasProxyHandler(new Proxy(target, this)));\n    }\n    return value;\n  }\n}\nclass RelationTableAliasProxyHandler {\n  constructor(alias) {\n    this.alias = alias;\n  }\n  static [entityKind] = \"RelationTableAliasProxyHandler\";\n  get(target, prop) {\n    if (prop === \"sourceTable\") {\n      return aliasedTable(target.sourceTable, this.alias);\n    }\n    return target[prop];\n  }\n}\nfunction aliasedTable(table, tableAlias) {\n  return new Proxy(table, new TableAliasProxyHandler(tableAlias, false));\n}\nfunction aliasedRelation(relation, tableAlias) {\n  return new Proxy(relation, new RelationTableAliasProxyHandler(tableAlias));\n}\nfunction aliasedTableColumn(column, tableAlias) {\n  return new Proxy(\n    column,\n    new ColumnAliasProxyHandler(new Proxy(column.table, new TableAliasProxyHandler(tableAlias, false)))\n  );\n}\nfunction mapColumnsInAliasedSQLToAlias(query, alias) {\n  return new SQL.Aliased(mapColumnsInSQLToAlias(query.sql, alias), query.fieldAlias);\n}\nfunction mapColumnsInSQLToAlias(query, alias) {\n  return sql.join(query.queryChunks.map((c) => {\n    if (is(c, Column)) {\n      return aliasedTableColumn(c, alias);\n    }\n    if (is(c, SQL)) {\n      return mapColumnsInSQLToAlias(c, alias);\n    }\n    if (is(c, SQL.Aliased)) {\n      return mapColumnsInAliasedSQLToAlias(c, alias);\n    }\n    return c;\n  }));\n}\nexport {\n  ColumnAliasProxyHandler,\n  RelationTableAliasProxyHandler,\n  TableAliasProxyHandler,\n  aliasedRelation,\n  aliasedTable,\n  aliasedTableColumn,\n  mapColumnsInAliasedSQLToAlias,\n  mapColumnsInSQLToAlias\n};\n//# sourceMappingURL=alias.js.map","import { ColumnAliasProxyHandler, TableAliasProxyHandler } from \"./alias.js\";\nimport { Column } from \"./column.js\";\nimport { entityKind, is } from \"./entity.js\";\nimport { SQL, View } from \"./sql/sql.js\";\nimport { Subquery } from \"./subquery.js\";\nimport { ViewBaseConfig } from \"./view-common.js\";\nclass SelectionProxyHandler {\n  static [entityKind] = \"SelectionProxyHandler\";\n  config;\n  constructor(config) {\n    this.config = { ...config };\n  }\n  get(subquery, prop) {\n    if (prop === \"_\") {\n      return {\n        ...subquery[\"_\"],\n        selectedFields: new Proxy(\n          subquery._.selectedFields,\n          this\n        )\n      };\n    }\n    if (prop === ViewBaseConfig) {\n      return {\n        ...subquery[ViewBaseConfig],\n        selectedFields: new Proxy(\n          subquery[ViewBaseConfig].selectedFields,\n          this\n        )\n      };\n    }\n    if (typeof prop === \"symbol\") {\n      return subquery[prop];\n    }\n    const columns = is(subquery, Subquery) ? subquery._.selectedFields : is(subquery, View) ? subquery[ViewBaseConfig].selectedFields : subquery;\n    const value = columns[prop];\n    if (is(value, SQL.Aliased)) {\n      if (this.config.sqlAliasedBehavior === \"sql\" && !value.isSelectionField) {\n        return value.sql;\n      }\n      const newValue = value.clone();\n      newValue.isSelectionField = true;\n      return newValue;\n    }\n    if (is(value, SQL)) {\n      if (this.config.sqlBehavior === \"sql\") {\n        return value;\n      }\n      throw new Error(\n        `You tried to reference \"${prop}\" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using \".as('alias')\" method.`\n      );\n    }\n    if (is(value, Column)) {\n      if (this.config.alias) {\n        return new Proxy(\n          value,\n          new ColumnAliasProxyHandler(\n            new Proxy(\n              value.table,\n              new TableAliasProxyHandler(this.config.alias, this.config.replaceOriginalName ?? false)\n            )\n          )\n        );\n      }\n      return value;\n    }\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n    return new Proxy(value, new SelectionProxyHandler(this.config));\n  }\n}\nexport {\n  SelectionProxyHandler\n};\n//# sourceMappingURL=selection-proxy.js.map","import { entityKind } from \"./entity.js\";\nclass QueryPromise {\n  static [entityKind] = \"QueryPromise\";\n  [Symbol.toStringTag] = \"QueryPromise\";\n  catch(onRejected) {\n    return this.then(void 0, onRejected);\n  }\n  finally(onFinally) {\n    return this.then(\n      (value) => {\n        onFinally?.();\n        return value;\n      },\n      (reason) => {\n        onFinally?.();\n        throw reason;\n      }\n    );\n  }\n  then(onFulfilled, onRejected) {\n    return this.execute().then(onFulfilled, onRejected);\n  }\n}\nexport {\n  QueryPromise\n};\n//# sourceMappingURL=query-promise.js.map","import { entityKind } from \"../entity.js\";\nimport { TableName } from \"../table.utils.js\";\nclass ForeignKeyBuilder {\n  static [entityKind] = \"SQLiteForeignKeyBuilder\";\n  /** @internal */\n  reference;\n  /** @internal */\n  _onUpdate;\n  /** @internal */\n  _onDelete;\n  constructor(config, actions) {\n    this.reference = () => {\n      const { name, columns, foreignColumns } = config();\n      return { name, columns, foreignTable: foreignColumns[0].table, foreignColumns };\n    };\n    if (actions) {\n      this._onUpdate = actions.onUpdate;\n      this._onDelete = actions.onDelete;\n    }\n  }\n  onUpdate(action) {\n    this._onUpdate = action;\n    return this;\n  }\n  onDelete(action) {\n    this._onDelete = action;\n    return this;\n  }\n  /** @internal */\n  build(table) {\n    return new ForeignKey(table, this);\n  }\n}\nclass ForeignKey {\n  constructor(table, builder) {\n    this.table = table;\n    this.reference = builder.reference;\n    this.onUpdate = builder._onUpdate;\n    this.onDelete = builder._onDelete;\n  }\n  static [entityKind] = \"SQLiteForeignKey\";\n  reference;\n  onUpdate;\n  onDelete;\n  getName() {\n    const { name, columns, foreignColumns } = this.reference();\n    const columnNames = columns.map((column) => column.name);\n    const foreignColumnNames = foreignColumns.map((column) => column.name);\n    const chunks = [\n      this.table[TableName],\n      ...columnNames,\n      foreignColumns[0].table[TableName],\n      ...foreignColumnNames\n    ];\n    return name ?? `${chunks.join(\"_\")}_fk`;\n  }\n}\nfunction foreignKey(config) {\n  function mappedConfig() {\n    if (typeof config === \"function\") {\n      const { name, columns, foreignColumns } = config();\n      return {\n        name,\n        columns,\n        foreignColumns\n      };\n    }\n    return config;\n  }\n  return new ForeignKeyBuilder(mappedConfig);\n}\nexport {\n  ForeignKey,\n  ForeignKeyBuilder,\n  foreignKey\n};\n//# sourceMappingURL=foreign-keys.js.map","import { entityKind } from \"../entity.js\";\nimport { TableName } from \"../table.utils.js\";\nfunction uniqueKeyName(table, columns) {\n  return `${table[TableName]}_${columns.join(\"_\")}_unique`;\n}\nfunction unique(name) {\n  return new UniqueOnConstraintBuilder(name);\n}\nclass UniqueConstraintBuilder {\n  constructor(columns, name) {\n    this.name = name;\n    this.columns = columns;\n  }\n  static [entityKind] = \"SQLiteUniqueConstraintBuilder\";\n  /** @internal */\n  columns;\n  /** @internal */\n  build(table) {\n    return new UniqueConstraint(table, this.columns, this.name);\n  }\n}\nclass UniqueOnConstraintBuilder {\n  static [entityKind] = \"SQLiteUniqueOnConstraintBuilder\";\n  /** @internal */\n  name;\n  constructor(name) {\n    this.name = name;\n  }\n  on(...columns) {\n    return new UniqueConstraintBuilder(columns, this.name);\n  }\n}\nclass UniqueConstraint {\n  constructor(table, columns, name) {\n    this.table = table;\n    this.columns = columns;\n    this.name = name ?? uniqueKeyName(this.table, this.columns.map((column) => column.name));\n  }\n  static [entityKind] = \"SQLiteUniqueConstraint\";\n  columns;\n  name;\n  getName() {\n    return this.name;\n  }\n}\nexport {\n  UniqueConstraint,\n  UniqueConstraintBuilder,\n  UniqueOnConstraintBuilder,\n  unique,\n  uniqueKeyName\n};\n//# sourceMappingURL=unique-constraint.js.map","import { ColumnBuilder } from \"../../column-builder.js\";\nimport { Column } from \"../../column.js\";\nimport { entityKind } from \"../../entity.js\";\nimport { ForeignKeyBuilder } from \"../foreign-keys.js\";\nimport { uniqueKeyName } from \"../unique-constraint.js\";\nclass SQLiteColumnBuilder extends ColumnBuilder {\n  static [entityKind] = \"SQLiteColumnBuilder\";\n  foreignKeyConfigs = [];\n  references(ref, actions = {}) {\n    this.foreignKeyConfigs.push({ ref, actions });\n    return this;\n  }\n  unique(name) {\n    this.config.isUnique = true;\n    this.config.uniqueName = name;\n    return this;\n  }\n  generatedAlwaysAs(as, config) {\n    this.config.generated = {\n      as,\n      type: \"always\",\n      mode: config?.mode ?? \"virtual\"\n    };\n    return this;\n  }\n  /** @internal */\n  buildForeignKeys(column, table) {\n    return this.foreignKeyConfigs.map(({ ref, actions }) => {\n      return ((ref2, actions2) => {\n        const builder = new ForeignKeyBuilder(() => {\n          const foreignColumn = ref2();\n          return { columns: [column], foreignColumns: [foreignColumn] };\n        });\n        if (actions2.onUpdate) {\n          builder.onUpdate(actions2.onUpdate);\n        }\n        if (actions2.onDelete) {\n          builder.onDelete(actions2.onDelete);\n        }\n        return builder.build(table);\n      })(ref, actions);\n    });\n  }\n}\nclass SQLiteColumn extends Column {\n  constructor(table, config) {\n    if (!config.uniqueName) {\n      config.uniqueName = uniqueKeyName(table, [config.name]);\n    }\n    super(table, config);\n    this.table = table;\n  }\n  static [entityKind] = \"SQLiteColumn\";\n}\nexport {\n  SQLiteColumn,\n  SQLiteColumnBuilder\n};\n//# sourceMappingURL=common.js.map","import { entityKind } from \"../../entity.js\";\nimport { getColumnNameAndConfig } from \"../../utils.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteBigIntBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteBigIntBuilder\";\n  constructor(name) {\n    super(name, \"bigint\", \"SQLiteBigInt\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteBigInt(table, this.config);\n  }\n}\nclass SQLiteBigInt extends SQLiteColumn {\n  static [entityKind] = \"SQLiteBigInt\";\n  getSQLType() {\n    return \"blob\";\n  }\n  mapFromDriverValue(value) {\n    if (Buffer.isBuffer(value)) {\n      return BigInt(value.toString());\n    }\n    if (value instanceof ArrayBuffer) {\n      const decoder = new TextDecoder();\n      return BigInt(decoder.decode(value));\n    }\n    return BigInt(String.fromCodePoint(...value));\n  }\n  mapToDriverValue(value) {\n    return Buffer.from(value.toString());\n  }\n}\nclass SQLiteBlobJsonBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteBlobJsonBuilder\";\n  constructor(name) {\n    super(name, \"json\", \"SQLiteBlobJson\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteBlobJson(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteBlobJson extends SQLiteColumn {\n  static [entityKind] = \"SQLiteBlobJson\";\n  getSQLType() {\n    return \"blob\";\n  }\n  mapFromDriverValue(value) {\n    if (Buffer.isBuffer(value)) {\n      return JSON.parse(value.toString());\n    }\n    if (value instanceof ArrayBuffer) {\n      const decoder = new TextDecoder();\n      return JSON.parse(decoder.decode(value));\n    }\n    return JSON.parse(String.fromCodePoint(...value));\n  }\n  mapToDriverValue(value) {\n    return Buffer.from(JSON.stringify(value));\n  }\n}\nclass SQLiteBlobBufferBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteBlobBufferBuilder\";\n  constructor(name) {\n    super(name, \"buffer\", \"SQLiteBlobBuffer\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteBlobBuffer(table, this.config);\n  }\n}\nclass SQLiteBlobBuffer extends SQLiteColumn {\n  static [entityKind] = \"SQLiteBlobBuffer\";\n  getSQLType() {\n    return \"blob\";\n  }\n}\nfunction blob(a, b) {\n  const { name, config } = getColumnNameAndConfig(a, b);\n  if (config?.mode === \"json\") {\n    return new SQLiteBlobJsonBuilder(name);\n  }\n  if (config?.mode === \"bigint\") {\n    return new SQLiteBigIntBuilder(name);\n  }\n  return new SQLiteBlobBufferBuilder(name);\n}\nexport {\n  SQLiteBigInt,\n  SQLiteBigIntBuilder,\n  SQLiteBlobBuffer,\n  SQLiteBlobBufferBuilder,\n  SQLiteBlobJson,\n  SQLiteBlobJsonBuilder,\n  blob\n};\n//# sourceMappingURL=blob.js.map","import { entityKind } from \"../../entity.js\";\nimport { getColumnNameAndConfig } from \"../../utils.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteCustomColumnBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteCustomColumnBuilder\";\n  constructor(name, fieldConfig, customTypeParams) {\n    super(name, \"custom\", \"SQLiteCustomColumn\");\n    this.config.fieldConfig = fieldConfig;\n    this.config.customTypeParams = customTypeParams;\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteCustomColumn(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteCustomColumn extends SQLiteColumn {\n  static [entityKind] = \"SQLiteCustomColumn\";\n  sqlName;\n  mapTo;\n  mapFrom;\n  constructor(table, config) {\n    super(table, config);\n    this.sqlName = config.customTypeParams.dataType(config.fieldConfig);\n    this.mapTo = config.customTypeParams.toDriver;\n    this.mapFrom = config.customTypeParams.fromDriver;\n  }\n  getSQLType() {\n    return this.sqlName;\n  }\n  mapFromDriverValue(value) {\n    return typeof this.mapFrom === \"function\" ? this.mapFrom(value) : value;\n  }\n  mapToDriverValue(value) {\n    return typeof this.mapTo === \"function\" ? this.mapTo(value) : value;\n  }\n}\nfunction customType(customTypeParams) {\n  return (a, b) => {\n    const { name, config } = getColumnNameAndConfig(a, b);\n    return new SQLiteCustomColumnBuilder(\n      name,\n      config,\n      customTypeParams\n    );\n  };\n}\nexport {\n  SQLiteCustomColumn,\n  SQLiteCustomColumnBuilder,\n  customType\n};\n//# sourceMappingURL=custom.js.map","import { entityKind } from \"../../entity.js\";\nimport { sql } from \"../../sql/sql.js\";\nimport { getColumnNameAndConfig } from \"../../utils.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteBaseIntegerBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteBaseIntegerBuilder\";\n  constructor(name, dataType, columnType) {\n    super(name, dataType, columnType);\n    this.config.autoIncrement = false;\n  }\n  primaryKey(config) {\n    if (config?.autoIncrement) {\n      this.config.autoIncrement = true;\n    }\n    this.config.hasDefault = true;\n    return super.primaryKey();\n  }\n}\nclass SQLiteBaseInteger extends SQLiteColumn {\n  static [entityKind] = \"SQLiteBaseInteger\";\n  autoIncrement = this.config.autoIncrement;\n  getSQLType() {\n    return \"integer\";\n  }\n}\nclass SQLiteIntegerBuilder extends SQLiteBaseIntegerBuilder {\n  static [entityKind] = \"SQLiteIntegerBuilder\";\n  constructor(name) {\n    super(name, \"number\", \"SQLiteInteger\");\n  }\n  build(table) {\n    return new SQLiteInteger(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteInteger extends SQLiteBaseInteger {\n  static [entityKind] = \"SQLiteInteger\";\n}\nclass SQLiteTimestampBuilder extends SQLiteBaseIntegerBuilder {\n  static [entityKind] = \"SQLiteTimestampBuilder\";\n  constructor(name, mode) {\n    super(name, \"date\", \"SQLiteTimestamp\");\n    this.config.mode = mode;\n  }\n  /**\n   * @deprecated Use `default()` with your own expression instead.\n   *\n   * Adds `DEFAULT (cast((julianday('now') - 2440587.5)*86400000 as integer))` to the column, which is the current epoch timestamp in milliseconds.\n   */\n  defaultNow() {\n    return this.default(sql`(cast((julianday('now') - 2440587.5)*86400000 as integer))`);\n  }\n  build(table) {\n    return new SQLiteTimestamp(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteTimestamp extends SQLiteBaseInteger {\n  static [entityKind] = \"SQLiteTimestamp\";\n  mode = this.config.mode;\n  mapFromDriverValue(value) {\n    if (this.config.mode === \"timestamp\") {\n      return new Date(value * 1e3);\n    }\n    return new Date(value);\n  }\n  mapToDriverValue(value) {\n    const unix = value.getTime();\n    if (this.config.mode === \"timestamp\") {\n      return Math.floor(unix / 1e3);\n    }\n    return unix;\n  }\n}\nclass SQLiteBooleanBuilder extends SQLiteBaseIntegerBuilder {\n  static [entityKind] = \"SQLiteBooleanBuilder\";\n  constructor(name, mode) {\n    super(name, \"boolean\", \"SQLiteBoolean\");\n    this.config.mode = mode;\n  }\n  build(table) {\n    return new SQLiteBoolean(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteBoolean extends SQLiteBaseInteger {\n  static [entityKind] = \"SQLiteBoolean\";\n  mode = this.config.mode;\n  mapFromDriverValue(value) {\n    return Number(value) === 1;\n  }\n  mapToDriverValue(value) {\n    return value ? 1 : 0;\n  }\n}\nfunction integer(a, b) {\n  const { name, config } = getColumnNameAndConfig(a, b);\n  if (config?.mode === \"timestamp\" || config?.mode === \"timestamp_ms\") {\n    return new SQLiteTimestampBuilder(name, config.mode);\n  }\n  if (config?.mode === \"boolean\") {\n    return new SQLiteBooleanBuilder(name, config.mode);\n  }\n  return new SQLiteIntegerBuilder(name);\n}\nconst int = integer;\nexport {\n  SQLiteBaseInteger,\n  SQLiteBaseIntegerBuilder,\n  SQLiteBoolean,\n  SQLiteBooleanBuilder,\n  SQLiteInteger,\n  SQLiteIntegerBuilder,\n  SQLiteTimestamp,\n  SQLiteTimestampBuilder,\n  int,\n  integer\n};\n//# sourceMappingURL=integer.js.map","import { entityKind } from \"../../entity.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteNumericBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteNumericBuilder\";\n  constructor(name) {\n    super(name, \"string\", \"SQLiteNumeric\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteNumeric(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteNumeric extends SQLiteColumn {\n  static [entityKind] = \"SQLiteNumeric\";\n  getSQLType() {\n    return \"numeric\";\n  }\n}\nfunction numeric(name) {\n  return new SQLiteNumericBuilder(name ?? \"\");\n}\nexport {\n  SQLiteNumeric,\n  SQLiteNumericBuilder,\n  numeric\n};\n//# sourceMappingURL=numeric.js.map","import { entityKind } from \"../../entity.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteRealBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteRealBuilder\";\n  constructor(name) {\n    super(name, \"number\", \"SQLiteReal\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteReal(table, this.config);\n  }\n}\nclass SQLiteReal extends SQLiteColumn {\n  static [entityKind] = \"SQLiteReal\";\n  getSQLType() {\n    return \"real\";\n  }\n}\nfunction real(name) {\n  return new SQLiteRealBuilder(name ?? \"\");\n}\nexport {\n  SQLiteReal,\n  SQLiteRealBuilder,\n  real\n};\n//# sourceMappingURL=real.js.map","import { entityKind } from \"../../entity.js\";\nimport { getColumnNameAndConfig } from \"../../utils.js\";\nimport { SQLiteColumn, SQLiteColumnBuilder } from \"./common.js\";\nclass SQLiteTextBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteTextBuilder\";\n  constructor(name, config) {\n    super(name, \"string\", \"SQLiteText\");\n    this.config.enumValues = config.enum;\n    this.config.length = config.length;\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteText(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteText extends SQLiteColumn {\n  static [entityKind] = \"SQLiteText\";\n  enumValues = this.config.enumValues;\n  length = this.config.length;\n  constructor(table, config) {\n    super(table, config);\n  }\n  getSQLType() {\n    return `text${this.config.length ? `(${this.config.length})` : \"\"}`;\n  }\n}\nclass SQLiteTextJsonBuilder extends SQLiteColumnBuilder {\n  static [entityKind] = \"SQLiteTextJsonBuilder\";\n  constructor(name) {\n    super(name, \"json\", \"SQLiteTextJson\");\n  }\n  /** @internal */\n  build(table) {\n    return new SQLiteTextJson(\n      table,\n      this.config\n    );\n  }\n}\nclass SQLiteTextJson extends SQLiteColumn {\n  static [entityKind] = \"SQLiteTextJson\";\n  getSQLType() {\n    return \"text\";\n  }\n  mapFromDriverValue(value) {\n    return JSON.parse(value);\n  }\n  mapToDriverValue(value) {\n    return JSON.stringify(value);\n  }\n}\nfunction text(a, b = {}) {\n  const { name, config } = getColumnNameAndConfig(a, b);\n  if (config.mode === \"json\") {\n    return new SQLiteTextJsonBuilder(name);\n  }\n  return new SQLiteTextBuilder(name, config);\n}\nexport {\n  SQLiteText,\n  SQLiteTextBuilder,\n  SQLiteTextJson,\n  SQLiteTextJsonBuilder,\n  text\n};\n//# sourceMappingURL=text.js.map","import { blob } from \"./blob.js\";\nimport { customType } from \"./custom.js\";\nimport { integer } from \"./integer.js\";\nimport { numeric } from \"./numeric.js\";\nimport { real } from \"./real.js\";\nimport { text } from \"./text.js\";\nfunction getSQLiteColumnBuilders() {\n  return {\n    blob,\n    customType,\n    integer,\n    numeric,\n    real,\n    text\n  };\n}\nexport {\n  getSQLiteColumnBuilders\n};\n//# sourceMappingURL=all.js.map","import { entityKind } from \"../entity.js\";\nimport { Table } from \"../table.js\";\nimport { getSQLiteColumnBuilders } from \"./columns/all.js\";\nconst InlineForeignKeys = Symbol.for(\"drizzle:SQLiteInlineForeignKeys\");\nclass SQLiteTable extends Table {\n  static [entityKind] = \"SQLiteTable\";\n  /** @internal */\n  static Symbol = Object.assign({}, Table.Symbol, {\n    InlineForeignKeys\n  });\n  /** @internal */\n  [Table.Symbol.Columns];\n  /** @internal */\n  [InlineForeignKeys] = [];\n  /** @internal */\n  [Table.Symbol.ExtraConfigBuilder] = void 0;\n}\nfunction sqliteTableBase(name, columns, extraConfig, schema, baseName = name) {\n  const rawTable = new SQLiteTable(name, schema, baseName);\n  const parsedColumns = typeof columns === \"function\" ? columns(getSQLiteColumnBuilders()) : columns;\n  const builtColumns = Object.fromEntries(\n    Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {\n      const colBuilder = colBuilderBase;\n      colBuilder.setName(name2);\n      const column = colBuilder.build(rawTable);\n      rawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n      return [name2, column];\n    })\n  );\n  const table = Object.assign(rawTable, builtColumns);\n  table[Table.Symbol.Columns] = builtColumns;\n  table[Table.Symbol.ExtraConfigColumns] = builtColumns;\n  if (extraConfig) {\n    table[SQLiteTable.Symbol.ExtraConfigBuilder] = extraConfig;\n  }\n  return table;\n}\nconst sqliteTable = (name, columns, extraConfig) => {\n  return sqliteTableBase(name, columns, extraConfig);\n};\nfunction sqliteTableCreator(customizeTableName) {\n  return (name, columns, extraConfig) => {\n    return sqliteTableBase(customizeTableName(name), columns, extraConfig, void 0, name);\n  };\n}\nexport {\n  InlineForeignKeys,\n  SQLiteTable,\n  sqliteTable,\n  sqliteTableCreator\n};\n//# sourceMappingURL=table.js.map","import { entityKind } from \"../../entity.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nimport { SelectionProxyHandler } from \"../../selection-proxy.js\";\nimport { SQLiteTable } from \"../table.js\";\nimport { Table } from \"../../table.js\";\nimport { orderSelectedFields } from \"../../utils.js\";\nclass SQLiteDeleteBase extends QueryPromise {\n  constructor(table, session, dialect, withList) {\n    super();\n    this.table = table;\n    this.session = session;\n    this.dialect = dialect;\n    this.config = { table, withList };\n  }\n  static [entityKind] = \"SQLiteDelete\";\n  /** @internal */\n  config;\n  /**\n   * Adds a `where` clause to the query.\n   *\n   * Calling this method will delete only those rows that fulfill a specified condition.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/delete}\n   *\n   * @param where the `where` clause.\n   *\n   * @example\n   * You can use conditional operators and `sql function` to filter the rows to be deleted.\n   *\n   * ```ts\n   * // Delete all cars with green color\n   * db.delete(cars).where(eq(cars.color, 'green'));\n   * // or\n   * db.delete(cars).where(sql`${cars.color} = 'green'`)\n   * ```\n   *\n   * You can logically combine conditional operators with `and()` and `or()` operators:\n   *\n   * ```ts\n   * // Delete all BMW cars with a green color\n   * db.delete(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n   *\n   * // Delete all cars with the green or blue color\n   * db.delete(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n   * ```\n   */\n  where(where) {\n    this.config.where = where;\n    return this;\n  }\n  orderBy(...columns) {\n    if (typeof columns[0] === \"function\") {\n      const orderBy = columns[0](\n        new Proxy(\n          this.config.table[Table.Symbol.Columns],\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"alias\", sqlBehavior: \"sql\" })\n        )\n      );\n      const orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n      this.config.orderBy = orderByArray;\n    } else {\n      const orderByArray = columns;\n      this.config.orderBy = orderByArray;\n    }\n    return this;\n  }\n  limit(limit) {\n    this.config.limit = limit;\n    return this;\n  }\n  returning(fields = this.table[SQLiteTable.Symbol.Columns]) {\n    this.config.returning = orderSelectedFields(fields);\n    return this;\n  }\n  /** @internal */\n  getSQL() {\n    return this.dialect.buildDeleteQuery(this.config);\n  }\n  toSQL() {\n    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n    return rest;\n  }\n  /** @internal */\n  _prepare(isOneTimeQuery = true) {\n    return this.session[isOneTimeQuery ? \"prepareOneTimeQuery\" : \"prepareQuery\"](\n      this.dialect.sqlToQuery(this.getSQL()),\n      this.config.returning,\n      this.config.returning ? \"all\" : \"run\",\n      true\n    );\n  }\n  prepare() {\n    return this._prepare(false);\n  }\n  run = (placeholderValues) => {\n    return this._prepare().run(placeholderValues);\n  };\n  all = (placeholderValues) => {\n    return this._prepare().all(placeholderValues);\n  };\n  get = (placeholderValues) => {\n    return this._prepare().get(placeholderValues);\n  };\n  values = (placeholderValues) => {\n    return this._prepare().values(placeholderValues);\n  };\n  async execute(placeholderValues) {\n    return this._prepare().execute(placeholderValues);\n  }\n  $dynamic() {\n    return this;\n  }\n}\nexport {\n  SQLiteDeleteBase\n};\n//# sourceMappingURL=delete.js.map","import { entityKind } from \"./entity.js\";\nimport { Table } from \"./table.js\";\nfunction toSnakeCase(input) {\n  const words = input.replace(/['\\u2019]/g, \"\").match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n  return words.map((word) => word.toLowerCase()).join(\"_\");\n}\nfunction toCamelCase(input) {\n  const words = input.replace(/['\\u2019]/g, \"\").match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n  return words.reduce((acc, word, i) => {\n    const formattedWord = i === 0 ? word.toLowerCase() : `${word[0].toUpperCase()}${word.slice(1)}`;\n    return acc + formattedWord;\n  }, \"\");\n}\nfunction noopCase(input) {\n  return input;\n}\nclass CasingCache {\n  static [entityKind] = \"CasingCache\";\n  /** @internal */\n  cache = {};\n  cachedTables = {};\n  convert;\n  constructor(casing) {\n    this.convert = casing === \"snake_case\" ? toSnakeCase : casing === \"camelCase\" ? toCamelCase : noopCase;\n  }\n  getColumnCasing(column) {\n    if (!column.keyAsName)\n      return column.name;\n    const schema = column.table[Table.Symbol.Schema] ?? \"public\";\n    const tableName = column.table[Table.Symbol.OriginalName];\n    const key = `${schema}.${tableName}.${column.name}`;\n    if (!this.cache[key]) {\n      this.cacheTable(column.table);\n    }\n    return this.cache[key];\n  }\n  cacheTable(table) {\n    const schema = table[Table.Symbol.Schema] ?? \"public\";\n    const tableName = table[Table.Symbol.OriginalName];\n    const tableKey = `${schema}.${tableName}`;\n    if (!this.cachedTables[tableKey]) {\n      for (const column of Object.values(table[Table.Symbol.Columns])) {\n        const columnKey = `${tableKey}.${column.name}`;\n        this.cache[columnKey] = this.convert(column.name);\n      }\n      this.cachedTables[tableKey] = true;\n    }\n  }\n  clearCache() {\n    this.cache = {};\n    this.cachedTables = {};\n  }\n}\nexport {\n  CasingCache,\n  toCamelCase,\n  toSnakeCase\n};\n//# sourceMappingURL=casing.js.map","import { entityKind } from \"./entity.js\";\nclass DrizzleError extends Error {\n  static [entityKind] = \"DrizzleError\";\n  constructor({ message, cause }) {\n    super(message);\n    this.name = \"DrizzleError\";\n    this.cause = cause;\n  }\n}\nclass TransactionRollbackError extends DrizzleError {\n  static [entityKind] = \"TransactionRollbackError\";\n  constructor() {\n    super({ message: \"Rollback\" });\n  }\n}\nexport {\n  DrizzleError,\n  TransactionRollbackError\n};\n//# sourceMappingURL=errors.js.map","import { entityKind } from \"../entity.js\";\nimport { View } from \"../sql/sql.js\";\nclass SQLiteViewBase extends View {\n  static [entityKind] = \"SQLiteViewBase\";\n}\nexport {\n  SQLiteViewBase\n};\n//# sourceMappingURL=view-base.js.map","import { aliasedTable, aliasedTableColumn, mapColumnsInAliasedSQLToAlias, mapColumnsInSQLToAlias } from \"../alias.js\";\nimport { CasingCache } from \"../casing.js\";\nimport { Column } from \"../column.js\";\nimport { entityKind, is } from \"../entity.js\";\nimport { DrizzleError } from \"../errors.js\";\nimport {\n  getOperators,\n  getOrderByOperators,\n  Many,\n  normalizeRelation,\n  One\n} from \"../relations.js\";\nimport { and, eq } from \"../sql/index.js\";\nimport { Param, SQL, sql } from \"../sql/sql.js\";\nimport { SQLiteColumn } from \"./columns/index.js\";\nimport { SQLiteTable } from \"./table.js\";\nimport { Subquery } from \"../subquery.js\";\nimport { getTableName, getTableUniqueName, Table } from \"../table.js\";\nimport { orderSelectedFields } from \"../utils.js\";\nimport { ViewBaseConfig } from \"../view-common.js\";\nimport { SQLiteViewBase } from \"./view-base.js\";\nclass SQLiteDialect {\n  static [entityKind] = \"SQLiteDialect\";\n  /** @internal */\n  casing;\n  constructor(config) {\n    this.casing = new CasingCache(config?.casing);\n  }\n  escapeName(name) {\n    return `\"${name}\"`;\n  }\n  escapeParam(_num) {\n    return \"?\";\n  }\n  escapeString(str) {\n    return `'${str.replace(/'/g, \"''\")}'`;\n  }\n  buildWithCTE(queries) {\n    if (!queries?.length)\n      return void 0;\n    const withSqlChunks = [sql`with `];\n    for (const [i, w] of queries.entries()) {\n      withSqlChunks.push(sql`${sql.identifier(w._.alias)} as (${w._.sql})`);\n      if (i < queries.length - 1) {\n        withSqlChunks.push(sql`, `);\n      }\n    }\n    withSqlChunks.push(sql` `);\n    return sql.join(withSqlChunks);\n  }\n  buildDeleteQuery({ table, where, returning, withList, limit, orderBy }) {\n    const withSql = this.buildWithCTE(withList);\n    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}` : void 0;\n    const whereSql = where ? sql` where ${where}` : void 0;\n    const orderBySql = this.buildOrderBy(orderBy);\n    const limitSql = this.buildLimit(limit);\n    return sql`${withSql}delete from ${table}${whereSql}${returningSql}${orderBySql}${limitSql}`;\n  }\n  buildUpdateSet(table, set) {\n    const tableColumns = table[Table.Symbol.Columns];\n    const columnNames = Object.keys(tableColumns).filter(\n      (colName) => set[colName] !== void 0 || tableColumns[colName]?.onUpdateFn !== void 0\n    );\n    const setSize = columnNames.length;\n    return sql.join(columnNames.flatMap((colName, i) => {\n      const col = tableColumns[colName];\n      const value = set[colName] ?? sql.param(col.onUpdateFn(), col);\n      const res = sql`${sql.identifier(this.casing.getColumnCasing(col))} = ${value}`;\n      if (i < setSize - 1) {\n        return [res, sql.raw(\", \")];\n      }\n      return [res];\n    }));\n  }\n  buildUpdateQuery({ table, set, where, returning, withList, joins, from, limit, orderBy }) {\n    const withSql = this.buildWithCTE(withList);\n    const setSql = this.buildUpdateSet(table, set);\n    const fromSql = from && sql.join([sql.raw(\" from \"), this.buildFromTable(from)]);\n    const joinsSql = this.buildJoins(joins);\n    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}` : void 0;\n    const whereSql = where ? sql` where ${where}` : void 0;\n    const orderBySql = this.buildOrderBy(orderBy);\n    const limitSql = this.buildLimit(limit);\n    return sql`${withSql}update ${table} set ${setSql}${fromSql}${joinsSql}${whereSql}${returningSql}${orderBySql}${limitSql}`;\n  }\n  /**\n   * Builds selection SQL with provided fields/expressions\n   *\n   * Examples:\n   *\n   * `select <selection> from`\n   *\n   * `insert ... returning <selection>`\n   *\n   * If `isSingleTable` is true, then columns won't be prefixed with table name\n   */\n  buildSelection(fields, { isSingleTable = false } = {}) {\n    const columnsLen = fields.length;\n    const chunks = fields.flatMap(({ field }, i) => {\n      const chunk = [];\n      if (is(field, SQL.Aliased) && field.isSelectionField) {\n        chunk.push(sql.identifier(field.fieldAlias));\n      } else if (is(field, SQL.Aliased) || is(field, SQL)) {\n        const query = is(field, SQL.Aliased) ? field.sql : field;\n        if (isSingleTable) {\n          chunk.push(\n            new SQL(\n              query.queryChunks.map((c) => {\n                if (is(c, Column)) {\n                  return sql.identifier(this.casing.getColumnCasing(c));\n                }\n                return c;\n              })\n            )\n          );\n        } else {\n          chunk.push(query);\n        }\n        if (is(field, SQL.Aliased)) {\n          chunk.push(sql` as ${sql.identifier(field.fieldAlias)}`);\n        }\n      } else if (is(field, Column)) {\n        const tableName = field.table[Table.Symbol.Name];\n        if (isSingleTable) {\n          chunk.push(sql.identifier(this.casing.getColumnCasing(field)));\n        } else {\n          chunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);\n        }\n      }\n      if (i < columnsLen - 1) {\n        chunk.push(sql`, `);\n      }\n      return chunk;\n    });\n    return sql.join(chunks);\n  }\n  buildJoins(joins) {\n    if (!joins || joins.length === 0) {\n      return void 0;\n    }\n    const joinsArray = [];\n    if (joins) {\n      for (const [index, joinMeta] of joins.entries()) {\n        if (index === 0) {\n          joinsArray.push(sql` `);\n        }\n        const table = joinMeta.table;\n        if (is(table, SQLiteTable)) {\n          const tableName = table[SQLiteTable.Symbol.Name];\n          const tableSchema = table[SQLiteTable.Symbol.Schema];\n          const origTableName = table[SQLiteTable.Symbol.OriginalName];\n          const alias = tableName === origTableName ? void 0 : joinMeta.alias;\n          joinsArray.push(\n            sql`${sql.raw(joinMeta.joinType)} join ${tableSchema ? sql`${sql.identifier(tableSchema)}.` : void 0}${sql.identifier(origTableName)}${alias && sql` ${sql.identifier(alias)}`} on ${joinMeta.on}`\n          );\n        } else {\n          joinsArray.push(\n            sql`${sql.raw(joinMeta.joinType)} join ${table} on ${joinMeta.on}`\n          );\n        }\n        if (index < joins.length - 1) {\n          joinsArray.push(sql` `);\n        }\n      }\n    }\n    return sql.join(joinsArray);\n  }\n  buildLimit(limit) {\n    return typeof limit === \"object\" || typeof limit === \"number\" && limit >= 0 ? sql` limit ${limit}` : void 0;\n  }\n  buildOrderBy(orderBy) {\n    const orderByList = [];\n    if (orderBy) {\n      for (const [index, orderByValue] of orderBy.entries()) {\n        orderByList.push(orderByValue);\n        if (index < orderBy.length - 1) {\n          orderByList.push(sql`, `);\n        }\n      }\n    }\n    return orderByList.length > 0 ? sql` order by ${sql.join(orderByList)}` : void 0;\n  }\n  buildFromTable(table) {\n    if (is(table, Table) && table[Table.Symbol.OriginalName] !== table[Table.Symbol.Name]) {\n      return sql`${sql.identifier(table[Table.Symbol.OriginalName])} ${sql.identifier(table[Table.Symbol.Name])}`;\n    }\n    return table;\n  }\n  buildSelectQuery({\n    withList,\n    fields,\n    fieldsFlat,\n    where,\n    having,\n    table,\n    joins,\n    orderBy,\n    groupBy,\n    limit,\n    offset,\n    distinct,\n    setOperators\n  }) {\n    const fieldsList = fieldsFlat ?? orderSelectedFields(fields);\n    for (const f of fieldsList) {\n      if (is(f.field, Column) && getTableName(f.field.table) !== (is(table, Subquery) ? table._.alias : is(table, SQLiteViewBase) ? table[ViewBaseConfig].name : is(table, SQL) ? void 0 : getTableName(table)) && !((table2) => joins?.some(\n        ({ alias }) => alias === (table2[Table.Symbol.IsAlias] ? getTableName(table2) : table2[Table.Symbol.BaseName])\n      ))(f.field.table)) {\n        const tableName = getTableName(f.field.table);\n        throw new Error(\n          `Your \"${f.path.join(\"->\")}\" field references a column \"${tableName}\".\"${f.field.name}\", but the table \"${tableName}\" is not part of the query! Did you forget to join it?`\n        );\n      }\n    }\n    const isSingleTable = !joins || joins.length === 0;\n    const withSql = this.buildWithCTE(withList);\n    const distinctSql = distinct ? sql` distinct` : void 0;\n    const selection = this.buildSelection(fieldsList, { isSingleTable });\n    const tableSql = this.buildFromTable(table);\n    const joinsSql = this.buildJoins(joins);\n    const whereSql = where ? sql` where ${where}` : void 0;\n    const havingSql = having ? sql` having ${having}` : void 0;\n    const groupByList = [];\n    if (groupBy) {\n      for (const [index, groupByValue] of groupBy.entries()) {\n        groupByList.push(groupByValue);\n        if (index < groupBy.length - 1) {\n          groupByList.push(sql`, `);\n        }\n      }\n    }\n    const groupBySql = groupByList.length > 0 ? sql` group by ${sql.join(groupByList)}` : void 0;\n    const orderBySql = this.buildOrderBy(orderBy);\n    const limitSql = this.buildLimit(limit);\n    const offsetSql = offset ? sql` offset ${offset}` : void 0;\n    const finalQuery = sql`${withSql}select${distinctSql} ${selection} from ${tableSql}${joinsSql}${whereSql}${groupBySql}${havingSql}${orderBySql}${limitSql}${offsetSql}`;\n    if (setOperators.length > 0) {\n      return this.buildSetOperations(finalQuery, setOperators);\n    }\n    return finalQuery;\n  }\n  buildSetOperations(leftSelect, setOperators) {\n    const [setOperator, ...rest] = setOperators;\n    if (!setOperator) {\n      throw new Error(\"Cannot pass undefined values to any set operator\");\n    }\n    if (rest.length === 0) {\n      return this.buildSetOperationQuery({ leftSelect, setOperator });\n    }\n    return this.buildSetOperations(\n      this.buildSetOperationQuery({ leftSelect, setOperator }),\n      rest\n    );\n  }\n  buildSetOperationQuery({\n    leftSelect,\n    setOperator: { type, isAll, rightSelect, limit, orderBy, offset }\n  }) {\n    const leftChunk = sql`${leftSelect.getSQL()} `;\n    const rightChunk = sql`${rightSelect.getSQL()}`;\n    let orderBySql;\n    if (orderBy && orderBy.length > 0) {\n      const orderByValues = [];\n      for (const singleOrderBy of orderBy) {\n        if (is(singleOrderBy, SQLiteColumn)) {\n          orderByValues.push(sql.identifier(singleOrderBy.name));\n        } else if (is(singleOrderBy, SQL)) {\n          for (let i = 0; i < singleOrderBy.queryChunks.length; i++) {\n            const chunk = singleOrderBy.queryChunks[i];\n            if (is(chunk, SQLiteColumn)) {\n              singleOrderBy.queryChunks[i] = sql.identifier(this.casing.getColumnCasing(chunk));\n            }\n          }\n          orderByValues.push(sql`${singleOrderBy}`);\n        } else {\n          orderByValues.push(sql`${singleOrderBy}`);\n        }\n      }\n      orderBySql = sql` order by ${sql.join(orderByValues, sql`, `)}`;\n    }\n    const limitSql = typeof limit === \"object\" || typeof limit === \"number\" && limit >= 0 ? sql` limit ${limit}` : void 0;\n    const operatorChunk = sql.raw(`${type} ${isAll ? \"all \" : \"\"}`);\n    const offsetSql = offset ? sql` offset ${offset}` : void 0;\n    return sql`${leftChunk}${operatorChunk}${rightChunk}${orderBySql}${limitSql}${offsetSql}`;\n  }\n  buildInsertQuery({ table, values: valuesOrSelect, onConflict, returning, withList, select }) {\n    const valuesSqlList = [];\n    const columns = table[Table.Symbol.Columns];\n    const colEntries = Object.entries(columns).filter(\n      ([_, col]) => !col.shouldDisableInsert()\n    );\n    const insertOrder = colEntries.map(([, column]) => sql.identifier(this.casing.getColumnCasing(column)));\n    if (select) {\n      const select2 = valuesOrSelect;\n      if (is(select2, SQL)) {\n        valuesSqlList.push(select2);\n      } else {\n        valuesSqlList.push(select2.getSQL());\n      }\n    } else {\n      const values = valuesOrSelect;\n      valuesSqlList.push(sql.raw(\"values \"));\n      for (const [valueIndex, value] of values.entries()) {\n        const valueList = [];\n        for (const [fieldName, col] of colEntries) {\n          const colValue = value[fieldName];\n          if (colValue === void 0 || is(colValue, Param) && colValue.value === void 0) {\n            let defaultValue;\n            if (col.default !== null && col.default !== void 0) {\n              defaultValue = is(col.default, SQL) ? col.default : sql.param(col.default, col);\n            } else if (col.defaultFn !== void 0) {\n              const defaultFnResult = col.defaultFn();\n              defaultValue = is(defaultFnResult, SQL) ? defaultFnResult : sql.param(defaultFnResult, col);\n            } else if (!col.default && col.onUpdateFn !== void 0) {\n              const onUpdateFnResult = col.onUpdateFn();\n              defaultValue = is(onUpdateFnResult, SQL) ? onUpdateFnResult : sql.param(onUpdateFnResult, col);\n            } else {\n              defaultValue = sql`null`;\n            }\n            valueList.push(defaultValue);\n          } else {\n            valueList.push(colValue);\n          }\n        }\n        valuesSqlList.push(valueList);\n        if (valueIndex < values.length - 1) {\n          valuesSqlList.push(sql`, `);\n        }\n      }\n    }\n    const withSql = this.buildWithCTE(withList);\n    const valuesSql = sql.join(valuesSqlList);\n    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}` : void 0;\n    const onConflictSql = onConflict ? sql` on conflict ${onConflict}` : void 0;\n    return sql`${withSql}insert into ${table} ${insertOrder} ${valuesSql}${onConflictSql}${returningSql}`;\n  }\n  sqlToQuery(sql2, invokeSource) {\n    return sql2.toQuery({\n      casing: this.casing,\n      escapeName: this.escapeName,\n      escapeParam: this.escapeParam,\n      escapeString: this.escapeString,\n      invokeSource\n    });\n  }\n  buildRelationalQuery({\n    fullSchema,\n    schema,\n    tableNamesMap,\n    table,\n    tableConfig,\n    queryConfig: config,\n    tableAlias,\n    nestedQueryRelation,\n    joinOn\n  }) {\n    let selection = [];\n    let limit, offset, orderBy = [], where;\n    const joins = [];\n    if (config === true) {\n      const selectionEntries = Object.entries(tableConfig.columns);\n      selection = selectionEntries.map(([key, value]) => ({\n        dbKey: value.name,\n        tsKey: key,\n        field: aliasedTableColumn(value, tableAlias),\n        relationTableTsKey: void 0,\n        isJson: false,\n        selection: []\n      }));\n    } else {\n      const aliasedColumns = Object.fromEntries(\n        Object.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)])\n      );\n      if (config.where) {\n        const whereSql = typeof config.where === \"function\" ? config.where(aliasedColumns, getOperators()) : config.where;\n        where = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n      }\n      const fieldsSelection = [];\n      let selectedColumns = [];\n      if (config.columns) {\n        let isIncludeMode = false;\n        for (const [field, value] of Object.entries(config.columns)) {\n          if (value === void 0) {\n            continue;\n          }\n          if (field in tableConfig.columns) {\n            if (!isIncludeMode && value === true) {\n              isIncludeMode = true;\n            }\n            selectedColumns.push(field);\n          }\n        }\n        if (selectedColumns.length > 0) {\n          selectedColumns = isIncludeMode ? selectedColumns.filter((c) => config.columns?.[c] === true) : Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n        }\n      } else {\n        selectedColumns = Object.keys(tableConfig.columns);\n      }\n      for (const field of selectedColumns) {\n        const column = tableConfig.columns[field];\n        fieldsSelection.push({ tsKey: field, value: column });\n      }\n      let selectedRelations = [];\n      if (config.with) {\n        selectedRelations = Object.entries(config.with).filter((entry) => !!entry[1]).map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey] }));\n      }\n      let extras;\n      if (config.extras) {\n        extras = typeof config.extras === \"function\" ? config.extras(aliasedColumns, { sql }) : config.extras;\n        for (const [tsKey, value] of Object.entries(extras)) {\n          fieldsSelection.push({\n            tsKey,\n            value: mapColumnsInAliasedSQLToAlias(value, tableAlias)\n          });\n        }\n      }\n      for (const { tsKey, value } of fieldsSelection) {\n        selection.push({\n          dbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey].name,\n          tsKey,\n          field: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n          relationTableTsKey: void 0,\n          isJson: false,\n          selection: []\n        });\n      }\n      let orderByOrig = typeof config.orderBy === \"function\" ? config.orderBy(aliasedColumns, getOrderByOperators()) : config.orderBy ?? [];\n      if (!Array.isArray(orderByOrig)) {\n        orderByOrig = [orderByOrig];\n      }\n      orderBy = orderByOrig.map((orderByValue) => {\n        if (is(orderByValue, Column)) {\n          return aliasedTableColumn(orderByValue, tableAlias);\n        }\n        return mapColumnsInSQLToAlias(orderByValue, tableAlias);\n      });\n      limit = config.limit;\n      offset = config.offset;\n      for (const {\n        tsKey: selectedRelationTsKey,\n        queryConfig: selectedRelationConfigValue,\n        relation\n      } of selectedRelations) {\n        const normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n        const relationTableName = getTableUniqueName(relation.referencedTable);\n        const relationTableTsName = tableNamesMap[relationTableName];\n        const relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n        const joinOn2 = and(\n          ...normalizedRelation.fields.map(\n            (field2, i) => eq(\n              aliasedTableColumn(normalizedRelation.references[i], relationTableAlias),\n              aliasedTableColumn(field2, tableAlias)\n            )\n          )\n        );\n        const builtRelation = this.buildRelationalQuery({\n          fullSchema,\n          schema,\n          tableNamesMap,\n          table: fullSchema[relationTableTsName],\n          tableConfig: schema[relationTableTsName],\n          queryConfig: is(relation, One) ? selectedRelationConfigValue === true ? { limit: 1 } : { ...selectedRelationConfigValue, limit: 1 } : selectedRelationConfigValue,\n          tableAlias: relationTableAlias,\n          joinOn: joinOn2,\n          nestedQueryRelation: relation\n        });\n        const field = sql`(${builtRelation.sql})`.as(selectedRelationTsKey);\n        selection.push({\n          dbKey: selectedRelationTsKey,\n          tsKey: selectedRelationTsKey,\n          field,\n          relationTableTsKey: relationTableTsName,\n          isJson: true,\n          selection: builtRelation.selection\n        });\n      }\n    }\n    if (selection.length === 0) {\n      throw new DrizzleError({\n        message: `No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\"). You need to have at least one item in \"columns\", \"with\" or \"extras\". If you need to select all columns, omit the \"columns\" key or set it to undefined.`\n      });\n    }\n    let result;\n    where = and(joinOn, where);\n    if (nestedQueryRelation) {\n      let field = sql`json_array(${sql.join(\n        selection.map(\n          ({ field: field2 }) => is(field2, SQLiteColumn) ? sql.identifier(this.casing.getColumnCasing(field2)) : is(field2, SQL.Aliased) ? field2.sql : field2\n        ),\n        sql`, `\n      )})`;\n      if (is(nestedQueryRelation, Many)) {\n        field = sql`coalesce(json_group_array(${field}), json_array())`;\n      }\n      const nestedSelection = [{\n        dbKey: \"data\",\n        tsKey: \"data\",\n        field: field.as(\"data\"),\n        isJson: true,\n        relationTableTsKey: tableConfig.tsName,\n        selection\n      }];\n      const needsSubquery = limit !== void 0 || offset !== void 0 || orderBy.length > 0;\n      if (needsSubquery) {\n        result = this.buildSelectQuery({\n          table: aliasedTable(table, tableAlias),\n          fields: {},\n          fieldsFlat: [\n            {\n              path: [],\n              field: sql.raw(\"*\")\n            }\n          ],\n          where,\n          limit,\n          offset,\n          orderBy,\n          setOperators: []\n        });\n        where = void 0;\n        limit = void 0;\n        offset = void 0;\n        orderBy = void 0;\n      } else {\n        result = aliasedTable(table, tableAlias);\n      }\n      result = this.buildSelectQuery({\n        table: is(result, SQLiteTable) ? result : new Subquery(result, {}, tableAlias),\n        fields: {},\n        fieldsFlat: nestedSelection.map(({ field: field2 }) => ({\n          path: [],\n          field: is(field2, Column) ? aliasedTableColumn(field2, tableAlias) : field2\n        })),\n        joins,\n        where,\n        limit,\n        offset,\n        orderBy,\n        setOperators: []\n      });\n    } else {\n      result = this.buildSelectQuery({\n        table: aliasedTable(table, tableAlias),\n        fields: {},\n        fieldsFlat: selection.map(({ field }) => ({\n          path: [],\n          field: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field\n        })),\n        joins,\n        where,\n        limit,\n        offset,\n        orderBy,\n        setOperators: []\n      });\n    }\n    return {\n      tableTsKey: tableConfig.tsName,\n      sql: result,\n      selection\n    };\n  }\n}\nclass SQLiteSyncDialect extends SQLiteDialect {\n  static [entityKind] = \"SQLiteSyncDialect\";\n  migrate(migrations, session, config) {\n    const migrationsTable = config === void 0 ? \"__drizzle_migrations\" : typeof config === \"string\" ? \"__drizzle_migrations\" : config.migrationsTable ?? \"__drizzle_migrations\";\n    const migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at numeric\n\t\t\t)\n\t\t`;\n    session.run(migrationTableCreate);\n    const dbMigrations = session.values(\n      sql`SELECT id, hash, created_at FROM ${sql.identifier(migrationsTable)} ORDER BY created_at DESC LIMIT 1`\n    );\n    const lastDbMigration = dbMigrations[0] ?? void 0;\n    session.run(sql`BEGIN`);\n    try {\n      for (const migration of migrations) {\n        if (!lastDbMigration || Number(lastDbMigration[2]) < migration.folderMillis) {\n          for (const stmt of migration.sql) {\n            session.run(sql.raw(stmt));\n          }\n          session.run(\n            sql`INSERT INTO ${sql.identifier(migrationsTable)} (\"hash\", \"created_at\") VALUES(${migration.hash}, ${migration.folderMillis})`\n          );\n        }\n      }\n      session.run(sql`COMMIT`);\n    } catch (e) {\n      session.run(sql`ROLLBACK`);\n      throw e;\n    }\n  }\n}\nclass SQLiteAsyncDialect extends SQLiteDialect {\n  static [entityKind] = \"SQLiteAsyncDialect\";\n  async migrate(migrations, session, config) {\n    const migrationsTable = config === void 0 ? \"__drizzle_migrations\" : typeof config === \"string\" ? \"__drizzle_migrations\" : config.migrationsTable ?? \"__drizzle_migrations\";\n    const migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at numeric\n\t\t\t)\n\t\t`;\n    await session.run(migrationTableCreate);\n    const dbMigrations = await session.values(\n      sql`SELECT id, hash, created_at FROM ${sql.identifier(migrationsTable)} ORDER BY created_at DESC LIMIT 1`\n    );\n    const lastDbMigration = dbMigrations[0] ?? void 0;\n    await session.transaction(async (tx) => {\n      for (const migration of migrations) {\n        if (!lastDbMigration || Number(lastDbMigration[2]) < migration.folderMillis) {\n          for (const stmt of migration.sql) {\n            await tx.run(sql.raw(stmt));\n          }\n          await tx.run(\n            sql`INSERT INTO ${sql.identifier(migrationsTable)} (\"hash\", \"created_at\") VALUES(${migration.hash}, ${migration.folderMillis})`\n          );\n        }\n      }\n    });\n  }\n}\nexport {\n  SQLiteAsyncDialect,\n  SQLiteDialect,\n  SQLiteSyncDialect\n};\n//# sourceMappingURL=dialect.js.map","import { entityKind } from \"../entity.js\";\nclass TypedQueryBuilder {\n  static [entityKind] = \"TypedQueryBuilder\";\n  /** @internal */\n  getSelectedFields() {\n    return this._.selectedFields;\n  }\n}\nexport {\n  TypedQueryBuilder\n};\n//# sourceMappingURL=query-builder.js.map","import { entityKind, is } from \"../../entity.js\";\nimport { TypedQueryBuilder } from \"../../query-builders/query-builder.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nimport { SelectionProxyHandler } from \"../../selection-proxy.js\";\nimport { SQL, View } from \"../../sql/sql.js\";\nimport { Subquery } from \"../../subquery.js\";\nimport { Table } from \"../../table.js\";\nimport {\n  applyMixins,\n  getTableColumns,\n  getTableLikeName,\n  haveSameKeys,\n  orderSelectedFields\n} from \"../../utils.js\";\nimport { ViewBaseConfig } from \"../../view-common.js\";\nimport { SQLiteViewBase } from \"../view-base.js\";\nclass SQLiteSelectBuilder {\n  static [entityKind] = \"SQLiteSelectBuilder\";\n  fields;\n  session;\n  dialect;\n  withList;\n  distinct;\n  constructor(config) {\n    this.fields = config.fields;\n    this.session = config.session;\n    this.dialect = config.dialect;\n    this.withList = config.withList;\n    this.distinct = config.distinct;\n  }\n  from(source) {\n    const isPartialSelect = !!this.fields;\n    let fields;\n    if (this.fields) {\n      fields = this.fields;\n    } else if (is(source, Subquery)) {\n      fields = Object.fromEntries(\n        Object.keys(source._.selectedFields).map((key) => [key, source[key]])\n      );\n    } else if (is(source, SQLiteViewBase)) {\n      fields = source[ViewBaseConfig].selectedFields;\n    } else if (is(source, SQL)) {\n      fields = {};\n    } else {\n      fields = getTableColumns(source);\n    }\n    return new SQLiteSelectBase({\n      table: source,\n      fields,\n      isPartialSelect,\n      session: this.session,\n      dialect: this.dialect,\n      withList: this.withList,\n      distinct: this.distinct\n    });\n  }\n}\nclass SQLiteSelectQueryBuilderBase extends TypedQueryBuilder {\n  static [entityKind] = \"SQLiteSelectQueryBuilder\";\n  _;\n  /** @internal */\n  config;\n  joinsNotNullableMap;\n  tableName;\n  isPartialSelect;\n  session;\n  dialect;\n  constructor({ table, fields, isPartialSelect, session, dialect, withList, distinct }) {\n    super();\n    this.config = {\n      withList,\n      table,\n      fields: { ...fields },\n      distinct,\n      setOperators: []\n    };\n    this.isPartialSelect = isPartialSelect;\n    this.session = session;\n    this.dialect = dialect;\n    this._ = {\n      selectedFields: fields\n    };\n    this.tableName = getTableLikeName(table);\n    this.joinsNotNullableMap = typeof this.tableName === \"string\" ? { [this.tableName]: true } : {};\n  }\n  createJoin(joinType) {\n    return (table, on) => {\n      const baseTableName = this.tableName;\n      const tableName = getTableLikeName(table);\n      if (typeof tableName === \"string\" && this.config.joins?.some((join) => join.alias === tableName)) {\n        throw new Error(`Alias \"${tableName}\" is already used in this query`);\n      }\n      if (!this.isPartialSelect) {\n        if (Object.keys(this.joinsNotNullableMap).length === 1 && typeof baseTableName === \"string\") {\n          this.config.fields = {\n            [baseTableName]: this.config.fields\n          };\n        }\n        if (typeof tableName === \"string\" && !is(table, SQL)) {\n          const selection = is(table, Subquery) ? table._.selectedFields : is(table, View) ? table[ViewBaseConfig].selectedFields : table[Table.Symbol.Columns];\n          this.config.fields[tableName] = selection;\n        }\n      }\n      if (typeof on === \"function\") {\n        on = on(\n          new Proxy(\n            this.config.fields,\n            new SelectionProxyHandler({ sqlAliasedBehavior: \"sql\", sqlBehavior: \"sql\" })\n          )\n        );\n      }\n      if (!this.config.joins) {\n        this.config.joins = [];\n      }\n      this.config.joins.push({ on, table, joinType, alias: tableName });\n      if (typeof tableName === \"string\") {\n        switch (joinType) {\n          case \"left\": {\n            this.joinsNotNullableMap[tableName] = false;\n            break;\n          }\n          case \"right\": {\n            this.joinsNotNullableMap = Object.fromEntries(\n              Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false])\n            );\n            this.joinsNotNullableMap[tableName] = true;\n            break;\n          }\n          case \"inner\": {\n            this.joinsNotNullableMap[tableName] = true;\n            break;\n          }\n          case \"full\": {\n            this.joinsNotNullableMap = Object.fromEntries(\n              Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false])\n            );\n            this.joinsNotNullableMap[tableName] = false;\n            break;\n          }\n        }\n      }\n      return this;\n    };\n  }\n  /**\n   * Executes a `left join` operation by adding another table to the current query.\n   *\n   * Calling this method associates each row of the table with the corresponding row from the joined table, if a match is found. If no matching row exists, it sets all columns of the joined table to null.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/joins#left-join}\n   *\n   * @param table the table to join.\n   * @param on the `on` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all users and their pets\n   * const usersWithPets: { user: User; pets: Pet | null }[] = await db.select()\n   *   .from(users)\n   *   .leftJoin(pets, eq(users.id, pets.ownerId))\n   *\n   * // Select userId and petId\n   * const usersIdsAndPetIds: { userId: number; petId: number | null }[] = await db.select({\n   *   userId: users.id,\n   *   petId: pets.id,\n   * })\n   *   .from(users)\n   *   .leftJoin(pets, eq(users.id, pets.ownerId))\n   * ```\n   */\n  leftJoin = this.createJoin(\"left\");\n  /**\n   * Executes a `right join` operation by adding another table to the current query.\n   *\n   * Calling this method associates each row of the joined table with the corresponding row from the main table, if a match is found. If no matching row exists, it sets all columns of the main table to null.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/joins#right-join}\n   *\n   * @param table the table to join.\n   * @param on the `on` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all users and their pets\n   * const usersWithPets: { user: User | null; pets: Pet }[] = await db.select()\n   *   .from(users)\n   *   .rightJoin(pets, eq(users.id, pets.ownerId))\n   *\n   * // Select userId and petId\n   * const usersIdsAndPetIds: { userId: number | null; petId: number }[] = await db.select({\n   *   userId: users.id,\n   *   petId: pets.id,\n   * })\n   *   .from(users)\n   *   .rightJoin(pets, eq(users.id, pets.ownerId))\n   * ```\n   */\n  rightJoin = this.createJoin(\"right\");\n  /**\n   * Executes an `inner join` operation, creating a new table by combining rows from two tables that have matching values.\n   *\n   * Calling this method retrieves rows that have corresponding entries in both joined tables. Rows without matching entries in either table are excluded, resulting in a table that includes only matching pairs.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/joins#inner-join}\n   *\n   * @param table the table to join.\n   * @param on the `on` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all users and their pets\n   * const usersWithPets: { user: User; pets: Pet }[] = await db.select()\n   *   .from(users)\n   *   .innerJoin(pets, eq(users.id, pets.ownerId))\n   *\n   * // Select userId and petId\n   * const usersIdsAndPetIds: { userId: number; petId: number }[] = await db.select({\n   *   userId: users.id,\n   *   petId: pets.id,\n   * })\n   *   .from(users)\n   *   .innerJoin(pets, eq(users.id, pets.ownerId))\n   * ```\n   */\n  innerJoin = this.createJoin(\"inner\");\n  /**\n   * Executes a `full join` operation by combining rows from two tables into a new table.\n   *\n   * Calling this method retrieves all rows from both main and joined tables, merging rows with matching values and filling in `null` for non-matching columns.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/joins#full-join}\n   *\n   * @param table the table to join.\n   * @param on the `on` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all users and their pets\n   * const usersWithPets: { user: User | null; pets: Pet | null }[] = await db.select()\n   *   .from(users)\n   *   .fullJoin(pets, eq(users.id, pets.ownerId))\n   *\n   * // Select userId and petId\n   * const usersIdsAndPetIds: { userId: number | null; petId: number | null }[] = await db.select({\n   *   userId: users.id,\n   *   petId: pets.id,\n   * })\n   *   .from(users)\n   *   .fullJoin(pets, eq(users.id, pets.ownerId))\n   * ```\n   */\n  fullJoin = this.createJoin(\"full\");\n  createSetOperator(type, isAll) {\n    return (rightSelection) => {\n      const rightSelect = typeof rightSelection === \"function\" ? rightSelection(getSQLiteSetOperators()) : rightSelection;\n      if (!haveSameKeys(this.getSelectedFields(), rightSelect.getSelectedFields())) {\n        throw new Error(\n          \"Set operator error (union / intersect / except): selected fields are not the same or are in a different order\"\n        );\n      }\n      this.config.setOperators.push({ type, isAll, rightSelect });\n      return this;\n    };\n  }\n  /**\n   * Adds `union` set operator to the query.\n   *\n   * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all unique names from customers and users tables\n   * await db.select({ name: users.name })\n   *   .from(users)\n   *   .union(\n   *     db.select({ name: customers.name }).from(customers)\n   *   );\n   * // or\n   * import { union } from 'drizzle-orm/sqlite-core'\n   *\n   * await union(\n   *   db.select({ name: users.name }).from(users),\n   *   db.select({ name: customers.name }).from(customers)\n   * );\n   * ```\n   */\n  union = this.createSetOperator(\"union\", false);\n  /**\n   * Adds `union all` set operator to the query.\n   *\n   * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all transaction ids from both online and in-store sales\n   * await db.select({ transaction: onlineSales.transactionId })\n   *   .from(onlineSales)\n   *   .unionAll(\n   *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n   *   );\n   * // or\n   * import { unionAll } from 'drizzle-orm/sqlite-core'\n   *\n   * await unionAll(\n   *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n   *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n   * );\n   * ```\n   */\n  unionAll = this.createSetOperator(\"union\", true);\n  /**\n   * Adds `intersect` set operator to the query.\n   *\n   * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n   *\n   * @example\n   *\n   * ```ts\n   * // Select course names that are offered in both departments A and B\n   * await db.select({ courseName: depA.courseName })\n   *   .from(depA)\n   *   .intersect(\n   *     db.select({ courseName: depB.courseName }).from(depB)\n   *   );\n   * // or\n   * import { intersect } from 'drizzle-orm/sqlite-core'\n   *\n   * await intersect(\n   *   db.select({ courseName: depA.courseName }).from(depA),\n   *   db.select({ courseName: depB.courseName }).from(depB)\n   * );\n   * ```\n   */\n  intersect = this.createSetOperator(\"intersect\", false);\n  /**\n   * Adds `except` set operator to the query.\n   *\n   * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all courses offered in department A but not in department B\n   * await db.select({ courseName: depA.courseName })\n   *   .from(depA)\n   *   .except(\n   *     db.select({ courseName: depB.courseName }).from(depB)\n   *   );\n   * // or\n   * import { except } from 'drizzle-orm/sqlite-core'\n   *\n   * await except(\n   *   db.select({ courseName: depA.courseName }).from(depA),\n   *   db.select({ courseName: depB.courseName }).from(depB)\n   * );\n   * ```\n   */\n  except = this.createSetOperator(\"except\", false);\n  /** @internal */\n  addSetOperators(setOperators) {\n    this.config.setOperators.push(...setOperators);\n    return this;\n  }\n  /**\n   * Adds a `where` clause to the query.\n   *\n   * Calling this method will select only those rows that fulfill a specified condition.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#filtering}\n   *\n   * @param where the `where` clause.\n   *\n   * @example\n   * You can use conditional operators and `sql function` to filter the rows to be selected.\n   *\n   * ```ts\n   * // Select all cars with green color\n   * await db.select().from(cars).where(eq(cars.color, 'green'));\n   * // or\n   * await db.select().from(cars).where(sql`${cars.color} = 'green'`)\n   * ```\n   *\n   * You can logically combine conditional operators with `and()` and `or()` operators:\n   *\n   * ```ts\n   * // Select all BMW cars with a green color\n   * await db.select().from(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n   *\n   * // Select all cars with the green or blue color\n   * await db.select().from(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n   * ```\n   */\n  where(where) {\n    if (typeof where === \"function\") {\n      where = where(\n        new Proxy(\n          this.config.fields,\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"sql\", sqlBehavior: \"sql\" })\n        )\n      );\n    }\n    this.config.where = where;\n    return this;\n  }\n  /**\n   * Adds a `having` clause to the query.\n   *\n   * Calling this method will select only those rows that fulfill a specified condition. It is typically used with aggregate functions to filter the aggregated data based on a specified condition.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n   *\n   * @param having the `having` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Select all brands with more than one car\n   * await db.select({\n   * \tbrand: cars.brand,\n   * \tcount: sql<number>`cast(count(${cars.id}) as int)`,\n   * })\n   *   .from(cars)\n   *   .groupBy(cars.brand)\n   *   .having(({ count }) => gt(count, 1));\n   * ```\n   */\n  having(having) {\n    if (typeof having === \"function\") {\n      having = having(\n        new Proxy(\n          this.config.fields,\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"sql\", sqlBehavior: \"sql\" })\n        )\n      );\n    }\n    this.config.having = having;\n    return this;\n  }\n  groupBy(...columns) {\n    if (typeof columns[0] === \"function\") {\n      const groupBy = columns[0](\n        new Proxy(\n          this.config.fields,\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"alias\", sqlBehavior: \"sql\" })\n        )\n      );\n      this.config.groupBy = Array.isArray(groupBy) ? groupBy : [groupBy];\n    } else {\n      this.config.groupBy = columns;\n    }\n    return this;\n  }\n  orderBy(...columns) {\n    if (typeof columns[0] === \"function\") {\n      const orderBy = columns[0](\n        new Proxy(\n          this.config.fields,\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"alias\", sqlBehavior: \"sql\" })\n        )\n      );\n      const orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n      if (this.config.setOperators.length > 0) {\n        this.config.setOperators.at(-1).orderBy = orderByArray;\n      } else {\n        this.config.orderBy = orderByArray;\n      }\n    } else {\n      const orderByArray = columns;\n      if (this.config.setOperators.length > 0) {\n        this.config.setOperators.at(-1).orderBy = orderByArray;\n      } else {\n        this.config.orderBy = orderByArray;\n      }\n    }\n    return this;\n  }\n  /**\n   * Adds a `limit` clause to the query.\n   *\n   * Calling this method will set the maximum number of rows that will be returned by this query.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n   *\n   * @param limit the `limit` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Get the first 10 people from this query.\n   * await db.select().from(people).limit(10);\n   * ```\n   */\n  limit(limit) {\n    if (this.config.setOperators.length > 0) {\n      this.config.setOperators.at(-1).limit = limit;\n    } else {\n      this.config.limit = limit;\n    }\n    return this;\n  }\n  /**\n   * Adds an `offset` clause to the query.\n   *\n   * Calling this method will skip a number of rows when returning results from this query.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n   *\n   * @param offset the `offset` clause.\n   *\n   * @example\n   *\n   * ```ts\n   * // Get the 10th-20th people from this query.\n   * await db.select().from(people).offset(10).limit(10);\n   * ```\n   */\n  offset(offset) {\n    if (this.config.setOperators.length > 0) {\n      this.config.setOperators.at(-1).offset = offset;\n    } else {\n      this.config.offset = offset;\n    }\n    return this;\n  }\n  /** @internal */\n  getSQL() {\n    return this.dialect.buildSelectQuery(this.config);\n  }\n  toSQL() {\n    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n    return rest;\n  }\n  as(alias) {\n    return new Proxy(\n      new Subquery(this.getSQL(), this.config.fields, alias),\n      new SelectionProxyHandler({ alias, sqlAliasedBehavior: \"alias\", sqlBehavior: \"error\" })\n    );\n  }\n  /** @internal */\n  getSelectedFields() {\n    return new Proxy(\n      this.config.fields,\n      new SelectionProxyHandler({ alias: this.tableName, sqlAliasedBehavior: \"alias\", sqlBehavior: \"error\" })\n    );\n  }\n  $dynamic() {\n    return this;\n  }\n}\nclass SQLiteSelectBase extends SQLiteSelectQueryBuilderBase {\n  static [entityKind] = \"SQLiteSelect\";\n  /** @internal */\n  _prepare(isOneTimeQuery = true) {\n    if (!this.session) {\n      throw new Error(\"Cannot execute a query on a query builder. Please use a database instance instead.\");\n    }\n    const fieldsList = orderSelectedFields(this.config.fields);\n    const query = this.session[isOneTimeQuery ? \"prepareOneTimeQuery\" : \"prepareQuery\"](\n      this.dialect.sqlToQuery(this.getSQL()),\n      fieldsList,\n      \"all\",\n      true\n    );\n    query.joinsNotNullableMap = this.joinsNotNullableMap;\n    return query;\n  }\n  prepare() {\n    return this._prepare(false);\n  }\n  run = (placeholderValues) => {\n    return this._prepare().run(placeholderValues);\n  };\n  all = (placeholderValues) => {\n    return this._prepare().all(placeholderValues);\n  };\n  get = (placeholderValues) => {\n    return this._prepare().get(placeholderValues);\n  };\n  values = (placeholderValues) => {\n    return this._prepare().values(placeholderValues);\n  };\n  async execute() {\n    return this.all();\n  }\n}\napplyMixins(SQLiteSelectBase, [QueryPromise]);\nfunction createSetOperator(type, isAll) {\n  return (leftSelect, rightSelect, ...restSelects) => {\n    const setOperators = [rightSelect, ...restSelects].map((select) => ({\n      type,\n      isAll,\n      rightSelect: select\n    }));\n    for (const setOperator of setOperators) {\n      if (!haveSameKeys(leftSelect.getSelectedFields(), setOperator.rightSelect.getSelectedFields())) {\n        throw new Error(\n          \"Set operator error (union / intersect / except): selected fields are not the same or are in a different order\"\n        );\n      }\n    }\n    return leftSelect.addSetOperators(setOperators);\n  };\n}\nconst getSQLiteSetOperators = () => ({\n  union,\n  unionAll,\n  intersect,\n  except\n});\nconst union = createSetOperator(\"union\", false);\nconst unionAll = createSetOperator(\"union\", true);\nconst intersect = createSetOperator(\"intersect\", false);\nconst except = createSetOperator(\"except\", false);\nexport {\n  SQLiteSelectBase,\n  SQLiteSelectBuilder,\n  SQLiteSelectQueryBuilderBase,\n  except,\n  intersect,\n  union,\n  unionAll\n};\n//# sourceMappingURL=select.js.map","import { entityKind, is } from \"../../entity.js\";\nimport { SelectionProxyHandler } from \"../../selection-proxy.js\";\nimport { SQLiteDialect, SQLiteSyncDialect } from \"../dialect.js\";\nimport { WithSubquery } from \"../../subquery.js\";\nimport { SQLiteSelectBuilder } from \"./select.js\";\nclass QueryBuilder {\n  static [entityKind] = \"SQLiteQueryBuilder\";\n  dialect;\n  dialectConfig;\n  constructor(dialect) {\n    this.dialect = is(dialect, SQLiteDialect) ? dialect : void 0;\n    this.dialectConfig = is(dialect, SQLiteDialect) ? void 0 : dialect;\n  }\n  $with(alias) {\n    const queryBuilder = this;\n    return {\n      as(qb) {\n        if (typeof qb === \"function\") {\n          qb = qb(queryBuilder);\n        }\n        return new Proxy(\n          new WithSubquery(qb.getSQL(), qb.getSelectedFields(), alias, true),\n          new SelectionProxyHandler({ alias, sqlAliasedBehavior: \"alias\", sqlBehavior: \"error\" })\n        );\n      }\n    };\n  }\n  with(...queries) {\n    const self = this;\n    function select(fields) {\n      return new SQLiteSelectBuilder({\n        fields: fields ?? void 0,\n        session: void 0,\n        dialect: self.getDialect(),\n        withList: queries\n      });\n    }\n    function selectDistinct(fields) {\n      return new SQLiteSelectBuilder({\n        fields: fields ?? void 0,\n        session: void 0,\n        dialect: self.getDialect(),\n        withList: queries,\n        distinct: true\n      });\n    }\n    return { select, selectDistinct };\n  }\n  select(fields) {\n    return new SQLiteSelectBuilder({ fields: fields ?? void 0, session: void 0, dialect: this.getDialect() });\n  }\n  selectDistinct(fields) {\n    return new SQLiteSelectBuilder({\n      fields: fields ?? void 0,\n      session: void 0,\n      dialect: this.getDialect(),\n      distinct: true\n    });\n  }\n  // Lazy load dialect to avoid circular dependency\n  getDialect() {\n    if (!this.dialect) {\n      this.dialect = new SQLiteSyncDialect(this.dialectConfig);\n    }\n    return this.dialect;\n  }\n}\nexport {\n  QueryBuilder\n};\n//# sourceMappingURL=query-builder.js.map","import { entityKind, is } from \"../../entity.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nimport { Param, SQL, sql } from \"../../sql/sql.js\";\nimport { SQLiteTable } from \"../table.js\";\nimport { Columns, Table } from \"../../table.js\";\nimport { haveSameKeys, mapUpdateSet, orderSelectedFields } from \"../../utils.js\";\nimport { QueryBuilder } from \"./query-builder.js\";\nclass SQLiteInsertBuilder {\n  constructor(table, session, dialect, withList) {\n    this.table = table;\n    this.session = session;\n    this.dialect = dialect;\n    this.withList = withList;\n  }\n  static [entityKind] = \"SQLiteInsertBuilder\";\n  values(values) {\n    values = Array.isArray(values) ? values : [values];\n    if (values.length === 0) {\n      throw new Error(\"values() must be called with at least one value\");\n    }\n    const mappedValues = values.map((entry) => {\n      const result = {};\n      const cols = this.table[Table.Symbol.Columns];\n      for (const colKey of Object.keys(entry)) {\n        const colValue = entry[colKey];\n        result[colKey] = is(colValue, SQL) ? colValue : new Param(colValue, cols[colKey]);\n      }\n      return result;\n    });\n    return new SQLiteInsertBase(this.table, mappedValues, this.session, this.dialect, this.withList);\n  }\n  select(selectQuery) {\n    const select = typeof selectQuery === \"function\" ? selectQuery(new QueryBuilder()) : selectQuery;\n    if (!is(select, SQL) && !haveSameKeys(this.table[Columns], select._.selectedFields)) {\n      throw new Error(\n        \"Insert select error: selected fields are not the same or are in a different order compared to the table definition\"\n      );\n    }\n    return new SQLiteInsertBase(this.table, select, this.session, this.dialect, this.withList, true);\n  }\n}\nclass SQLiteInsertBase extends QueryPromise {\n  constructor(table, values, session, dialect, withList, select) {\n    super();\n    this.session = session;\n    this.dialect = dialect;\n    this.config = { table, values, withList, select };\n  }\n  static [entityKind] = \"SQLiteInsert\";\n  /** @internal */\n  config;\n  returning(fields = this.config.table[SQLiteTable.Symbol.Columns]) {\n    this.config.returning = orderSelectedFields(fields);\n    return this;\n  }\n  /**\n   * Adds an `on conflict do nothing` clause to the query.\n   *\n   * Calling this method simply avoids inserting a row as its alternative action.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/insert#on-conflict-do-nothing}\n   *\n   * @param config The `target` and `where` clauses.\n   *\n   * @example\n   * ```ts\n   * // Insert one row and cancel the insert if there's a conflict\n   * await db.insert(cars)\n   *   .values({ id: 1, brand: 'BMW' })\n   *   .onConflictDoNothing();\n   *\n   * // Explicitly specify conflict target\n   * await db.insert(cars)\n   *   .values({ id: 1, brand: 'BMW' })\n   *   .onConflictDoNothing({ target: cars.id });\n   * ```\n   */\n  onConflictDoNothing(config = {}) {\n    if (config.target === void 0) {\n      this.config.onConflict = sql`do nothing`;\n    } else {\n      const targetSql = Array.isArray(config.target) ? sql`${config.target}` : sql`${[config.target]}`;\n      const whereSql = config.where ? sql` where ${config.where}` : sql``;\n      this.config.onConflict = sql`${targetSql} do nothing${whereSql}`;\n    }\n    return this;\n  }\n  /**\n   * Adds an `on conflict do update` clause to the query.\n   *\n   * Calling this method will update the existing row that conflicts with the row proposed for insertion as its alternative action.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/insert#upserts-and-conflicts}\n   *\n   * @param config The `target`, `set` and `where` clauses.\n   *\n   * @example\n   * ```ts\n   * // Update the row if there's a conflict\n   * await db.insert(cars)\n   *   .values({ id: 1, brand: 'BMW' })\n   *   .onConflictDoUpdate({\n   *     target: cars.id,\n   *     set: { brand: 'Porsche' }\n   *   });\n   *\n   * // Upsert with 'where' clause\n   * await db.insert(cars)\n   *   .values({ id: 1, brand: 'BMW' })\n   *   .onConflictDoUpdate({\n   *     target: cars.id,\n   *     set: { brand: 'newBMW' },\n   *     where: sql`${cars.createdAt} > '2023-01-01'::date`,\n   *   });\n   * ```\n   */\n  onConflictDoUpdate(config) {\n    if (config.where && (config.targetWhere || config.setWhere)) {\n      throw new Error(\n        'You cannot use both \"where\" and \"targetWhere\"/\"setWhere\" at the same time - \"where\" is deprecated, use \"targetWhere\" or \"setWhere\" instead.'\n      );\n    }\n    const whereSql = config.where ? sql` where ${config.where}` : void 0;\n    const targetWhereSql = config.targetWhere ? sql` where ${config.targetWhere}` : void 0;\n    const setWhereSql = config.setWhere ? sql` where ${config.setWhere}` : void 0;\n    const targetSql = Array.isArray(config.target) ? sql`${config.target}` : sql`${[config.target]}`;\n    const setSql = this.dialect.buildUpdateSet(this.config.table, mapUpdateSet(this.config.table, config.set));\n    this.config.onConflict = sql`${targetSql}${targetWhereSql} do update set ${setSql}${whereSql}${setWhereSql}`;\n    return this;\n  }\n  /** @internal */\n  getSQL() {\n    return this.dialect.buildInsertQuery(this.config);\n  }\n  toSQL() {\n    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n    return rest;\n  }\n  /** @internal */\n  _prepare(isOneTimeQuery = true) {\n    return this.session[isOneTimeQuery ? \"prepareOneTimeQuery\" : \"prepareQuery\"](\n      this.dialect.sqlToQuery(this.getSQL()),\n      this.config.returning,\n      this.config.returning ? \"all\" : \"run\",\n      true\n    );\n  }\n  prepare() {\n    return this._prepare(false);\n  }\n  run = (placeholderValues) => {\n    return this._prepare().run(placeholderValues);\n  };\n  all = (placeholderValues) => {\n    return this._prepare().all(placeholderValues);\n  };\n  get = (placeholderValues) => {\n    return this._prepare().get(placeholderValues);\n  };\n  values = (placeholderValues) => {\n    return this._prepare().values(placeholderValues);\n  };\n  async execute() {\n    return this.config.returning ? this.all() : this.run();\n  }\n  $dynamic() {\n    return this;\n  }\n}\nexport {\n  SQLiteInsertBase,\n  SQLiteInsertBuilder\n};\n//# sourceMappingURL=insert.js.map","import { entityKind, is } from \"../../entity.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nimport { SelectionProxyHandler } from \"../../selection-proxy.js\";\nimport { SQLiteTable } from \"../table.js\";\nimport { Subquery } from \"../../subquery.js\";\nimport { Table } from \"../../table.js\";\nimport {\n  getTableLikeName,\n  mapUpdateSet,\n  orderSelectedFields\n} from \"../../utils.js\";\nimport { ViewBaseConfig } from \"../../view-common.js\";\nimport { SQLiteViewBase } from \"../view-base.js\";\nclass SQLiteUpdateBuilder {\n  constructor(table, session, dialect, withList) {\n    this.table = table;\n    this.session = session;\n    this.dialect = dialect;\n    this.withList = withList;\n  }\n  static [entityKind] = \"SQLiteUpdateBuilder\";\n  set(values) {\n    return new SQLiteUpdateBase(\n      this.table,\n      mapUpdateSet(this.table, values),\n      this.session,\n      this.dialect,\n      this.withList\n    );\n  }\n}\nclass SQLiteUpdateBase extends QueryPromise {\n  constructor(table, set, session, dialect, withList) {\n    super();\n    this.session = session;\n    this.dialect = dialect;\n    this.config = { set, table, withList, joins: [] };\n  }\n  static [entityKind] = \"SQLiteUpdate\";\n  /** @internal */\n  config;\n  from(source) {\n    this.config.from = source;\n    return this;\n  }\n  createJoin(joinType) {\n    return (table, on) => {\n      const tableName = getTableLikeName(table);\n      if (typeof tableName === \"string\" && this.config.joins.some((join) => join.alias === tableName)) {\n        throw new Error(`Alias \"${tableName}\" is already used in this query`);\n      }\n      if (typeof on === \"function\") {\n        const from = this.config.from ? is(table, SQLiteTable) ? table[Table.Symbol.Columns] : is(table, Subquery) ? table._.selectedFields : is(table, SQLiteViewBase) ? table[ViewBaseConfig].selectedFields : void 0 : void 0;\n        on = on(\n          new Proxy(\n            this.config.table[Table.Symbol.Columns],\n            new SelectionProxyHandler({ sqlAliasedBehavior: \"sql\", sqlBehavior: \"sql\" })\n          ),\n          from && new Proxy(\n            from,\n            new SelectionProxyHandler({ sqlAliasedBehavior: \"sql\", sqlBehavior: \"sql\" })\n          )\n        );\n      }\n      this.config.joins.push({ on, table, joinType, alias: tableName });\n      return this;\n    };\n  }\n  leftJoin = this.createJoin(\"left\");\n  rightJoin = this.createJoin(\"right\");\n  innerJoin = this.createJoin(\"inner\");\n  fullJoin = this.createJoin(\"full\");\n  /**\n   * Adds a 'where' clause to the query.\n   *\n   * Calling this method will update only those rows that fulfill a specified condition.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/update}\n   *\n   * @param where the 'where' clause.\n   *\n   * @example\n   * You can use conditional operators and `sql function` to filter the rows to be updated.\n   *\n   * ```ts\n   * // Update all cars with green color\n   * db.update(cars).set({ color: 'red' })\n   *   .where(eq(cars.color, 'green'));\n   * // or\n   * db.update(cars).set({ color: 'red' })\n   *   .where(sql`${cars.color} = 'green'`)\n   * ```\n   *\n   * You can logically combine conditional operators with `and()` and `or()` operators:\n   *\n   * ```ts\n   * // Update all BMW cars with a green color\n   * db.update(cars).set({ color: 'red' })\n   *   .where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n   *\n   * // Update all cars with the green or blue color\n   * db.update(cars).set({ color: 'red' })\n   *   .where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n   * ```\n   */\n  where(where) {\n    this.config.where = where;\n    return this;\n  }\n  orderBy(...columns) {\n    if (typeof columns[0] === \"function\") {\n      const orderBy = columns[0](\n        new Proxy(\n          this.config.table[Table.Symbol.Columns],\n          new SelectionProxyHandler({ sqlAliasedBehavior: \"alias\", sqlBehavior: \"sql\" })\n        )\n      );\n      const orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n      this.config.orderBy = orderByArray;\n    } else {\n      const orderByArray = columns;\n      this.config.orderBy = orderByArray;\n    }\n    return this;\n  }\n  limit(limit) {\n    this.config.limit = limit;\n    return this;\n  }\n  returning(fields = this.config.table[SQLiteTable.Symbol.Columns]) {\n    this.config.returning = orderSelectedFields(fields);\n    return this;\n  }\n  /** @internal */\n  getSQL() {\n    return this.dialect.buildUpdateQuery(this.config);\n  }\n  toSQL() {\n    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n    return rest;\n  }\n  /** @internal */\n  _prepare(isOneTimeQuery = true) {\n    return this.session[isOneTimeQuery ? \"prepareOneTimeQuery\" : \"prepareQuery\"](\n      this.dialect.sqlToQuery(this.getSQL()),\n      this.config.returning,\n      this.config.returning ? \"all\" : \"run\",\n      true\n    );\n  }\n  prepare() {\n    return this._prepare(false);\n  }\n  run = (placeholderValues) => {\n    return this._prepare().run(placeholderValues);\n  };\n  all = (placeholderValues) => {\n    return this._prepare().all(placeholderValues);\n  };\n  get = (placeholderValues) => {\n    return this._prepare().get(placeholderValues);\n  };\n  values = (placeholderValues) => {\n    return this._prepare().values(placeholderValues);\n  };\n  async execute() {\n    return this.config.returning ? this.all() : this.run();\n  }\n  $dynamic() {\n    return this;\n  }\n}\nexport {\n  SQLiteUpdateBase,\n  SQLiteUpdateBuilder\n};\n//# sourceMappingURL=update.js.map","import { entityKind } from \"../../entity.js\";\nimport { SQL, sql } from \"../../sql/sql.js\";\nclass SQLiteCountBuilder extends SQL {\n  constructor(params) {\n    super(SQLiteCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);\n    this.params = params;\n    this.session = params.session;\n    this.sql = SQLiteCountBuilder.buildCount(\n      params.source,\n      params.filters\n    );\n  }\n  sql;\n  static [entityKind] = \"SQLiteCountBuilderAsync\";\n  [Symbol.toStringTag] = \"SQLiteCountBuilderAsync\";\n  session;\n  static buildEmbeddedCount(source, filters) {\n    return sql`(select count(*) from ${source}${sql.raw(\" where \").if(filters)}${filters})`;\n  }\n  static buildCount(source, filters) {\n    return sql`select count(*) from ${source}${sql.raw(\" where \").if(filters)}${filters}`;\n  }\n  then(onfulfilled, onrejected) {\n    return Promise.resolve(this.session.count(this.sql)).then(\n      onfulfilled,\n      onrejected\n    );\n  }\n  catch(onRejected) {\n    return this.then(void 0, onRejected);\n  }\n  finally(onFinally) {\n    return this.then(\n      (value) => {\n        onFinally?.();\n        return value;\n      },\n      (reason) => {\n        onFinally?.();\n        throw reason;\n      }\n    );\n  }\n}\nexport {\n  SQLiteCountBuilder\n};\n//# sourceMappingURL=count.js.map","import { entityKind } from \"../../entity.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nimport {\n  mapRelationalRow\n} from \"../../relations.js\";\nclass RelationalQueryBuilder {\n  constructor(mode, fullSchema, schema, tableNamesMap, table, tableConfig, dialect, session) {\n    this.mode = mode;\n    this.fullSchema = fullSchema;\n    this.schema = schema;\n    this.tableNamesMap = tableNamesMap;\n    this.table = table;\n    this.tableConfig = tableConfig;\n    this.dialect = dialect;\n    this.session = session;\n  }\n  static [entityKind] = \"SQLiteAsyncRelationalQueryBuilder\";\n  findMany(config) {\n    return this.mode === \"sync\" ? new SQLiteSyncRelationalQuery(\n      this.fullSchema,\n      this.schema,\n      this.tableNamesMap,\n      this.table,\n      this.tableConfig,\n      this.dialect,\n      this.session,\n      config ? config : {},\n      \"many\"\n    ) : new SQLiteRelationalQuery(\n      this.fullSchema,\n      this.schema,\n      this.tableNamesMap,\n      this.table,\n      this.tableConfig,\n      this.dialect,\n      this.session,\n      config ? config : {},\n      \"many\"\n    );\n  }\n  findFirst(config) {\n    return this.mode === \"sync\" ? new SQLiteSyncRelationalQuery(\n      this.fullSchema,\n      this.schema,\n      this.tableNamesMap,\n      this.table,\n      this.tableConfig,\n      this.dialect,\n      this.session,\n      config ? { ...config, limit: 1 } : { limit: 1 },\n      \"first\"\n    ) : new SQLiteRelationalQuery(\n      this.fullSchema,\n      this.schema,\n      this.tableNamesMap,\n      this.table,\n      this.tableConfig,\n      this.dialect,\n      this.session,\n      config ? { ...config, limit: 1 } : { limit: 1 },\n      \"first\"\n    );\n  }\n}\nclass SQLiteRelationalQuery extends QueryPromise {\n  constructor(fullSchema, schema, tableNamesMap, table, tableConfig, dialect, session, config, mode) {\n    super();\n    this.fullSchema = fullSchema;\n    this.schema = schema;\n    this.tableNamesMap = tableNamesMap;\n    this.table = table;\n    this.tableConfig = tableConfig;\n    this.dialect = dialect;\n    this.session = session;\n    this.config = config;\n    this.mode = mode;\n  }\n  static [entityKind] = \"SQLiteAsyncRelationalQuery\";\n  /** @internal */\n  mode;\n  /** @internal */\n  getSQL() {\n    return this.dialect.buildRelationalQuery({\n      fullSchema: this.fullSchema,\n      schema: this.schema,\n      tableNamesMap: this.tableNamesMap,\n      table: this.table,\n      tableConfig: this.tableConfig,\n      queryConfig: this.config,\n      tableAlias: this.tableConfig.tsName\n    }).sql;\n  }\n  /** @internal */\n  _prepare(isOneTimeQuery = false) {\n    const { query, builtQuery } = this._toSQL();\n    return this.session[isOneTimeQuery ? \"prepareOneTimeQuery\" : \"prepareQuery\"](\n      builtQuery,\n      void 0,\n      this.mode === \"first\" ? \"get\" : \"all\",\n      true,\n      (rawRows, mapColumnValue) => {\n        const rows = rawRows.map(\n          (row) => mapRelationalRow(this.schema, this.tableConfig, row, query.selection, mapColumnValue)\n        );\n        if (this.mode === \"first\") {\n          return rows[0];\n        }\n        return rows;\n      }\n    );\n  }\n  prepare() {\n    return this._prepare(false);\n  }\n  _toSQL() {\n    const query = this.dialect.buildRelationalQuery({\n      fullSchema: this.fullSchema,\n      schema: this.schema,\n      tableNamesMap: this.tableNamesMap,\n      table: this.table,\n      tableConfig: this.tableConfig,\n      queryConfig: this.config,\n      tableAlias: this.tableConfig.tsName\n    });\n    const builtQuery = this.dialect.sqlToQuery(query.sql);\n    return { query, builtQuery };\n  }\n  toSQL() {\n    return this._toSQL().builtQuery;\n  }\n  /** @internal */\n  executeRaw() {\n    if (this.mode === \"first\") {\n      return this._prepare(false).get();\n    }\n    return this._prepare(false).all();\n  }\n  async execute() {\n    return this.executeRaw();\n  }\n}\nclass SQLiteSyncRelationalQuery extends SQLiteRelationalQuery {\n  static [entityKind] = \"SQLiteSyncRelationalQuery\";\n  sync() {\n    return this.executeRaw();\n  }\n}\nexport {\n  RelationalQueryBuilder,\n  SQLiteRelationalQuery,\n  SQLiteSyncRelationalQuery\n};\n//# sourceMappingURL=query.js.map","import { entityKind } from \"../../entity.js\";\nimport { QueryPromise } from \"../../query-promise.js\";\nclass SQLiteRaw extends QueryPromise {\n  constructor(execute, getSQL, action, dialect, mapBatchResult) {\n    super();\n    this.execute = execute;\n    this.getSQL = getSQL;\n    this.dialect = dialect;\n    this.mapBatchResult = mapBatchResult;\n    this.config = { action };\n  }\n  static [entityKind] = \"SQLiteRaw\";\n  /** @internal */\n  config;\n  getQuery() {\n    return { ...this.dialect.sqlToQuery(this.getSQL()), method: this.config.action };\n  }\n  mapResult(result, isFromBatch) {\n    return isFromBatch ? this.mapBatchResult(result) : result;\n  }\n  _prepare() {\n    return this;\n  }\n  /** @internal */\n  isResponseInArrayMode() {\n    return false;\n  }\n}\nexport {\n  SQLiteRaw\n};\n//# sourceMappingURL=raw.js.map","import { entityKind } from \"../entity.js\";\nimport { SelectionProxyHandler } from \"../selection-proxy.js\";\nimport { sql } from \"../sql/sql.js\";\nimport {\n  QueryBuilder,\n  SQLiteDeleteBase,\n  SQLiteInsertBuilder,\n  SQLiteSelectBuilder,\n  SQLiteUpdateBuilder\n} from \"./query-builders/index.js\";\nimport { WithSubquery } from \"../subquery.js\";\nimport { SQLiteCountBuilder } from \"./query-builders/count.js\";\nimport { RelationalQueryBuilder } from \"./query-builders/query.js\";\nimport { SQLiteRaw } from \"./query-builders/raw.js\";\nclass BaseSQLiteDatabase {\n  constructor(resultKind, dialect, session, schema) {\n    this.resultKind = resultKind;\n    this.dialect = dialect;\n    this.session = session;\n    this._ = schema ? {\n      schema: schema.schema,\n      fullSchema: schema.fullSchema,\n      tableNamesMap: schema.tableNamesMap\n    } : {\n      schema: void 0,\n      fullSchema: {},\n      tableNamesMap: {}\n    };\n    this.query = {};\n    const query = this.query;\n    if (this._.schema) {\n      for (const [tableName, columns] of Object.entries(this._.schema)) {\n        query[tableName] = new RelationalQueryBuilder(\n          resultKind,\n          schema.fullSchema,\n          this._.schema,\n          this._.tableNamesMap,\n          schema.fullSchema[tableName],\n          columns,\n          dialect,\n          session\n        );\n      }\n    }\n  }\n  static [entityKind] = \"BaseSQLiteDatabase\";\n  query;\n  /**\n   * Creates a subquery that defines a temporary named result set as a CTE.\n   *\n   * It is useful for breaking down complex queries into simpler parts and for reusing the result set in subsequent parts of the query.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n   *\n   * @param alias The alias for the subquery.\n   *\n   * Failure to provide an alias will result in a DrizzleTypeError, preventing the subquery from being referenced in other queries.\n   *\n   * @example\n   *\n   * ```ts\n   * // Create a subquery with alias 'sq' and use it in the select query\n   * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n   *\n   * const result = await db.with(sq).select().from(sq);\n   * ```\n   *\n   * To select arbitrary SQL values as fields in a CTE and reference them in other CTEs or in the main query, you need to add aliases to them:\n   *\n   * ```ts\n   * // Select an arbitrary SQL value as a field in a CTE and reference it in the main query\n   * const sq = db.$with('sq').as(db.select({\n   *   name: sql<string>`upper(${users.name})`.as('name'),\n   * })\n   * .from(users));\n   *\n   * const result = await db.with(sq).select({ name: sq.name }).from(sq);\n   * ```\n   */\n  $with(alias) {\n    const self = this;\n    return {\n      as(qb) {\n        if (typeof qb === \"function\") {\n          qb = qb(new QueryBuilder(self.dialect));\n        }\n        return new Proxy(\n          new WithSubquery(qb.getSQL(), qb.getSelectedFields(), alias, true),\n          new SelectionProxyHandler({ alias, sqlAliasedBehavior: \"alias\", sqlBehavior: \"error\" })\n        );\n      }\n    };\n  }\n  $count(source, filters) {\n    return new SQLiteCountBuilder({ source, filters, session: this.session });\n  }\n  /**\n   * Incorporates a previously defined CTE (using `$with`) into the main query.\n   *\n   * This method allows the main query to reference a temporary named result set.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n   *\n   * @param queries The CTEs to incorporate into the main query.\n   *\n   * @example\n   *\n   * ```ts\n   * // Define a subquery 'sq' as a CTE using $with\n   * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n   *\n   * // Incorporate the CTE 'sq' into the main query and select from it\n   * const result = await db.with(sq).select().from(sq);\n   * ```\n   */\n  with(...queries) {\n    const self = this;\n    function select(fields) {\n      return new SQLiteSelectBuilder({\n        fields: fields ?? void 0,\n        session: self.session,\n        dialect: self.dialect,\n        withList: queries\n      });\n    }\n    function selectDistinct(fields) {\n      return new SQLiteSelectBuilder({\n        fields: fields ?? void 0,\n        session: self.session,\n        dialect: self.dialect,\n        withList: queries,\n        distinct: true\n      });\n    }\n    function update(table) {\n      return new SQLiteUpdateBuilder(table, self.session, self.dialect, queries);\n    }\n    function insert(into) {\n      return new SQLiteInsertBuilder(into, self.session, self.dialect, queries);\n    }\n    function delete_(from) {\n      return new SQLiteDeleteBase(from, self.session, self.dialect, queries);\n    }\n    return { select, selectDistinct, update, insert, delete: delete_ };\n  }\n  select(fields) {\n    return new SQLiteSelectBuilder({ fields: fields ?? void 0, session: this.session, dialect: this.dialect });\n  }\n  selectDistinct(fields) {\n    return new SQLiteSelectBuilder({\n      fields: fields ?? void 0,\n      session: this.session,\n      dialect: this.dialect,\n      distinct: true\n    });\n  }\n  /**\n   * Creates an update query.\n   *\n   * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n   *\n   * Use `.set()` method to specify which values to update.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/update}\n   *\n   * @param table The table to update.\n   *\n   * @example\n   *\n   * ```ts\n   * // Update all rows in the 'cars' table\n   * await db.update(cars).set({ color: 'red' });\n   *\n   * // Update rows with filters and conditions\n   * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n   *\n   * // Update with returning clause\n   * const updatedCar: Car[] = await db.update(cars)\n   *   .set({ color: 'red' })\n   *   .where(eq(cars.id, 1))\n   *   .returning();\n   * ```\n   */\n  update(table) {\n    return new SQLiteUpdateBuilder(table, this.session, this.dialect);\n  }\n  /**\n   * Creates an insert query.\n   *\n   * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/insert}\n   *\n   * @param table The table to insert into.\n   *\n   * @example\n   *\n   * ```ts\n   * // Insert one row\n   * await db.insert(cars).values({ brand: 'BMW' });\n   *\n   * // Insert multiple rows\n   * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n   *\n   * // Insert with returning clause\n   * const insertedCar: Car[] = await db.insert(cars)\n   *   .values({ brand: 'BMW' })\n   *   .returning();\n   * ```\n   */\n  insert(into) {\n    return new SQLiteInsertBuilder(into, this.session, this.dialect);\n  }\n  /**\n   * Creates a delete query.\n   *\n   * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n   *\n   * See docs: {@link https://orm.drizzle.team/docs/delete}\n   *\n   * @param table The table to delete from.\n   *\n   * @example\n   *\n   * ```ts\n   * // Delete all rows in the 'cars' table\n   * await db.delete(cars);\n   *\n   * // Delete rows with filters and conditions\n   * await db.delete(cars).where(eq(cars.color, 'green'));\n   *\n   * // Delete with returning clause\n   * const deletedCar: Car[] = await db.delete(cars)\n   *   .where(eq(cars.id, 1))\n   *   .returning();\n   * ```\n   */\n  delete(from) {\n    return new SQLiteDeleteBase(from, this.session, this.dialect);\n  }\n  run(query) {\n    const sequel = typeof query === \"string\" ? sql.raw(query) : query.getSQL();\n    if (this.resultKind === \"async\") {\n      return new SQLiteRaw(\n        async () => this.session.run(sequel),\n        () => sequel,\n        \"run\",\n        this.dialect,\n        this.session.extractRawRunValueFromBatchResult.bind(this.session)\n      );\n    }\n    return this.session.run(sequel);\n  }\n  all(query) {\n    const sequel = typeof query === \"string\" ? sql.raw(query) : query.getSQL();\n    if (this.resultKind === \"async\") {\n      return new SQLiteRaw(\n        async () => this.session.all(sequel),\n        () => sequel,\n        \"all\",\n        this.dialect,\n        this.session.extractRawAllValueFromBatchResult.bind(this.session)\n      );\n    }\n    return this.session.all(sequel);\n  }\n  get(query) {\n    const sequel = typeof query === \"string\" ? sql.raw(query) : query.getSQL();\n    if (this.resultKind === \"async\") {\n      return new SQLiteRaw(\n        async () => this.session.get(sequel),\n        () => sequel,\n        \"get\",\n        this.dialect,\n        this.session.extractRawGetValueFromBatchResult.bind(this.session)\n      );\n    }\n    return this.session.get(sequel);\n  }\n  values(query) {\n    const sequel = typeof query === \"string\" ? sql.raw(query) : query.getSQL();\n    if (this.resultKind === \"async\") {\n      return new SQLiteRaw(\n        async () => this.session.values(sequel),\n        () => sequel,\n        \"values\",\n        this.dialect,\n        this.session.extractRawValuesValueFromBatchResult.bind(this.session)\n      );\n    }\n    return this.session.values(sequel);\n  }\n  transaction(transaction, config) {\n    return this.session.transaction(transaction, config);\n  }\n}\nconst withReplicas = (primary, replicas, getReplica = () => replicas[Math.floor(Math.random() * replicas.length)]) => {\n  const select = (...args) => getReplica(replicas).select(...args);\n  const selectDistinct = (...args) => getReplica(replicas).selectDistinct(...args);\n  const $with = (...args) => getReplica(replicas).with(...args);\n  const update = (...args) => primary.update(...args);\n  const insert = (...args) => primary.insert(...args);\n  const $delete = (...args) => primary.delete(...args);\n  const run = (...args) => primary.run(...args);\n  const all = (...args) => primary.all(...args);\n  const get = (...args) => primary.get(...args);\n  const values = (...args) => primary.values(...args);\n  const transaction = (...args) => primary.transaction(...args);\n  return {\n    ...primary,\n    update,\n    insert,\n    delete: $delete,\n    run,\n    all,\n    get,\n    values,\n    transaction,\n    $primary: primary,\n    select,\n    selectDistinct,\n    with: $with,\n    get query() {\n      return getReplica(replicas).query;\n    }\n  };\n};\nexport {\n  BaseSQLiteDatabase,\n  withReplicas\n};\n//# sourceMappingURL=db.js.map","import { entityKind } from \"../entity.js\";\nimport { DrizzleError, TransactionRollbackError } from \"../errors.js\";\nimport { QueryPromise } from \"../query-promise.js\";\nimport { BaseSQLiteDatabase } from \"./db.js\";\nclass ExecuteResultSync extends QueryPromise {\n  constructor(resultCb) {\n    super();\n    this.resultCb = resultCb;\n  }\n  static [entityKind] = \"ExecuteResultSync\";\n  async execute() {\n    return this.resultCb();\n  }\n  sync() {\n    return this.resultCb();\n  }\n}\nclass SQLitePreparedQuery {\n  constructor(mode, executeMethod, query) {\n    this.mode = mode;\n    this.executeMethod = executeMethod;\n    this.query = query;\n  }\n  static [entityKind] = \"PreparedQuery\";\n  /** @internal */\n  joinsNotNullableMap;\n  getQuery() {\n    return this.query;\n  }\n  mapRunResult(result, _isFromBatch) {\n    return result;\n  }\n  mapAllResult(_result, _isFromBatch) {\n    throw new Error(\"Not implemented\");\n  }\n  mapGetResult(_result, _isFromBatch) {\n    throw new Error(\"Not implemented\");\n  }\n  execute(placeholderValues) {\n    if (this.mode === \"async\") {\n      return this[this.executeMethod](placeholderValues);\n    }\n    return new ExecuteResultSync(() => this[this.executeMethod](placeholderValues));\n  }\n  mapResult(response, isFromBatch) {\n    switch (this.executeMethod) {\n      case \"run\": {\n        return this.mapRunResult(response, isFromBatch);\n      }\n      case \"all\": {\n        return this.mapAllResult(response, isFromBatch);\n      }\n      case \"get\": {\n        return this.mapGetResult(response, isFromBatch);\n      }\n    }\n  }\n}\nclass SQLiteSession {\n  constructor(dialect) {\n    this.dialect = dialect;\n  }\n  static [entityKind] = \"SQLiteSession\";\n  prepareOneTimeQuery(query, fields, executeMethod, isResponseInArrayMode) {\n    return this.prepareQuery(query, fields, executeMethod, isResponseInArrayMode);\n  }\n  run(query) {\n    const staticQuery = this.dialect.sqlToQuery(query);\n    try {\n      return this.prepareOneTimeQuery(staticQuery, void 0, \"run\", false).run();\n    } catch (err) {\n      throw new DrizzleError({ cause: err, message: `Failed to run the query '${staticQuery.sql}'` });\n    }\n  }\n  /** @internal */\n  extractRawRunValueFromBatchResult(result) {\n    return result;\n  }\n  all(query) {\n    return this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), void 0, \"run\", false).all();\n  }\n  /** @internal */\n  extractRawAllValueFromBatchResult(_result) {\n    throw new Error(\"Not implemented\");\n  }\n  get(query) {\n    return this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), void 0, \"run\", false).get();\n  }\n  /** @internal */\n  extractRawGetValueFromBatchResult(_result) {\n    throw new Error(\"Not implemented\");\n  }\n  values(query) {\n    return this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), void 0, \"run\", false).values();\n  }\n  async count(sql) {\n    const result = await this.values(sql);\n    return result[0][0];\n  }\n  /** @internal */\n  extractRawValuesValueFromBatchResult(_result) {\n    throw new Error(\"Not implemented\");\n  }\n}\nclass SQLiteTransaction extends BaseSQLiteDatabase {\n  constructor(resultType, dialect, session, schema, nestedIndex = 0) {\n    super(resultType, dialect, session, schema);\n    this.schema = schema;\n    this.nestedIndex = nestedIndex;\n  }\n  static [entityKind] = \"SQLiteTransaction\";\n  rollback() {\n    throw new TransactionRollbackError();\n  }\n}\nexport {\n  ExecuteResultSync,\n  SQLitePreparedQuery,\n  SQLiteSession,\n  SQLiteTransaction\n};\n//# sourceMappingURL=session.js.map","import { entityKind } from \"../entity.js\";\nimport { NoopLogger } from \"../logger.js\";\nimport { fillPlaceholders, sql } from \"../sql/sql.js\";\nimport { SQLiteTransaction } from \"../sqlite-core/index.js\";\nimport {\n  SQLitePreparedQuery as PreparedQueryBase,\n  SQLiteSession\n} from \"../sqlite-core/session.js\";\nimport { mapResultRow } from \"../utils.js\";\nclass BetterSQLiteSession extends SQLiteSession {\n  constructor(client, dialect, schema, options = {}) {\n    super(dialect);\n    this.client = client;\n    this.schema = schema;\n    this.logger = options.logger ?? new NoopLogger();\n  }\n  static [entityKind] = \"BetterSQLiteSession\";\n  logger;\n  prepareQuery(query, fields, executeMethod, isResponseInArrayMode, customResultMapper) {\n    const stmt = this.client.prepare(query.sql);\n    return new PreparedQuery(\n      stmt,\n      query,\n      this.logger,\n      fields,\n      executeMethod,\n      isResponseInArrayMode,\n      customResultMapper\n    );\n  }\n  transaction(transaction, config = {}) {\n    const tx = new BetterSQLiteTransaction(\"sync\", this.dialect, this, this.schema);\n    const nativeTx = this.client.transaction(transaction);\n    return nativeTx[config.behavior ?? \"deferred\"](tx);\n  }\n}\nclass BetterSQLiteTransaction extends SQLiteTransaction {\n  static [entityKind] = \"BetterSQLiteTransaction\";\n  transaction(transaction) {\n    const savepointName = `sp${this.nestedIndex}`;\n    const tx = new BetterSQLiteTransaction(\"sync\", this.dialect, this.session, this.schema, this.nestedIndex + 1);\n    this.session.run(sql.raw(`savepoint ${savepointName}`));\n    try {\n      const result = transaction(tx);\n      this.session.run(sql.raw(`release savepoint ${savepointName}`));\n      return result;\n    } catch (err) {\n      this.session.run(sql.raw(`rollback to savepoint ${savepointName}`));\n      throw err;\n    }\n  }\n}\nclass PreparedQuery extends PreparedQueryBase {\n  constructor(stmt, query, logger, fields, executeMethod, _isResponseInArrayMode, customResultMapper) {\n    super(\"sync\", executeMethod, query);\n    this.stmt = stmt;\n    this.logger = logger;\n    this.fields = fields;\n    this._isResponseInArrayMode = _isResponseInArrayMode;\n    this.customResultMapper = customResultMapper;\n  }\n  static [entityKind] = \"BetterSQLitePreparedQuery\";\n  run(placeholderValues) {\n    const params = fillPlaceholders(this.query.params, placeholderValues ?? {});\n    this.logger.logQuery(this.query.sql, params);\n    return this.stmt.run(...params);\n  }\n  all(placeholderValues) {\n    const { fields, joinsNotNullableMap, query, logger, stmt, customResultMapper } = this;\n    if (!fields && !customResultMapper) {\n      const params = fillPlaceholders(query.params, placeholderValues ?? {});\n      logger.logQuery(query.sql, params);\n      return stmt.all(...params);\n    }\n    const rows = this.values(placeholderValues);\n    if (customResultMapper) {\n      return customResultMapper(rows);\n    }\n    return rows.map((row) => mapResultRow(fields, row, joinsNotNullableMap));\n  }\n  get(placeholderValues) {\n    const params = fillPlaceholders(this.query.params, placeholderValues ?? {});\n    this.logger.logQuery(this.query.sql, params);\n    const { fields, stmt, joinsNotNullableMap, customResultMapper } = this;\n    if (!fields && !customResultMapper) {\n      return stmt.get(...params);\n    }\n    const row = stmt.raw().get(...params);\n    if (!row) {\n      return void 0;\n    }\n    if (customResultMapper) {\n      return customResultMapper([row]);\n    }\n    return mapResultRow(fields, row, joinsNotNullableMap);\n  }\n  values(placeholderValues) {\n    const params = fillPlaceholders(this.query.params, placeholderValues ?? {});\n    this.logger.logQuery(this.query.sql, params);\n    return this.stmt.raw().all(...params);\n  }\n  /** @internal */\n  isResponseInArrayMode() {\n    return this._isResponseInArrayMode;\n  }\n}\nexport {\n  BetterSQLiteSession,\n  BetterSQLiteTransaction,\n  PreparedQuery\n};\n//# sourceMappingURL=session.js.map","import Client from \"better-sqlite3\";\nimport { entityKind } from \"../entity.js\";\nimport { DefaultLogger } from \"../logger.js\";\nimport {\n  createTableRelationsHelpers,\n  extractTablesRelationalConfig\n} from \"../relations.js\";\nimport { BaseSQLiteDatabase } from \"../sqlite-core/db.js\";\nimport { SQLiteSyncDialect } from \"../sqlite-core/dialect.js\";\nimport { isConfig } from \"../utils.js\";\nimport { BetterSQLiteSession } from \"./session.js\";\nclass BetterSQLite3Database extends BaseSQLiteDatabase {\n  static [entityKind] = \"BetterSQLite3Database\";\n}\nfunction construct(client, config = {}) {\n  const dialect = new SQLiteSyncDialect({ casing: config.casing });\n  let logger;\n  if (config.logger === true) {\n    logger = new DefaultLogger();\n  } else if (config.logger !== false) {\n    logger = config.logger;\n  }\n  let schema;\n  if (config.schema) {\n    const tablesConfig = extractTablesRelationalConfig(\n      config.schema,\n      createTableRelationsHelpers\n    );\n    schema = {\n      fullSchema: config.schema,\n      schema: tablesConfig.tables,\n      tableNamesMap: tablesConfig.tableNamesMap\n    };\n  }\n  const session = new BetterSQLiteSession(client, dialect, schema, { logger });\n  const db = new BetterSQLite3Database(\"sync\", dialect, session, schema);\n  db.$client = client;\n  return db;\n}\nfunction drizzle(...params) {\n  if (params[0] === void 0 || typeof params[0] === \"string\") {\n    const instance = params[0] === void 0 ? new Client() : new Client(params[0]);\n    return construct(instance, params[1]);\n  }\n  if (isConfig(params[0])) {\n    const { connection, client, ...drizzleConfig } = params[0];\n    if (client)\n      return construct(client, drizzleConfig);\n    if (typeof connection === \"object\") {\n      const { source, ...options } = connection;\n      const instance2 = new Client(source, options);\n      return construct(instance2, drizzleConfig);\n    }\n    const instance = new Client(connection);\n    return construct(instance, drizzleConfig);\n  }\n  return construct(params[0], params[1]);\n}\n((drizzle2) => {\n  function mock(config) {\n    return construct({}, config);\n  }\n  drizzle2.mock = mock;\n})(drizzle || (drizzle = {}));\nexport {\n  BetterSQLite3Database,\n  drizzle\n};\n//# sourceMappingURL=driver.js.map","import path from \"path\";\nimport winston from \"winston\";\nimport envPaths from \"env-paths\";\n\nconst envPath = envPaths(\"dive\", {suffix: \"\"})\n\n// Define log levels\nconst levels = {\n  error: 0,\n  warn: 1,\n  info: 2,\n  http: 3,\n  debug: 4,\n};\n\n// Define log level based on environment\nconst level = () => {\n  const env = process.env.NODE_ENV || \"development\";\n  const isDevelopment = env === \"development\";\n  return isDevelopment ? \"debug\" : \"warn\";\n};\n\n// Define log colors\nconst colors = {\n  error: \"red\",\n  warn: \"yellow\",\n  info: \"green\",\n  http: \"magenta\",\n  debug: \"blue\",\n};\n\nwinston.addColors(colors);\n\n// Define log format\nconst format = winston.format.combine(\n  winston.format.timestamp({ format: \"YYYY-MM-DD HH:mm:ss\" }),\n  winston.format.colorize({ all: true }),\n  winston.format.printf(\n    (info) => `${info.timestamp} ${info.level}: ${info.message}`\n  )\n);\n\n// Define log storage locations\nconst transports = [\n  new winston.transports.Console(),\n  new winston.transports.File({\n    filename: path.join(envPath.log, \"error.log\"),\n    level: \"error\",\n  }),\n  new winston.transports.File({\n    filename: path.join(envPath.log, \"all.log\"),\n  }),\n];\n\n// Create logger instance\nconst logger = winston.createLogger({\n  level: level(),\n  levels,\n  format,\n  transports,\n});\n\nexport default logger;\n","import { integer, sqliteTable, text } from \"drizzle-orm/sqlite-core\";\n\nexport const chats = sqliteTable(\"chats\", {\n  id: text(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  createdAt: text(\"created_at\").notNull(),\n});\n\nexport const messages = sqliteTable(\"messages\", {\n  id: integer(\"id\").primaryKey({ autoIncrement: true }),\n  content: text(\"content\").notNull(),\n  role: text(\"role\").notNull(),\n  chatId: text(\"chat_id\").notNull(),\n  messageId: text(\"message_id\").notNull(),\n  createdAt: text(\"created_at\").notNull(),\n  files: text(\"files\", { mode: \"json\" }).notNull(),\n});\n\n// export types\nexport type Chat = typeof chats.$inferSelect;\nexport type NewChat = typeof chats.$inferInsert;\nexport type Message = typeof messages.$inferSelect;\nexport type NewMessage = typeof messages.$inferInsert;\n","import { iQueryInput } from \"../utils/types.js\";\nimport axios, { AxiosInstance } from \"axios\";\nimport Database from \"better-sqlite3\";\nimport { and, eq, gt } from \"drizzle-orm\";\nimport { BetterSQLite3Database, drizzle } from \"drizzle-orm/better-sqlite3\";\nimport jwt from \"jsonwebtoken\";\nimport logger from \"../utils/logger.js\";\nimport * as schema from \"./schema.js\";\nimport { chats, messages, type NewMessage } from \"./schema.js\";\n\n// 定義通用的請求選項介面\ninterface DatabaseOptions {\n  user_access_token?: string;\n  fingerprint?: string;\n  LLM_Model?: {\n    model: string;\n    total_input_tokens: number;\n    total_output_tokens: number;\n    total_run_time: number;\n  };\n}\n\n// define database operations\ninterface DatabaseOperations {\n  MODE: DatabaseMode;\n  db: BetterSQLite3Database<typeof schema>;\n  getAllChats(options?: DatabaseOptions): Promise<(typeof schema.chats.$inferSelect)[]>;\n  getChatWithMessages(\n    chatId: string,\n    options?: DatabaseOptions\n  ): Promise<{ chat: typeof schema.chats.$inferSelect; messages: (typeof schema.messages.$inferSelect)[] } | null>;\n  createChat(chatId: string, title: string, options?: DatabaseOptions): Promise<typeof schema.chats.$inferSelect>;\n  createMessage(data: NewMessage, options?: DatabaseOptions): Promise<typeof schema.messages.$inferSelect>;\n  checkChatExists(chatId: string, options?: DatabaseOptions): Promise<boolean>;\n  deleteChat(chatId: string, options?: DatabaseOptions): Promise<void>;\n  deleteMessagesAfter(chatId: string, messageId: string, options?: DatabaseOptions): Promise<void>;\n  updateMessageContent(messageId: string, data: iQueryInput, options?: DatabaseOptions): Promise<typeof schema.messages.$inferSelect>;\n  getNextAIMessage(chatId: string, messageId: string): Promise<typeof schema.messages.$inferSelect>;\n}\n\n// direct database access implementation\nclass DirectDatabaseAccess implements DatabaseOperations {\n  public db: BetterSQLite3Database<typeof schema>;\n  public MODE: DatabaseMode = DatabaseMode.DIRECT;\n  constructor(dbPath?: string) {\n    try {\n      const sqlite = new Database(dbPath || \"data/database.sqlite\");\n      this.db = drizzle(sqlite, { schema: schema });\n\n      // Create index after drizzle initialization\n      // sqlite.exec(`\n      //   CREATE INDEX IF NOT EXISTS message_chat_id_idx\n      //     ON messages(chat_id)\n      //   `);\n      logger.info(\"Database initialized\");\n    } catch (error) {\n      logger.error(\"Error initializing database:\", error);\n      throw error;\n    }\n  }\n\n  async getAllChats(_options?: DatabaseOptions) {\n    const chats = await this.db.query.chats.findMany();\n    return chats.reverse();\n  }\n\n  async getChatWithMessages(chatId: string, _options?: DatabaseOptions) {\n    const chat = await this.db.query.chats.findFirst({\n      where: eq(chats.id, chatId),\n    });\n\n    if (!chat) return null;\n\n    const history = await this.db.query.messages.findMany({\n      where: eq(messages.chatId, chatId),\n    });\n\n    return { chat, messages: history };\n  }\n\n  async createChat(chatId: string, title: string, _options?: DatabaseOptions) {\n    const [chat] = await this.db\n      .insert(chats)\n      .values({ id: chatId, title, createdAt: new Date().toISOString() })\n      .returning();\n    return chat;\n  }\n\n  async createMessage(data: NewMessage, _options?: DatabaseOptions) {\n    return await this.db.transaction(async (tx) => {\n      const chatExists = await tx.query.chats.findFirst({\n        where: eq(chats.id, data.chatId),\n      });\n\n      if (!chatExists) {\n        throw new Error(`Chat ${data.chatId} does not exist`);\n      }\n\n      const [message] = await tx.insert(messages).values(data).returning();\n      return message;\n    });\n  }\n\n  async checkChatExists(chatId: string, _options?: DatabaseOptions) {\n    const chat = await this.db.query.chats.findFirst({\n      where: eq(chats.id, chatId),\n    });\n    return !!chat;\n  }\n\n  async deleteChat(chatId: string, _options?: DatabaseOptions) {\n    await this.db.delete(chats).where(eq(chats.id, chatId));\n    await this.db.delete(messages).where(eq(messages.chatId, chatId));\n  }\n\n  async deleteMessagesAfter(chatId: string, messageId: string, _options?: DatabaseOptions) {\n    const targetMessage = await this.db.query.messages.findFirst({\n      where: eq(messages.messageId, messageId),\n    });\n\n    if (!targetMessage) {\n      throw new Error(`Message ${messageId} does not exist`);\n    }\n\n    await this.db.delete(messages).where(and(eq(messages.chatId, chatId), gt(messages.id, targetMessage.id - 1)));\n  }\n\n  // Update message content\n  updateMessageContent = async (messageId: string, data: iQueryInput) => {\n    const message = await this.db.query.messages.findFirst({\n      where: eq(messages.messageId, messageId),\n    });\n\n    if (!message) {\n      throw new Error(`Update Message ${messageId} does not exist`);\n    }\n\n    if (message.role !== \"user\") {\n      throw new Error(\"Only user messages can be edited\");\n    }\n\n    // Prepare data for update\n    const updateData: Partial<NewMessage> = {};\n\n    if (data.text !== undefined) {\n      updateData.content = data.text;\n    }\n\n    const files: string[] = [];\n    if (data.images) {\n      files.push(...data.images);\n    }\n    if (data.documents) {\n      files.push(...data.documents);\n    }\n    updateData.files = files;\n\n    const [updatedMessage] = await this.db\n      .update(messages)\n      .set(updateData)\n      .where(eq(messages.messageId, messageId))\n      .returning();\n\n    return updatedMessage;\n  };\n\n  // Get the next AI message after a user message\n  getNextAIMessage = async (chatId: string, messageId: string) => {\n    const userMessage = await this.db.query.messages.findFirst({\n      where: eq(messages.messageId, messageId),\n    });\n\n    if (!userMessage) {\n      throw new Error(`The Message ${messageId} for get Next AI Message does not exist`);\n    }\n\n    if (userMessage.role !== \"user\") {\n      throw new Error(\"Can only get next AI message for user messages\");\n    }\n\n    const nextMessage = await this.db.query.messages.findFirst({\n      where: and(eq(messages.chatId, chatId), gt(messages.id, userMessage.id), eq(messages.role, \"assistant\")),\n    });\n\n    if (!nextMessage) {\n      throw new Error(`No AI message found after user message ${messageId}. This indicates a data integrity issue.`);\n    }\n\n    return nextMessage;\n  };\n}\n\n// API access implementation\nclass ApiDatabaseAccess implements DatabaseOperations {\n  public db: any\n  private baseUrl: string;\n  private verifyToken: string | null;\n  private axiosInstance!: AxiosInstance;\n  public MODE: DatabaseMode = DatabaseMode.API;\n\n  constructor(baseUrl: string) {\n    this.db = null;\n    this.baseUrl = baseUrl;\n    this.verifyToken = null;\n    void this.initAxios();\n  }\n\n  private async initAxios() {\n    const https = await import(\"https\");\n    this.axiosInstance = axios.create({\n      baseURL: this.baseUrl,\n      httpsAgent: new https.Agent({\n        rejectUnauthorized: false,\n      }),\n    });\n  }\n\n  private async getHeaders(options?: DatabaseOptions) {\n    const token = await this.getVerifyToken();\n    return {\n      Authorization: options?.user_access_token ? `Bearer ${options.user_access_token}` : undefined,\n      \"X-MCP-TOKEN\": token,\n    };\n  }\n\n  private getUseridFromJWT(token: string) {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET || \"\");\n    return decoded.sub;\n  }\n\n  async getVerifyToken() {\n    if (this.verifyToken) return this.verifyToken;\n    try {\n      const response = await this.axiosInstance.post(\"/token\", {\n        fingerprint: \"funmula\",\n      });\n      if (response.data.result && response.data.token) {\n        this.verifyToken = response.data.token;\n      }\n      if (!this.verifyToken) {\n        throw new Error(\"Verify token is null\");\n      }\n      return this.verifyToken;\n    } catch (error) {\n      logger.error(\"Error getting verify token:\", error);\n      throw error;\n    }\n  }\n\n  async getAllChats(options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const response = await this.axiosInstance.get(\"/session/user\", {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n    const resBody = response.data;\n\n    if (!resBody.result) {\n      throw new Error(\"Failed to get chats - \" + resBody.message);\n    }\n\n    const chats = resBody.data.map((chat: any) => ({\n      id: chat.mcp_session_id,\n      title: chat.title,\n      createdAt: chat.createtime,\n    })) as (typeof schema.chats.$inferSelect)[];\n    return chats;\n  }\n\n  async getChatWithMessages(chatId: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const chatResponse = await this.axiosInstance.get(`/session/${chatId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n\n    const chatResBody = chatResponse.data;\n    if (!chatResBody.result) {\n      logger.debug(`[${chatId}] [Get chat with messages] Chat Response - ${JSON.stringify(chatResBody)}`);\n      return null;\n    }\n\n    const messageResponse = await this.axiosInstance.get(`/message/${chatId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n\n    const messageResBody = messageResponse.data;\n    if (!messageResBody.result) {\n      logger.debug(`[${chatId}] [Get chat with messages] Message Response - ${JSON.stringify(messageResBody)}`);\n      return null;\n    }\n\n    const chat = {\n      id: chatResBody.data.mcp_session_id,\n      title: chatResBody.data.title,\n      createdAt: chatResBody.data.createtime,\n    } as typeof schema.chats.$inferSelect;\n\n    const messages = messageResBody.data.map((message: any) => ({\n      id: message.mcp_message_id,\n      messageId: message.mcp_message_id,\n      content: message.content,\n      createdAt: message.createtime,\n      role: message.role,\n      chatId: message.mcp_session_id,\n    })) as (typeof schema.messages.$inferSelect)[];\n\n    return { chat, messages };\n  }\n\n  async createChat(chatId: string, title: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const response = await this.axiosInstance.post(\n      \"/session\",\n      {\n        id: chatId,\n        mcp_session_id: chatId,\n        title,\n        fingerprint,\n      },\n      {\n        headers: await this.getHeaders(options),\n      }\n    );\n\n    const resBody = response.data;\n    if (!resBody.result) {\n      throw new Error(\"Failed to create chat - \" + resBody.message);\n    }\n    return resBody.data;\n  }\n\n  async createMessage(data: NewMessage, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const response = await this.axiosInstance.post(\n      \"/message\",\n      {\n        ...data,\n        mcp_session_id: data.chatId,\n        mcp_message_id: data.messageId,\n        createtime: data.createdAt,\n        fingerprint,\n        LLM_Model: data.role === \"assistant\" ? options?.LLM_Model : undefined,\n      },\n      {\n        headers: await this.getHeaders(options),\n      }\n    );\n\n    const resBody = response.data;\n    if (!resBody.result) {\n      throw new Error(\"Failed to create message - \" + resBody.message);\n    }\n    return resBody.data;\n  }\n\n  async checkChatExists(chatId: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const response = await this.axiosInstance.get(`/session/${chatId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n    const resBody = response.data;\n    return resBody.result;\n  }\n\n  async deleteChat(chatId: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    await this.axiosInstance.delete(`/message/${chatId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n  }\n\n  async deleteMessagesAfter(chatId: string, messageId: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    await this.axiosInstance.delete(`/message/${chatId}/${messageId}/after`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n  }\n\n  async deleteSingleMessage(chatId: string, messageId: string, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    await this.axiosInstance.delete(`/message/${chatId}/${messageId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n  }\n\n  async updateMessageContent(messageId: string, data: iQueryInput, options?: DatabaseOptions) {\n    const { fingerprint = \"funmula\" } = options || {};\n    const response = await this.axiosInstance.put(`/message/${messageId}`, {\n      headers: await this.getHeaders(options),\n      data: {\n        fingerprint,\n      },\n    });\n    return response.data as typeof schema.messages.$inferSelect;\n  }\n\n  async getNextAIMessage(chatId: string, messageId: string) {\n    const response = await this.axiosInstance.get(`/message/${chatId}/${messageId}/next`, {\n      headers: await this.getHeaders(),\n    });\n    return response.data;\n  }\n}\n// Database access mode\nexport enum DatabaseMode {\n  DIRECT = \"direct\",\n  API = \"api\",\n}\n\n// Database operations instance\nlet databaseOperations: DatabaseOperations;\n\n// Initialize database\nexport const initDatabase = (mode: DatabaseMode, config: { dbPath?: string; apiUrl?: string }) => {\n  switch (mode) {\n    case DatabaseMode.DIRECT:\n      if (!config.dbPath) throw new Error(\"Database path is required for Direct mode\");\n      databaseOperations = new DirectDatabaseAccess(config.dbPath);\n      break;\n    case DatabaseMode.API:\n      if (!config.apiUrl) throw new Error(\"API URL is required for API mode\");\n      databaseOperations = new ApiDatabaseAccess(config.apiUrl);\n      break;\n    default:\n      throw new Error(\"Invalid database mode\");\n  }\n};\n\n// Export all database operations\nexport const getAllChats = (options?: DatabaseOptions) => databaseOperations.getAllChats(options);\nexport const getChatWithMessages = (chatId: string, options?: DatabaseOptions) =>\n  databaseOperations.getChatWithMessages(chatId, options);\nexport const createChat = (chatId: string, title: string, options?: DatabaseOptions) =>\n  databaseOperations.createChat(chatId, title, options);\nexport const createMessage = (data: NewMessage, options?: DatabaseOptions) =>\n  databaseOperations.createMessage(data, options);\nexport const checkChatExists = (chatId: string, options?: DatabaseOptions) =>\n  databaseOperations.checkChatExists(chatId, options);\nexport const deleteChat = (chatId: string, options?: DatabaseOptions) => databaseOperations.deleteChat(chatId, options);\nexport const deleteMessagesAfter = (chatId: string, messageId: string, options?: DatabaseOptions) =>\n  databaseOperations.deleteMessagesAfter(chatId, messageId, options);\nexport const updateMessageContent = (messageId: string, data: iQueryInput, options?: DatabaseOptions) =>\n  databaseOperations.updateMessageContent(messageId, data, options);\nexport const getNextAIMessage = (chatId: string, messageId: string) =>\n  databaseOperations.getNextAIMessage(chatId, messageId);\nexport const getDatabaseMode = () => databaseOperations.MODE;\nexport const getDB = () => databaseOperations.db;\n","import { z } from \"zod\";\nexport const LATEST_PROTOCOL_VERSION = \"2024-11-05\";\nexport const SUPPORTED_PROTOCOL_VERSIONS = [\n    LATEST_PROTOCOL_VERSION,\n    \"2024-10-07\",\n];\n/* JSON-RPC types */\nexport const JSONRPC_VERSION = \"2.0\";\n/**\n * A progress token, used to associate progress notifications with the original request.\n */\nexport const ProgressTokenSchema = z.union([z.string(), z.number().int()]);\n/**\n * An opaque token used to represent a cursor for pagination.\n */\nexport const CursorSchema = z.string();\nconst BaseRequestParamsSchema = z\n    .object({\n    _meta: z.optional(z\n        .object({\n        /**\n         * If specified, the caller is requesting out-of-band progress notifications for this request (as represented by notifications/progress). The value of this parameter is an opaque token that will be attached to any subsequent notifications. The receiver is not obligated to provide these notifications.\n         */\n        progressToken: z.optional(ProgressTokenSchema),\n    })\n        .passthrough()),\n})\n    .passthrough();\nexport const RequestSchema = z.object({\n    method: z.string(),\n    params: z.optional(BaseRequestParamsSchema),\n});\nconst BaseNotificationParamsSchema = z\n    .object({\n    /**\n     * This parameter name is reserved by MCP to allow clients and servers to attach additional metadata to their notifications.\n     */\n    _meta: z.optional(z.object({}).passthrough()),\n})\n    .passthrough();\nexport const NotificationSchema = z.object({\n    method: z.string(),\n    params: z.optional(BaseNotificationParamsSchema),\n});\nexport const ResultSchema = z\n    .object({\n    /**\n     * This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.\n     */\n    _meta: z.optional(z.object({}).passthrough()),\n})\n    .passthrough();\n/**\n * A uniquely identifying ID for a request in JSON-RPC.\n */\nexport const RequestIdSchema = z.union([z.string(), z.number().int()]);\n/**\n * A request that expects a response.\n */\nexport const JSONRPCRequestSchema = z\n    .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n})\n    .merge(RequestSchema)\n    .strict();\n/**\n * A notification which does not expect a response.\n */\nexport const JSONRPCNotificationSchema = z\n    .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n})\n    .merge(NotificationSchema)\n    .strict();\n/**\n * A successful (non-error) response to a request.\n */\nexport const JSONRPCResponseSchema = z\n    .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n    result: ResultSchema,\n})\n    .strict();\n/**\n * Error codes defined by the JSON-RPC specification.\n */\nexport var ErrorCode;\n(function (ErrorCode) {\n    // SDK error codes\n    ErrorCode[ErrorCode[\"ConnectionClosed\"] = -32000] = \"ConnectionClosed\";\n    ErrorCode[ErrorCode[\"RequestTimeout\"] = -32001] = \"RequestTimeout\";\n    // Standard JSON-RPC error codes\n    ErrorCode[ErrorCode[\"ParseError\"] = -32700] = \"ParseError\";\n    ErrorCode[ErrorCode[\"InvalidRequest\"] = -32600] = \"InvalidRequest\";\n    ErrorCode[ErrorCode[\"MethodNotFound\"] = -32601] = \"MethodNotFound\";\n    ErrorCode[ErrorCode[\"InvalidParams\"] = -32602] = \"InvalidParams\";\n    ErrorCode[ErrorCode[\"InternalError\"] = -32603] = \"InternalError\";\n})(ErrorCode || (ErrorCode = {}));\n/**\n * A response to a request that indicates an error occurred.\n */\nexport const JSONRPCErrorSchema = z\n    .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n    error: z.object({\n        /**\n         * The error type that occurred.\n         */\n        code: z.number().int(),\n        /**\n         * A short description of the error. The message SHOULD be limited to a concise single sentence.\n         */\n        message: z.string(),\n        /**\n         * Additional information about the error. The value of this member is defined by the sender (e.g. detailed error information, nested errors etc.).\n         */\n        data: z.optional(z.unknown()),\n    }),\n})\n    .strict();\nexport const JSONRPCMessageSchema = z.union([\n    JSONRPCRequestSchema,\n    JSONRPCNotificationSchema,\n    JSONRPCResponseSchema,\n    JSONRPCErrorSchema,\n]);\n/* Empty result */\n/**\n * A response that indicates success but carries no data.\n */\nexport const EmptyResultSchema = ResultSchema.strict();\n/* Cancellation */\n/**\n * This notification can be sent by either side to indicate that it is cancelling a previously-issued request.\n *\n * The request SHOULD still be in-flight, but due to communication latency, it is always possible that this notification MAY arrive after the request has already finished.\n *\n * This notification indicates that the result will be unused, so any associated processing SHOULD cease.\n *\n * A client MUST NOT attempt to cancel its `initialize` request.\n */\nexport const CancelledNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/cancelled\"),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The ID of the request to cancel.\n         *\n         * This MUST correspond to the ID of a request previously issued in the same direction.\n         */\n        requestId: RequestIdSchema,\n        /**\n         * An optional string describing the reason for the cancellation. This MAY be logged or presented to the user.\n         */\n        reason: z.string().optional(),\n    }),\n});\n/* Initialization */\n/**\n * Describes the name and version of an MCP implementation.\n */\nexport const ImplementationSchema = z\n    .object({\n    name: z.string(),\n    version: z.string(),\n})\n    .passthrough();\n/**\n * Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.\n */\nexport const ClientCapabilitiesSchema = z\n    .object({\n    /**\n     * Experimental, non-standard capabilities that the client supports.\n     */\n    experimental: z.optional(z.object({}).passthrough()),\n    /**\n     * Present if the client supports sampling from an LLM.\n     */\n    sampling: z.optional(z.object({}).passthrough()),\n    /**\n     * Present if the client supports listing roots.\n     */\n    roots: z.optional(z\n        .object({\n        /**\n         * Whether the client supports issuing notifications for changes to the roots list.\n         */\n        listChanged: z.optional(z.boolean()),\n    })\n        .passthrough()),\n})\n    .passthrough();\n/**\n * This request is sent from the client to the server when it first connects, asking it to begin initialization.\n */\nexport const InitializeRequestSchema = RequestSchema.extend({\n    method: z.literal(\"initialize\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The latest version of the Model Context Protocol that the client supports. The client MAY decide to support older versions as well.\n         */\n        protocolVersion: z.string(),\n        capabilities: ClientCapabilitiesSchema,\n        clientInfo: ImplementationSchema,\n    }),\n});\n/**\n * Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.\n */\nexport const ServerCapabilitiesSchema = z\n    .object({\n    /**\n     * Experimental, non-standard capabilities that the server supports.\n     */\n    experimental: z.optional(z.object({}).passthrough()),\n    /**\n     * Present if the server supports sending log messages to the client.\n     */\n    logging: z.optional(z.object({}).passthrough()),\n    /**\n     * Present if the server offers any prompt templates.\n     */\n    prompts: z.optional(z\n        .object({\n        /**\n         * Whether this server supports issuing notifications for changes to the prompt list.\n         */\n        listChanged: z.optional(z.boolean()),\n    })\n        .passthrough()),\n    /**\n     * Present if the server offers any resources to read.\n     */\n    resources: z.optional(z\n        .object({\n        /**\n         * Whether this server supports clients subscribing to resource updates.\n         */\n        subscribe: z.optional(z.boolean()),\n        /**\n         * Whether this server supports issuing notifications for changes to the resource list.\n         */\n        listChanged: z.optional(z.boolean()),\n    })\n        .passthrough()),\n    /**\n     * Present if the server offers any tools to call.\n     */\n    tools: z.optional(z\n        .object({\n        /**\n         * Whether this server supports issuing notifications for changes to the tool list.\n         */\n        listChanged: z.optional(z.boolean()),\n    })\n        .passthrough()),\n})\n    .passthrough();\n/**\n * After receiving an initialize request from the client, the server sends this response.\n */\nexport const InitializeResultSchema = ResultSchema.extend({\n    /**\n     * The version of the Model Context Protocol that the server wants to use. This may not match the version that the client requested. If the client cannot support this version, it MUST disconnect.\n     */\n    protocolVersion: z.string(),\n    capabilities: ServerCapabilitiesSchema,\n    serverInfo: ImplementationSchema,\n    /**\n     * Instructions describing how to use the server and its features.\n     *\n     * This can be used by clients to improve the LLM's understanding of available tools, resources, etc. It can be thought of like a \"hint\" to the model. For example, this information MAY be added to the system prompt.\n     */\n    instructions: z.optional(z.string()),\n});\n/**\n * This notification is sent from the client to the server after initialization has finished.\n */\nexport const InitializedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/initialized\"),\n});\n/* Ping */\n/**\n * A ping, issued by either the server or the client, to check that the other party is still alive. The receiver must promptly respond, or else may be disconnected.\n */\nexport const PingRequestSchema = RequestSchema.extend({\n    method: z.literal(\"ping\"),\n});\n/* Progress notifications */\nexport const ProgressSchema = z\n    .object({\n    /**\n     * The progress thus far. This should increase every time progress is made, even if the total is unknown.\n     */\n    progress: z.number(),\n    /**\n     * Total number of items to process (or total progress required), if known.\n     */\n    total: z.optional(z.number()),\n})\n    .passthrough();\n/**\n * An out-of-band notification used to inform the receiver of a progress update for a long-running request.\n */\nexport const ProgressNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/progress\"),\n    params: BaseNotificationParamsSchema.merge(ProgressSchema).extend({\n        /**\n         * The progress token which was given in the initial request, used to associate this notification with the request that is proceeding.\n         */\n        progressToken: ProgressTokenSchema,\n    }),\n});\n/* Pagination */\nexport const PaginatedRequestSchema = RequestSchema.extend({\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * An opaque token representing the current pagination position.\n         * If provided, the server should return results starting after this cursor.\n         */\n        cursor: z.optional(CursorSchema),\n    }).optional(),\n});\nexport const PaginatedResultSchema = ResultSchema.extend({\n    /**\n     * An opaque token representing the pagination position after the last returned result.\n     * If present, there may be more results available.\n     */\n    nextCursor: z.optional(CursorSchema),\n});\n/* Resources */\n/**\n * The contents of a specific resource or sub-resource.\n */\nexport const ResourceContentsSchema = z\n    .object({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n})\n    .passthrough();\nexport const TextResourceContentsSchema = ResourceContentsSchema.extend({\n    /**\n     * The text of the item. This must only be set if the item can actually be represented as text (not binary data).\n     */\n    text: z.string(),\n});\nexport const BlobResourceContentsSchema = ResourceContentsSchema.extend({\n    /**\n     * A base64-encoded string representing the binary data of the item.\n     */\n    blob: z.string().base64(),\n});\n/**\n * A known resource that the server is capable of reading.\n */\nexport const ResourceSchema = z\n    .object({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n    /**\n     * A human-readable name for this resource.\n     *\n     * This can be used by clients to populate UI elements.\n     */\n    name: z.string(),\n    /**\n     * A description of what this resource represents.\n     *\n     * This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a \"hint\" to the model.\n     */\n    description: z.optional(z.string()),\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n})\n    .passthrough();\n/**\n * A template description for resources available on the server.\n */\nexport const ResourceTemplateSchema = z\n    .object({\n    /**\n     * A URI template (according to RFC 6570) that can be used to construct resource URIs.\n     */\n    uriTemplate: z.string(),\n    /**\n     * A human-readable name for the type of resource this template refers to.\n     *\n     * This can be used by clients to populate UI elements.\n     */\n    name: z.string(),\n    /**\n     * A description of what this template is for.\n     *\n     * This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a \"hint\" to the model.\n     */\n    description: z.optional(z.string()),\n    /**\n     * The MIME type for all resources that match this template. This should only be included if all resources matching this template have the same type.\n     */\n    mimeType: z.optional(z.string()),\n})\n    .passthrough();\n/**\n * Sent from the client to request a list of resources the server has.\n */\nexport const ListResourcesRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal(\"resources/list\"),\n});\n/**\n * The server's response to a resources/list request from the client.\n */\nexport const ListResourcesResultSchema = PaginatedResultSchema.extend({\n    resources: z.array(ResourceSchema),\n});\n/**\n * Sent from the client to request a list of resource templates the server has.\n */\nexport const ListResourceTemplatesRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal(\"resources/templates/list\"),\n});\n/**\n * The server's response to a resources/templates/list request from the client.\n */\nexport const ListResourceTemplatesResultSchema = PaginatedResultSchema.extend({\n    resourceTemplates: z.array(ResourceTemplateSchema),\n});\n/**\n * Sent from the client to the server, to read a specific resource URI.\n */\nexport const ReadResourceRequestSchema = RequestSchema.extend({\n    method: z.literal(\"resources/read\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to read. The URI can use any protocol; it is up to the server how to interpret it.\n         */\n        uri: z.string(),\n    }),\n});\n/**\n * The server's response to a resources/read request from the client.\n */\nexport const ReadResourceResultSchema = ResultSchema.extend({\n    contents: z.array(z.union([TextResourceContentsSchema, BlobResourceContentsSchema])),\n});\n/**\n * An optional notification from the server to the client, informing it that the list of resources it can read from has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const ResourceListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/resources/list_changed\"),\n});\n/**\n * Sent from the client to request resources/updated notifications from the server whenever a particular resource changes.\n */\nexport const SubscribeRequestSchema = RequestSchema.extend({\n    method: z.literal(\"resources/subscribe\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to subscribe to. The URI can use any protocol; it is up to the server how to interpret it.\n         */\n        uri: z.string(),\n    }),\n});\n/**\n * Sent from the client to request cancellation of resources/updated notifications from the server. This should follow a previous resources/subscribe request.\n */\nexport const UnsubscribeRequestSchema = RequestSchema.extend({\n    method: z.literal(\"resources/unsubscribe\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to unsubscribe from.\n         */\n        uri: z.string(),\n    }),\n});\n/**\n * A notification from the server to the client, informing it that a resource has changed and may need to be read again. This should only be sent if the client previously sent a resources/subscribe request.\n */\nexport const ResourceUpdatedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/resources/updated\"),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The URI of the resource that has been updated. This might be a sub-resource of the one that the client actually subscribed to.\n         */\n        uri: z.string(),\n    }),\n});\n/* Prompts */\n/**\n * Describes an argument that a prompt can accept.\n */\nexport const PromptArgumentSchema = z\n    .object({\n    /**\n     * The name of the argument.\n     */\n    name: z.string(),\n    /**\n     * A human-readable description of the argument.\n     */\n    description: z.optional(z.string()),\n    /**\n     * Whether this argument must be provided.\n     */\n    required: z.optional(z.boolean()),\n})\n    .passthrough();\n/**\n * A prompt or prompt template that the server offers.\n */\nexport const PromptSchema = z\n    .object({\n    /**\n     * The name of the prompt or prompt template.\n     */\n    name: z.string(),\n    /**\n     * An optional description of what this prompt provides\n     */\n    description: z.optional(z.string()),\n    /**\n     * A list of arguments to use for templating the prompt.\n     */\n    arguments: z.optional(z.array(PromptArgumentSchema)),\n})\n    .passthrough();\n/**\n * Sent from the client to request a list of prompts and prompt templates the server has.\n */\nexport const ListPromptsRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal(\"prompts/list\"),\n});\n/**\n * The server's response to a prompts/list request from the client.\n */\nexport const ListPromptsResultSchema = PaginatedResultSchema.extend({\n    prompts: z.array(PromptSchema),\n});\n/**\n * Used by the client to get a prompt provided by the server.\n */\nexport const GetPromptRequestSchema = RequestSchema.extend({\n    method: z.literal(\"prompts/get\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The name of the prompt or prompt template.\n         */\n        name: z.string(),\n        /**\n         * Arguments to use for templating the prompt.\n         */\n        arguments: z.optional(z.record(z.string())),\n    }),\n});\n/**\n * Text provided to or from an LLM.\n */\nexport const TextContentSchema = z\n    .object({\n    type: z.literal(\"text\"),\n    /**\n     * The text content of the message.\n     */\n    text: z.string(),\n})\n    .passthrough();\n/**\n * An image provided to or from an LLM.\n */\nexport const ImageContentSchema = z\n    .object({\n    type: z.literal(\"image\"),\n    /**\n     * The base64-encoded image data.\n     */\n    data: z.string().base64(),\n    /**\n     * The MIME type of the image. Different providers may support different image types.\n     */\n    mimeType: z.string(),\n})\n    .passthrough();\n/**\n * The contents of a resource, embedded into a prompt or tool call result.\n */\nexport const EmbeddedResourceSchema = z\n    .object({\n    type: z.literal(\"resource\"),\n    resource: z.union([TextResourceContentsSchema, BlobResourceContentsSchema]),\n})\n    .passthrough();\n/**\n * Describes a message returned as part of a prompt.\n */\nexport const PromptMessageSchema = z\n    .object({\n    role: z.enum([\"user\", \"assistant\"]),\n    content: z.union([\n        TextContentSchema,\n        ImageContentSchema,\n        EmbeddedResourceSchema,\n    ]),\n})\n    .passthrough();\n/**\n * The server's response to a prompts/get request from the client.\n */\nexport const GetPromptResultSchema = ResultSchema.extend({\n    /**\n     * An optional description for the prompt.\n     */\n    description: z.optional(z.string()),\n    messages: z.array(PromptMessageSchema),\n});\n/**\n * An optional notification from the server to the client, informing it that the list of prompts it offers has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const PromptListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/prompts/list_changed\"),\n});\n/* Tools */\n/**\n * Definition for a tool the client can call.\n */\nexport const ToolSchema = z\n    .object({\n    /**\n     * The name of the tool.\n     */\n    name: z.string(),\n    /**\n     * A human-readable description of the tool.\n     */\n    description: z.optional(z.string()),\n    /**\n     * A JSON Schema object defining the expected parameters for the tool.\n     */\n    inputSchema: z\n        .object({\n        type: z.literal(\"object\"),\n        properties: z.optional(z.object({}).passthrough()),\n    })\n        .passthrough(),\n})\n    .passthrough();\n/**\n * Sent from the client to request a list of tools the server has.\n */\nexport const ListToolsRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal(\"tools/list\"),\n});\n/**\n * The server's response to a tools/list request from the client.\n */\nexport const ListToolsResultSchema = PaginatedResultSchema.extend({\n    tools: z.array(ToolSchema),\n});\n/**\n * The server's response to a tool call.\n */\nexport const CallToolResultSchema = ResultSchema.extend({\n    content: z.array(z.union([TextContentSchema, ImageContentSchema, EmbeddedResourceSchema])),\n    isError: z.boolean().default(false).optional(),\n});\n/**\n * CallToolResultSchema extended with backwards compatibility to protocol version 2024-10-07.\n */\nexport const CompatibilityCallToolResultSchema = CallToolResultSchema.or(ResultSchema.extend({\n    toolResult: z.unknown(),\n}));\n/**\n * Used by the client to invoke a tool provided by the server.\n */\nexport const CallToolRequestSchema = RequestSchema.extend({\n    method: z.literal(\"tools/call\"),\n    params: BaseRequestParamsSchema.extend({\n        name: z.string(),\n        arguments: z.optional(z.record(z.unknown())),\n    }),\n});\n/**\n * An optional notification from the server to the client, informing it that the list of tools it offers has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const ToolListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/tools/list_changed\"),\n});\n/* Logging */\n/**\n * The severity of a log message.\n */\nexport const LoggingLevelSchema = z.enum([\n    \"debug\",\n    \"info\",\n    \"notice\",\n    \"warning\",\n    \"error\",\n    \"critical\",\n    \"alert\",\n    \"emergency\",\n]);\n/**\n * A request from the client to the server, to enable or adjust logging.\n */\nexport const SetLevelRequestSchema = RequestSchema.extend({\n    method: z.literal(\"logging/setLevel\"),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The level of logging that the client wants to receive from the server. The server should send all logs at this level and higher (i.e., more severe) to the client as notifications/logging/message.\n         */\n        level: LoggingLevelSchema,\n    }),\n});\n/**\n * Notification of a log message passed from server to client. If no logging/setLevel request has been sent from the client, the server MAY decide which messages to send automatically.\n */\nexport const LoggingMessageNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/message\"),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The severity of this log message.\n         */\n        level: LoggingLevelSchema,\n        /**\n         * An optional name of the logger issuing this message.\n         */\n        logger: z.optional(z.string()),\n        /**\n         * The data to be logged, such as a string message or an object. Any JSON serializable type is allowed here.\n         */\n        data: z.unknown(),\n    }),\n});\n/* Sampling */\n/**\n * Hints to use for model selection.\n */\nexport const ModelHintSchema = z\n    .object({\n    /**\n     * A hint for a model name.\n     */\n    name: z.string().optional(),\n})\n    .passthrough();\n/**\n * The server's preferences for model selection, requested of the client during sampling.\n */\nexport const ModelPreferencesSchema = z\n    .object({\n    /**\n     * Optional hints to use for model selection.\n     */\n    hints: z.optional(z.array(ModelHintSchema)),\n    /**\n     * How much to prioritize cost when selecting a model.\n     */\n    costPriority: z.optional(z.number().min(0).max(1)),\n    /**\n     * How much to prioritize sampling speed (latency) when selecting a model.\n     */\n    speedPriority: z.optional(z.number().min(0).max(1)),\n    /**\n     * How much to prioritize intelligence and capabilities when selecting a model.\n     */\n    intelligencePriority: z.optional(z.number().min(0).max(1)),\n})\n    .passthrough();\n/**\n * Describes a message issued to or received from an LLM API.\n */\nexport const SamplingMessageSchema = z\n    .object({\n    role: z.enum([\"user\", \"assistant\"]),\n    content: z.union([TextContentSchema, ImageContentSchema]),\n})\n    .passthrough();\n/**\n * A request from the server to sample an LLM via the client. The client has full discretion over which model to select. The client should also inform the user before beginning sampling, to allow them to inspect the request (human in the loop) and decide whether to approve it.\n */\nexport const CreateMessageRequestSchema = RequestSchema.extend({\n    method: z.literal(\"sampling/createMessage\"),\n    params: BaseRequestParamsSchema.extend({\n        messages: z.array(SamplingMessageSchema),\n        /**\n         * An optional system prompt the server wants to use for sampling. The client MAY modify or omit this prompt.\n         */\n        systemPrompt: z.optional(z.string()),\n        /**\n         * A request to include context from one or more MCP servers (including the caller), to be attached to the prompt. The client MAY ignore this request.\n         */\n        includeContext: z.optional(z.enum([\"none\", \"thisServer\", \"allServers\"])),\n        temperature: z.optional(z.number()),\n        /**\n         * The maximum number of tokens to sample, as requested by the server. The client MAY choose to sample fewer tokens than requested.\n         */\n        maxTokens: z.number().int(),\n        stopSequences: z.optional(z.array(z.string())),\n        /**\n         * Optional metadata to pass through to the LLM provider. The format of this metadata is provider-specific.\n         */\n        metadata: z.optional(z.object({}).passthrough()),\n        /**\n         * The server's preferences for which model to select.\n         */\n        modelPreferences: z.optional(ModelPreferencesSchema),\n    }),\n});\n/**\n * The client's response to a sampling/create_message request from the server. The client should inform the user before returning the sampled message, to allow them to inspect the response (human in the loop) and decide whether to allow the server to see it.\n */\nexport const CreateMessageResultSchema = ResultSchema.extend({\n    /**\n     * The name of the model that generated the message.\n     */\n    model: z.string(),\n    /**\n     * The reason why sampling stopped.\n     */\n    stopReason: z.optional(z.enum([\"endTurn\", \"stopSequence\", \"maxTokens\"]).or(z.string())),\n    role: z.enum([\"user\", \"assistant\"]),\n    content: z.discriminatedUnion(\"type\", [\n        TextContentSchema,\n        ImageContentSchema,\n    ]),\n});\n/* Autocomplete */\n/**\n * A reference to a resource or resource template definition.\n */\nexport const ResourceReferenceSchema = z\n    .object({\n    type: z.literal(\"ref/resource\"),\n    /**\n     * The URI or URI template of the resource.\n     */\n    uri: z.string(),\n})\n    .passthrough();\n/**\n * Identifies a prompt.\n */\nexport const PromptReferenceSchema = z\n    .object({\n    type: z.literal(\"ref/prompt\"),\n    /**\n     * The name of the prompt or prompt template\n     */\n    name: z.string(),\n})\n    .passthrough();\n/**\n * A request from the client to the server, to ask for completion options.\n */\nexport const CompleteRequestSchema = RequestSchema.extend({\n    method: z.literal(\"completion/complete\"),\n    params: BaseRequestParamsSchema.extend({\n        ref: z.union([PromptReferenceSchema, ResourceReferenceSchema]),\n        /**\n         * The argument's information\n         */\n        argument: z\n            .object({\n            /**\n             * The name of the argument\n             */\n            name: z.string(),\n            /**\n             * The value of the argument to use for completion matching.\n             */\n            value: z.string(),\n        })\n            .passthrough(),\n    }),\n});\n/**\n * The server's response to a completion/complete request\n */\nexport const CompleteResultSchema = ResultSchema.extend({\n    completion: z\n        .object({\n        /**\n         * An array of completion values. Must not exceed 100 items.\n         */\n        values: z.array(z.string()).max(100),\n        /**\n         * The total number of completion options available. This can exceed the number of values actually sent in the response.\n         */\n        total: z.optional(z.number().int()),\n        /**\n         * Indicates whether there are additional completion options beyond those provided in the current response, even if the exact total is unknown.\n         */\n        hasMore: z.optional(z.boolean()),\n    })\n        .passthrough(),\n});\n/* Roots */\n/**\n * Represents a root directory or file that the server can operate on.\n */\nexport const RootSchema = z\n    .object({\n    /**\n     * The URI identifying the root. This *must* start with file:// for now.\n     */\n    uri: z.string().startsWith(\"file://\"),\n    /**\n     * An optional name for the root.\n     */\n    name: z.optional(z.string()),\n})\n    .passthrough();\n/**\n * Sent from the server to request a list of root URIs from the client.\n */\nexport const ListRootsRequestSchema = RequestSchema.extend({\n    method: z.literal(\"roots/list\"),\n});\n/**\n * The client's response to a roots/list request from the server.\n */\nexport const ListRootsResultSchema = ResultSchema.extend({\n    roots: z.array(RootSchema),\n});\n/**\n * A notification from the client to the server, informing it that the list of roots has changed.\n */\nexport const RootsListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal(\"notifications/roots/list_changed\"),\n});\n/* Client messages */\nexport const ClientRequestSchema = z.union([\n    PingRequestSchema,\n    InitializeRequestSchema,\n    CompleteRequestSchema,\n    SetLevelRequestSchema,\n    GetPromptRequestSchema,\n    ListPromptsRequestSchema,\n    ListResourcesRequestSchema,\n    ListResourceTemplatesRequestSchema,\n    ReadResourceRequestSchema,\n    SubscribeRequestSchema,\n    UnsubscribeRequestSchema,\n    CallToolRequestSchema,\n    ListToolsRequestSchema,\n]);\nexport const ClientNotificationSchema = z.union([\n    CancelledNotificationSchema,\n    ProgressNotificationSchema,\n    InitializedNotificationSchema,\n    RootsListChangedNotificationSchema,\n]);\nexport const ClientResultSchema = z.union([\n    EmptyResultSchema,\n    CreateMessageResultSchema,\n    ListRootsResultSchema,\n]);\n/* Server messages */\nexport const ServerRequestSchema = z.union([\n    PingRequestSchema,\n    CreateMessageRequestSchema,\n    ListRootsRequestSchema,\n]);\nexport const ServerNotificationSchema = z.union([\n    CancelledNotificationSchema,\n    ProgressNotificationSchema,\n    LoggingMessageNotificationSchema,\n    ResourceUpdatedNotificationSchema,\n    ResourceListChangedNotificationSchema,\n    ToolListChangedNotificationSchema,\n    PromptListChangedNotificationSchema,\n]);\nexport const ServerResultSchema = z.union([\n    EmptyResultSchema,\n    InitializeResultSchema,\n    CompleteResultSchema,\n    GetPromptResultSchema,\n    ListPromptsResultSchema,\n    ListResourcesResultSchema,\n    ListResourceTemplatesResultSchema,\n    ReadResourceResultSchema,\n    CallToolResultSchema,\n    ListToolsResultSchema,\n]);\nexport class McpError extends Error {\n    constructor(code, message, data) {\n        super(`MCP error ${code}: ${message}`);\n        this.code = code;\n        this.data = data;\n    }\n}\n//# sourceMappingURL=types.js.map","import { CancelledNotificationSchema, ErrorCode, McpError, PingRequestSchema, ProgressNotificationSchema, } from \"../types.js\";\n/**\n * The default request timeout, in miliseconds.\n */\nexport const DEFAULT_REQUEST_TIMEOUT_MSEC = 60000;\n/**\n * Implements MCP protocol framing on top of a pluggable transport, including\n * features like request/response linking, notifications, and progress.\n */\nexport class Protocol {\n    constructor(_options) {\n        this._options = _options;\n        this._requestMessageId = 0;\n        this._requestHandlers = new Map();\n        this._requestHandlerAbortControllers = new Map();\n        this._notificationHandlers = new Map();\n        this._responseHandlers = new Map();\n        this._progressHandlers = new Map();\n        this.setNotificationHandler(CancelledNotificationSchema, (notification) => {\n            const controller = this._requestHandlerAbortControllers.get(notification.params.requestId);\n            controller === null || controller === void 0 ? void 0 : controller.abort(notification.params.reason);\n        });\n        this.setNotificationHandler(ProgressNotificationSchema, (notification) => {\n            this._onprogress(notification);\n        });\n        this.setRequestHandler(PingRequestSchema, \n        // Automatic pong by default.\n        (_request) => ({}));\n    }\n    /**\n     * Attaches to the given transport, starts it, and starts listening for messages.\n     *\n     * The Protocol object assumes ownership of the Transport, replacing any callbacks that have already been set, and expects that it is the only user of the Transport instance going forward.\n     */\n    async connect(transport) {\n        this._transport = transport;\n        this._transport.onclose = () => {\n            this._onclose();\n        };\n        this._transport.onerror = (error) => {\n            this._onerror(error);\n        };\n        this._transport.onmessage = (message) => {\n            if (!(\"method\" in message)) {\n                this._onresponse(message);\n            }\n            else if (\"id\" in message) {\n                this._onrequest(message);\n            }\n            else {\n                this._onnotification(message);\n            }\n        };\n        await this._transport.start();\n    }\n    _onclose() {\n        var _a;\n        const responseHandlers = this._responseHandlers;\n        this._responseHandlers = new Map();\n        this._progressHandlers.clear();\n        this._transport = undefined;\n        (_a = this.onclose) === null || _a === void 0 ? void 0 : _a.call(this);\n        const error = new McpError(ErrorCode.ConnectionClosed, \"Connection closed\");\n        for (const handler of responseHandlers.values()) {\n            handler(error);\n        }\n    }\n    _onerror(error) {\n        var _a;\n        (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n    }\n    _onnotification(notification) {\n        var _a;\n        const handler = (_a = this._notificationHandlers.get(notification.method)) !== null && _a !== void 0 ? _a : this.fallbackNotificationHandler;\n        // Ignore notifications not being subscribed to.\n        if (handler === undefined) {\n            return;\n        }\n        // Starting with Promise.resolve() puts any synchronous errors into the monad as well.\n        Promise.resolve()\n            .then(() => handler(notification))\n            .catch((error) => this._onerror(new Error(`Uncaught error in notification handler: ${error}`)));\n    }\n    _onrequest(request) {\n        var _a, _b;\n        const handler = (_a = this._requestHandlers.get(request.method)) !== null && _a !== void 0 ? _a : this.fallbackRequestHandler;\n        if (handler === undefined) {\n            (_b = this._transport) === null || _b === void 0 ? void 0 : _b.send({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                error: {\n                    code: ErrorCode.MethodNotFound,\n                    message: \"Method not found\",\n                },\n            }).catch((error) => this._onerror(new Error(`Failed to send an error response: ${error}`)));\n            return;\n        }\n        const abortController = new AbortController();\n        this._requestHandlerAbortControllers.set(request.id, abortController);\n        // Starting with Promise.resolve() puts any synchronous errors into the monad as well.\n        Promise.resolve()\n            .then(() => handler(request, { signal: abortController.signal }))\n            .then((result) => {\n            var _a;\n            if (abortController.signal.aborted) {\n                return;\n            }\n            return (_a = this._transport) === null || _a === void 0 ? void 0 : _a.send({\n                result,\n                jsonrpc: \"2.0\",\n                id: request.id,\n            });\n        }, (error) => {\n            var _a, _b;\n            if (abortController.signal.aborted) {\n                return;\n            }\n            return (_a = this._transport) === null || _a === void 0 ? void 0 : _a.send({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                error: {\n                    code: Number.isSafeInteger(error[\"code\"])\n                        ? error[\"code\"]\n                        : ErrorCode.InternalError,\n                    message: (_b = error.message) !== null && _b !== void 0 ? _b : \"Internal error\",\n                },\n            });\n        })\n            .catch((error) => this._onerror(new Error(`Failed to send response: ${error}`)))\n            .finally(() => {\n            this._requestHandlerAbortControllers.delete(request.id);\n        });\n    }\n    _onprogress(notification) {\n        const { progressToken, ...params } = notification.params;\n        const handler = this._progressHandlers.get(Number(progressToken));\n        if (handler === undefined) {\n            this._onerror(new Error(`Received a progress notification for an unknown token: ${JSON.stringify(notification)}`));\n            return;\n        }\n        handler(params);\n    }\n    _onresponse(response) {\n        const messageId = response.id;\n        const handler = this._responseHandlers.get(Number(messageId));\n        if (handler === undefined) {\n            this._onerror(new Error(`Received a response for an unknown message ID: ${JSON.stringify(response)}`));\n            return;\n        }\n        this._responseHandlers.delete(Number(messageId));\n        this._progressHandlers.delete(Number(messageId));\n        if (\"result\" in response) {\n            handler(response);\n        }\n        else {\n            const error = new McpError(response.error.code, response.error.message, response.error.data);\n            handler(error);\n        }\n    }\n    get transport() {\n        return this._transport;\n    }\n    /**\n     * Closes the connection.\n     */\n    async close() {\n        var _a;\n        await ((_a = this._transport) === null || _a === void 0 ? void 0 : _a.close());\n    }\n    /**\n     * Sends a request and wait for a response.\n     *\n     * Do not use this method to emit notifications! Use notification() instead.\n     */\n    request(request, resultSchema, options) {\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c, _d;\n            if (!this._transport) {\n                reject(new Error(\"Not connected\"));\n                return;\n            }\n            if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.enforceStrictCapabilities) === true) {\n                this.assertCapabilityForMethod(request.method);\n            }\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.throwIfAborted();\n            const messageId = this._requestMessageId++;\n            const jsonrpcRequest = {\n                ...request,\n                jsonrpc: \"2.0\",\n                id: messageId,\n            };\n            if (options === null || options === void 0 ? void 0 : options.onprogress) {\n                this._progressHandlers.set(messageId, options.onprogress);\n                jsonrpcRequest.params = {\n                    ...request.params,\n                    _meta: { progressToken: messageId },\n                };\n            }\n            let timeoutId = undefined;\n            this._responseHandlers.set(messageId, (response) => {\n                var _a;\n                if (timeoutId !== undefined) {\n                    clearTimeout(timeoutId);\n                }\n                if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    return;\n                }\n                if (response instanceof Error) {\n                    return reject(response);\n                }\n                try {\n                    const result = resultSchema.parse(response.result);\n                    resolve(result);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n            const cancel = (reason) => {\n                var _a;\n                this._responseHandlers.delete(messageId);\n                this._progressHandlers.delete(messageId);\n                (_a = this._transport) === null || _a === void 0 ? void 0 : _a.send({\n                    jsonrpc: \"2.0\",\n                    method: \"notifications/cancelled\",\n                    params: {\n                        requestId: messageId,\n                        reason: String(reason),\n                    },\n                }).catch((error) => this._onerror(new Error(`Failed to send cancellation: ${error}`)));\n                reject(reason);\n            };\n            (_c = options === null || options === void 0 ? void 0 : options.signal) === null || _c === void 0 ? void 0 : _c.addEventListener(\"abort\", () => {\n                var _a;\n                if (timeoutId !== undefined) {\n                    clearTimeout(timeoutId);\n                }\n                cancel((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.reason);\n            });\n            const timeout = (_d = options === null || options === void 0 ? void 0 : options.timeout) !== null && _d !== void 0 ? _d : DEFAULT_REQUEST_TIMEOUT_MSEC;\n            timeoutId = setTimeout(() => cancel(new McpError(ErrorCode.RequestTimeout, \"Request timed out\", {\n                timeout,\n            })), timeout);\n            this._transport.send(jsonrpcRequest).catch((error) => {\n                if (timeoutId !== undefined) {\n                    clearTimeout(timeoutId);\n                }\n                reject(error);\n            });\n        });\n    }\n    /**\n     * Emits a notification, which is a one-way message that does not expect a response.\n     */\n    async notification(notification) {\n        if (!this._transport) {\n            throw new Error(\"Not connected\");\n        }\n        this.assertNotificationCapability(notification.method);\n        const jsonrpcNotification = {\n            ...notification,\n            jsonrpc: \"2.0\",\n        };\n        await this._transport.send(jsonrpcNotification);\n    }\n    /**\n     * Registers a handler to invoke when this protocol object receives a request with the given method.\n     *\n     * Note that this will replace any previous request handler for the same method.\n     */\n    setRequestHandler(requestSchema, handler) {\n        const method = requestSchema.shape.method.value;\n        this.assertRequestHandlerCapability(method);\n        this._requestHandlers.set(method, (request, extra) => Promise.resolve(handler(requestSchema.parse(request), extra)));\n    }\n    /**\n     * Removes the request handler for the given method.\n     */\n    removeRequestHandler(method) {\n        this._requestHandlers.delete(method);\n    }\n    /**\n     * Asserts that a request handler has not already been set for the given method, in preparation for a new one being automatically installed.\n     */\n    assertCanSetRequestHandler(method) {\n        if (this._requestHandlers.has(method)) {\n            throw new Error(`A request handler for ${method} already exists, which would be overridden`);\n        }\n    }\n    /**\n     * Registers a handler to invoke when this protocol object receives a notification with the given method.\n     *\n     * Note that this will replace any previous notification handler for the same method.\n     */\n    setNotificationHandler(notificationSchema, handler) {\n        this._notificationHandlers.set(notificationSchema.shape.method.value, (notification) => Promise.resolve(handler(notificationSchema.parse(notification))));\n    }\n    /**\n     * Removes the notification handler for the given method.\n     */\n    removeNotificationHandler(method) {\n        this._notificationHandlers.delete(method);\n    }\n}\nexport function mergeCapabilities(base, additional) {\n    return Object.entries(additional).reduce((acc, [key, value]) => {\n        if (value && typeof value === \"object\") {\n            acc[key] = acc[key] ? { ...acc[key], ...value } : value;\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, { ...base });\n}\n//# sourceMappingURL=protocol.js.map","import { mergeCapabilities, Protocol, } from \"../shared/protocol.js\";\nimport { CallToolResultSchema, CompleteResultSchema, EmptyResultSchema, GetPromptResultSchema, InitializeResultSchema, LATEST_PROTOCOL_VERSION, ListPromptsResultSchema, ListResourcesResultSchema, ListResourceTemplatesResultSchema, ListToolsResultSchema, ReadResourceResultSchema, SUPPORTED_PROTOCOL_VERSIONS, } from \"../types.js\";\n/**\n * An MCP client on top of a pluggable transport.\n *\n * The client will automatically begin the initialization flow with the server when connect() is called.\n *\n * To use with custom types, extend the base Request/Notification/Result types and pass them as type parameters:\n *\n * ```typescript\n * // Custom schemas\n * const CustomRequestSchema = RequestSchema.extend({...})\n * const CustomNotificationSchema = NotificationSchema.extend({...})\n * const CustomResultSchema = ResultSchema.extend({...})\n *\n * // Type aliases\n * type CustomRequest = z.infer<typeof CustomRequestSchema>\n * type CustomNotification = z.infer<typeof CustomNotificationSchema>\n * type CustomResult = z.infer<typeof CustomResultSchema>\n *\n * // Create typed client\n * const client = new Client<CustomRequest, CustomNotification, CustomResult>({\n *   name: \"CustomClient\",\n *   version: \"1.0.0\"\n * })\n * ```\n */\nexport class Client extends Protocol {\n    /**\n     * Initializes this client with the given name and version information.\n     */\n    constructor(_clientInfo, options) {\n        var _a;\n        super(options);\n        this._clientInfo = _clientInfo;\n        this._capabilities = (_a = options === null || options === void 0 ? void 0 : options.capabilities) !== null && _a !== void 0 ? _a : {};\n    }\n    /**\n     * Registers new capabilities. This can only be called before connecting to a transport.\n     *\n     * The new capabilities will be merged with any existing capabilities previously given (e.g., at initialization).\n     */\n    registerCapabilities(capabilities) {\n        if (this.transport) {\n            throw new Error(\"Cannot register capabilities after connecting to transport\");\n        }\n        this._capabilities = mergeCapabilities(this._capabilities, capabilities);\n    }\n    assertCapability(capability, method) {\n        var _a;\n        if (!((_a = this._serverCapabilities) === null || _a === void 0 ? void 0 : _a[capability])) {\n            throw new Error(`Server does not support ${capability} (required for ${method})`);\n        }\n    }\n    async connect(transport) {\n        await super.connect(transport);\n        try {\n            const result = await this.request({\n                method: \"initialize\",\n                params: {\n                    protocolVersion: LATEST_PROTOCOL_VERSION,\n                    capabilities: this._capabilities,\n                    clientInfo: this._clientInfo,\n                },\n            }, InitializeResultSchema);\n            if (result === undefined) {\n                throw new Error(`Server sent invalid initialize result: ${result}`);\n            }\n            if (!SUPPORTED_PROTOCOL_VERSIONS.includes(result.protocolVersion)) {\n                throw new Error(`Server's protocol version is not supported: ${result.protocolVersion}`);\n            }\n            this._serverCapabilities = result.capabilities;\n            this._serverVersion = result.serverInfo;\n            this._instructions = result.instructions;\n            await this.notification({\n                method: \"notifications/initialized\",\n            });\n        }\n        catch (error) {\n            // Disconnect if initialization fails.\n            void this.close();\n            throw error;\n        }\n    }\n    /**\n     * After initialization has completed, this will be populated with the server's reported capabilities.\n     */\n    getServerCapabilities() {\n        return this._serverCapabilities;\n    }\n    /**\n     * After initialization has completed, this will be populated with information about the server's name and version.\n     */\n    getServerVersion() {\n        return this._serverVersion;\n    }\n    /**\n     * After initialization has completed, this may be populated with information about the server's instructions.\n     */\n    getInstructions() {\n        return this._instructions;\n    }\n    assertCapabilityForMethod(method) {\n        var _a, _b, _c, _d, _e;\n        switch (method) {\n            case \"logging/setLevel\":\n                if (!((_a = this._serverCapabilities) === null || _a === void 0 ? void 0 : _a.logging)) {\n                    throw new Error(`Server does not support logging (required for ${method})`);\n                }\n                break;\n            case \"prompts/get\":\n            case \"prompts/list\":\n                if (!((_b = this._serverCapabilities) === null || _b === void 0 ? void 0 : _b.prompts)) {\n                    throw new Error(`Server does not support prompts (required for ${method})`);\n                }\n                break;\n            case \"resources/list\":\n            case \"resources/templates/list\":\n            case \"resources/read\":\n            case \"resources/subscribe\":\n            case \"resources/unsubscribe\":\n                if (!((_c = this._serverCapabilities) === null || _c === void 0 ? void 0 : _c.resources)) {\n                    throw new Error(`Server does not support resources (required for ${method})`);\n                }\n                if (method === \"resources/subscribe\" &&\n                    !this._serverCapabilities.resources.subscribe) {\n                    throw new Error(`Server does not support resource subscriptions (required for ${method})`);\n                }\n                break;\n            case \"tools/call\":\n            case \"tools/list\":\n                if (!((_d = this._serverCapabilities) === null || _d === void 0 ? void 0 : _d.tools)) {\n                    throw new Error(`Server does not support tools (required for ${method})`);\n                }\n                break;\n            case \"completion/complete\":\n                if (!((_e = this._serverCapabilities) === null || _e === void 0 ? void 0 : _e.prompts)) {\n                    throw new Error(`Server does not support prompts (required for ${method})`);\n                }\n                break;\n            case \"initialize\":\n                // No specific capability required for initialize\n                break;\n            case \"ping\":\n                // No specific capability required for ping\n                break;\n        }\n    }\n    assertNotificationCapability(method) {\n        var _a;\n        switch (method) {\n            case \"notifications/roots/list_changed\":\n                if (!((_a = this._capabilities.roots) === null || _a === void 0 ? void 0 : _a.listChanged)) {\n                    throw new Error(`Client does not support roots list changed notifications (required for ${method})`);\n                }\n                break;\n            case \"notifications/initialized\":\n                // No specific capability required for initialized\n                break;\n            case \"notifications/cancelled\":\n                // Cancellation notifications are always allowed\n                break;\n            case \"notifications/progress\":\n                // Progress notifications are always allowed\n                break;\n        }\n    }\n    assertRequestHandlerCapability(method) {\n        switch (method) {\n            case \"sampling/createMessage\":\n                if (!this._capabilities.sampling) {\n                    throw new Error(`Client does not support sampling capability (required for ${method})`);\n                }\n                break;\n            case \"roots/list\":\n                if (!this._capabilities.roots) {\n                    throw new Error(`Client does not support roots capability (required for ${method})`);\n                }\n                break;\n            case \"ping\":\n                // No specific capability required for ping\n                break;\n        }\n    }\n    async ping(options) {\n        return this.request({ method: \"ping\" }, EmptyResultSchema, options);\n    }\n    async complete(params, options) {\n        return this.request({ method: \"completion/complete\", params }, CompleteResultSchema, options);\n    }\n    async setLoggingLevel(level, options) {\n        return this.request({ method: \"logging/setLevel\", params: { level } }, EmptyResultSchema, options);\n    }\n    async getPrompt(params, options) {\n        return this.request({ method: \"prompts/get\", params }, GetPromptResultSchema, options);\n    }\n    async listPrompts(params, options) {\n        return this.request({ method: \"prompts/list\", params }, ListPromptsResultSchema, options);\n    }\n    async listResources(params, options) {\n        return this.request({ method: \"resources/list\", params }, ListResourcesResultSchema, options);\n    }\n    async listResourceTemplates(params, options) {\n        return this.request({ method: \"resources/templates/list\", params }, ListResourceTemplatesResultSchema, options);\n    }\n    async readResource(params, options) {\n        return this.request({ method: \"resources/read\", params }, ReadResourceResultSchema, options);\n    }\n    async subscribeResource(params, options) {\n        return this.request({ method: \"resources/subscribe\", params }, EmptyResultSchema, options);\n    }\n    async unsubscribeResource(params, options) {\n        return this.request({ method: \"resources/unsubscribe\", params }, EmptyResultSchema, options);\n    }\n    async callTool(params, resultSchema = CallToolResultSchema, options) {\n        return this.request({ method: \"tools/call\", params }, resultSchema, options);\n    }\n    async listTools(params, options) {\n        return this.request({ method: \"tools/list\", params }, ListToolsResultSchema, options);\n    }\n    async sendRootsListChanged() {\n        return this.notification({ method: \"notifications/roots/list_changed\" });\n    }\n}\n//# sourceMappingURL=index.js.map","import { EventSource } from \"eventsource\";\nimport { JSONRPCMessageSchema } from \"../types.js\";\nexport class SseError extends Error {\n    constructor(code, message, event) {\n        super(`SSE error: ${message}`);\n        this.code = code;\n        this.event = event;\n    }\n}\n/**\n * Client transport for SSE: this will connect to a server using Server-Sent Events for receiving\n * messages and make separate POST requests for sending messages.\n */\nexport class SSEClientTransport {\n    constructor(url, opts) {\n        this._url = url;\n        this._eventSourceInit = opts === null || opts === void 0 ? void 0 : opts.eventSourceInit;\n        this._requestInit = opts === null || opts === void 0 ? void 0 : opts.requestInit;\n    }\n    start() {\n        if (this._eventSource) {\n            throw new Error(\"SSEClientTransport already started! If using Client class, note that connect() calls start() automatically.\");\n        }\n        return new Promise((resolve, reject) => {\n            this._eventSource = new EventSource(this._url.href, this._eventSourceInit);\n            this._abortController = new AbortController();\n            this._eventSource.onerror = (event) => {\n                var _a;\n                const error = new SseError(event.code, event.message, event);\n                reject(error);\n                (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n            };\n            this._eventSource.onopen = () => {\n                // The connection is open, but we need to wait for the endpoint to be received.\n            };\n            this._eventSource.addEventListener(\"endpoint\", (event) => {\n                var _a;\n                const messageEvent = event;\n                try {\n                    this._endpoint = new URL(messageEvent.data, this._url);\n                    if (this._endpoint.origin !== this._url.origin) {\n                        throw new Error(`Endpoint origin does not match connection origin: ${this._endpoint.origin}`);\n                    }\n                }\n                catch (error) {\n                    reject(error);\n                    (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                    void this.close();\n                    return;\n                }\n                resolve();\n            });\n            this._eventSource.onmessage = (event) => {\n                var _a, _b;\n                const messageEvent = event;\n                let message;\n                try {\n                    message = JSONRPCMessageSchema.parse(JSON.parse(messageEvent.data));\n                }\n                catch (error) {\n                    (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                    return;\n                }\n                (_b = this.onmessage) === null || _b === void 0 ? void 0 : _b.call(this, message);\n            };\n        });\n    }\n    async close() {\n        var _a, _b, _c;\n        (_a = this._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        (_b = this._eventSource) === null || _b === void 0 ? void 0 : _b.close();\n        (_c = this.onclose) === null || _c === void 0 ? void 0 : _c.call(this);\n    }\n    async send(message) {\n        var _a, _b, _c;\n        if (!this._endpoint) {\n            throw new Error(\"Not connected\");\n        }\n        try {\n            const headers = new Headers((_a = this._requestInit) === null || _a === void 0 ? void 0 : _a.headers);\n            headers.set(\"content-type\", \"application/json\");\n            const init = {\n                ...this._requestInit,\n                method: \"POST\",\n                headers,\n                body: JSON.stringify(message),\n                signal: (_b = this._abortController) === null || _b === void 0 ? void 0 : _b.signal,\n            };\n            const response = await fetch(this._endpoint, init);\n            if (!response.ok) {\n                const text = await response.text().catch(() => null);\n                throw new Error(`Error POSTing to endpoint (HTTP ${response.status}): ${text}`);\n            }\n        }\n        catch (error) {\n            (_c = this.onerror) === null || _c === void 0 ? void 0 : _c.call(this, error);\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=sse.js.map","import { JSONRPCMessageSchema } from \"../types.js\";\n/**\n * Buffers a continuous stdio stream into discrete JSON-RPC messages.\n */\nexport class ReadBuffer {\n    append(chunk) {\n        this._buffer = this._buffer ? Buffer.concat([this._buffer, chunk]) : chunk;\n    }\n    readMessage() {\n        if (!this._buffer) {\n            return null;\n        }\n        const index = this._buffer.indexOf(\"\\n\");\n        if (index === -1) {\n            return null;\n        }\n        const line = this._buffer.toString(\"utf8\", 0, index);\n        this._buffer = this._buffer.subarray(index + 1);\n        return deserializeMessage(line);\n    }\n    clear() {\n        this._buffer = undefined;\n    }\n}\nexport function deserializeMessage(line) {\n    return JSONRPCMessageSchema.parse(JSON.parse(line));\n}\nexport function serializeMessage(message) {\n    return JSON.stringify(message) + \"\\n\";\n}\n//# sourceMappingURL=stdio.js.map","import { ChildProcess, IOType } from \"node:child_process\";\nimport spawn from \"cross-spawn\";\nimport process from \"node:process\";\nimport { ReadBuffer, serializeMessage } from \"../shared/stdio.js\";\n/**\n * Environment variables to inherit by default, if an environment is not explicitly given.\n */\nexport const DEFAULT_INHERITED_ENV_VARS = process.platform === \"win32\"\n    ? [\n        \"APPDATA\",\n        \"HOMEDRIVE\",\n        \"HOMEPATH\",\n        \"LOCALAPPDATA\",\n        \"PATH\",\n        \"PROCESSOR_ARCHITECTURE\",\n        \"SYSTEMDRIVE\",\n        \"SYSTEMROOT\",\n        \"TEMP\",\n        \"USERNAME\",\n        \"USERPROFILE\",\n    ]\n    : /* list inspired by the default env inheritance of sudo */\n        [\"HOME\", \"LOGNAME\", \"PATH\", \"SHELL\", \"TERM\", \"USER\"];\n/**\n * Returns a default environment object including only environment variables deemed safe to inherit.\n */\nexport function getDefaultEnvironment() {\n    const env = {};\n    for (const key of DEFAULT_INHERITED_ENV_VARS) {\n        const value = process.env[key];\n        if (value === undefined) {\n            continue;\n        }\n        if (value.startsWith(\"()\")) {\n            // Skip functions, which are a security risk.\n            continue;\n        }\n        env[key] = value;\n    }\n    return env;\n}\n/**\n * Client transport for stdio: this will connect to a server by spawning a process and communicating with it over stdin/stdout.\n *\n * This transport is only available in Node.js environments.\n */\nexport class StdioClientTransport {\n    constructor(server) {\n        this._abortController = new AbortController();\n        this._readBuffer = new ReadBuffer();\n        this._serverParams = server;\n    }\n    /**\n     * Starts the server process and prepares to communicate with it.\n     */\n    async start() {\n        if (this._process) {\n            throw new Error(\"StdioClientTransport already started! If using Client class, note that connect() calls start() automatically.\");\n        }\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c, _d, _e, _f;\n            this._process = spawn(this._serverParams.command, (_a = this._serverParams.args) !== null && _a !== void 0 ? _a : [], {\n                env: (_b = this._serverParams.env) !== null && _b !== void 0 ? { ...getDefaultEnvironment(), ..._b } : getDefaultEnvironment(),\n                stdio: [\"pipe\", \"pipe\", (_c = this._serverParams.stderr) !== null && _c !== void 0 ? _c : \"inherit\"],\n                shell: false,\n                signal: this._abortController.signal,\n                windowsHide: process.platform === \"win32\" && isElectron(),\n            });\n            this._process.on(\"error\", (error) => {\n                var _a, _b;\n                if (error.name === \"AbortError\") {\n                    // Expected when close() is called.\n                    (_a = this.onclose) === null || _a === void 0 ? void 0 : _a.call(this);\n                    return;\n                }\n                reject(error);\n                (_b = this.onerror) === null || _b === void 0 ? void 0 : _b.call(this, error);\n            });\n            this._process.on(\"spawn\", () => {\n                resolve();\n            });\n            this._process.on(\"close\", (_code) => {\n                var _a;\n                this._process = undefined;\n                (_a = this.onclose) === null || _a === void 0 ? void 0 : _a.call(this);\n            });\n            (_d = this._process.stdin) === null || _d === void 0 ? void 0 : _d.on(\"error\", (error) => {\n                var _a;\n                (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n            });\n            (_e = this._process.stdout) === null || _e === void 0 ? void 0 : _e.on(\"data\", (chunk) => {\n                this._readBuffer.append(chunk);\n                this.processReadBuffer();\n            });\n            (_f = this._process.stdout) === null || _f === void 0 ? void 0 : _f.on(\"error\", (error) => {\n                var _a;\n                (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n            });\n        });\n    }\n    /**\n     * The stderr stream of the child process, if `StdioServerParameters.stderr` was set to \"pipe\" or \"overlapped\".\n     *\n     * This is only available after the process has been started.\n     */\n    get stderr() {\n        var _a, _b;\n        return (_b = (_a = this._process) === null || _a === void 0 ? void 0 : _a.stderr) !== null && _b !== void 0 ? _b : null;\n    }\n    processReadBuffer() {\n        var _a, _b;\n        while (true) {\n            try {\n                const message = this._readBuffer.readMessage();\n                if (message === null) {\n                    break;\n                }\n                (_a = this.onmessage) === null || _a === void 0 ? void 0 : _a.call(this, message);\n            }\n            catch (error) {\n                (_b = this.onerror) === null || _b === void 0 ? void 0 : _b.call(this, error);\n            }\n        }\n    }\n    async close() {\n        this._abortController.abort();\n        this._process = undefined;\n        this._readBuffer.clear();\n    }\n    send(message) {\n        return new Promise((resolve) => {\n            var _a;\n            if (!((_a = this._process) === null || _a === void 0 ? void 0 : _a.stdin)) {\n                throw new Error(\"Not connected\");\n            }\n            const json = serializeMessage(message);\n            if (this._process.stdin.write(json)) {\n                resolve();\n            }\n            else {\n                this._process.stdin.once(\"drain\", resolve);\n            }\n        });\n    }\n}\nfunction isElectron() {\n    return \"type\" in process;\n}\n//# sourceMappingURL=stdio.js.map","import { JSONRPCMessageSchema } from \"../types.js\";\nconst SUBPROTOCOL = \"mcp\";\n/**\n * Client transport for WebSocket: this will connect to a server over the WebSocket protocol.\n */\nexport class WebSocketClientTransport {\n    constructor(url) {\n        this._url = url;\n    }\n    start() {\n        if (this._socket) {\n            throw new Error(\"WebSocketClientTransport already started! If using Client class, note that connect() calls start() automatically.\");\n        }\n        return new Promise((resolve, reject) => {\n            this._socket = new WebSocket(this._url, SUBPROTOCOL);\n            this._socket.onerror = (event) => {\n                var _a;\n                const error = \"error\" in event\n                    ? event.error\n                    : new Error(`WebSocket error: ${JSON.stringify(event)}`);\n                reject(error);\n                (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n            };\n            this._socket.onopen = () => {\n                resolve();\n            };\n            this._socket.onclose = () => {\n                var _a;\n                (_a = this.onclose) === null || _a === void 0 ? void 0 : _a.call(this);\n            };\n            this._socket.onmessage = (event) => {\n                var _a, _b;\n                let message;\n                try {\n                    message = JSONRPCMessageSchema.parse(JSON.parse(event.data));\n                }\n                catch (error) {\n                    (_a = this.onerror) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                    return;\n                }\n                (_b = this.onmessage) === null || _b === void 0 ? void 0 : _b.call(this, message);\n            };\n        });\n    }\n    async close() {\n        var _a;\n        (_a = this._socket) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    send(message) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            if (!this._socket) {\n                reject(new Error(\"Not connected\"));\n                return;\n            }\n            (_a = this._socket) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(message));\n            resolve();\n        });\n    }\n}\n//# sourceMappingURL=websocket.js.map","export class SystemCommandManager {\n  private static instance: SystemCommandManager;\n  private commands: Map<string, string>;\n\n  private constructor() {\n    this.commands = new Map();\n  }\n\n  public static getInstance(): SystemCommandManager {\n    if (!SystemCommandManager.instance) {\n      SystemCommandManager.instance = new SystemCommandManager();\n    }\n    return SystemCommandManager.instance;\n  }\n\n  public initialize(commands: Record<string, string>): void {\n    Object.entries(commands).forEach(([key, value]) => {\n      this.commands.set(key, value);\n    });\n  }\n\n  public getValue(key: string): string | undefined {\n    return this.commands.get(key);\n  }\n\n  public getAllCommands(): Map<string, string> {\n    return new Map(this.commands);\n  }\n}\n","import { Client } from \"@modelcontextprotocol/sdk/client/index.js\";\nimport { SSEClientTransport } from \"@modelcontextprotocol/sdk/client/sse.js\";\nimport { getDefaultEnvironment, StdioClientTransport } from \"@modelcontextprotocol/sdk/client/stdio.js\";\nimport { WebSocketClientTransport } from \"@modelcontextprotocol/sdk/client/websocket.js\";\nimport { EventSource } from \"eventsource\";\nimport { SystemCommandManager } from \"./syscmd/index.js\";\nimport logger from \"./utils/logger.js\";\nimport { iServerConfig } from \"./utils/types.js\";\nimport net from \"net\";\n\n// add EventSource to global scope\nif (typeof globalThis.EventSource === \"undefined\") {\n  globalThis.EventSource = EventSource as any;\n}\n\n// Connect to specified server\nexport async function handleConnectToServer(serverName: string, serverConfig: iServerConfig, allSpecificEnv: any) {\n  logger.debug(`============`);\n  logger.debug(`Runtime Platform: ${process.platform}`);\n  logger.debug(`Attempting to connect to server: ${serverName}`);\n\n  // choose different transport implementation based on transport type\n  let transport;\n  let tempClient;\n\n  if (serverConfig.transport === \"sse\" && serverConfig.url) {\n    logger.debug(`Using SSE transport with URL: ${serverConfig.url}`);\n    const url = new URL(serverConfig.url);\n    let isPortAvailable = true;\n\n    // check if the url is a local port\n    // if (url.hostname === 'localhost' || url.hostname === '127.0.0.1') {\n    //   const port = parseInt(url.port);\n    //   if (!isNaN(port)) {\n    //     try {\n    //       // create a test TCP server to check if the port is in use\n    //       const testServer = net.createServer();\n\n    //       await new Promise<void>((resolve, reject) => {\n    //         testServer.once('error', (err: any) => {\n    //           if (err.code === 'EADDRINUSE') {\n    //             logger.debug(`[${serverName}] Port ${port} is already in use`);\n    //             isPortAvailable = false;\n    //             resolve();\n    //           } else {\n    //             reject(err);\n    //           }\n    //         });\n\n    //         testServer.once('listening', () => {\n    //           testServer.close();\n    //           logger.debug(`[${serverName}] Port ${port} is available`);\n    //           resolve();\n    //         });\n    //         testServer.listen(port);\n    //       });\n    //     } catch (error) {\n    //       logger.error(`[${serverName}] Error checking port ${port}: ${error instanceof Error ? error.message : String(error)}`);\n    //       throw error;\n    //     }\n    //   }\n    // }\n\n    if (serverConfig.command){\n      const command = SystemCommandManager.getInstance().getValue(serverConfig.command) || serverConfig.command;\n      const allSpecificEnv_ =\n        process.platform === \"win32\" ? { ...allSpecificEnv, PYTHONIOENCODING: \"utf-8\" } : allSpecificEnv;\n      const defaultEnv = getDefaultEnvironment();\n      const tempTransport = new StdioClientTransport({\n        command: command!,\n        args: serverConfig.args || [],\n        env: { ...defaultEnv, ...allSpecificEnv_ },\n      });\n      tempClient = new Client({ name: \"mcp-client\", version: \"1.0.0\" }, { capabilities: {} });\n\n      try {\n        await tempClient.connect(tempTransport);\n      } catch (error) {\n        logger.error(`[${serverName}][SSE] Failed to connect to server but SSE will still try to connect: ${error instanceof Error ? error.message : String(error)}`);\n      }\n    }\n\n    try {\n      transport = new SSEClientTransport(url);\n      logger.debug(`SSE transport created successfully for URL: ${serverConfig.url}`);\n    } catch (error) {\n      logger.error(`Failed to create SSE transport: ${error instanceof Error ? error.message : String(error)}`);\n      throw error;\n    }\n  } else if (serverConfig.transport === \"websocket\" && serverConfig.url) {\n    logger.debug(`Using WebSocket transport with URL: ${serverConfig.url}`);\n\n    try {\n      const url = new URL(serverConfig.url);\n      transport = new WebSocketClientTransport(url);\n      logger.debug(`WebSocket transport created for URL: ${serverConfig.url}`);\n    } catch (error) {\n      logger.error(`Failed to create WebSocket transport: ${error instanceof Error ? error.message : String(error)}`);\n      throw error;\n    }\n  } else if (serverConfig.transport === \"command\" && serverConfig.command) {\n    // use stdio transport\n    // Check specific command 'node'\n    const command = SystemCommandManager.getInstance().getValue(serverConfig.command) || serverConfig.command;\n    const allSpecificEnv_ =\n      process.platform === \"win32\" ? { ...serverConfig.env, PYTHONIOENCODING: \"utf-8\" } : serverConfig.env;\n    const defaultEnv = getDefaultEnvironment();\n\n    // Establish transport\n    transport = new StdioClientTransport({\n      command: command,\n      args: serverConfig.args || [],\n      env: { ...defaultEnv, ...allSpecificEnv_ },\n    });\n\n    // Debug logs\n    logger.debug(`Using Stdio transport with command: ${command} ${serverConfig.args?.join(\" \") || \"\"}`);\n    serverConfig.env && logger.debug(`Environment: ${JSON.stringify(serverConfig.env, null, 2)}`);\n  } else {\n    throw new Error(`Invalid transport configuration for server ${serverName}`);\n  }\n\n  logger.debug(\"Working directory:\", process.cwd());\n\n  try {\n    // Establish Client\n    const client = new Client({ name: \"mcp-client\", version: \"1.0.0\" }, { capabilities: {} });\n\n    await client.connect(transport);\n\n    // List MCP-Server available tools\n    const response = await client.listTools();\n    const tools = response.tools;\n    logger.info(`Connected to server ${serverName} with tools: [${tools.map((tool) => tool.name).join(\", \")}]`);\n\n    return { client, transport, tempClient };\n  } catch (error) {\n    logger.error(`Error connecting to server ${serverName}: ${error}`);\n    logger.error(`Server config: ${JSON.stringify(serverConfig, null, 2)}`);\n    throw error;\n  }\n}\n","import { ToolDefinition } from \"@langchain/core/language_models/base\";\nimport { Tool } from \"@modelcontextprotocol/sdk/types.js\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport logger from \"./logger.js\";\nimport { iConfig } from \"./types.js\";\n\nexport function convertToOpenAITools(tools: Tool[]): ToolDefinition[] {\n  return tools.map((tool) => ({\n    type: \"function\" as const,\n    function: {\n      name: tool.name,\n      description: tool.description,\n      parameters: { ...tool.inputSchema, additionalProperties: false },\n    },\n  }));\n}\n\n// Specialized tool conversion function for Gemini API\nexport function openAIConvertToGeminiTools(tools: ToolDefinition[]): ToolDefinition[] {\n  logger.debug(`[openAIConvertToGeminiTools]`);\n  return tools.map((tool) => {\n    // Get basic tool information\n    const name = tool.function?.name || \"\";\n    const description = tool.function?.description || \"\";\n\n    // Build simplified parameters that Gemini supports\n    const simplifiedParameters = buildGeminiParameters(tool.function?.parameters);\n\n    // Return tool definition in Gemini format\n    return {\n      type: \"function\" as const,\n      function: {\n        name,\n        description,\n        parameters: simplifiedParameters,\n      },\n    };\n  });\n}\n\n// Build parameter structure supported by Gemini\nfunction buildGeminiParameters(originalParams: any): any {\n  // Handle empty parameters case\n  if (!originalParams) {\n    return {\n      type: \"OBJECT\",\n      properties: { dummy: { type: \"STRING\" } },\n      required: [],\n    };\n  }\n\n  const geminiParams: any = {\n    type: \"OBJECT\",\n    properties: {},\n  };\n\n  // Copy required fields (if they exist)\n  if (originalParams.required && Array.isArray(originalParams.required)) {\n    geminiParams.required = [...originalParams.required];\n  }\n\n  // Process properties\n  processProperties(originalParams, geminiParams);\n\n  // Ensure properties are not empty (Gemini requirement)\n  if (Object.keys(geminiParams.properties).length === 0) {\n    geminiParams.properties = { dummy: { type: \"STRING\" } };\n  }\n\n  return geminiParams;\n}\n\n// Process properties for parameters\nfunction processProperties(originalParams: any, geminiParams: any): void {\n  if (!originalParams.properties) return;\n\n  for (const [propName, propValue] of Object.entries<any>(originalParams.properties)) {\n    // Add the processed property to the parameters object\n    geminiParams.properties[propName] = buildSimplifiedProperty(propValue);\n  }\n}\n\n// Used to build simplified properties\nfunction buildSimplifiedProperty(propValue: any): any {\n  const simpleProp: any = {};\n\n  // Determine and set the appropriate type\n  simpleProp.type = determinePropertyType(propValue);\n\n  // Add properties for object type\n  if (simpleProp.type === \"OBJECT\") {\n    simpleProp.properties = getObjectProperties(propValue);\n  }\n\n  // Copy description\n  if (propValue.description) {\n    simpleProp.description = propValue.description;\n  }\n\n  // Process enum\n  if (propValue.enum && Array.isArray(propValue.enum)) {\n    simpleProp.enum = propValue.enum.map((val: string) => (val === \"\" ? \"none\" : val));\n  }\n\n  // Process items (if array)\n  if (simpleProp.type === \"ARRAY\" && propValue.items) {\n    simpleProp.items = buildSimplifiedProperty(propValue.items);\n  }\n\n  return simpleProp;\n}\n\n// Determine property type based on various input formats\nfunction determinePropertyType(propValue: any): string {\n  // Case 1: Direct type specified as string\n  if (propValue.type && typeof propValue.type === \"string\") {\n    return convertTypeToGeminiFormat(propValue.type);\n  }\n\n  // Case 2: Type specified as array\n  if (propValue.type && Array.isArray(propValue.type) && propValue.type.length > 0) {\n    return convertTypeToGeminiFormat(propValue.type[0]);\n  }\n\n  // Case 3: Type specified in all_of structure\n  if (propValue.all_of) {\n    const typeItem = propValue.all_of.find((item: any) => item.type);\n    if (typeItem && typeItem.type) {\n      if (typeof typeItem.type === \"string\") {\n        return convertTypeToGeminiFormat(typeItem.type);\n      }\n      if (Array.isArray(typeItem.type) && typeItem.type.length > 0) {\n        return convertTypeToGeminiFormat(typeItem.type[0]);\n      }\n    }\n  }\n\n  // Default case: use STRING type\n  return \"STRING\";\n}\n\n// Get properties for OBJECT type\nfunction getObjectProperties(propValue: any): any {\n  // Case 1: No properties or empty properties\n  if (!propValue.properties || Object.keys(propValue.properties).length === 0) {\n    return { dummy: { type: \"STRING\" } };\n  }\n\n  // Case 2: Has properties - process them recursively\n  const processedProperties: any = {};\n  for (const [subPropName, subPropValue] of Object.entries<any>(propValue.properties)) {\n    processedProperties[subPropName] = buildSimplifiedProperty(subPropValue);\n  }\n\n  // If processed properties are empty, provide a dummy property\n  if (Object.keys(processedProperties).length === 0) {\n    return { dummy: { type: \"STRING\" } };\n  }\n\n  return processedProperties;\n}\n\n// Convert OpenAI format type to Gemini format\nfunction convertTypeToGeminiFormat(type: string): string {\n  // Type mapping table\n  const typeMap: Record<string, string> = {\n    string: \"STRING\",\n    number: \"NUMBER\",\n    integer: \"INTEGER\",\n    boolean: \"BOOLEAN\",\n    array: \"ARRAY\",\n    object: \"OBJECT\",\n  };\n\n  // If the type is already uppercase or not in the mapping, keep it as is\n  return typeMap[type.toLowerCase()] || type;\n}\n\n// Read configuration file\nexport async function loadConfig(customPath?: string): Promise<iConfig> {\n  try {\n    const configPath = customPath || path.join(process.cwd(), \"config.json\");\n    const configContent = await fs.readFile(configPath, \"utf-8\");\n    return JSON.parse(configContent);\n  } catch (error) {\n    return { mcpServers: {} };\n  }\n}\n\n// List all available servers\nexport async function loadConfigAndServers(customPath?: string): Promise<{ config: iConfig; servers: string[] }> {\n  const config = await loadConfig(customPath);\n  return { config, servers: Object.keys(config.mcpServers) };\n}\n","import { ToolDefinition } from \"@langchain/core/language_models/base\";\nimport { Client } from \"@modelcontextprotocol/sdk/client/index.js\";\nimport { SSEClientTransport } from \"@modelcontextprotocol/sdk/client/sse.js\";\nimport { StdioClientTransport } from \"@modelcontextprotocol/sdk/client/stdio.js\";\nimport { WebSocketClientTransport } from \"@modelcontextprotocol/sdk/client/websocket.js\";\nimport path from \"path\";\nimport { handleConnectToServer } from \"../connectServer.js\";\nimport { SystemCommandManager } from \"../syscmd/index.js\";\nimport logger from \"../utils/logger.js\";\nimport { convertToOpenAITools, loadConfigAndServers } from \"../utils/toolHandler.js\";\nimport { iServerConfig, iTool } from \"../utils/types.js\";\nimport { IMCPServerManager } from \"./interface.js\";\n\nexport class MCPServerManager implements IMCPServerManager {\n  private static instance: MCPServerManager;\n  private servers: Map<string, Client> = new Map();\n  private transports: Map<string, StdioClientTransport | SSEClientTransport | WebSocketClientTransport> = new Map();\n  private toolToServerMap: Map<string, Client> = new Map();\n  private availableTools: ToolDefinition[] = [];\n  private toolInfos: iTool[] = [];\n  // SSE/Websocket 開起來的Client\n  private tempClients: Map<string, Client> = new Map();\n  public configPath: string;\n\n  private constructor(configPath?: string) {\n    this.configPath = configPath || path.join(process.cwd(), \"config.json\");\n  }\n\n  public static getInstance(configPath?: string): MCPServerManager {\n    if (!MCPServerManager.instance) {\n      MCPServerManager.instance = new MCPServerManager(configPath);\n    } else if (configPath && configPath !== MCPServerManager.instance.configPath) {\n      // If a new config path is provided and different from current, update config and reinitialize\n      MCPServerManager.instance.configPath = configPath;\n      MCPServerManager.instance.initialize().catch((error) => {\n        logger.error(\"Failed to reinitialize MCPServerManager:\", error);\n      });\n    }\n    return MCPServerManager.instance;\n  }\n\n  async initialize(): Promise<void> {\n    // Clear all states\n    this.servers.clear();\n    this.transports.clear();\n    this.toolToServerMap.clear();\n    this.availableTools = [];\n    this.toolInfos = [];\n    this.tempClients.clear();\n\n    // Load and connect all servers\n    await this.connectAllServers();\n  }\n\n  async connectAllServers(): Promise<{ serverName: string; error: unknown }[]> {\n    const errorArray: { serverName: string; error: unknown }[] = [];\n    const { config, servers } = await loadConfigAndServers(this.configPath);\n    // only connect enabled servers\n    const enabledServers = Object.keys(config.mcpServers).filter((serverName) => config.mcpServers[serverName].enabled);\n    logger.info(`Connect to ${enabledServers.length} enabled servers...`);\n\n    const allEnabledSpecificEnv = enabledServers.reduce((acc, serverName) => {\n      return { ...acc, ...config.mcpServers[serverName].env };\n    }, {});\n\n    // async connect all servers\n    const connectionResults = await Promise.allSettled(\n      enabledServers.map((serverName) =>\n        this.connectSingleServer(serverName, config.mcpServers[serverName], allEnabledSpecificEnv)\n      )\n    );\n\n    // collect error\n    connectionResults.forEach((result) => {\n      if (result.status === \"rejected\") {\n        errorArray.push({\n          serverName: \"unknown\",\n          error: result.reason,\n        });\n      } else if (!result.value.success) {\n        errorArray.push({\n          serverName: result.value.serverName,\n          error: result.value.error,\n        });\n      }\n    });\n\n    logger.info(\"Connect all MCP servers completed\");\n    logger.info(\"All available tools:\");\n    for (const [serverName, client] of this.servers) {\n      const toolInfo = this.toolInfos.find((info) => info.name === serverName);\n      if (toolInfo?.enabled) {\n        logger.info(`${serverName}:`);\n        toolInfo.tools.forEach((tool) => {\n          logger.info(`  - ${tool.name}`);\n        });\n      }\n    }\n\n    return errorArray;\n  }\n\n  async connectSingleServer(\n    serverName: string,\n    config: iServerConfig,\n    allSpecificEnv: any\n  ): Promise<{ success: boolean; serverName: string; error?: unknown }> {\n    try {\n      const updatedConfig = { ...config };\n      if (!updatedConfig.transport) {\n        updatedConfig.transport = \"command\";\n        logger.debug(`No transport specified for server ${serverName}, defaulting to \"command\" transport`);\n      }\n\n      const { client, transport, tempClient } = await handleConnectToServer(serverName, updatedConfig, allSpecificEnv);\n      this.servers.set(serverName, client);\n      this.transports.set(serverName, transport);\n      tempClient && this.tempClients.set(serverName, tempClient)\n\n      // Load server tools and capabilities\n      const response = await client.listTools();\n      const capabilities = await client.getServerCapabilities();\n\n      // Create tool information\n      const tools_ = response.tools.map((tool) => ({\n        name: tool.name,\n        description: tool.description,\n      }));\n\n      // Update toolInfos\n      this.toolInfos.push({\n        name: serverName,\n        description: (capabilities?.description as string) || \"\",\n        tools: tools_,\n        enabled: config.enabled || false,\n        icon: (capabilities?.icon as string) || \"\",\n      });\n\n      // Load tools if server is enabled\n      if (config.enabled) {\n        const langChainTools = convertToOpenAITools(response.tools);\n        this.availableTools.push(...langChainTools);\n\n        // Record tool to server mapping\n        response.tools.forEach((tool) => {\n          this.toolToServerMap.set(tool.name, client);\n        });\n      }\n\n      return {\n        success: true,\n        serverName,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        serverName,\n        error: error.message,\n      };\n    }\n  }\n\n  async syncServersWithConfig(): Promise<{ serverName: string; error: unknown }[]> {\n    logger.info(\"Syncing servers with configuration...\");\n    // const errorArray: { serverName: string; error: unknown }[] = [];\n\n    try {\n      await this.disconnectAllServers();\n      const errorArray = await this.connectAllServers();\n      // // Get configuration differences\n      // const { config: newConfig } = await loadConfigAndServers(this.configPath);\n      // const currentServers = new Set(this.servers.keys());\n      // const configuredServers = new Set(Object.keys(newConfig.mcpServers || {}));\n\n      // // Handle servers to be removed\n      // for (const serverName of currentServers) {\n      //   if (!configuredServers.has(serverName)) {\n      //     logger.info(`Removing server: ${serverName}`);\n      //     await this.disconnectSingleServer(serverName);\n      //   }\n      // }\n\n      // // Handle new or updated servers\n      // for (const serverName of configuredServers) {\n      //   const serverConfig = newConfig.mcpServers[serverName];\n\n      //   if (!currentServers.has(serverName)) {\n      //     // New server\n      //     logger.info(`Adding new server: ${serverName}`);\n      //     const result = await this.connectSingleServer(serverName, serverConfig);\n      //     if (!result.success) {\n      //       errorArray.push({\n      //         serverName,\n      //         error: result.error,\n      //       });\n      //     }\n      //   } else {\n      //     // Existing server, check properties\n      //     // check command, args(string[]), env(Record<string, string>)\n      //     const isPropertiesChanged = this.checkPropertiesChanged(serverName, serverConfig);\n      //     if (isPropertiesChanged) {\n      //       logger.info(`Properties changed for server: ${serverName}`);\n      //       await this.disconnectSingleServer(serverName);\n      //       const result = await this.connectSingleServer(serverName, serverConfig);\n      //       if (!result.success) {\n      //         errorArray.push({\n      //           serverName,\n      //           error: result.error,\n      //         });\n      //       }\n      //     } else {\n      //       // check enabled\n      //       const isCurrentlyEnabled = this.toolInfos.find((info) => info.name === serverName)?.enabled;\n      //       if (serverConfig.enabled && !isCurrentlyEnabled) {\n      //         logger.info(`Enabling server: ${serverName}`);\n      //         await this.updateServerEnabledState(serverName, true);\n      //       } else if (!serverConfig.enabled && isCurrentlyEnabled) {\n      //         logger.info(`Disabling server: ${serverName}`);\n      //         await this.updateServerEnabledState(serverName, false);\n      //       }\n      //     }\n      //   }\n      // }\n\n      logger.info(\"Server configuration sync completed\");\n      return errorArray;\n    } catch (error) {\n      logger.error(\"Error during server configuration sync:\", error);\n      throw error;\n    }\n  }\n\n  async disconnectSingleServer(serverName: string): Promise<void> {\n    try {\n      const client = this.servers.get(serverName);\n      if (client) {\n        // Get tools list before disconnecting\n        try {\n          const response = await client.listTools();\n          const toolsToRemove = new Set(response.tools.map((tool) => tool.name));\n\n          // Remove tools from availableTools\n          this.availableTools = this.availableTools.filter((tool) => !toolsToRemove.has(tool.function.name));\n\n          // Clean up tool to server mapping\n          toolsToRemove.forEach((toolName) => {\n            this.toolToServerMap.delete(toolName);\n          });\n        } catch (error) {\n          logger.error(`Error getting tools list for server ${serverName}:`, error);\n        }\n\n        // Close transport and clean up server\n        const transport = this.transports.get(serverName);\n        if (transport) {\n          await transport.close();\n        }\n        const tempClient = this.tempClients.get(serverName)\n        if (tempClient){\n          await tempClient.close()\n        }\n        this.transports.delete(serverName);\n        this.servers.delete(serverName);\n\n        // Remove from toolInfos\n        this.toolInfos = this.toolInfos.filter((info) => info.name !== serverName);\n\n        logger.info(`Server ${serverName} disconnected`);\n      }\n    } catch (error) {\n      logger.error(`Error disconnecting server ${serverName}:`, error);\n    }\n  }\n\n  async updateServerEnabledState(serverName: string, enabled: boolean): Promise<void> {\n    // Update enabled status in tool info\n    const toolInfo = this.toolInfos.find((info) => info.name === serverName);\n    if (!toolInfo) {\n      logger.warn(`Cannot update state for server ${serverName}: tool info not found`);\n      return;\n    }\n    toolInfo.enabled = enabled;\n\n    // Get all tool names for this server\n    const serverTools = new Set(toolInfo.tools.map((tool) => tool.name));\n\n    // Update availableTools\n    if (enabled) {\n      // If enabling, add server's tools to availableTools\n      const client = this.servers.get(serverName);\n      if (client) {\n        const response = await client.listTools();\n        const langChainTools = convertToOpenAITools(response.tools);\n        this.availableTools.push(...langChainTools);\n      }\n    } else {\n      // If disabling, remove server's tools from availableTools\n      this.availableTools = this.availableTools.filter((tool) => !serverTools.has(tool.function.name));\n    }\n  }\n\n  checkPropertiesChanged(serverName: string, config: iServerConfig) {\n    const client = this.servers.get(serverName);\n    if (!client) return true;\n    const currentParams = (client?.transport as any)._serverParams as iServerConfig;\n\n    // check transport type changed\n    if (currentParams.transport !== config.transport) return true;\n\n    // if command transport, check command, args and env\n    if (config.transport === \"command\" && currentParams.transport === \"command\") {\n      const currentCommand = currentParams.command || \"\";\n      const newCommand = SystemCommandManager.getInstance().getValue(config.command || \"\") || config.command || \"\";\n      const currentArgs = currentParams.args || [];\n      const newArgs = config.args || [];\n\n      return (\n        currentCommand !== newCommand ||\n        currentArgs.join(\",\") !== newArgs.join(\",\") ||\n        JSON.stringify(currentParams.env) !== JSON.stringify(config.env)\n      );\n    }\n\n    // if sse or websocket transport, check url\n    if (\n      (config.transport === \"sse\" || config.transport === \"websocket\") &&\n      (currentParams.transport === \"sse\" || currentParams.transport === \"websocket\")\n    ) {\n      return currentParams.url !== config.url;\n    }\n\n    return true;\n  }\n\n  getAvailableTools(): ToolDefinition[] {\n    return this.availableTools;\n  }\n\n  getToolInfos(): iTool[] {\n    return this.toolInfos;\n  }\n\n  getToolToServerMap(): Map<string, Client> {\n    return this.toolToServerMap;\n  }\n\n  async disconnectAllServers(): Promise<void> {\n    logger.info(\"Disconnect all MCP servers...\");\n    for (const serverName of this.servers.keys()) {\n      const transport = this.transports.get(serverName);\n      if (transport) {\n        await transport.close();\n      }\n    }\n    for (const serverName of this.tempClients.keys()){\n      logger.debug(`[${serverName}] Disconnecting temp client`);\n      const client = this.tempClients.get(serverName)\n      if (client){\n        await client.close()\n      }\n    }\n    this.servers.clear();\n    this.transports.clear();\n    this.toolToServerMap.clear();\n    this.availableTools = [];\n    this.toolInfos = [];\n    logger.info(\"Disconnect all MCP servers completed\");\n  }\n\n  // async reconnectServers(): Promise<{ serverName: string; error: unknown }[]> {\n  //   logger.info(\"Reconnect all MCP servers...\");\n  //   await this.disconnectAllServers();\n  //   const errorArray = await this.connectAllServers();\n  //   logger.info(\"Reconnect all MCP servers completed\");\n  //   return errorArray;\n  // }\n}\n","// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nexport const insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n","import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n","import { Serializable } from \"./load/serializable.js\";\nimport { HumanMessage } from \"./messages/human.js\";\nimport { getBufferString } from \"./messages/utils.js\";\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nexport class StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nexport class ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return getBufferString(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n/**\n * Class that represents an image prompt value. It extends the\n * BasePromptValue and includes an ImageURL instance.\n */\nexport class ImagePromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ImagePromptValue\";\n    }\n    constructor(fields) {\n        if (!(\"imageUrl\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { imageUrl: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"imageUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.imageUrl = fields.imageUrl;\n    }\n    toString() {\n        return this.imageUrl.url;\n    }\n    toChatMessages() {\n        return [\n            new HumanMessage({\n                content: [\n                    {\n                        type: \"image_url\",\n                        image_url: {\n                            detail: this.imageUrl.detail,\n                            url: this.imageUrl.url,\n                        },\n                    },\n                ],\n            }),\n        ];\n    }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-mini-2024-09-12\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n","import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n    return getEncoding(getEncodingNameForModel(model));\n}\n","import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        const { cache, ...rest } = params;\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...rest,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n","import { concat } from \"../utils/stream.js\";\nimport { Runnable, RunnableAssign, RunnableMap, } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnablePassthrough extends Runnable {\n    static lc_name() {\n        return \"RunnablePassthrough\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (fields) {\n            this.func = fields.func;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        if (this.func) {\n            await this.func(input, config);\n        }\n        return this._callWithConfig((input) => Promise.resolve(input), input, config);\n    }\n    async *transform(generator, options) {\n        const config = ensureConfig(options);\n        let finalOutput;\n        let finalOutputSupported = true;\n        for await (const chunk of this._transformStreamWithConfig(generator, (input) => input, config)) {\n            yield chunk;\n            if (finalOutputSupported) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        finalOutput = concat(finalOutput, chunk);\n                    }\n                    catch {\n                        finalOutput = undefined;\n                        finalOutputSupported = false;\n                    }\n                }\n            }\n        }\n        if (this.func && finalOutput !== undefined) {\n            await this.func(finalOutput, config);\n        }\n    }\n    /**\n     * A runnable that assigns key-value pairs to the input.\n     *\n     * The example below shows how you could use it with an inline function.\n     *\n     * @example\n     * ```typescript\n     * const prompt =\n     *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n     * Question: {question}\n     * SQL Query:`);\n     *\n     * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n     * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n     * // In this case, we're passing the schema.\n     * const sqlQueryGeneratorChain = RunnableSequence.from([\n     *   RunnablePassthrough.assign({\n     *     schema: async () => db.getTableInfo(),\n     *   }),\n     *   prompt,\n     *   new ChatOpenAI({}).bind({ stop: [\"\\nSQLResult:\"] }),\n     *   new StringOutputParser(),\n     * ]);\n     * const result = await sqlQueryGeneratorChain.invoke({\n     *   question: \"How many employees are there?\",\n     * });\n     * ```\n     */\n    static assign(mapping) {\n        return new RunnableAssign(new RunnableMap({ steps: mapping }));\n    }\n}\n","/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {z.ZodType<RunOutput> | Record<string, any>} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isZodSchema(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninput) {\n    // Check for a characteristic method of Zod schemas\n    return typeof input?.parse === \"function\";\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { AIMessage, HumanMessage, coerceMessageLikeToMessage, isAIMessageChunk, } from \"../messages/index.js\";\nimport { RUN_KEY, } from \"../outputs.js\";\nimport { BaseLanguageModel, } from \"./base.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { RunnableLambda, RunnableSequence, } from \"../runnables/base.js\";\nimport { concat } from \"../utils/stream.js\";\nimport { RunnablePassthrough } from \"../runnables/passthrough.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\nimport { callbackHandlerPrefersStreaming } from \"../callbacks/base.js\";\n/**\n * Creates a transform stream for encoding chat message chunks.\n * @deprecated Use {@link BytesOutputParser} instead\n * @returns A TransformStream instance that encodes chat message chunks.\n */\nexport function createChatMessageChunkEncoderStream() {\n    const textEncoder = new TextEncoder();\n    return new TransformStream({\n        transform(chunk, controller) {\n            controller.enqueue(textEncoder.encode(typeof chunk.content === \"string\"\n                ? chunk.content\n                : JSON.stringify(chunk.content)));\n        },\n    });\n}\n/**\n * Base class for chat models. It extends the BaseLanguageModel class and\n * provides methods for generating chat based on input messages.\n */\nexport class BaseChatModel extends BaseLanguageModel {\n    constructor(fields) {\n        super(fields);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", this._llmType()]\n        });\n        Object.defineProperty(this, \"disableStreaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _separateRunnableConfigFromCallOptionsCompat(options) {\n        // For backwards compat, keep `signal` in both runnableConfig and callOptions\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\n        callOptions.signal = runnableConfig.signal;\n        return [runnableConfig, callOptions];\n    }\n    /**\n     * Invokes the chat model with a single input.\n     * @param input The input for the language model.\n     * @param options The call options.\n     * @returns A Promise that resolves to a BaseMessageChunk.\n     */\n    async invoke(input, options) {\n        const promptValue = BaseChatModel._convertInputToPromptValue(input);\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\n        const chatGeneration = result.generations[0][0];\n        // TODO: Remove cast after figuring out inheritance\n        return chatGeneration.message;\n    }\n    // eslint-disable-next-line require-yield\n    async *_streamResponseChunks(_messages, _options, _runManager) {\n        throw new Error(\"Not implemented.\");\n    }\n    async *_streamIterator(input, options) {\n        // Subclass check required to avoid double callbacks with default implementation\n        if (this._streamResponseChunks ===\n            BaseChatModel.prototype._streamResponseChunks ||\n            this.disableStreaming) {\n            yield this.invoke(input, options);\n        }\n        else {\n            const prompt = BaseChatModel._convertInputToPromptValue(input);\n            const messages = prompt.toChatMessages();\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(options);\n            const inheritableMetadata = {\n                ...runnableConfig.metadata,\n                ...this.getLsParams(callOptions),\n            };\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: callOptions,\n                invocation_params: this?.invocationParams(callOptions),\n                batch_size: 1,\n            };\n            const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), [messages], runnableConfig.runId, undefined, extra, undefined, undefined, runnableConfig.runName);\n            let generationChunk;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let llmOutput;\n            try {\n                for await (const chunk of this._streamResponseChunks(messages, callOptions, runManagers?.[0])) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    chunk.message.response_metadata = {\n                        ...chunk.generationInfo,\n                        ...chunk.message.response_metadata,\n                    };\n                    yield chunk.message;\n                    if (!generationChunk) {\n                        generationChunk = chunk;\n                    }\n                    else {\n                        generationChunk = generationChunk.concat(chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\n                // TODO: Remove cast after figuring out inheritance\n                generations: [[generationChunk]],\n                llmOutput,\n            })));\n        }\n    }\n    getLsParams(options) {\n        const providerName = this.getName().startsWith(\"Chat\")\n            ? this.getName().replace(\"Chat\", \"\")\n            : this.getName();\n        return {\n            ls_model_type: \"chat\",\n            ls_stop: options.stop,\n            ls_provider: providerName,\n        };\n    }\n    /** @ignore */\n    async _generateUncached(messages, parsedOptions, handledOptions) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const inheritableMetadata = {\n            ...handledOptions.metadata,\n            ...this.getLsParams(parsedOptions),\n        };\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: 1,\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages, handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        const generations = [];\n        const llmOutputs = [];\n        // Even if stream is not explicitly called, check if model is implicitly\n        // called from streamEvents() or streamLog() to get all streamed events.\n        // Bail out if _streamResponseChunks not overridden\n        const hasStreamingHandler = !!runManagers?.[0].handlers.find(callbackHandlerPrefersStreaming);\n        if (hasStreamingHandler &&\n            baseMessages.length === 1 &&\n            this._streamResponseChunks !==\n                BaseChatModel.prototype._streamResponseChunks) {\n            try {\n                const stream = await this._streamResponseChunks(baseMessages[0], parsedOptions, runManagers?.[0]);\n                let aggregated;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let llmOutput;\n                for await (const chunk of stream) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    if (aggregated === undefined) {\n                        aggregated = chunk;\n                    }\n                    else {\n                        aggregated = concat(aggregated, chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n                if (aggregated === undefined) {\n                    throw new Error(\"Received empty response from chat model call.\");\n                }\n                generations.push([aggregated]);\n                await runManagers?.[0].handleLLMEnd({\n                    generations,\n                    llmOutput,\n                });\n            }\n            catch (e) {\n                await runManagers?.[0].handleLLMError(e);\n                throw e;\n            }\n        }\n        else {\n            // generate results\n            const results = await Promise.allSettled(baseMessages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\n            // handle results\n            await Promise.all(results.map(async (pResult, i) => {\n                if (pResult.status === \"fulfilled\") {\n                    const result = pResult.value;\n                    for (const generation of result.generations) {\n                        if (generation.message.id == null) {\n                            const runId = runManagers?.at(0)?.runId;\n                            if (runId != null)\n                                generation.message._updateId(`run-${runId}`);\n                        }\n                        generation.message.response_metadata = {\n                            ...generation.generationInfo,\n                            ...generation.message.response_metadata,\n                        };\n                    }\n                    if (result.generations.length === 1) {\n                        result.generations[0].message.response_metadata = {\n                            ...result.llmOutput,\n                            ...result.generations[0].message.response_metadata,\n                        };\n                    }\n                    generations[i] = result.generations;\n                    llmOutputs[i] = result.llmOutput;\n                    return runManagers?.[i]?.handleLLMEnd({\n                        generations: [result.generations],\n                        llmOutput: result.llmOutput,\n                    });\n                }\n                else {\n                    // status === \"rejected\"\n                    await runManagers?.[i]?.handleLLMError(pResult.reason);\n                    return Promise.reject(pResult.reason);\n                }\n            }));\n        }\n        // create combined output\n        const output = {\n            generations,\n            llmOutput: llmOutputs.length\n                ? this._combineLLMOutput?.(...llmOutputs)\n                : undefined,\n        };\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    async _generateCached({ messages, cache, llmStringKey, parsedOptions, handledOptions, }) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const inheritableMetadata = {\n            ...handledOptions.metadata,\n            ...this.getLsParams(parsedOptions),\n        };\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: 1,\n            cached: true,\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages, handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        // generate results\n        const missingPromptIndices = [];\n        const results = await Promise.allSettled(baseMessages.map(async (baseMessage, index) => {\n            // Join all content into one string for the prompt index\n            const prompt = BaseChatModel._convertInputToPromptValue(baseMessage).toString();\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (result == null) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        // Map run managers to the results before filtering out null results\n        // Null results are just absent from the cache.\n        const cachedResults = results\n            .map((result, index) => ({ result, runManager: runManagers?.[index] }))\n            .filter(({ result }) => (result.status === \"fulfilled\" && result.value != null) ||\n            result.status === \"rejected\");\n        // Handle results and call run managers\n        const generations = [];\n        await Promise.all(cachedResults.map(async ({ result: promiseResult, runManager }, i) => {\n            if (promiseResult.status === \"fulfilled\") {\n                const result = promiseResult.value;\n                generations[i] = result;\n                if (result.length) {\n                    await runManager?.handleLLMNewToken(result[0].text);\n                }\n                return runManager?.handleLLMEnd({\n                    generations: [result],\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManager?.handleLLMError(promiseResult.reason);\n                return Promise.reject(promiseResult.reason);\n            }\n        }));\n        const output = {\n            generations,\n            missingPromptIndices,\n        };\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Generates chat based on the input messages.\n     * @param messages An array of arrays of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generate(messages, options, callbacks) {\n        // parse call options\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else {\n            parsedOptions = options;\n        }\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(parsedOptions);\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\n        if (!this.cache) {\n            return this._generateUncached(baseMessages, callOptions, runnableConfig);\n        }\n        const { cache } = this;\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\n        const { generations, missingPromptIndices } = await this._generateCached({\n            messages: baseMessages,\n            cache,\n            llmStringKey,\n            parsedOptions: callOptions,\n            handledOptions: runnableConfig,\n        });\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => baseMessages[i]), callOptions, runnableConfig);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                // Join all content into one string for the prompt index\n                const prompt = BaseChatModel._convertInputToPromptValue(baseMessages[promptIndex]).toString();\n                return cache.update(prompt, llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _modelType() {\n        return \"base_chat_model\";\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this.invocationParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * Generates a prompt based on the input prompt values.\n     * @param promptValues An array of BasePromptValue instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generatePrompt(promptValues, options, callbacks) {\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\n        return this.generate(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async call(messages, options, callbacks) {\n        const result = await this.generate([messages.map(coerceMessageLikeToMessage)], options, callbacks);\n        const generations = result.generations;\n        return generations[0][0].message;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model with a prompt value.\n     * @param promptValue The value of the prompt.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async callPrompt(promptValue, options, callbacks) {\n        const promptMessages = promptValue.toChatMessages();\n        return this.call(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on the input messages.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async predictMessages(messages, options, callbacks) {\n        return this.call(messages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on a text input.\n     * @param text The text input.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a string.\n     */\n    async predict(text, options, callbacks) {\n        const message = new HumanMessage(text);\n        const result = await this.call([message], options, callbacks);\n        if (typeof result.content !== \"string\") {\n            throw new Error(\"Cannot use predict when output is not a string.\");\n        }\n        return result.content;\n    }\n    withStructuredOutput(outputSchema, config) {\n        if (typeof this.bindTools !== \"function\") {\n            throw new Error(`Chat model must implement \".bindTools()\" to use withStructuredOutput.`);\n        }\n        if (config?.strict) {\n            throw new Error(`\"strict\" mode is not supported for this model by default.`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const description = schema.description ?? \"A function available to call.\";\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        if (method === \"jsonMode\") {\n            throw new Error(`Base withStructuredOutput implementation only supports \"functionCalling\" as a method.`);\n        }\n        let functionName = name ?? \"extract\";\n        let tools;\n        if (isZodSchema(schema)) {\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: zodToJsonSchema(schema),\n                    },\n                },\n            ];\n        }\n        else {\n            if (\"name\" in schema) {\n                functionName = schema.name;\n            }\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: schema,\n                    },\n                },\n            ];\n        }\n        const llm = this.bindTools(tools);\n        const outputParser = RunnableLambda.from((input) => {\n            if (!input.tool_calls || input.tool_calls.length === 0) {\n                throw new Error(\"No tool calls found in the response.\");\n            }\n            const toolCall = input.tool_calls.find((tc) => tc.name === functionName);\n            if (!toolCall) {\n                throw new Error(`No tool call found with name ${functionName}.`);\n            }\n            return toolCall.args;\n        });\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"StructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"StructuredOutputRunnable\",\n        });\n    }\n}\n/**\n * An abstract class that extends BaseChatModel and provides a simple\n * implementation of _generate.\n */\nexport class SimpleChatModel extends BaseChatModel {\n    async _generate(messages, options, runManager) {\n        const text = await this._call(messages, options, runManager);\n        const message = new AIMessage(text);\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Cannot generate with a simple chat model when output is not a string.\");\n        }\n        return {\n            generations: [\n                {\n                    text: message.content,\n                    message,\n                },\n            ],\n        };\n    }\n}\n","import { BaseChatModel, } from \"@langchain/core/language_models/chat_models\";\nimport { RunnableBinding, ensureConfig, } from \"@langchain/core/runnables\";\nimport { AsyncGeneratorWithSetup, IterableReadableStream, } from \"@langchain/core/utils/stream\";\nconst _SUPPORTED_PROVIDERS = [\n    \"openai\",\n    \"anthropic\",\n    \"azure_openai\",\n    \"cohere\",\n    \"google-vertexai\",\n    \"google-vertexai-web\",\n    \"google-genai\",\n    \"google-genai\",\n    \"ollama\",\n    \"together\",\n    \"fireworks\",\n    \"mistralai\",\n    \"groq\",\n    \"bedrock\",\n];\nasync function _initChatModelHelper(model, modelProvider, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparams = {}) {\n    const modelProviderCopy = modelProvider || _inferModelProvider(model);\n    if (!modelProviderCopy) {\n        throw new Error(`Unable to infer model provider for { model: ${model} }, please specify modelProvider directly.`);\n    }\n    const { modelProvider: _unused, ...passedParams } = params;\n    try {\n        switch (modelProviderCopy) {\n            case \"openai\": {\n                const { ChatOpenAI } = await import(\"@langchain/openai\");\n                return new ChatOpenAI({ model, ...passedParams });\n            }\n            case \"anthropic\": {\n                const { ChatAnthropic } = await import(\"@langchain/anthropic\");\n                return new ChatAnthropic({ model, ...passedParams });\n            }\n            case \"azure_openai\": {\n                const { AzureChatOpenAI } = await import(\"@langchain/openai\");\n                return new AzureChatOpenAI({ model, ...passedParams });\n            }\n            case \"cohere\": {\n                const { ChatCohere } = await import(\"@langchain/cohere\");\n                return new ChatCohere({ model, ...passedParams });\n            }\n            case \"google-vertexai\": {\n                const { ChatVertexAI } = await import(\"@langchain/google-vertexai\");\n                return new ChatVertexAI({ model, ...passedParams });\n            }\n            case \"google-vertexai-web\": {\n                const { ChatVertexAI } = await import(\"@langchain/google-vertexai-web\");\n                return new ChatVertexAI({ model, ...passedParams });\n            }\n            case \"google-genai\": {\n                const { ChatGoogleGenerativeAI } = await import(\"@langchain/google-genai\");\n                return new ChatGoogleGenerativeAI({ model, ...passedParams });\n            }\n            case \"ollama\": {\n                const { ChatOllama } = await import(\"@langchain/ollama\");\n                return new ChatOllama({ model, ...passedParams });\n            }\n            case \"mistralai\": {\n                const { ChatMistralAI } = await import(\"@langchain/mistralai\");\n                return new ChatMistralAI({ model, ...passedParams });\n            }\n            case \"groq\": {\n                const { ChatGroq } = await import(\"@langchain/groq\");\n                return new ChatGroq({ model, ...passedParams });\n            }\n            case \"cerebras\": {\n                const { ChatCerebras } = await import(\"@langchain/cerebras\");\n                return new ChatCerebras({ model, ...passedParams });\n            }\n            case \"bedrock\": {\n                const { ChatBedrockConverse } = await import(\"@langchain/aws\");\n                return new ChatBedrockConverse({ model, ...passedParams });\n            }\n            case \"fireworks\": {\n                const { ChatFireworks } = await import(\n                // We can not 'expect-error' because if you explicitly build `@langchain/community`\n                // this import will be able to be resolved, thus there will be no error. However\n                // this will never be the case in CI.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore - Can not install as a proper dependency due to circular dependency\n                \"@langchain/community/chat_models/fireworks\");\n                return new ChatFireworks({ model, ...passedParams });\n            }\n            case \"together\": {\n                const { ChatTogetherAI } = await import(\n                // We can not 'expect-error' because if you explicitly build `@langchain/community`\n                // this import will be able to be resolved, thus there will be no error. However\n                // this will never be the case in CI.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore - Can not install as a proper dependency due to circular dependency\n                \"@langchain/community/chat_models/togetherai\");\n                return new ChatTogetherAI({ model, ...passedParams });\n            }\n            default: {\n                const supported = _SUPPORTED_PROVIDERS.join(\", \");\n                throw new Error(`Unsupported { modelProvider: ${modelProviderCopy} }.\\n\\nSupported model providers are: ${supported}`);\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (e) {\n        if (\"code\" in e && e.code.includes(\"ERR_MODULE_NOT_FOUND\")) {\n            const attemptedPackage = new Error(e).message\n                .split(\"Error: Cannot find package '\")[1]\n                .split(\"'\")[0];\n            throw new Error(`Unable to import ${attemptedPackage}. Please install with ` +\n                `\\`npm install ${attemptedPackage}\\` or \\`yarn add ${attemptedPackage}\\``);\n        }\n        throw e;\n    }\n}\n/**\n * Attempts to infer the model provider based on the given model name.\n *\n * @param {string} modelName - The name of the model to infer the provider for.\n * @returns {string | undefined} The inferred model provider name, or undefined if unable to infer.\n *\n * @example\n * _inferModelProvider(\"gpt-4\"); // returns \"openai\"\n * _inferModelProvider(\"claude-2\"); // returns \"anthropic\"\n * _inferModelProvider(\"unknown-model\"); // returns undefined\n */\nexport function _inferModelProvider(modelName) {\n    if (modelName.startsWith(\"gpt-3\") ||\n        modelName.startsWith(\"gpt-4\") ||\n        modelName.startsWith(\"o1\")) {\n        return \"openai\";\n    }\n    else if (modelName.startsWith(\"claude\")) {\n        return \"anthropic\";\n    }\n    else if (modelName.startsWith(\"command\")) {\n        return \"cohere\";\n    }\n    else if (modelName.startsWith(\"accounts/fireworks\")) {\n        return \"fireworks\";\n    }\n    else if (modelName.startsWith(\"gemini\")) {\n        return \"google-vertexai\";\n    }\n    else if (modelName.startsWith(\"amazon.\")) {\n        return \"bedrock\";\n    }\n    else {\n        return undefined;\n    }\n}\nclass _ConfigurableModel extends BaseChatModel {\n    _llmType() {\n        return \"chat_model\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\"]\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_defaultConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        /**\n         * @default \"any\"\n         */\n        Object.defineProperty(this, \"_configurableFields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"any\"\n        });\n        /**\n         * @default \"\"\n         */\n        Object.defineProperty(this, \"_configPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Methods which should be called after the model is initialized.\n         * The key will be the method name, and the value will be the arguments.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_queuedMethodOperations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        // Extract the input types from the `BaseModel` class.\n        Object.defineProperty(this, \"withStructuredOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (schema, ...args) => {\n                this._queuedMethodOperations.withStructuredOutput = [schema, ...args];\n                return new _ConfigurableModel({\n                    defaultConfig: this._defaultConfig,\n                    configurableFields: this._configurableFields,\n                    configPrefix: this._configPrefix,\n                    queuedMethodOperations: this._queuedMethodOperations,\n                });\n            }\n        });\n        this._defaultConfig = fields.defaultConfig ?? {};\n        if (fields.configurableFields === \"any\") {\n            this._configurableFields = \"any\";\n        }\n        else {\n            this._configurableFields = fields.configurableFields ?? [\n                \"model\",\n                \"modelProvider\",\n            ];\n        }\n        if (fields.configPrefix) {\n            this._configPrefix = fields.configPrefix.endsWith(\"_\")\n                ? fields.configPrefix\n                : `${fields.configPrefix}_`;\n        }\n        else {\n            this._configPrefix = \"\";\n        }\n        this._queuedMethodOperations =\n            fields.queuedMethodOperations ?? this._queuedMethodOperations;\n    }\n    async _model(config) {\n        const params = { ...this._defaultConfig, ...this._modelParams(config) };\n        let initializedModel = await _initChatModelHelper(params.model, params.modelProvider, params);\n        // Apply queued method operations\n        const queuedMethodOperationsEntries = Object.entries(this._queuedMethodOperations);\n        if (queuedMethodOperationsEntries.length > 0) {\n            for (const [method, args] of queuedMethodOperationsEntries) {\n                if (method in initializedModel &&\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    typeof initializedModel[method] === \"function\") {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    initializedModel = await initializedModel[method](...args);\n                }\n            }\n        }\n        return initializedModel;\n    }\n    async _generate(messages, options, runManager) {\n        const model = await this._model(options);\n        return model._generate(messages, options ?? {}, runManager);\n    }\n    bindTools(tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    params) {\n        this._queuedMethodOperations.bindTools = [tools, params];\n        return new _ConfigurableModel({\n            defaultConfig: this._defaultConfig,\n            configurableFields: this._configurableFields,\n            configPrefix: this._configPrefix,\n            queuedMethodOperations: this._queuedMethodOperations,\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _modelParams(config) {\n        const configurable = config?.configurable ?? {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let modelParams = {};\n        for (const [key, value] of Object.entries(configurable)) {\n            if (key.startsWith(this._configPrefix)) {\n                const strippedKey = this._removePrefix(key, this._configPrefix);\n                modelParams[strippedKey] = value;\n            }\n        }\n        if (this._configurableFields !== \"any\") {\n            modelParams = Object.fromEntries(Object.entries(modelParams).filter(([key]) => this._configurableFields.includes(key)));\n        }\n        return modelParams;\n    }\n    _removePrefix(str, prefix) {\n        return str.startsWith(prefix) ? str.slice(prefix.length) : str;\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param {RunnableConfig | undefined} [config] - The config to bind.\n     * @returns {RunnableBinding<RunInput, RunOutput, CallOptions>} A new RunnableBinding with the bound config.\n     */\n    withConfig(config) {\n        const mergedConfig = { ...(config || {}) };\n        const modelParams = this._modelParams(mergedConfig);\n        const remainingConfig = Object.fromEntries(Object.entries(mergedConfig).filter(([k]) => k !== \"configurable\"));\n        remainingConfig.configurable = Object.fromEntries(Object.entries(mergedConfig.configurable || {}).filter(([k]) => this._configPrefix &&\n            !Object.keys(modelParams).includes(this._removePrefix(k, this._configPrefix))));\n        const newConfigurableModel = new _ConfigurableModel({\n            defaultConfig: { ...this._defaultConfig, ...modelParams },\n            configurableFields: Array.isArray(this._configurableFields)\n                ? [...this._configurableFields]\n                : this._configurableFields,\n            configPrefix: this._configPrefix,\n            queuedMethodOperations: this._queuedMethodOperations,\n        });\n        return new RunnableBinding({\n            config: mergedConfig,\n            bound: newConfigurableModel,\n        });\n    }\n    async invoke(input, options) {\n        const model = await this._model(options);\n        const config = ensureConfig(options);\n        return model.invoke(input, config);\n    }\n    async stream(input, options) {\n        const model = await this._model(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: await model.stream(input, options),\n            config: options,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    async batch(inputs, options, batchOptions) {\n        // We can super this since the base runnable implementation of\n        // `.batch` will call `.invoke` on each input.\n        return super.batch(inputs, options, batchOptions);\n    }\n    async *transform(generator, options) {\n        const model = await this._model(options);\n        const config = ensureConfig(options);\n        yield* model.transform(generator, config);\n    }\n    async *streamLog(input, options, streamOptions) {\n        const model = await this._model(options);\n        const config = ensureConfig(options);\n        yield* model.streamLog(input, config, {\n            ...streamOptions,\n            _schemaFormat: \"original\",\n            includeNames: streamOptions?.includeNames,\n            includeTypes: streamOptions?.includeTypes,\n            includeTags: streamOptions?.includeTags,\n            excludeNames: streamOptions?.excludeNames,\n            excludeTypes: streamOptions?.excludeTypes,\n            excludeTags: streamOptions?.excludeTags,\n        });\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        async function* wrappedGenerator() {\n            const model = await outerThis._model(options);\n            const config = ensureConfig(options);\n            const eventStream = model.streamEvents(input, config, streamOptions);\n            for await (const chunk of eventStream) {\n                yield chunk;\n            }\n        }\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator());\n    }\n}\n// ################################# FOR CONTRIBUTORS #################################\n//\n// If adding support for a new provider, please append the provider\n// name to the supported list in the docstring below.\n//\n// ####################################################################################\n/**\n * Initialize a ChatModel from the model name and provider.\n * Must have the integration package corresponding to the model provider installed.\n *\n * @template {extends BaseLanguageModelInput = BaseLanguageModelInput} RunInput - The input type for the model.\n * @template {extends ConfigurableChatModelCallOptions = ConfigurableChatModelCallOptions} CallOptions - Call options for the model.\n *\n * @param {string | ChatModelProvider} [model] - The name of the model, e.g. \"gpt-4\", \"claude-3-opus-20240229\".\n * @param {Object} [fields] - Additional configuration options.\n * @param {string} [fields.modelProvider] - The model provider. Supported values include:\n *   - openai (@langchain/openai)\n *   - anthropic (@langchain/anthropic)\n *   - azure_openai (@langchain/openai)\n *   - google-vertexai (@langchain/google-vertexai)\n *   - google-vertexai-web (@langchain/google-vertexai-web)\n *   - google-genai (@langchain/google-genai)\n *   - bedrock (@langchain/aws)\n *   - cohere (@langchain/cohere)\n *   - fireworks (@langchain/community/chat_models/fireworks)\n *   - together (@langchain/community/chat_models/togetherai)\n *   - mistralai (@langchain/mistralai)\n *   - groq (@langchain/groq)\n *   - ollama (@langchain/ollama)\n *   - cerebras (@langchain/cerebras)\n * @param {string[] | \"any\"} [fields.configurableFields] - Which model parameters are configurable:\n *   - undefined: No configurable fields.\n *   - \"any\": All fields are configurable. (See Security Note in description)\n *   - string[]: Specified fields are configurable.\n * @param {string} [fields.configPrefix] - Prefix for configurable fields at runtime.\n * @param {Record<string, any>} [fields.params] - Additional keyword args to pass to the ChatModel constructor.\n * @returns {Promise<_ConfigurableModel<RunInput, CallOptions>>} A class which extends BaseChatModel.\n * @throws {Error} If modelProvider cannot be inferred or isn't supported.\n * @throws {Error} If the model provider integration package is not installed.\n *\n * @example Initialize non-configurable models\n * ```typescript\n * import { initChatModel } from \"langchain/chat_models/universal\";\n *\n * const gpt4 = await initChatModel(\"gpt-4\", {\n *   modelProvider: \"openai\",\n *   temperature: 0.25,\n * });\n * const gpt4Result = await gpt4.invoke(\"what's your name\");\n *\n * const claude = await initChatModel(\"claude-3-opus-20240229\", {\n *   modelProvider: \"anthropic\",\n *   temperature: 0.25,\n * });\n * const claudeResult = await claude.invoke(\"what's your name\");\n *\n * const gemini = await initChatModel(\"gemini-1.5-pro\", {\n *   modelProvider: \"google-vertexai\",\n *   temperature: 0.25,\n * });\n * const geminiResult = await gemini.invoke(\"what's your name\");\n * ```\n *\n * @example Create a partially configurable model with no default model\n * ```typescript\n * import { initChatModel } from \"langchain/chat_models/universal\";\n *\n * const configurableModel = await initChatModel(undefined, {\n *   temperature: 0,\n *   configurableFields: [\"model\", \"apiKey\"],\n * });\n *\n * const gpt4Result = await configurableModel.invoke(\"what's your name\", {\n *   configurable: {\n *     model: \"gpt-4\",\n *   },\n * });\n *\n * const claudeResult = await configurableModel.invoke(\"what's your name\", {\n *   configurable: {\n *     model: \"claude-3-5-sonnet-20240620\",\n *   },\n * });\n * ```\n *\n * @example Create a fully configurable model with a default model and a config prefix\n * ```typescript\n * import { initChatModel } from \"langchain/chat_models/universal\";\n *\n * const configurableModelWithDefault = await initChatModel(\"gpt-4\", {\n *   modelProvider: \"openai\",\n *   configurableFields: \"any\",\n *   configPrefix: \"foo\",\n *   temperature: 0,\n * });\n *\n * const openaiResult = await configurableModelWithDefault.invoke(\n *   \"what's your name\",\n *   {\n *     configurable: {\n *       foo_apiKey: process.env.OPENAI_API_KEY,\n *     },\n *   }\n * );\n *\n * const claudeResult = await configurableModelWithDefault.invoke(\n *   \"what's your name\",\n *   {\n *     configurable: {\n *       foo_model: \"claude-3-5-sonnet-20240620\",\n *       foo_modelProvider: \"anthropic\",\n *       foo_temperature: 0.6,\n *       foo_apiKey: process.env.ANTHROPIC_API_KEY,\n *     },\n *   }\n * );\n * ```\n *\n * @example Bind tools to a configurable model:\n * ```typescript\n * import { initChatModel } from \"langchain/chat_models/universal\";\n * import { z } from \"zod\";\n * import { tool } from \"@langchain/core/tools\";\n *\n * const getWeatherTool = tool(\n *   (input) => {\n *     // Do something with the input\n *     return JSON.stringify(input);\n *   },\n *   {\n *     schema: z\n *       .object({\n *         location: z\n *           .string()\n *           .describe(\"The city and state, e.g. San Francisco, CA\"),\n *       })\n *       .describe(\"Get the current weather in a given location\"),\n *     name: \"GetWeather\",\n *     description: \"Get the current weather in a given location\",\n *   }\n * );\n *\n * const getPopulationTool = tool(\n *   (input) => {\n *     // Do something with the input\n *     return JSON.stringify(input);\n *   },\n *   {\n *     schema: z\n *       .object({\n *         location: z\n *           .string()\n *           .describe(\"The city and state, e.g. San Francisco, CA\"),\n *       })\n *       .describe(\"Get the current population in a given location\"),\n *     name: \"GetPopulation\",\n *     description: \"Get the current population in a given location\",\n *   }\n * );\n *\n * const configurableModel = await initChatModel(\"gpt-4\", {\n *   configurableFields: [\"model\", \"modelProvider\", \"apiKey\"],\n *   temperature: 0,\n * });\n *\n * const configurableModelWithTools = configurableModel.bind({\n *   tools: [getWeatherTool, getPopulationTool],\n * });\n *\n * const configurableToolResult = await configurableModelWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\",\n *   {\n *     configurable: {\n *       apiKey: process.env.OPENAI_API_KEY,\n *     },\n *   }\n * );\n *\n * const configurableToolResult2 = await configurableModelWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\",\n *   {\n *     configurable: {\n *       model: \"claude-3-5-sonnet-20240620\",\n *       apiKey: process.env.ANTHROPIC_API_KEY,\n *     },\n *   }\n * );\n * ```\n *\n * @description\n * This function initializes a ChatModel based on the provided model name and provider.\n * It supports various model providers and allows for runtime configuration of model parameters.\n *\n * Security Note: Setting `configurableFields` to \"any\" means fields like api_key, base_url, etc.\n * can be altered at runtime, potentially redirecting model requests to a different service/user.\n * Make sure that if you're accepting untrusted configurations, you enumerate the\n * `configurableFields` explicitly.\n *\n * The function will attempt to infer the model provider from the model name if not specified.\n * Certain model name prefixes are associated with specific providers:\n * - gpt-3... or gpt-4... -> openai\n * - claude... -> anthropic\n * - amazon.... -> bedrock\n * - gemini... -> google-vertexai\n * - command... -> cohere\n * - accounts/fireworks... -> fireworks\n *\n * @since 0.2.11\n * @version 0.2.11\n */\nexport async function initChatModel(model, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfields) {\n    const { configurableFields, configPrefix, modelProvider, ...params } = {\n        configPrefix: \"\",\n        ...(fields ?? {}),\n    };\n    let configurableFieldsCopy = Array.isArray(configurableFields)\n        ? [...configurableFields]\n        : configurableFields;\n    if (!model && configurableFieldsCopy === undefined) {\n        configurableFieldsCopy = [\"model\", \"modelProvider\"];\n    }\n    if (configPrefix && configurableFieldsCopy === undefined) {\n        console.warn(`{ configPrefix: ${configPrefix} } has been set but no fields are configurable. Set ` +\n            `{ configurableFields: [...] } to specify the model params that are ` +\n            `configurable.`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const paramsCopy = { ...params };\n    if (configurableFieldsCopy === undefined) {\n        return new _ConfigurableModel({\n            defaultConfig: {\n                ...paramsCopy,\n                model,\n                modelProvider,\n            },\n            configPrefix,\n        });\n    }\n    else {\n        if (model) {\n            paramsCopy.model = model;\n        }\n        if (modelProvider) {\n            paramsCopy.modelProvider = modelProvider;\n        }\n        return new _ConfigurableModel({\n            defaultConfig: paramsCopy,\n            configPrefix,\n            configurableFields: configurableFieldsCopy,\n        });\n    }\n}\n","import { BaseChatModel } from \"@langchain/core/language_models/chat_models\";\nimport { HumanMessage, SystemMessage } from \"@langchain/core/messages\";\nimport fs from \"fs/promises\";\nimport { initChatModel } from \"langchain/chat_models/universal\";\nimport path from \"path\";\nimport logger from \"../utils/logger.js\";\nimport { iModelConfig, iOldModelConfig, ModelSettings } from \"../utils/types.js\";\nconst LANGCHAIN_SUPPORTED_PROVIDERS = [\n  \"openai\",\n  \"anthropic\",\n  \"azure_openai\",\n  \"cohere\",\n  \"google-vertexai\",\n  \"google-genai\",\n  \"ollama\",\n  \"together\",\n  \"fireworks\",\n  \"mistralai\",\n  \"groq\",\n  \"bedrock\",\n] as const;\n\nconst MCP_SUPPORTED_PROVIDERS = [\n  \"OpenRouter\", // openai          - @langchain/openai          // x\n  \"Anthropic\", // anthropic       - @langchain/anthropic       // v\n  \"Google Gemini\", // google-genai    - @langchain/google-genai    // v\n  \"DeepSeek\", // openai          - @langchain/openai          // x\n  \"GCP Vertex\", // google-vertexai - @langchain/google-vertexai // v\n  \"AWS Bedrock\", // bedrock         - @langchain/community       // x\n  \"OpenAI\", // openai          - @langchain/openai          // v\n  \"OpenAI Compatible\", // openai          - @langchain/openai          // x\n  \"LM Studio\", // custom          - custom chat model          // x\n  \"Ollama\", // ollama          - @langchain/ollama          // v\n] as const;\n\nexport class ModelManager {\n  private static instance: ModelManager;\n  private cleanModel: BaseChatModel | null = null;\n  public model: BaseChatModel | null = null;\n  public configPath: string = \"\";\n  public currentModelSettings: ModelSettings | null = null;\n  public enableTools: boolean = true;\n\n  private constructor(configPath?: string) {\n    this.configPath = configPath || path.join(process.cwd(), \"modelConfig.json\");\n  }\n\n  static getInstance(configPath?: string): ModelManager {\n    if (!ModelManager.instance) {\n      ModelManager.instance = new ModelManager(configPath);\n    } else if (configPath) {\n      ModelManager.instance.configPath = configPath;\n    }\n    return ModelManager.instance;\n  }\n\n  async getModelConfig(): Promise<iModelConfig | iOldModelConfig | null> {\n    try {\n      const configPath = this.configPath || path.join(process.cwd(), \"modelConfig.json\");\n      const configContent = await fs.readFile(configPath, \"utf-8\");\n      const config = JSON.parse(configContent) as iModelConfig;\n      return config;\n    } catch (error) {\n      logger.error(\"Error loading model configuration:\", error);\n      return null;\n    }\n  }\n\n  async initializeModel(): Promise<BaseChatModel | null> {\n    logger.info(\"Initializing model...\");\n    let config = await this.getModelConfig();\n\n    if (!config) {\n      logger.error(\"Model configuration not found\");\n      this.model = null;\n      this.cleanModel = null;\n      this.currentModelSettings = null;\n      return null;\n    }\n\n    // check is old version or not\n    if (!(config as iModelConfig).activeProvider || !(config as iModelConfig).configs) {\n      // transform to new version\n      const newConfig: iModelConfig = {\n        activeProvider: (config as iOldModelConfig).model_settings.modelProvider || \"\",\n        enableTools: true,\n        configs: {\n          [(config as iOldModelConfig).model_settings.modelProvider]: (config as iOldModelConfig).model_settings,\n        },\n      };\n      config = newConfig as iModelConfig;\n      // replace old config with new config\n      await fs.writeFile(this.configPath, JSON.stringify(config, null, 2), \"utf-8\");\n    }\n\n    const activeProvider = (config as iModelConfig).activeProvider;\n    const modelSettings = (config as iModelConfig).configs[activeProvider];\n    this.enableTools = (config as iModelConfig).enableTools ?? true;\n\n    if (!modelSettings) {\n      logger.error(`Model settings not found for provider: ${activeProvider}`);\n      this.model = null;\n      return null;\n    }\n\n    const modelName = modelSettings.model;\n    const baseUrl = modelSettings.configuration?.baseURL || modelSettings.baseURL || \"\";\n    this.model = await initChatModel(modelName, {\n      ...modelSettings,\n      baseUrl,\n    });\n\n    // a clean model\n    this.cleanModel = await initChatModel(modelName, {\n      ...modelSettings,\n      baseUrl,\n    });\n\n    this.currentModelSettings = modelSettings;\n\n    logger.info(`Model initialized with tools ${this.enableTools ? \"enabled\" : \"disabled\"}`);\n\n    return this.model;\n  }\n\n  async saveModelConfig(provider: string, uploadModelSettings: ModelSettings, enableTools_: boolean) {\n    let config = (await this.getModelConfig()) as iModelConfig;\n    if (!config) {\n      config = {\n        activeProvider: provider,\n        enableTools: enableTools_ ?? true,\n        configs: {\n          [provider]: uploadModelSettings,\n        },\n      };\n    }\n    config.activeProvider = provider;\n    config.configs[provider] = uploadModelSettings;\n    config.enableTools = enableTools_ ?? true;\n    await fs.writeFile(this.configPath, JSON.stringify(config, null, 2), \"utf-8\");\n  }\n\n  async replaceAllModelConfig(uploadModelSettings: iModelConfig) {\n    await fs.writeFile(this.configPath, JSON.stringify(uploadModelSettings, null, 2), \"utf-8\");\n  }\n\n  public async generateTitle(content: string) {\n    if (!this.cleanModel) {\n      logger.error(\"Model not initialized\");\n      return \"New Chat\";\n    }\n    const response = await this.cleanModel.invoke([\n      new SystemMessage(\n        `You are a title generator from the user input.\n        Your only task is to generate a short title based on the user input.\n        IMPORTANT:\n        - Output ONLY the title\n        - DO NOT try to answer or resolve the user input query.\n        - DO NOT try to use any tools to generate title\n        - NO explanations, quotes, or extra text\n        - NO punctuation at the end\n        - If the input contains Traditional Chinese characters, use Traditional Chinese for the title.\n        - For all other languages, generate the title in the same language as the input.`\n      ),\n      new HumanMessage(`<user_input_query>${content}</user_input_query>`),\n    ]);\n\n    const resContent = response?.content;\n    // avoid error\n    if (typeof resContent === 'object') {\n      return \"New Chat\";\n    }\n    return (resContent as string) || \"New Chat\";\n  }\n\n  getModel(): BaseChatModel | null {\n    if (!this.model || Object.keys(this.model).length === 0) {\n      logger.error(\"Model not initialized\");\n      return null;\n    }\n    return this.model;\n  }\n\n  async reloadModel() {\n    logger.info(\"Reloading model...\");\n    try {\n      this.model = await this.initializeModel();\n      logger.info(\"Model reloaded\");\n    } catch (error) {\n      logger.error(\"Error reloading model:\", error);\n    }\n  }\n}\n","import fs from \"fs/promises\";\nimport sharp from \"sharp\";\nimport logger from \"./logger.js\";\n\n// Read and convert image\nexport async function imageToBase64Original(imagePath: string): Promise<string> {\n  try {\n    const imageBuffer = await fs.readFile(imagePath);\n    return `data:image/jpeg;base64,${imageBuffer.toString(\"base64\")}`;\n  } catch (error) {\n    logger.error(\"Error reading image:\", error);\n    throw error;\n  }\n}\n\nexport async function imageToBase64(path: string): Promise<string> {\n  try {\n    // Use sharp to compress image\n    const compressedImageBuffer = await sharp(path)\n      .resize(800, 800, {\n        // Set maximum width and height\n        fit: \"inside\", // Keep aspect ratio\n        withoutEnlargement: true, // Avoid enlarging small images\n      })\n      .jpeg({\n        // Convert to JPEG format\n        quality: 80, // Set compression quality (0-100)\n        progressive: true, // Use progressive JPEG\n      })\n      .toBuffer();\n\n    // Convert to base64\n    return `data:image/jpeg;base64,${compressedImageBuffer.toString(\"base64\")}`;\n  } catch (error) {\n    logger.error(\"Error compressing image:\", error);\n    // If compression fails, use original method as fallback\n    return imageToBase64Original(path);\n  }\n}","import { BaseChatModel, BindToolsInput } from \"@langchain/core/language_models/chat_models\";\nimport {\n  AIMessage,\n  AIMessageChunk,\n  BaseMessage,\n  HumanMessage,\n  MessageContentComplex,\n  ToolMessage,\n} from \"@langchain/core/messages\";\nimport { Client } from \"@modelcontextprotocol/sdk/client/index.js\";\nimport { ModelManager } from \"./models/index.js\";\nimport { imageToBase64 } from \"./utils/image.js\";\nimport logger from \"./utils/logger.js\";\nimport { iQueryInput, iStreamMessage, ModelSettings } from \"./utils/types.js\";\nimport { openAIConvertToGeminiTools } from \"./utils/toolHandler.js\";\nimport { ToolDefinition } from \"@langchain/core/language_models/base\";\n\n// Map to store abort controllers\nexport const abortControllerMap = new Map<string, AbortController>();\n\n// Map to store partial responses when aborted\nexport interface AbortedResponse {\n  content: string;\n}\n\nexport const abortedResponseMap = new Map<string, AbortedResponse>();\n\ninterface TokenUsage {\n  totalInputTokens: number;\n  totalOutputTokens: number;\n  totalTokens: number;\n}\n\nexport async function handleProcessQuery(\n  toolToClientMap: Map<string, Client>,\n  availableTools: ToolDefinition[],\n  model: BaseChatModel | null,\n  input: string | iQueryInput,\n  history: BaseMessage[],\n  onStream?: (text: string) => void,\n  chatId?: string\n) {\n  // If chatId exists, create a new AbortController\n  if (chatId) {\n    const existingController = abortControllerMap.get(chatId);\n    if (existingController) {\n      existingController.abort();\n      abortControllerMap.delete(chatId);\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      logger.debug(`[${chatId}] Abort previous chat and delete abortController`);\n    }\n\n    const controller = new AbortController();\n    abortControllerMap.set(chatId, controller);\n    logger.debug(`[${chatId}] Set new abortController`);\n  }\n\n  let finalResponse = \"\";\n\n  const modelManager = ModelManager.getInstance();\n  const currentModelSettings = modelManager.currentModelSettings;\n\n  const tokenUsage = {\n    totalInputTokens: 0,\n    totalOutputTokens: 0,\n    totalTokens: 0,\n  };\n\n  try {\n    // Handle input format\n    let messages: BaseMessage[] = history;\n\n    if (!model) {\n      throw new Error(\"Model not initialized\");\n    }\n\n    // if retry, then input is empty\n    if (input) {\n      if (typeof input === \"string\") {\n        messages.push(new HumanMessage(input));\n      } else {\n        // Handle input with images\n        const content: MessageContentComplex[] = [];\n\n        // Add text content if exists\n        if (input.text) {\n          content.push({ type: \"text\", text: \"\" + input.text });\n        }\n\n        // Add image content if exists\n        if (input.images && input.images.length > 0) {\n          for (const imagePath of input.images) {\n            // Get actual file path from URL\n            const localPath = `${imagePath}`;\n            const base64Image = await imageToBase64(localPath);\n            content.push({\n              type: \"text\",\n              text: `![Image](${localPath})`,\n            });\n            content.push({\n              type: \"image_url\",\n              image_url: {\n                url: base64Image,\n              },\n            });\n          }\n        }\n\n        // Add image content if exists\n        if (input.documents && input.documents.length > 0) {\n          for (const documentPath of input.documents) {\n            const localPath = `${documentPath}`;\n            content.push({\n              type: \"text\",\n              text: `![Document](${localPath})`,\n            });\n          }\n        }\n\n        messages.push(new HumanMessage({ content }));\n      }\n    }\n\n    let hasToolCalls = true;\n\n    const tools = currentModelSettings?.modelProvider === \"google-genai\" ? openAIConvertToGeminiTools(availableTools) : availableTools;\n\n    const runModel = modelManager.enableTools ? model.bindTools?.(tools) || model : model;\n\n    const isOllama = currentModelSettings?.modelProvider === \"ollama\";\n    const isDeepseek =\n      currentModelSettings?.configuration?.baseURL?.toLowerCase().includes(\"deepseek\") ||\n      currentModelSettings?.model?.toLowerCase().includes(\"deepseek\");\n    const isMistralai = currentModelSettings?.modelProvider === \"mistralai\";\n    const isBedrock = currentModelSettings?.modelProvider === \"bedrock\";\n\n    logger.debug(`[${chatId}] Start to process LLM query`);\n\n    while (hasToolCalls) {\n      const stream = await runModel.stream(messages, {\n        signal: chatId ? abortControllerMap.get(chatId)?.signal : undefined,\n      });\n\n      let currentContent = \"\";\n      let toolCalls: any[] = [];\n\n      try {\n        // Track token usage if available\n        for await (const chunk of stream) {\n          caculateTokenUsage(tokenUsage, chunk, currentModelSettings!);\n\n          if (chunk.content) {\n            let chunkMessage = \"\";\n            if (Array.isArray(chunk.content)) {\n              // compatible Anthropic response format\n              const textContent = chunk.content.find((item) => item.type === \"text\" || item.type === \"text_delta\");\n              // @ts-ignore\n              chunkMessage = textContent?.text || \"\";\n            } else {\n              chunkMessage = chunk.content;\n            }\n            currentContent += chunkMessage;\n            onStream?.(\n              JSON.stringify({\n                type: \"text\",\n                content: chunkMessage,\n              } as iStreamMessage)\n            );\n          }\n\n          // Handle tool call stream\n          /** Note: When using stream, read tool_call_chunks to get tool call results\n           *  tool_calls arguments are empty.\n           */\n          if (\n            chunk.tool_calls ||\n            chunk.tool_call_chunks ||\n            (Array.isArray(chunk.content) && chunk.content.some((item) => item.type === \"tool_use\"))\n          ) {\n            let toolCallChunks: any[] = [];\n\n            toolCallChunks = chunk.tool_call_chunks || [];\n\n            for (const chunks of toolCallChunks) {\n              let index = chunks.index;\n              // Use index to find or create tool call record\n              // Ollama have multiple tool_call with same index and diff id\n              if (isOllama && index !== undefined && index >= 0 && toolCalls[index]) {\n                index = toolCalls.findIndex((toolCall) => toolCall.id === chunks.id);\n                if (index === undefined || index < 0) {\n                  index = toolCalls.length;\n                }\n              }\n\n              if (index !== undefined && index >= 0 && !toolCalls[index]) {\n                toolCalls[index] = {\n                  id: chunks.id,\n                  type: \"function\",\n                  function: {\n                    name: chunks.name,\n                    arguments: \"\",\n                  },\n                };\n              }\n\n              if (index !== undefined && index >= 0) {\n                if (chunks.name) {\n                  toolCalls[index].function.name = chunks.name;\n                }\n\n                if (chunks.args || chunks.input) {\n                  const newArgs = chunks.args || chunks.input || \"\";\n                  toolCalls[index].function.arguments += newArgs;\n                }\n\n                // Try to parse complete arguments\n                try {\n                  const args = toolCalls[index].function.arguments;\n                  if (args.startsWith(\"{\") && args.endsWith(\"}\")) {\n                    const parsedArgs = JSON.parse(args);\n                    toolCalls[index].function.arguments = JSON.stringify(parsedArgs);\n                  }\n                } catch (e) {\n                  // If parsing fails, arguments are not complete, continue accumulating\n                }\n              }\n            }\n          }\n        }\n      } catch (error: unknown) {\n        if (error instanceof Error && error.message.toLowerCase().includes(\"abort\")) {\n          logger.info(`[${chatId}] Aborted when LLM response streaming`);\n          finalResponse += currentContent;\n          // Save current response state\n          abortedResponseMap.set(chatId || \"\", {\n            content: finalResponse,\n          });\n          throw error;\n        }\n        logger.error(`Error in stream processing: ${error instanceof Error ? error.message : String(error)}`);\n        throw error;\n      }\n\n      logger.debug(`[${chatId}] Chunk collected`);\n\n      // filter empty tool calls\n      toolCalls = toolCalls.filter((call) => call);\n\n      // Update final response\n      finalResponse += currentContent;\n\n      // If no tool calls, end loop\n      if (toolCalls.length === 0) {\n        hasToolCalls = false;\n        break;\n      }\n\n      logger.debug(`[${chatId}] Tool calls: ${JSON.stringify(toolCalls, null, 2)}`);\n      // support anthropic multiple tool calls version but other not sure\n      messages.push(\n        new AIMessage({\n          content: [\n            {\n              type: \"text\",\n              // some model not allow empty content in text block\n              text: currentContent || \".\",\n            },\n            // Deepseek will recursive when tool_use exist in content\n            ...(isDeepseek || isMistralai || isBedrock\n              ? []\n              : toolCalls.map((toolCall) => {\n                let parsedArgs = {}\n                try {\n                  parsedArgs = toolCall.function.arguments === \"\" ? {} : JSON.parse(toolCall.function.arguments);\n                } catch (error) {\n                  toolCall.function.arguments = \"{}\";\n                  logger.error(`[${chatId}] Error parsing tool call ${toolCall.function.name} args: ${error}`);\n                }\n                return {\n                  type: \"tool_use\",\n                  id: toolCall.id,\n                  name: toolCall.function.name,\n                  input: parsedArgs,\n                }\n              })),\n          ],\n          additional_kwargs: {\n            tool_calls: toolCalls.map((toolCall) => ({\n              id: toolCall.id,\n              type: \"function\",\n              function: {\n                name: toolCall.function.name,\n                arguments: toolCall.function.arguments,\n              },\n            })),\n          },\n        })\n      );\n\n      // Send call info before tool execution\n      if (toolCalls.length > 0) {\n        onStream?.(\n          JSON.stringify({\n            type: \"tool_calls\",\n            content: toolCalls.map((call) => {\n              logger.info(\n                `[Tool Calls] [${call.function.name}] ${JSON.stringify(call.function.arguments || \"{}\", null, 2)}`\n              );\n              return {\n                name: call.function.name,\n                arguments: JSON.parse(call.function.arguments || \"{}\"),\n              };\n            }),\n          } as iStreamMessage)\n        );\n      }\n\n      logger.debug(`[${chatId}] Tool calls collected`);\n\n      // Execute all tool calls in parallel\n      const toolResults = await Promise.all(\n        toolCalls.map(async (toolCall) => {\n          try {\n            // Check if already aborted\n            if (chatId && abortControllerMap.has(chatId)) {\n              const controller = abortControllerMap.get(chatId);\n              if (controller?.signal.aborted) {\n                logger.info(`[${chatId}] Aborted before tool call`);\n                throw new Error(\"ABORTED\");\n              }\n            }\n\n            const toolName = toolCall.function.name;\n            const toolArgs = JSON.parse(toolCall.function.arguments || \"{}\");\n            const client = toolToClientMap.get(toolName);\n\n            // Create an AbortSignal for this specific tool call\n            const abortController = new AbortController();\n\n            // If there's a chat ID, link this tool call's abort to the main abort\n            let mainAbortListener: (() => void) | undefined;\n            if (chatId && abortControllerMap.has(chatId)) {\n              const mainController = abortControllerMap.get(chatId);\n              if (mainController) {\n                // If already aborted, throw immediately\n                if (mainController.signal.aborted) {\n                  throw new Error(\"ABORTED\");\n                }\n                // Listen for abort\n                mainAbortListener = () => {\n                  logger.info(`[${chatId}] Aborting tool call [${toolName}]`);\n                  abortController.abort();\n                };\n                mainController.signal.addEventListener(\"abort\", mainAbortListener);\n              }\n            }\n\n            try {\n              const result = await new Promise<any>((resolve, reject) => {\n                const executeToolCall = async () => {\n                  try {\n                    const abortListener = () => {\n                      logger.info(`[${chatId}] Tool call [${toolName}] has been aborted`);\n                      reject(new Error(\"ABORTED\"));\n                    };\n\n                    abortController.signal.addEventListener(\"abort\", abortListener);\n\n                    try {\n                      const result = await client?.callTool(\n                        {\n                          name: toolName,\n                          arguments: toolArgs,\n                        },\n                        undefined,\n                        {\n                          signal: abortController.signal,\n                          timeout: 99999000,\n                        }\n                      );\n\n                      resolve(result);\n                    } catch (error) {\n                      reject(error);\n                    } finally {\n                      abortController.signal.removeEventListener(\"abort\", abortListener);\n                    }\n                  } catch (error) {\n                    reject(error);\n                  }\n                };\n\n                setImmediate(executeToolCall);\n              });\n\n              if (result?.isError) logger.error(`[Tool Result] [${toolName}] ${JSON.stringify(result, null, 2)}`);\n              else logger.info(`[Tool Result] [${toolName}] ${JSON.stringify(result, null, 2)}`);\n\n              onStream?.(\n                JSON.stringify({\n                  type: \"tool_result\",\n                  content: {\n                    name: toolName,\n                    result: result,\n                  },\n                } as iStreamMessage)\n              );\n\n              return {\n                tool_call_id: toolCall.id,\n                role: \"tool\" as const,\n                content: JSON.stringify(result),\n              };\n            } finally {\n              if (mainAbortListener && chatId && abortControllerMap.has(chatId)) {\n                const mainController = abortControllerMap.get(chatId);\n                mainController?.signal.removeEventListener(\"abort\", mainAbortListener);\n              }\n            }\n          } catch (error) {\n            if (error instanceof Error && error.message === \"ABORTED\") {\n              // logger.info(`[${chatId}] Tool call has been aborted`);\n              throw error; // Re-throw to be caught by the outer try-catch\n            }\n            throw error;\n          }\n        })\n      );\n\n      logger.debug(`[${chatId}] Tool results collected`);\n\n      // Add tool results to conversation\n      if (toolResults.length > 0) {\n        messages.push(...toolResults.map((result) => new ToolMessage(result)));\n      }\n\n      logger.debug(`[${chatId}] Messages collected and ready to next round`);\n    }\n\n    // Log token usage at the end of processing\n    logger.debug(\n      `[${chatId}] Input tokens: ${tokenUsage.totalInputTokens}, Output tokens: ${tokenUsage.totalOutputTokens}, Total tokens: ${tokenUsage.totalTokens}`\n    );\n\n    return { result: finalResponse, tokenUsage };\n  } catch (error) {\n    const err = error as Error;\n    if (err.message.toLowerCase().includes(\"abort\")) {\n      // If aborted, return saved response\n      logger.info(`[${chatId}] has been aborted`);\n      const abortedResponse = abortedResponseMap.get(chatId || \"\");\n      return { result: abortedResponse?.content || finalResponse || \"\", tokenUsage };\n    }\n    logger.error(`Error in handleProcessQuery: ${err.message}`);\n    throw err;\n  } finally {\n    // Clean up AbortController\n    if (chatId) {\n      abortedResponseMap.delete(chatId);\n    }\n  }\n}\n\nfunction caculateTokenUsage(tokenUsage: TokenUsage, chunk: AIMessageChunk, currentModelSettings: ModelSettings) {\n  if (!currentModelSettings) {\n    return;\n  }\n\n  if (currentModelSettings.configuration?.baseURL?.toLowerCase().includes(\"silicon\")) {\n    const usage = chunk.response_metadata.usage;\n    tokenUsage.totalInputTokens = usage?.prompt_tokens || 0;\n    tokenUsage.totalOutputTokens = usage?.completion_tokens || 0;\n    tokenUsage.totalTokens = usage?.total_tokens || 0;\n    return;\n  }\n\n  switch (currentModelSettings.modelProvider) {\n    case \"openai\":\n      if (chunk.response_metadata?.usage) {\n        const usage = chunk.response_metadata.usage;\n        tokenUsage.totalInputTokens += usage?.prompt_tokens || 0;\n        tokenUsage.totalOutputTokens += usage?.completion_tokens || 0;\n        tokenUsage.totalTokens += usage?.total_tokens || 0;\n      }\n      break;\n    case \"anthropic\":\n    case \"ollama\":\n      if (chunk.usage_metadata) {\n        const usage = chunk.usage_metadata;\n        tokenUsage.totalInputTokens += usage?.input_tokens || 0;\n        tokenUsage.totalOutputTokens += usage?.output_tokens || 0;\n        tokenUsage.totalTokens += usage?.total_tokens || 0;\n      }\n      break;\n    default:\n      break;\n  }\n}\n","export const systemPrompt = (customRules: string) => {\n  return `\n<Dive_System_Thinking_Protocol>\n  I am an AI Assistant, leveraging the Model Context Protocol (MCP) to utilize various tools and applications.\n  Current Time: ${new Date().toISOString()}\n\n  PRIORITY NOTICE:\n  - User_Defined_Rules take ABSOLUTE precedence over all other rules if they exist\n  - In case of any conflict between User_Defined_Rules and other guidelines, User_Defined_Rules MUST be followed\n  - Always check and comply with User_Defined_Rules first before applying any other rules or guidelines\n\n  I will strictly follow these directives and rules in the following XML tags:\n    - <User_Defined_Rules> (HIGHEST PRIORITY)\n    - <Core_Guidelines>\n    - <System_Specific_Rules>\n\n  <User_Defined_Rules>\n    ${customRules}\n  </User_Defined_Rules>\n\n  <Core_Guidelines>\n    <Data_Access>\n      - MANDATORY: Employ the MCP to establish connections with designated data sources, including but not limited to databases, APIs, and file systems.\n      - COMPLIANCE REQUIRED: Rigorously observe all security and privacy protocols during data access.\n      - CRITICAL: Ensure comprehensive data gathering from multiple relevant sources to support thorough analysis.\n    </Data_Access>\n\n    <Context_Management>\n      - Historical Dialogue: Maintain an exhaustive record of user interactions. PROHIBITED: Do not request information already provided. In the absence of new user inputs, rely exclusively on existing dialogue history and contextual data to formulate responses.\n      - Contextual Memory: **IMPERATIVE:** Retain comprehensive details of user-uploaded files and their contents throughout the session. When the query is related to these files and the amount of stored information is sufficient to answer the query, the stored information is used directly without accessing the files again.\n      - Context Integration: Synthesize historical information with new data to provide coherent and progressive responses.\n    </Context_Management>\n\n    <Analysis_Framework>\n      - COMPREHENSIVE THINKING:\n        * Break down complex queries into core components\n        * Consider multiple perspectives and approaches\n        * Apply critical thinking and domain expertise\n        * Identify patterns and relationships\n        * Challenge assumptions and validate conclusions\n\n      - DEPTH OF PROCESSING:\n        * Conduct multi-layered analysis from surface to deep implications\n        * Draw connections across relevant domains\n        * Consider edge cases and limitations\n        * Evaluate practical implications and applications\n    </Analysis_Framework>\n\n    <Response_Quality>\n      - FUNDAMENTAL PRINCIPLES:\n        * Deliver responses that demonstrate genuine understanding\n        * Maintain natural, coherent flow of ideas\n        * Support claims with concrete evidence\n        * Balance depth with clarity and conciseness\n\n      - QUALITY ASSURANCE:\n        * Verify accuracy of all information\n        * Ensure completeness of response\n        * Provide practical, actionable insights\n        * Anticipate follow-up questions\n        * Acknowledge uncertainties when present\n\n      - EXPERTISE DEMONSTRATION:\n        * Apply domain knowledge appropriately\n        * Explain complex concepts clearly\n        * Suggest innovative solutions when relevant\n        * Integrate insights across disciplines\n    </Response_Quality>\n  </Core_Guidelines>\n\n  <System_Specific_Rules>\n    <Non-Image-File_Handling>\n      - Should a user inquiry relate to a previously uploaded non-image file, and the current dialogue history lacks sufficient information to address the query, IMMEDIATELY invoke the MCP to access the file's content. This step is CRUCIAL to ensure response accuracy and completeness.\n    </Non-Image-File_Handling>\n\n    <Mermaid_Handling>\n      - When a user requests diagrammatic representations (e.g., mind maps) that can be rendered using Mermaid, assume Mermaid support is available.\n      - Directly output the diagram in valid Mermaid syntax without stating any limitations.\n    </Mermaid_Handling>\n\n    <Image_Handling>\n      - Basic Usage:\n        * Images are provided as Base64 format in conversation\n        * **ALWAYS** assume you can see and analyze these images directly\n        * **CRITICAL:** You must NEVER say you cannot access/read/see images\n        * Proceed with analyzing any images mentioned in the conversation\n        * For requests involving images, assume Markdown image rendering is enabled.\n        * Output images using Markdown syntax immediately, without declaring any inability to display images.\n      - Tool Usage:\n        * Only use MCP tools when the task requires advanced processing (e.g., image transformation, specific measurements)\n        * Otherwise, always use the provided base64 image when it can fulfill the user's request\n    </Image_Handling>\n\n    <Local_File_Handling>\n      - If a local file path is provided, always display it using Markdown syntax.\n      - Do not indicate any restrictions.\n      - **Note that while local images are supported, local video playback via Markdown is not.**\n      - **Note that always check if the file is successfully displayed, and if not, inform the user about potential display issues**\n    </Local_File_Handling>\n\n    <Response_Format>\n      * Use markdown formatting for all responses\n      * Maintain clear structure with appropriate headers and sections\n      * Ensure consistent formatting throughout the response\n\n      <Special_Cases>\n        <Math_Formatting>\n          * All mathematical formulas must use KaTeX syntax:\n          * For inline formulas:\n            - Use single dollar signs: \\( [formula] \\)\n            - Example: \\( E = mc^2 \\)\n          * For block formulas:\n            - Use double dollar signs with displaystyle: \\( \\displaystyle [formula] \\)\n            - Example: \\( \\displaystyle \\int_{a}^{b} f(x) dx = F(b) - F(a) \\)\n          * Important notes:\n            - Ensure proper KaTeX syntax in all formulas\n            - Maintain consistent and professional mathematical typesetting\n            - Use \\displaystyle in block formulas for better readability\n        </Math_Formatting>\n      </Special_Cases>\n    </Response_Format>\n  </System_Specific_Rules>\n</Dive_System_Thinking_Protocol>\n`;\n};\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { systemPrompt } from \"./system.js\";\n\nexport class PromptManager {\n  private static instance: PromptManager;\n  private prompts: Map<string, string>;\n  public customRulesPath: string;\n\n  private constructor(customRulesPath?: string) {\n    this.prompts = new Map();\n    this.customRulesPath = customRulesPath || path.resolve(process.cwd(), \".customrules\");\n\n    // Read .customrules file\n    try {\n      const customRules = fs.readFileSync(this.customRulesPath, \"utf-8\");\n      // Combine system prompt and custom rules\n      this.prompts.set(\"system\", systemPrompt(customRules));\n    } catch (error) {\n      console.warn(`Cannot read ${this.customRulesPath}: ${error}`);\n      this.prompts.set(\"system\", systemPrompt(\"\"));\n    }\n  }\n\n  static getInstance(customRulesPath?: string) {\n    if (!PromptManager.instance) {\n      PromptManager.instance = new PromptManager(customRulesPath);\n    } else if (customRulesPath) {\n      PromptManager.instance.customRulesPath = customRulesPath;\n    }\n    return PromptManager.instance;\n  }\n\n  setPrompt(key: string, prompt: string) {\n    this.prompts.set(key, prompt);\n  }\n\n  getPrompt(key: string): string | undefined {\n    return this.prompts.get(key);\n  }\n\n  loadCustomRules() {\n    const customRulesPath = this.customRulesPath || path.resolve(process.cwd(), \".customrules\");\n    try {\n      const customRules = fs.readFileSync(customRulesPath, \"utf-8\");\n      return customRules;\n    } catch (error) {\n      console.warn(`Cannot read ${customRulesPath}: ${error}`);\n      return \"\";\n    }\n  }\n\n  updateSystemPrompt() {\n    const customRules = this.loadCustomRules();\n    this.prompts.set(\"system\", systemPrompt(customRules));\n  }\n}\n","import { AIMessage, BaseMessage, HumanMessage } from \"@langchain/core/messages\";\nimport { Message } from \"../database/schema.js\";\nimport { imageToBase64 } from \"./image.js\";\n\nexport async function processHistoryMessages(historyMessages: Message[], history: BaseMessage[]) {\n  for (const message of historyMessages) {\n    const files = message.files as string[];\n    if (!files || files.length === 0) {\n      // Handle empty content\n      const messageContent = message.content?.trim() ? message.content : \".\";\n      if (message.role === \"user\") {\n        history.push(new HumanMessage(messageContent));\n      } else {\n        history.push(new AIMessage(messageContent));\n      }\n    } else {\n      let content: any[] = [];\n      if (message.content) {\n        content.push({\n          type: \"text\",\n          text: message.content,\n        });\n      }\n\n      for (const filePath of files) {\n        const localPath = `${filePath}`;\n        if (filePath.match(/\\.(jpg|jpeg|png|gif|webp)$/i)) {\n          const base64Image = await imageToBase64(localPath);\n          content.push({\n            type: \"text\",\n            text: `![Image](${localPath})`,\n          });\n          content.push({\n            type: \"image_url\",\n            image_url: {\n              url: base64Image,\n            },\n          });\n        } else {\n          content.push({\n            type: \"text\",\n            text: `![Document](${localPath})`,\n          });\n        }\n      }\n\n      if (message.role === \"assistant\") {\n        history.push(new AIMessage({\n            content: content,\n        }));\n      } else {\n        history.push(new HumanMessage({\n            content: content,\n        }));\n      }\n    }\n  }\n\n  return history;\n}\n","import { BaseMessage, SystemMessage } from \"@langchain/core/messages\";\nimport { randomUUID } from \"crypto\";\nimport * as readline from \"node:readline\";\nimport {\n  checkChatExists,\n  createChat,\n  createMessage,\n  deleteMessagesAfter,\n  getChatWithMessages,\n} from \"./database/index.js\";\nimport { MCPServerManager } from \"./mcpServer/index.js\";\nimport { ModelManager } from \"./models/index.js\";\nimport { handleProcessQuery } from \"./processQuery.js\";\nimport { PromptManager } from \"./prompt/index.js\";\nimport logger from \"./utils/logger.js\";\nimport { processHistoryMessages } from \"./utils/processHistory.js\";\nimport { iQueryInput, iStreamMessage } from \"./utils/types.js\";\n\ninterface MCPClientConfig {\n  modelConfigPath?: string;\n  mcpServerConfigPath?: string;\n  customRulesPath?: string;\n}\n\nexport class MCPClient {\n  private config: MCPClientConfig;\n\n  constructor(config: MCPClientConfig = {}) {\n    this.config = config;\n  }\n\n  public async init() {\n    // Initialize Model Manager\n    await ModelManager.getInstance(this.config?.modelConfigPath).initializeModel();\n    // Initialize Prompt Manager\n    PromptManager.getInstance(this.config?.customRulesPath);\n    // Initialize MCP Server Manager\n    await MCPServerManager.getInstance(this.config?.mcpServerConfigPath).initialize();\n    console.log(\"\\n\"); // New line\n  }\n\n  public async processQuery(\n    chatId: string | undefined,\n    input: string | iQueryInput,\n    onStream?: (text: string) => void,\n    regenerateMessageId?: string,\n    fingerprint?: string,\n    user_access_token?: string\n  ) {\n    let startTime = new Date();\n    let chat_id = chatId || randomUUID();\n    logger.debug(`[${chat_id}] Processing query`);\n    let history: BaseMessage[] = [];\n    let title = \"New Chat\";\n    let titlePromise: Promise<string> | undefined;\n\n    const systemPrompt = PromptManager.getInstance().getPrompt(\"system\");\n    if (systemPrompt) {\n      history.push(new SystemMessage(systemPrompt));\n    }\n\n    // we use the user input text to generate title\n    // TODO: will fix the issue when only file\n    const userInput = typeof input === \"string\" ? input : input.text;\n\n    const messageHistory = await getChatWithMessages(chat_id);\n    if (messageHistory && messageHistory.messages.length > 0) {\n      title = messageHistory.chat.title;\n      // if retry then slice the history messages before the regenerateMessageId\n      if (regenerateMessageId) {\n        const targetIndex = messageHistory.messages.findIndex((msg) => msg.messageId === regenerateMessageId);\n        if (targetIndex >= 0) {\n          messageHistory.messages = messageHistory.messages.slice(0, targetIndex);\n        }\n      }\n      history = await processHistoryMessages(messageHistory.messages, history);\n    }\n    // no history messages means it's a new chat\n    else {\n      // Generate title for new chat asynchronously\n      if (userInput) {\n        titlePromise = ModelManager.getInstance().generateTitle(userInput);\n      }\n    }\n\n    logger.debug(`[${chat_id}] Query pre-processing time: ${new Date().getTime() - startTime.getTime()}ms`);\n\n    if (onStream) {\n      onStream(\n        JSON.stringify({\n          type: \"chat_info\",\n          content: {\n            id: chat_id,\n            title: title || \"New Chat\",\n          },\n        } as iStreamMessage)\n      );\n    }\n\n    try {\n      const serverManager = MCPServerManager.getInstance();\n      const toolClientMap = serverManager.getToolToServerMap();\n      const availableTools = serverManager.getAvailableTools();\n\n      const { result, tokenUsage } = await handleProcessQuery(\n        toolClientMap,\n        availableTools,\n        ModelManager.getInstance().getModel(),\n        input,\n        history,\n        onStream,\n        chat_id\n      );\n\n      const totalRunTime = Number(((new Date().getTime() - startTime.getTime()) / 1000).toFixed(2));\n      logger.debug(`[${chat_id}] Total run time: ${totalRunTime}s`);\n\n      if (!onStream) {\n        console.log(\"\\nAssistant:\\n\", result);\n      }\n\n      // Pending title generation, wait for it here with timeout\n      if (titlePromise) {\n        // Timeout is to prevent the title generation delay long time when the query process is aborted\n        try {\n          title = await Promise.race([\n            titlePromise,\n            new Promise<string>((_, reject) => setTimeout(() => reject(new Error(\"Title generation timeout\")), 5000)),\n          ]);\n        } catch (error: any) {\n          logger.warn(`[${chat_id}] Title generation failed or timed out: ${error.message}`);\n          title = \"New Chat\";\n        }\n      }\n\n      // double check the chat exists and create to database if necessary\n      const isChatExists = await checkChatExists(chat_id);\n      if (!isChatExists) {\n        await createChat(chat_id, title || \"New Chat\", {\n          fingerprint: fingerprint,\n          user_access_token: user_access_token,\n        });\n      }\n\n      // if retry then delete the messages after the regenerateMessageId firstly\n      if (regenerateMessageId) {\n        await deleteMessagesAfter(chat_id, regenerateMessageId);\n      }\n      const userMessageId = randomUUID();\n      if (!regenerateMessageId) {\n        const files = (typeof input === \"object\" && [...(input.images || []), ...(input.documents || [])]) || [];\n        await createMessage(\n          {\n            role: \"user\",\n            chatId: chat_id,\n            messageId: userMessageId,\n            content: userInput || \"\",\n            files: files,\n            createdAt: new Date().toISOString(),\n          },\n          {\n            fingerprint: fingerprint,\n            user_access_token: user_access_token,\n          }\n        );\n      }\n      const assistantMessageId = randomUUID();\n      await createMessage(\n        {\n          role: \"assistant\",\n          chatId: chat_id,\n          messageId: assistantMessageId,\n          content: result,\n          files: [],\n          createdAt: new Date().toISOString(),\n        },\n        {\n          LLM_Model: {\n            model: ModelManager.getInstance().currentModelSettings?.model || \"\",\n            total_input_tokens: tokenUsage.totalInputTokens,\n            total_output_tokens: tokenUsage.totalOutputTokens,\n            total_run_time: totalRunTime,\n          },\n          fingerprint: fingerprint,\n          user_access_token: user_access_token,\n        }\n      );\n\n      if (onStream) {\n        onStream(\n          JSON.stringify({\n            type: \"message_info\",\n            content: {\n              // if retry then set the userMessageId is not required\n              userMessageId: regenerateMessageId ? \"\" : userMessageId,\n              assistantMessageId: assistantMessageId,\n            },\n          } as iStreamMessage)\n        );\n      }\n\n      if (onStream) {\n        onStream(\n          JSON.stringify({\n            type: \"chat_info\",\n            content: {\n              id: chat_id,\n              title: title || \"New Chat\",\n            },\n          } as iStreamMessage)\n        );\n      }\n\n      logger.debug(`[${chat_id}] Query processed successfully`);\n      return result;\n    } catch (error: any) {\n      logger.error(`[${chat_id}] Error processing query: ${error.message}`);\n      if (onStream) {\n        onStream(\n          JSON.stringify({\n            type: \"error\",\n            content: (error as Error).message,\n          } as iStreamMessage)\n        );\n      }\n      throw error;\n    }\n  }\n\n  public async cleanup() {\n    await MCPServerManager.getInstance().disconnectAllServers();\n  }\n}\n\nexport class MCPCliClient extends MCPClient {\n  constructor(config: MCPClientConfig = {}) {\n    super(config);\n  }\n\n  async chatLoop() {\n    const chatId = randomUUID();\n    console.log(`\\nChat ID: ${chatId}\\n`);\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n\n    while (true) {\n      const input = await new Promise<string>((resolve) => {\n        console.log(\"=========================================\");\n        rl.question(\"\\nEnter your message (or 'exit' to quit): \", resolve);\n      });\n\n      if (!input || input.trim() === \"\") {\n        console.log(\"Please enter a valid message.\");\n        continue;\n      }\n\n      if (input.toLowerCase() === \"exit\") {\n        console.log(\"\\nSee you next time!\");\n        break;\n      }\n\n      try {\n        // Command line streaming output handler\n        console.log(\"\\nAssistant:\");\n        const onStream = (text: string) => {\n          try {\n            const streamRes = JSON.parse(text);\n            process.stdout.write(streamRes.content);\n          } catch {\n            process.stdout.write(text);\n          }\n        };\n\n        await this.processQuery(chatId, input, onStream);\n        console.log(\"\\n\");\n      } catch (error: any) {\n        console.error(\"\\nError processing query:\", error.message);\n      }\n    }\n\n    rl.close();\n    await MCPServerManager.getInstance().disconnectAllServers();\n  }\n}\n","import express from \"express\";\nimport { deleteChat, getAllChats, getChatWithMessages } from \"../database/index.js\";\nimport { abortControllerMap } from \"../processQuery.js\";\nimport logger from \"../utils/logger.js\";\n\nexport function chatRouter() {\n  const router = express.Router();\n\n  router.get(\"/list\", async (req, res) => {\n    try {\n      const chats = await getAllChats();\n      res.json({\n        success: true,\n        data: chats,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.get(\"/:id\", async (req, res) => {\n    try {\n      const chatId = req.params.id;\n      const result = await getChatWithMessages(chatId);\n\n      if (!result) {\n        res.status(404).json({\n          success: false,\n          message: \"Chat not found\",\n        });\n        return;\n      }\n\n      res.json({\n        success: true,\n        data: {\n          chat: result.chat,\n          messages: result.messages,\n        },\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.delete(\"/:id\", async (req, res) => {\n    const chatId = req.params.id;\n    await deleteChat(chatId);\n    res.json({\n      success: true,\n    });\n  });\n\n  router.post(\"/:id/abort\", async (req, res) => {\n    logger.info(`[${req.params.id}] Try to abort chat...`);\n    try {\n      const chatId = req.params.id;\n      const controller = abortControllerMap.get(chatId);\n      if (controller) {\n        logger.info(`[${chatId}] Chat abort signal sent successfully`);\n        controller.abort();\n        res.json({\n          success: true,\n          message: \"Chat abort signal sent successfully\",\n        });\n      } else {\n        logger.info(`[${chatId}] No active chat found with this ID`);\n        res.status(404).json({\n          success: false,\n          message: \"No active chat found with this ID\",\n        });\n      }\n    } catch (error: any) {\n      logger.error(`[${req.params.id}] Error aborting chat`, error);\n      res.status(500).json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n\n  return router;\n}\n","import { AIMessage, HumanMessage, SystemMessage } from \"@langchain/core/messages\";\nimport { randomUUID } from \"crypto\";\nimport express from \"express\";\nimport { initChatModel } from \"langchain/chat_models/universal\";\nimport { MCPServerManager } from \"../mcpServer/index.js\";\nimport { ModelManager } from \"../models/index.js\";\nimport { abortControllerMap, handleProcessQuery } from \"../processQuery.js\";\nimport { PromptManager } from \"../prompt/index.js\";\nimport logger from \"../utils/logger.js\";\n\ninterface ChatCompletionResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: string;\n  system_fingerprint: string;\n  choices: Array<{\n    index: number;\n    message?: {\n      role: string;\n      content: string;\n      refusal: null;\n    };\n    delta?: {\n      role?: string;\n      content?: string;\n    };\n    logprobs: null;\n    finish_reason: string | null;\n  }>;\n  usage?: {\n    prompt_tokens: number;\n    completion_tokens: number;\n    total_tokens: number;\n  };\n}\n\nexport function compatibleRouter() {\n  const router = express.Router();\n  const modelManager = ModelManager.getInstance();\n  const promptManager = PromptManager.getInstance();\n  const mcpServerManager = MCPServerManager.getInstance();\n\n  router.get(\"/\", (req, res) => {\n    res.json({\n      success: true,\n      message: \"Welcome to Dive Compatible API! 🚀\",\n    });\n  });\n\n  router.get(\"/models\", async (req, res) => {\n    try {\n      const modelSettings = modelManager.currentModelSettings;\n      const models = modelSettings\n        ? [\n            {\n              id: modelSettings.model,\n              type: \"model\",\n              owned_by: modelSettings.modelProvider,\n            },\n          ]\n        : [];\n\n      res.json({\n        success: true,\n        data: models,\n      });\n    } catch (error: any) {\n      res.status(400).json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  // compatible chat\n  //@ts-ignore\n  router.post(\"/chat/completions\", async (req, res) => {\n    try {\n      const { messages, stream, tool_choice } = req.body;\n\n      if (!messages || !Array.isArray(messages)) {\n        return res.status(400).json({\n          success: false,\n          message: \"Parameter 'messages' must be an array\",\n        });\n      }\n\n      if (typeof stream !== \"boolean\") {\n        return res.status(400).json({\n          success: false,\n          message: \"Parameter 'stream' must be a boolean\",\n        });\n      }\n      if (tool_choice !== \"auto\" && tool_choice !== \"none\") {\n        return res.status(400).json({\n          success: false,\n          message: \"Parameter 'tool_choice' must be 'auto' or 'none'\",\n        });\n      }\n\n      const isValidMessage = messages.every(\n        (msg) => msg.role && typeof msg.role === \"string\" && msg.content && typeof msg.content === \"string\"\n      );\n\n      if (!isValidMessage) {\n        return res.status(400).json({\n          success: false,\n          message:\n            \"Invalid message format. Each message must have 'role' and 'content' fields as string. Image URLs and other non-text content are not supported now.\",\n        });\n      }\n\n      // check model settings\n      const modelSettings = modelManager.currentModelSettings;\n      if (!modelSettings) {\n        return res.status(500).json({\n          success: false,\n          message: \"No model settings available\",\n        });\n      }\n\n      // create history\n      let hasSystemMessage = false;\n      let history = messages.slice(0, -1).map((msg) => {\n        if (msg.role === \"system\") {\n          hasSystemMessage = true;\n          return new SystemMessage(msg.content);\n        } else if (msg.role === \"assistant\") {\n          return new AIMessage(msg.content);\n        } else {\n          return new HumanMessage(msg.content);\n        }\n      });\n\n      // add system prompt if not exist, make sure LLM can run\n      if (!hasSystemMessage) {\n        const systemPrompt = promptManager.getPrompt(\"system\");\n        if (systemPrompt) {\n          history = [new SystemMessage(systemPrompt), ...history];\n        }\n      }\n\n      const input = messages[messages.length - 1]?.content;\n      const availableTools = tool_choice === \"auto\" ? mcpServerManager.getAvailableTools() : [];\n\n      const modelName = modelSettings.model;\n      const baseUrl = modelSettings.configuration?.baseURL || modelSettings.baseURL || \"\";\n      const model = await initChatModel(modelName, {\n        ...modelSettings,\n        baseUrl,\n      });\n\n      const chatId = randomUUID();\n\n      // set stream response\n      if (stream) {\n        res.setHeader(\"Content-Type\", \"text/event-stream\");\n        res.setHeader(\"Cache-Control\", \"no-cache\");\n        res.setHeader(\"Connection\", \"keep-alive\");\n      }\n\n      // set abort handler\n      const handleAbort = () => {\n        const controller = abortControllerMap.get(chatId);\n        if (controller) {\n          logger.info(`[${chatId}][chat/completions] Chat abort signal sent`);\n          controller.abort();\n        }\n      };\n\n      req.on(\"close\", handleAbort);\n      req.on(\"aborted\", handleAbort);\n      res.on(\"close\", handleAbort);\n\n      logger.debug(`[${chatId}][chat/completions] Start chat`);\n\n      try {\n        const { result, tokenUsage } = await handleProcessQuery(\n          mcpServerManager.getToolToServerMap(),\n          availableTools,\n          model,\n          input,\n          history,\n          stream\n            ? (text: string) => {\n                const streamData = JSON.parse(text);\n                if (streamData.type === \"text\") {\n                  const response: ChatCompletionResponse = {\n                    id: `chatcmpl-${chatId}`,\n                    object: \"chat.completion.chunk\",\n                    created: Math.floor(Date.now() / 1000),\n                    model: modelSettings.model,\n                    system_fingerprint: \"fp_dive\",\n                    choices: [\n                      {\n                        index: 0,\n                        delta: !streamData.content\n                          ? { role: \"assistant\", content: \"\" }\n                          : { content: streamData.content },\n                        logprobs: null,\n                        finish_reason: null,\n                      },\n                    ],\n                  };\n                  res.write(`data: ${JSON.stringify(response)}\\n\\n`);\n                }\n              }\n            : undefined,\n          chatId\n        );\n\n        if (stream) {\n          // send end response\n          const endResponse: ChatCompletionResponse = {\n            id: `chatcmpl-${chatId}`,\n            object: \"chat.completion.chunk\",\n            created: Math.floor(Date.now() / 1000),\n            model: modelSettings.model,\n            system_fingerprint: \"fp_dive\",\n            choices: [\n              {\n                index: 0,\n                delta: {},\n                logprobs: null,\n                finish_reason: \"stop\",\n              },\n            ],\n          };\n\n          res.write(`data: ${JSON.stringify(endResponse)}\\n\\n`);\n          res.end();\n        } else {\n          // send full response\n          res.json({\n            id: `chatcmpl-${chatId}`,\n            object: \"chat.completion\",\n            created: Math.floor(Date.now() / 1000),\n            model: modelSettings.model,\n            choices: [\n              {\n                index: 0,\n                message: {\n                  role: \"assistant\",\n                  content: result,\n                  refusal: null,\n                },\n                logprobs: null,\n                finish_reason: \"stop\",\n              },\n            ],\n            usage: {\n              prompt_tokens: tokenUsage.totalInputTokens,\n              completion_tokens: tokenUsage.totalOutputTokens,\n              total_tokens: tokenUsage.totalTokens,\n            },\n            system_fingerprint: \"fp_dive\",\n          });\n        }\n      } finally {\n        logger.debug(`[${chatId}][chat/completions] End chat`);\n        req.off(\"close\", handleAbort);\n        req.off(\"aborted\", handleAbort);\n        res.off(\"close\", handleAbort);\n      }\n    } catch (error: any) {\n      res.status(500).json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  return router;\n}\n","interface ModelSettingDefinition {\n  type: \"string\" | \"number\" | \"object\";\n  description: string;\n  required: boolean;\n  default?: any;\n  placeholder?: any;\n  properties?: {\n    [key: string]: {\n      type: \"string\" | \"number\";\n      description: string;\n      required: boolean;\n      default?: any;\n      placeholder?: any;\n    };\n  };\n}\n\ninterface ModelInterfaceDefinition {\n  model_settings: {\n    [key: string]: ModelSettingDefinition;\n  };\n}\n\nexport const ModelInterface: ModelInterfaceDefinition = {\n  model_settings: {\n    modelProvider: {\n      type: \"string\",\n      description: \"The provider sdk of the model\",\n      required: true,\n      default: \"\",\n      placeholder: \"openai\",\n    },\n    model: {\n      type: \"string\",\n      description: \"The model's name to use\",\n      required: true,\n      default: \"gpt-4o-mini\",\n    },\n    apiKey: {\n      type: \"string\",\n      description: \"The Model Provider API key\",\n      required: false,\n      default: \"\",\n      placeholder: \"YOUR_API_KEY\",\n    },\n    baseURL: {\n      type: \"string\",\n      description: \"The model's base URL\",\n      required: false,\n      default: \"\",\n      placeholder: \"\",\n    },\n    // temperature: {\n    //   type: \"number\",\n    //   description: \"Controls the randomness of the model's output (0-1)\",\n    //   required: false,\n    //   default: 1,\n    //   placeholder: 1,\n    // },\n    // topP: {\n    //   type: \"number\",\n    //   description:\n    //     \"Controls the range of next token choices during generation (0-1)\",\n    //   required: false,\n    //   default: 1,\n    //   placeholder: 1,\n    // },\n    // maxTokens: {\n    //   type: \"number\",\n    //   description:\n    //     \"Limits the total number of tokens (words and punctuation) in the response.\",\n    //   required: false,\n    //   default: -1,\n    //   placeholder: -1,\n    // },\n  },\n};\n","import express from \"express\";\nimport fs from \"fs/promises\";\nimport { MCPServerManager } from \"../mcpServer/index.js\";\nimport { ModelManager } from \"../models/index.js\";\nimport { ModelInterface } from \"../models/interface.js\";\nimport { PromptManager } from \"../prompt/index.js\";\nimport { loadConfig } from \"../utils/toolHandler.js\";\n\nexport function configRouter() {\n  const router = express.Router();\n\n  router.get(\"/mcpserver\", async (req, res) => {\n    try {\n      const config = await loadConfig(MCPServerManager.getInstance().configPath);\n\n      res.json({\n        success: true,\n        config: config,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.post(\"/mcpserver\", async (req, res) => {\n    try {\n      const configPath = MCPServerManager.getInstance().configPath;\n      const newConfig = req.body;\n\n      // Validate configuration format\n      if (!newConfig || typeof newConfig !== \"object\") {\n        throw new Error(\"Invalid configuration format\");\n      }\n\n      // Save configuration\n      await fs.writeFile(configPath, JSON.stringify(newConfig, null, 2), \"utf-8\");\n\n      // Reinitialize MCP client\n      const errorArray = await MCPServerManager.getInstance().syncServersWithConfig();\n\n      res.json({\n        success: true,\n        errors: errorArray,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.get(\"/model\", async (req, res) => {\n    try {\n      const modelConfig = await ModelManager.getInstance().getModelConfig();\n      res.json({\n        success: true,\n        config: modelConfig,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.get(\"/model/interface\", async (req, res) => {\n    res.json({\n      success: true,\n      interface: ModelInterface,\n    });\n  });\n\n  router.post(\"/model\", async (req, res) => {\n    try {\n      const { provider, modelSettings, enableTools } = req.body;\n\n      // Validate configuration format\n      if (!modelSettings || typeof modelSettings !== \"object\") {\n        throw new Error(\"Invalid configuration format\");\n      }\n\n      // Save configuration\n      await ModelManager.getInstance().saveModelConfig(provider, modelSettings, enableTools);\n\n      // Reinitialize MCP client\n      await ModelManager.getInstance().reloadModel();\n\n      res.json({\n        success: true,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.post(\"/model/replaceAll\", async (req, res) => {\n    try {\n      const uploadModelSettings = req.body;\n      await ModelManager.getInstance().replaceAllModelConfig(uploadModelSettings);\n      await ModelManager.getInstance().reloadModel();\n      res.json({\n        success: true,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.get(\"/customrules\", async (req, res) => {\n    try {\n      const customRules = await PromptManager.getInstance().loadCustomRules();\n      res.json({\n        success: true,\n        rules: customRules,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  router.post(\"/customrules\", async (req, res) => {\n    try {\n      const customRulesPath = PromptManager.getInstance().customRulesPath;\n      const newCustomRules = await new Promise<string>((resolve, reject) => {\n        let data = \"\";\n        req.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        req.on(\"end\", () => {\n          resolve(data);\n        });\n        req.on(\"error\", (err) => {\n          reject(err);\n        });\n      });\n      await fs.writeFile(customRulesPath, newCustomRules, \"utf-8\");\n\n      await PromptManager.getInstance().updateSystemPrompt();\n      res.json({\n        success: true,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  return router;\n}\n","import { ToolDefinition } from \"@langchain/core/language_models/base\";\nimport express, { Response } from \"express\";\nimport { initChatModel } from \"langchain/chat_models/universal\";\nimport logger from \"../utils/logger.js\";\nimport { ModelSettings, ModelVerificationResult, ModelVerificationStreamResponse } from \"../utils/types.js\";\n\ntype SSEResponse = Response;\n\nclass ModelVerificationService {\n  private formatVerificationResults(results: ModelVerificationResult[], aborted: boolean) {\n    return {\n      type: \"final\",\n      results: results.map((r) => ({\n        modelName: r.modelName,\n        connection: {\n          status: r.connectingStatus,\n          result: r.connectingResult,\n        },\n        tools: {\n          status: r.supportToolsStatus,\n          result: r.supportToolsResult,\n        },\n      })),\n      aborted,\n    };\n  }\n\n  private async testModelConnection(\n    model: any,\n    modelName: string,\n    signal: AbortSignal\n  ): Promise<{ status: \"success\" | \"warning\" | \"error\"; result: any }> {\n    try {\n      const result = await model.invoke(\"Only return 'Hi' strictly\", { signal });\n      return {\n        status: result.content ? \"success\" : \"warning\",\n        result,\n      };\n    } catch (error) {\n      if ((error as { name?: string })?.name === \"AbortError\") {\n        logger.warn(`Model connection test aborted for ${modelName}`);\n      }\n      return {\n        status: \"error\",\n        result: (error as Error).message,\n      };\n    }\n  }\n\n  private async testModelTools(\n    model: any,\n    modelName: string,\n    signal: AbortSignal\n  ): Promise<{ status: \"success\" | \"warning\" | \"error\"; result: any }> {\n    try {\n      let fullResponse = \"\";\n      let hasGenToolCall = false;\n\n      for await (const chunk of await model.stream(\"Use the web_search tool to search for 'iphone16'\", {\n        tools: testTools,\n        signal,\n      })) {\n        fullResponse += chunk.content || \"\";\n        if (\n          (chunk.tool_calls && chunk.tool_calls.length > 0) ||\n          (chunk.tool_call_chunks && chunk.tool_call_chunks.length > 0)\n        ) {\n          hasGenToolCall = true;\n        }\n      }\n\n      return {\n        status: hasGenToolCall ? \"success\" : \"warning\",\n        result: fullResponse,\n      };\n    } catch (error) {\n      logger.error(`[ModelVerify] error: ${JSON.stringify(error, null, 2)}`);\n      if ((error as { name?: string })?.name === \"AbortError\") {\n        logger.warn(`Model tools test aborted for ${modelName}`);\n      }\n      return {\n        status: \"error\",\n        result: (error as Error).message,\n      };\n    }\n  }\n\n  private async verifyModel(\n    settings: ModelSettings,\n    onProgress: (response: ModelVerificationStreamResponse) => void,\n    signal: AbortSignal,\n    currentStep: number\n  ): Promise<ModelVerificationResult> {\n    const modelName = settings.model;\n    const baseUrl = settings.configuration?.baseURL || settings.baseURL || \"\";\n\n    const model = await initChatModel(modelName, {\n      ...settings,\n      baseUrl,\n      max_tokens: 5,\n    });\n\n    const modelResult: ModelVerificationResult = {\n      modelName,\n      connectingStatus: \"error\",\n      connectingResult: undefined,\n      supportToolsStatus: \"error\",\n      supportToolsResult: undefined,\n    };\n\n    // Test connection\n    const connectionTest = await this.testModelConnection(model, modelName, signal);\n    modelResult.connectingStatus = connectionTest.status;\n    modelResult.connectingResult = connectionTest.result;\n\n    onProgress({\n      type: \"progress\",\n      step: currentStep + 1,\n      modelName,\n      testType: \"connection\",\n      status: connectionTest.status,\n      error: connectionTest.status === \"error\" ? connectionTest.result : undefined,\n    });\n\n    // Test tools support\n    const toolsTest = await this.testModelTools(model, modelName, signal);\n    modelResult.supportToolsStatus = toolsTest.status;\n    modelResult.supportToolsResult = toolsTest.result;\n\n    onProgress({\n      type: \"progress\",\n      step: currentStep + 2,\n      modelName,\n      testType: \"tools\",\n      status: toolsTest.status,\n      error: toolsTest.status === \"error\" ? toolsTest.result : undefined,\n    });\n\n    logger.info(\n      `Model verification for ${modelName} - connecting: ${modelResult.connectingStatus}, supportTools: ${modelResult.supportToolsStatus}`\n    );\n\n    return modelResult;\n  }\n\n  private setupSSE(res: SSEResponse) {\n    res.setHeader(\"Content-Type\", \"text/event-stream\");\n    res.setHeader(\"Cache-Control\", \"no-cache\");\n    res.setHeader(\"Connection\", \"keep-alive\");\n    return (text: string) => {\n      res.write(`data: ${JSON.stringify({ message: text })}\\n\\n`);\n    };\n  }\n\n  private handleStreamError(error: Error, res: SSEResponse) {\n    logger.error(`Stream error: ${error.message}`);\n    const response = {\n      type: \"error\",\n      content: error.message,\n    };\n    res.write(`data: ${JSON.stringify({ message: response })}\\n\\n`);\n    res.end();\n  }\n\n  async handleStreamingVerification(req: express.Request, res: SSEResponse) {\n    const onStream = this.setupSSE(res);\n    let isConnectionDestroyed = false;\n    const abortController = new AbortController();\n\n    req.socket.once(\"close\", () => {\n      isConnectionDestroyed = true;\n      abortController.abort();\n    });\n\n    try {\n      const { modelSettings } = req.body;\n      if (!modelSettings) {\n        onStream(\n          JSON.stringify({\n            type: \"error\",\n            message: \"Config is required\",\n          })\n        );\n        res.end();\n        return;\n      }\n\n      const models = Array.isArray(modelSettings) ? modelSettings : [modelSettings];\n      const totalSteps = models.length * 2;\n      const finalResults: ModelVerificationResult[] = [];\n\n      for (let i = 0; i < models.length; i++) {\n        if (isConnectionDestroyed || req.socket.destroyed) {\n          logger.warn(\"Connection was closed by client\");\n          onStream(JSON.stringify(this.formatVerificationResults(finalResults, true)));\n          res.end();\n          return;\n        }\n\n        const result = await this.verifyModel(\n          models[i],\n          (response) => onStream(JSON.stringify({ ...response, totalSteps })),\n          abortController.signal,\n          i * 2\n        );\n        finalResults.push(result);\n      }\n\n      onStream(JSON.stringify(this.formatVerificationResults(finalResults, false)));\n      res.write(\"data: [DONE]\\n\\n\");\n      res.end();\n    } catch (error) {\n      if ((error as { name?: string })?.name === \"AbortError\") {\n        logger.warn(\"Model verification was aborted\");\n      }\n      logger.error(`Model verification error: ${(error as Error).message}`);\n      this.handleStreamError(error as Error, res);\n    }\n  }\n}\n\nexport function modelVerifyRouter() {\n  const router = express.Router();\n  const verificationService = new ModelVerificationService();\n\n  router.post(\"/streaming\", (req, res) => {\n    verificationService.handleStreamingVerification(req, res);\n  });\n\n  return router;\n}\n\nconst testTools = [\n  {\n    type: \"function\",\n    function: {\n      name: \"web_search\",\n      description:\n        \"Performs a web search using SearXNG, ideal for general queries, news, articles and online content. Supports multiple search categories, languages, time ranges and safe search filtering. Returns relevant results from multiple search engines combined.\",\n      parameters: {\n        type: \"object\",\n        properties: {\n          query: {\n            type: \"string\",\n            description: \"Search query\",\n          },\n          page: {\n            type: \"number\",\n            description: \"Page number (default 1)\",\n          },\n          language: {\n            type: \"string\",\n            description: \"Search language code (e.g. 'en', 'zh', 'jp', 'all')\",\n          },\n          categories: {\n            type: \"array\",\n            items: {\n              type: \"string\",\n              enum: [\"general\", \"news\", \"science\", \"files\", \"images\", \"videos\", \"music\", \"social media\", \"it\"],\n            },\n          },\n          time_range: {\n            type: \"string\",\n            enum: [\"none\", \"day\", \"week\", \"month\", \"year\"],\n          },\n          safesearch: {\n            type: \"number\",\n            description: \"0: None, 1: Moderate, 2: Strict\",\n          },\n        },\n        required: [\"query\"],\n        additionalProperties: false,\n      },\n    },\n  },\n] as ToolDefinition[];\n","import express from \"express\";\nimport { MCPServerManager } from \"../mcpServer/index.js\";\n\nexport function toolsRouter() {\n  const router = express.Router();\n\n  router.get(\"/\", (req, res) => {\n    try {\n      const tools = MCPServerManager.getInstance().getToolInfos();\n      res.json({\n        success: true,\n        tools: tools,\n      });\n    } catch (error: any) {\n      res.json({\n        success: false,\n        message: error.message,\n      });\n    }\n  });\n\n  return router;\n}\n","import express from \"express\";\nimport { chatRouter } from \"./chat.js\";\nimport { compatibleRouter } from \"./compatible.js\";\nimport { configRouter } from \"./config.js\";\nimport { modelVerifyRouter } from \"./modelVerify.js\";\nimport { toolsRouter } from \"./tools.js\";\n\nconst OFFLINE_MODE = true\n\n// middleware: restrict access to API methods in ONLINE_MODE\nconst onlineModeRestriction = (req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const restrictedPaths = [\"/tools\", \"/config\", \"/modelVerify\"];\n\n  if (!OFFLINE_MODE && req.method !== \"GET\" && restrictedPaths.some((path) => req.path.startsWith(path))) {\n    res.status(403).json({\n      success: false,\n      message: \"This API method is not available\",\n    });\n    return;\n  }\n  next();\n};\n\nexport function createRouter() {\n  const router = express.Router();\n\n  router.get(\"/\", (req, res) => {\n    // if (OFFLINE_MODE) {\n    res.render(\"index\");\n    // } else {\n      // res.json({\n        // success: true,\n      // });\n    // }\n  });\n\n  router.use(\"/api\", onlineModeRestriction);\n\n  router.use(\"/api/tools\", toolsRouter());\n  router.use(\"/api/config\", configRouter());\n  router.use(\"/api/modelVerify\", modelVerifyRouter());\n  router.use(\"/api/v1\", compatibleRouter());\n\n  router.use(\"/api/chat\", chatRouter());\n\n  return router;\n}\n","import crypto from \"crypto\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport envPaths from \"env-paths\";\n\nconst envPath = envPaths(\"dive\", {suffix: \"\"})\nconst PROJECT_ROOT = envPath.data\n\nconst OFFLINE_MODE = true\n\nexport const SUPPORTED_IMAGE_EXTENSIONS = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\"];\nexport const SUPPORTED_DOCUMENT_EXTENSIONS = [\".pdf\", \".docx\", \".txt\", \".rtf\", \".odt\", \".html\", \".csv\", \".epub\"];\n\nexport function multerDestination(\n  req: Request,\n  file: Express.Multer.File,\n  cb: (error: Error | null, destination: string) => void\n) {\n  const uploadDir = path.join(PROJECT_ROOT, \"uploads\");\n  fs.mkdir(uploadDir, { recursive: true })\n    .then(() => cb(null, uploadDir))\n    .catch((err) => cb(err, uploadDir));\n}\n\nexport function multerFilename(\n  req: Request,\n  file: Express.Multer.File,\n  cb: (error: Error | null, filename: string) => void\n) {\n  const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n  cb(null, uniqueSuffix + path.extname(file.originalname));\n}\n\nexport async function handleUploadFiles({ files, filepaths }: { files: Express.Multer.File[]; filepaths: string[] }) {\n  const documents: string[] = [];\n  const images: string[] = [];\n\n  for (const file of files) {\n    const hash = await calculateFileHash(file.path);\n\n    // Check if file with same hash prefix exists\n    const uploadDir = path.join(PROJECT_ROOT, \"uploads\");\n    await fs.mkdir(uploadDir, { recursive: true });\n    const files = await fs.readdir(uploadDir);\n    const existingFile = files.find((f) => f.startsWith(hash));\n    if (existingFile) {\n      // If file with same hash found, use that file\n      file.filename = existingFile;\n      await fs.unlink(file.path); // Delete newly uploaded file\n      file.path = path.join(uploadDir, existingFile);\n    } else {\n      const newFileName = `${hash}-${file.originalname}`;\n      const newPath = path.join(PROJECT_ROOT, \"uploads\", newFileName);\n      // Rename file\n      await fs.rename(file.path, newPath);\n      file.filename = newFileName; // Update filename\n    }\n\n    const ext = path.extname(file.filename).toLowerCase();\n    if (SUPPORTED_IMAGE_EXTENSIONS.includes(ext)) {\n      // local mode support custom PROJECT_ROOT\n      if (OFFLINE_MODE) images.push(path.join(PROJECT_ROOT, \"uploads\", file.filename));\n      else images.push(`uploads/${file.filename}`);\n    } else {//(SUPPORTED_DOCUMENT_EXTENSIONS.includes(ext)) {\n      if (OFFLINE_MODE) documents.push(path.join(PROJECT_ROOT, \"uploads\", file.filename));\n      else documents.push(`uploads/${file.filename}`);\n    }\n    // else {\n    //   logger.error(`Unsupported file type: ${file.filename}`);\n    // }\n  }\n\n  for (const filepath of filepaths) {\n    const ext = path.extname(filepath).toLowerCase();\n    if (SUPPORTED_IMAGE_EXTENSIONS.includes(ext)) {\n      images.push(filepath);\n    } else {//if (SUPPORTED_DOCUMENT_EXTENSIONS.includes(ext)) {\n      documents.push(filepath);\n    }\n    // else {\n    //   logger.error(`Unsupported file type: ${filepath}`);\n    // }\n  }\n\n  return { images, documents };\n}\n\nasync function calculateFileHash(filePath: string): Promise<string> {\n  const fileBuffer = await fs.readFile(filePath);\n  return crypto.createHash(\"md5\").update(fileBuffer).digest(\"hex\").slice(0, 12);\n}\n","import { ToolDefinition } from \"@langchain/core/language_models/base\";\nimport axios from \"axios\";\nimport express, { Response } from \"express\";\nimport fs from \"fs/promises\";\nimport { initChatModel } from \"langchain/chat_models/universal\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport { MCPClient } from \"./client.js\";\nimport {\n  DatabaseMode,\n  getChatWithMessages,\n  getDatabaseMode,\n  getNextAIMessage,\n  updateMessageContent,\n} from \"./database/index.js\";\nimport { PromptManager } from \"./prompt/index.js\";\nimport { createRouter } from \"./routes/_index.js\";\nimport { handleUploadFiles } from \"./utils/fileHandler.js\";\nimport logger from \"./utils/logger.js\";\nimport { iQueryInput, iStreamMessage, ModelSettings } from \"./utils/types.js\";\nimport envPaths from \"env-paths\";\n\ninterface FileProcessingResult {\n  images: string[];\n  documents: string[];\n}\n\ntype SSEResponse = Response;\n\nconst envPath = envPaths(\"dive\", {suffix: \"\"})\nconst PROJECT_ROOT = envPath.data\n\nconst OFFLINE_MODE = true\n\nexport class WebServer {\n  private app;\n  private mcpClient;\n  private promptManager;\n  private upload;\n  public port: number | undefined;\n\n  constructor(mcpClient: MCPClient) {\n    this.app = express();\n    this.mcpClient = mcpClient;\n    this.promptManager = PromptManager.getInstance();\n    this.port = undefined;\n\n    // resolve cors\n    this.app.use((req: any, res: any, next: any) => {\n      res.header(\"Access-Control-Allow-Origin\", \"http://localhost:5173\");\n      res.header(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n      res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\n      res.header(\"Access-Control-Allow-Credentials\", \"true\");\n\n      if (req.method === \"OPTIONS\") {\n        return res.sendStatus(200);\n      }\n\n      next();\n    });\n\n    // Set up file upload\n    const storage = multer.diskStorage({\n      //@ts-ignore\n      destination: (req, file, cb) => {\n        const uploadDir = path.join(PROJECT_ROOT, \"uploads\");\n        // Ensure upload directory exists\n        fs.mkdir(uploadDir, { recursive: true })\n          .then(() => cb(null, uploadDir))\n          .catch((err) => cb(err, uploadDir));\n      },\n      //@ts-ignore\n      filename: (req, file, cb) => {\n        const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n        cb(null, uniqueSuffix + path.extname(file.originalname));\n      },\n    });\n\n    this.upload = multer({\n      storage: storage,\n      limits: {\n        // remove limit\n      },\n    }).array(\"files\"); // remove limit\n\n    // Set up template engine\n    this.app.set(\"view engine\", \"ejs\");\n    this.app.set(\"views\", path.join(PROJECT_ROOT, \"views\"));\n\n    // Middleware\n    this.app.use(express.json());\n    this.app.use(express.static(path.join(PROJECT_ROOT, \"views/public\")));\n    this.app.use(\"/uploads\", express.static(path.join(PROJECT_ROOT, \"uploads\")));\n\n    this.setupRoutes();\n  }\n\n  private setupSSE(res: SSEResponse) {\n    res.setHeader(\"Content-Type\", \"text/event-stream\");\n    res.setHeader(\"Cache-Control\", \"no-cache\");\n    res.setHeader(\"Connection\", \"keep-alive\");\n    return (text: any) => {\n      const messageObj = typeof text === 'string' ? JSON.parse(text) : text;\n      res.write(`data: ${JSON.stringify({ message: JSON.stringify(messageObj) })}\\n\\n`);\n    };\n  }\n\n  private async processFiles(files: Express.Multer.File[], bodyFilepaths: any): Promise<FileProcessingResult> {\n    let filepaths: string[] = [];\n\n    if (bodyFilepaths) {\n      if (OFFLINE_MODE) {\n        filepaths = typeof bodyFilepaths === \"string\" ? JSON.parse(bodyFilepaths || \"[]\") : bodyFilepaths;\n      } else {\n        logger.error(\"filepaths arg is not allowed in online mode\");\n      }\n    }\n\n    // Only allow files parameter in offline mode\n    if (!OFFLINE_MODE) files = [];\n\n    if (files?.length > 0 || filepaths?.length > 0) {\n      const processFiles = {\n        files: files,\n        filepaths: filepaths,\n      } as { files: Express.Multer.File[]; filepaths: string[] };\n      return await handleUploadFiles(processFiles);\n    }\n\n    return { images: [], documents: [] };\n  }\n\n  private handleStreamError(error: Error, res: SSEResponse) {\n    logger.error(`Stream error: ${error.message}`);\n    const response = {\n      type: \"error\",\n      content: error.message,\n    } as iStreamMessage;\n    res.write(`data: ${JSON.stringify({ message: response })}\\n\\n`);\n    res.end();\n  }\n\n  private async prepareQueryInput(\n    message: string | undefined,\n    files: Express.Multer.File[],\n    bodyFilepaths: any\n  ): Promise<iQueryInput> {\n    const queryInput: iQueryInput = {};\n\n    if (message) {\n      queryInput.text = message;\n    }\n\n    const { images, documents } = await this.processFiles(files, bodyFilepaths);\n    if (images.length > 0) queryInput.images = OFFLINE_MODE ? images : [];\n    if (documents.length > 0) queryInput.documents = OFFLINE_MODE ? documents : [];\n\n    return queryInput;\n  }\n\n  private setupRoutes() {\n    this.app.use(\"/\", createRouter());\n\n    // API endpoint for sending messages\n    this.app.post(\"/api/chat\", (req, res) => {\n      this.upload(req, res, async (err) => {\n        if (err) {\n          logger.error(`File upload error: ${err.message}`);\n          return res.status(400).json({\n            success: false,\n            message: err.message,\n          });\n        }\n\n        try {\n          const { message, chatId, fingerprint, user_access_token } = req.body;\n          if (getDatabaseMode() === DatabaseMode.API) {\n            if (!fingerprint && !user_access_token) {\n              return res.status(400).json({\n                success: false,\n                message: \"Fingerprint or user_access_token is required\",\n              });\n            }\n          }\n\n          let files = req.files as Express.Multer.File[];\n\n          if (!message && (!files || files.length === 0)) {\n            return res.status(400).json({\n              success: false,\n              message: \"Message or Files are required\",\n            });\n          }\n\n          const onStream = this.setupSSE(res);\n          const queryInput = await this.prepareQueryInput(message, files, req.body.filepaths);\n\n          await this.mcpClient.processQuery(chatId, queryInput, onStream, undefined, fingerprint, user_access_token);\n\n          res.write(\"data: [DONE]\\n\\n\");\n          res.end();\n        } catch (error) {\n          this.handleStreamError(error as Error, res);\n        }\n      });\n    });\n\n    // Add edit message endpoint\n    this.app.post(\"/api/chat/edit\", (req, res) => {\n      this.upload(req, res, async (err) => {\n        if (err) {\n          logger.error(`File upload error: ${err.message}`);\n          return res.status(400).json({\n            success: false,\n            message: err.message,\n          });\n        }\n\n        try {\n          const { chatId, messageId, content, fingerprint, user_access_token } = req.body;\n          if (getDatabaseMode() === DatabaseMode.API) {\n            if (!fingerprint && !user_access_token) {\n              return res.status(400).json({\n                success: false,\n                message: \"Fingerprint or user_access_token is required\",\n              });\n            }\n          }\n\n          if (!chatId || !messageId) {\n            return res.status(400).json({\n              success: false,\n              message: \"Chat ID and Message ID are required\",\n            });\n          }\n\n          const onStream = this.setupSSE(res);\n          const files = req.files as Express.Multer.File[];\n          const queryInput = await this.prepareQueryInput(content, files, req.body.filepaths);\n\n          await updateMessageContent(messageId, queryInput);\n\n          const nextAIMessage = await getNextAIMessage(chatId, messageId);\n          if (!nextAIMessage) {\n            logger.warn(`No AI message found after user message ${messageId}`);\n          }\n\n          await this.mcpClient.processQuery(\n            chatId,\n            queryInput,\n            onStream,\n            nextAIMessage?.messageId,\n            fingerprint,\n            user_access_token\n          );\n\n          res.write(\"data: [DONE]\\n\\n\");\n          res.end();\n        } catch (error) {\n          this.handleStreamError(error as Error, res);\n        }\n      });\n    });\n\n    //@ts-ignore\n    this.app.post(\"/api/chat/retry\", async (req, res) => {\n      const { chatId, messageId, fingerprint, user_access_token } = req.body;\n      if (getDatabaseMode() === DatabaseMode.API) {\n        if (!fingerprint && !user_access_token) {\n          return res.status(400).json({\n            success: false,\n            message: \"Fingerprint or user_access_token is required\",\n          });\n        }\n      }\n      if (!chatId || !messageId) {\n        return res.status(400).json({\n          success: false,\n          message: \"Chat ID and Message ID are required\",\n        });\n      }\n      try {\n        const onStream = this.setupSSE(res);\n        await this.mcpClient.processQuery(chatId, \"\", onStream, messageId, fingerprint, user_access_token);\n        res.write(\"data: [DONE]\\n\\n\");\n        res.end();\n      } catch (error) {\n        this.handleStreamError(error as Error, res);\n      }\n    });\n\n    this.app.post(\"/api/modelVerify\", async (req, res) => {\n      try {\n        const { modelSettings } = req.body;\n        if (!modelSettings) {\n          res.json({\n            success: false,\n            message: \"Config is required\",\n          });\n          return;\n        }\n        const modelName = (modelSettings as ModelSettings).model;\n        const baseUrl =\n          (modelSettings as ModelSettings).configuration?.baseURL || (modelSettings as ModelSettings).baseURL || \"\";\n        const model = await initChatModel(modelName, {\n          ...(modelSettings as ModelSettings),\n          baseUrl,\n          max_tokens: 5,\n        });\n\n        const testTools = [\n          {\n            type: \"function\",\n            function: {\n              name: \"test\",\n              description: \"meaningless tool\",\n              parameters: {\n                type: \"object\",\n                properties: {\n                  url: { description: \"test\" },\n                },\n                required: [\"url\"],\n                additionalProperties: false,\n                title: \"test\",\n              },\n            },\n          },\n        ] as ToolDefinition[];\n\n        let connectingSuccess = false;\n        let connectingResult = null;\n        let supportTools = false;\n        let supportToolsResult = null;\n\n        // check if model can connect\n        try {\n          const result = await model.invoke(\"Only return 'Hi' strictly\");\n          connectingSuccess = true;\n          connectingResult = result;\n        } catch (error) {\n          logger.error(`Model verification error: ${(error as Error).message}`);\n          res.json({\n            connectingSuccess: false,\n            connectingResult: (error as Error).message,\n          });\n          return;\n        }\n\n        // check if support tools\n        try {\n          const result = await model.invoke(\"Only return 'Hi' strictly\", {\n            tools: testTools,\n          });\n          supportTools = true;\n          supportToolsResult = result;\n        } catch (error) {\n          logger.error(`Model verification error: ${(error as Error).message}`);\n          supportTools = false;\n          supportToolsResult = (error as Error).message;\n        }\n\n        logger.info(`Model verification success - connecting: ${connectingSuccess}, supportTools: ${supportTools}`);\n\n        res.json({\n          success: true,\n          connectingSuccess,\n          connectingResult,\n          supportTools,\n          supportToolsResult,\n        });\n      } catch (error) {\n        logger.error(`Model verification error: ${(error as Error).message}`);\n        res.json({\n          success: false,\n          message: (error as Error).message,\n        });\n      }\n    });\n  }\n\n  start(port: number = 4321): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const server = this.app\n        .listen(port, () => {\n          const address = server.address();\n          const actualPort = typeof address === \"object\" && address ? address.port : port;\n          logger.info(`Web server running at http://localhost:${actualPort}`);\n          this.port = actualPort;\n          resolve(actualPort);\n        })\n        .on(\"error\", (err) => {\n          reject(err);\n        });\n    });\n  }\n}\n","import crypto from \"node:crypto\";\nimport fs from \"node:fs\";\nfunction readMigrationFiles(config) {\n  const migrationFolderTo = config.migrationsFolder;\n  const migrationQueries = [];\n  const journalPath = `${migrationFolderTo}/meta/_journal.json`;\n  if (!fs.existsSync(journalPath)) {\n    throw new Error(`Can't find meta/_journal.json file`);\n  }\n  const journalAsString = fs.readFileSync(`${migrationFolderTo}/meta/_journal.json`).toString();\n  const journal = JSON.parse(journalAsString);\n  for (const journalEntry of journal.entries) {\n    const migrationPath = `${migrationFolderTo}/${journalEntry.tag}.sql`;\n    try {\n      const query = fs.readFileSync(`${migrationFolderTo}/${journalEntry.tag}.sql`).toString();\n      const result = query.split(\"--> statement-breakpoint\").map((it) => {\n        return it;\n      });\n      migrationQueries.push({\n        sql: result,\n        bps: journalEntry.breakpoints,\n        folderMillis: journalEntry.when,\n        hash: crypto.createHash(\"sha256\").update(query).digest(\"hex\")\n      });\n    } catch {\n      throw new Error(`No file ${migrationPath} found in ${migrationFolderTo} folder`);\n    }\n  }\n  return migrationQueries;\n}\nexport {\n  readMigrationFiles\n};\n//# sourceMappingURL=migrator.js.map","import { readMigrationFiles } from \"../migrator.js\";\nfunction migrate(db, config) {\n  const migrations = readMigrationFiles(config);\n  db.dialect.migrate(migrations, db.session, config);\n}\nexport {\n  migrate\n};\n//# sourceMappingURL=migrator.js.map","import net from \"node:net\"\nimport path from \"node:path\"\nimport { spawn } from \"cross-spawn\"\nimport { app } from \"electron\"\nimport fse from \"fs-extra\"\n\nexport function isPortInUse(port: number): Promise<boolean> {\n  return new Promise((resolve) => {\n    const server = net.createServer()\n      .once(\"error\", (err: NodeJS.ErrnoException) => {\n        if (err.code === \"EADDRINUSE\") {\n          resolve(true)\n        }\n      })\n      .once(\"listening\", () => {\n        server.close()\n        resolve(false)\n      })\n      .listen(port)\n  })\n}\n\nexport function npmInstall(targetPath: string, args?: string[]): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const npm = process.platform === \"win32\"\n      ? (app.isPackaged ? path.join(process.resourcesPath, \"node\", \"npm.cmd\") : \"npm.cmd\")\n      : \"npm\"\n\n    const installation = spawn(npm, args || [\"install\"], {\n      cwd: targetPath,\n      stdio: \"inherit\",\n      shell: process.platform === \"darwin\",\n      windowsHide: true,\n      windowsVerbatimArguments: true\n    })\n\n    installation.on(\"close\", (code) => {\n      if (code === 0) {\n        resolve()\n      } else {\n        reject(new Error(`npm install failed with code: ${code}`))\n      }\n    })\n\n    installation.on(\"error\", (err) => {\n      reject(err)\n    })\n  })\n}\n\nexport function modifyPath(customBinPath: string) {\n  const connector = process.platform === \"win32\" ? \";\" : \":\"\n  process.env.PATH = `${customBinPath}${connector}${process.env.PATH}`\n}\n\nexport function setNodePath() {\n  process.env.NODE_PATH = path.join(process.resourcesPath, \"node\", \"node_modules\")\n}\n\nexport function getNvmPath(): string {\n  const home = process.env.HOME\n  if (!home) return \"\"\n\n  const nvmPath = path.join(home, \".nvm\", \"versions\", \"node\")\n\n  try {\n    if (fse.existsSync(nvmPath)) {\n      const currentVersion = fse.readdirSync(nvmPath)\n        .filter(dir => dir.startsWith(\"v\"))\n        .sort()\n        .pop()\n\n      if (currentVersion) {\n        return path.join(nvmPath, currentVersion, \"bin\")\n      }\n    }\n  } catch (error) {\n    console.error(\"Error getting NVM path:\", error)\n  }\n\n  return \"\"\n}\n\nexport function getLatestVersion(): Promise<string> {\n  return fetch(\"https://api.github.com/repos/OpenAgentPlatform/Dive/releases/latest\")\n    .then(res => res.json())\n    .then(data => data.tag_name.slice(1))\n}\n\nexport function compareFiles(filePath1: string, filePath2: string): boolean {\n  try {\n    const stat1 = fse.statSync(filePath1)\n    const stat2 = fse.statSync(filePath2)\n\n    // Compare size\n    if (stat1.size !== stat2.size) {\n      return false\n    }\n\n    // Compare modification time\n    if (stat1.mtimeMs !== stat2.mtimeMs) {\n      return false\n    }\n\n    // Files might be identical\n    return true\n  }\n  catch (error) {\n    console.error(\"Error comparing files:\", error);\n    return false\n  }\n}\n\nexport function compareFilesAndReplace(filePath1: string, filePath2: string) {\n  if (fse.existsSync(filePath1) && !compareFiles(filePath1, filePath2) || !fse.existsSync(filePath2)) {\n    fse.copyFileSync(filePath1, filePath2)\n  }\n}\n","import { app } from \"electron\"\nimport envPaths from \"env-paths\"\nimport os from \"os\"\nimport path from \"path\"\n\nexport const envPath = envPaths(app.getName(), {suffix: \"\"})\nexport const configDir = envPath.config\nexport const cacheDir = envPath.cache\nexport const homeDir = os.homedir()\nexport const appDir = path.join(homeDir, \".dive\")\nexport const scriptsDir = path.join(appDir, \"scripts\")\n\nexport const binDirList = [\n  path.join(process.resourcesPath, \"node\"),\n  path.join(process.resourcesPath, \"uv\"),\n  path.join(process.resourcesPath, \"python\"),\n]\n\nexport const darwinPathList = [\n  \"/opt/homebrew/bin\",\n  \"/usr/local/bin\",\n  \"/usr/bin\",\n]\n\nexport const DEF_MCP_SERVER_CONFIG = {\n  \"mcpServers\": {\n    \"echo\": {\n      \"enabled\": true,\n      \"command\": \"node\",\n      \"args\": [\n        path.join(scriptsDir, \"echo.js\")\n      ]\n    },\n  }\n}\n","import { app } from \"electron\"\nimport path from \"node:path\"\nimport fse from \"fs-extra\"\nimport { MCPClient, WebServer, initDatabase } from \"../../services/index.js\"\nimport { DatabaseMode, getDB } from \"../../services/database/index.js\"\nimport { migrate } from \"drizzle-orm/better-sqlite3/migrator\"\nimport { compareFilesAndReplace, isPortInUse, npmInstall } from \"./util.js\"\nimport { SystemCommandManager } from \"../../services/syscmd/index.js\"\nimport { MCPServerManager } from \"../../services/mcpServer/index.js\"\nimport { scriptsDir, configDir, appDir, DEF_MCP_SERVER_CONFIG } from \"./constant.js\"\n\nexport let client: Promise<MCPClient> | null = null\nasync function initClient(): Promise<MCPClient> {\n  // create dirs\n  fse.mkdirSync(configDir, { recursive: true })\n  fse.mkdirSync(appDir, { recursive: true })\n\n  await migratePrebuiltScripts().catch(console.error)\n\n  // create config file if not exists\n  const mcpServerConfigPath = path.join(configDir, \"config.json\")\n  if (!fse.existsSync(mcpServerConfigPath)) {\n    fse.writeFileSync(mcpServerConfigPath, JSON.stringify(DEF_MCP_SERVER_CONFIG, null, 2));\n  }\n\n  // create custom rules file if not exists\n  const customRulesPath = path.join(configDir, \".customrules\")\n  if (!fse.existsSync(customRulesPath)) {\n    fse.writeFileSync(customRulesPath, \"\")\n  }\n\n  initDb(configDir)\n\n  // init mcp client\n  const _client = new MCPClient({\n    modelConfigPath: path.join(configDir, \"model.json\"),\n    mcpServerConfigPath: mcpServerConfigPath,\n    customRulesPath: customRulesPath,\n  })\n\n  // init system command manager and set command path if needed\n  const systemCommandManager = SystemCommandManager.getInstance()\n  systemCommandManager.initialize(process.platform === \"win32\" && app.isPackaged ? {\n    \"npx\": path.join(process.resourcesPath, \"node\", \"npx.cmd\"),\n    \"npm\": path.join(process.resourcesPath, \"node\", \"npm.cmd\"),\n  } : {})\n\n  return _client\n}\n\nfunction initDb(configDir: string) {\n  initDatabase(DatabaseMode.DIRECT, { dbPath: path.join(configDir, \"data.db\") })\n  const db = getDB()\n  migrate(db, { migrationsFolder: app.isPackaged ? path.join(process.resourcesPath, \"drizzle\") : \"./drizzle\" })\n  return db\n}\n\nasync function getFreePort(): Promise<number> {\n  const defaultPort = 61990\n  const isDefaultPortInUse = await isPortInUse(defaultPort)\n  if (!isDefaultPortInUse) {\n    return defaultPort\n  }\n\n  const secondPort = 6190\n  const isSecondPortInUse = await isPortInUse(secondPort)\n  if (!isSecondPortInUse) {\n    return secondPort\n  }\n\n  return 0\n}\n\nexport let port = Promise.resolve(0)\nasync function initService(): Promise<number> {\n  const _client = await client!\n  await _client.init().catch(console.error)\n  const server = new WebServer(_client)\n  await server.start(await getFreePort())\n  return server.port!\n}\n\nexport async function initMCPClient() {\n  client = initClient()\n  port = initService()\n}\n\nexport async function cleanup() {\n  await MCPServerManager.getInstance().disconnectAllServers();\n}\n\nasync function migratePrebuiltScripts() {\n  // copy scripts\n  const rebuiltScriptsPath = path.join(app.isPackaged ? process.resourcesPath : process.cwd(), \"prebuilt/scripts\")\n  if(!fse.existsSync(scriptsDir)) {\n    fse.mkdirSync(scriptsDir, { recursive: true })\n    fse.copySync(rebuiltScriptsPath, scriptsDir)\n  }\n\n  // update prebuilt scripts\n  compareFilesAndReplace(path.join(rebuiltScriptsPath, \"echo.js\"), path.join(scriptsDir, \"echo.js\"))\n\n  // install dependencies for prebuilt scripts\n  await npmInstall(scriptsDir).catch(console.error)\n  await npmInstall(scriptsDir, [\"install\", \"express\", \"cors\"]).catch(console.error)\n\n  // remove echo.cjs\n  if (fse.existsSync(path.join(scriptsDir, \"echo.cjs\"))) {\n    fse.unlinkSync(path.join(scriptsDir, \"echo.cjs\"))\n  }\n}","import { app, ipcMain } from \"electron\"\nimport { createRequire } from \"node:module\"\nimport type {\n  ProgressInfo,\n  UpdateDownloadedEvent,\n  UpdateInfo,\n} from \"electron-updater\"\nimport path from \"node:path\"\n\nconst { autoUpdater } = createRequire(import.meta.url)(\"electron-updater\")\n\nexport function update(win: Electron.BrowserWindow) {\n\n  // When set to false, the update download will be triggered through the API\n  autoUpdater.autoDownload = false\n  autoUpdater.disableWebInstaller = false\n  autoUpdater.allowDowngrade = false\n\n  if (process.env.DEBUG) {\n    autoUpdater.updateConfigPath = path.join(__dirname, \"dev-app-update.yml\")\n  }\n\n  // start check\n  autoUpdater.on(\"checking-for-update\", function () { })\n  // update available\n  autoUpdater.on(\"update-available\", (arg: UpdateInfo) => {\n    win.webContents.send(\"update-can-available\", { update: true, version: app.getVersion(), newVersion: arg?.version })\n  })\n  // update not available\n  autoUpdater.on(\"update-not-available\", (arg: UpdateInfo) => {\n    win.webContents.send(\"update-can-available\", { update: false, version: app.getVersion(), newVersion: arg?.version })\n  })\n\n  // Checking for updates\n  ipcMain.handle(\"check-update\", async () => {\n    if (!app.isPackaged) {\n      const error = new Error(\"The update feature is only available after the package.\")\n      return { message: error.message, error }\n    }\n\n    try {\n      return await autoUpdater.checkForUpdatesAndNotify()\n    } catch (error) {\n      return { message: \"Network error\", error }\n    }\n  })\n\n  // Start downloading and feedback on progress\n  ipcMain.handle(\"start-download\", (event: Electron.IpcMainInvokeEvent) => {\n    startDownload(\n      (error, progressInfo) => {\n        if (error) {\n          // feedback download error message\n          event.sender.send(\"update-error\", { message: error.message, error })\n        } else {\n          // feedback update progress message\n          event.sender.send(\"download-progress\", progressInfo)\n        }\n      },\n      () => {\n        // feedback update downloaded message\n        event.sender.send(\"update-downloaded\")\n      }\n    )\n  })\n\n  // Install now\n  ipcMain.handle(\"quit-and-install\", () => {\n    autoUpdater.quitAndInstall(false, true)\n  })\n}\n\nfunction startDownload(\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\n  complete: (event: UpdateDownloadedEvent) => void,\n) {\n  autoUpdater.on(\"download-progress\", (info: ProgressInfo) => callback(null, info))\n  autoUpdater.on(\"error\", (error: Error) => callback(error, null))\n  autoUpdater.on(\"update-downloaded\", complete)\n  autoUpdater.downloadUpdate()\n}\n","const mod = process.platform === \"darwin\" ? \"m\" : \"c\"\nexport default {\n  \"chat-input:submit\": `<${mod}-enter>`,\n  \"chat-input:upload-file\": `<${mod}-u>`,\n  \"chat-input:focus\": `<${mod}-k>`,\n  \"chat-input:paste-last-message\": `<${mod}-V>`,\n  \"chat-message:copy-last\": `<${mod}-C>`,\n  \"chat:delete\": `<${mod}-s-backspace>`,\n  \"global:new-chat\": `<${mod}-O>`,\n  \"global:toggle-sidebar\": `<${mod}-S>`,\n  \"global:close-layer\": `<escape>`,\n  \"global:toggle-keymap-modal\": `<${mod}-/>`,\n}\n","import keymap from \"./keymap\"\n\nexport default {\n  keymap,\n}","import { app, ipcMain, BrowserWindow } from \"electron\"\nimport config from \"../../config\"\nimport { port } from \"../service\"\nimport path from \"node:path\"\n\nexport function ipcEnvHandler(win: BrowserWindow) {\n  ipcMain.handle(\"env:getHotkeyMap\", async () => {\n    return config.keymap\n  })\n\n  ipcMain.handle(\"env:getPlatform\", async () => {\n    return process.platform\n  })\n\n  ipcMain.handle(\"env:port\", async () => {\n    return port\n  })\n\n  ipcMain.handle(\"env:getResourcesPath\", async (_, p: string) => {\n    return app.isPackaged ? path.join(process.resourcesPath, p) : p\n  })\n}\n\n","import Store from \"electron-store\"\n\nexport const store = new Store({\n  name: \"preferences\",\n  defaults: {\n    autoLaunch: false,\n    minimalToTray: false,\n  }\n})","import fse from \"fs-extra\"\nimport path from \"path\"\nimport { execSync } from \"child_process\"\n\nexport function setAppImageAutoLaunch(enable: boolean) {\n  if (!process.env.APPIMAGE) {\n    return false\n  }\n\n  try {\n    const appImagePath = process.env.APPIMAGE\n\n    try {\n      execSync(`chmod +x \"${appImagePath}\"`)\n    } catch (error) {\n      console.error(\"Failed to set executable permission for AppImage\", error)\n    }\n\n    const autostartDir = path.join(\n      process.env.HOME || \"~\",\n      \".config/autostart\"\n    )\n\n    if (!fse.existsSync(autostartDir)) {\n      fse.mkdirSync(autostartDir, { recursive: true })\n    }\n\n    const desktopFile = path.join(autostartDir, \"dive-ai.desktop\")\n\n    if (enable) {\n      const desktopContent = getAppImageDesktopFile()\n      fse.writeFileSync(desktopFile, desktopContent)\n    } else {\n      if (fse.existsSync(desktopFile)) {\n        fse.unlinkSync(desktopFile)\n      }\n    }\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nexport function checkAppImageAutoLaunchStatus() {\n  if (!process.env.APPIMAGE) {\n    return false\n  }\n\n  const desktopFile = path.join(\n    process.env.HOME || \"~\",\n    \".config/autostart/dive-ai.desktop\"\n  )\n  return fse.existsSync(desktopFile)\n}\n\nexport function getAppImageDesktopFile() {\n  const desktopFile = path.join(process.env.VITE_PUBLIC, \"linux\", \"dive-ai.desktop\")\n  const content = fse.existsSync(desktopFile) ? fse.readFileSync(desktopFile, \"utf-8\") : `[Desktop Entry]\nType=Application\nName=Dive AI\nExec=%EXEC%\nIcon=%ICON%\nStartupNotify=false\nTerminal=false\nCategories=Utility;\n%APPEND%`\n\n  return content\n    .replace(\"%EXEC%\", process.env.APPIMAGE!)\n    .replace(\"%ICON%\", path.join(process.env.VITE_PUBLIC, \"icon.ico\"))\n    .replace(\"%APPEND%\", \"X-GNOME-Autostart-enabled=true\")\n}","import { app, BrowserWindow, Menu, MenuItemConstructorOptions, Tray } from \"electron\"\nimport path from \"node:path\"\nimport AppState from \"./state\"\n\nlet tray: Tray | null = null\n\nexport function initTray(win: BrowserWindow) {\n  const iconPath = process.platform === \"win32\"\n    ? path.join(process.env.VITE_PUBLIC, \"icon.ico\")\n    : path.join(process.env.VITE_PUBLIC, \"icon.png\")\n\n  tray = new Tray(iconPath)\n  tray.setToolTip(app.getName())\n\n  updateTrayMenu(win)\n\n  tray.on(\"click\", () => {\n    win.show()\n  })\n}\n\nfunction updateTrayMenu(win: BrowserWindow) {\n  const menuTemplate: MenuItemConstructorOptions[] = [\n    {\n      label: \"Open\",\n      click: () => {\n        win.show()\n      },\n    },\n    { type: \"separator\" },\n    {\n      label: \"Quit\",\n      click: () => {\n        AppState.setIsQuitting(true)\n        app.quit()\n      },\n    },\n  ]\n\n  const contextMenu = Menu.buildFromTemplate(menuTemplate)\n  tray?.setContextMenu(contextMenu)\n}\n\nexport function destroyTray() {\n  tray?.destroy()\n  tray = null\n}\n","import { app, ipcMain, shell, BrowserWindow } from \"electron\"\nimport AppState from \"../state\"\nimport { scriptsDir } from \"../constant\"\nimport { store } from \"../store\"\n\nimport {\n  checkAppImageAutoLaunchStatus,\n  setAppImageAutoLaunch,\n} from \"../platform/appimage\"\nimport { destroyTray, initTray } from \"../tray\"\n\nexport function ipcSystemHandler(win: BrowserWindow) {\n  ipcMain.handle(\"system:openScriptsDir\", async () => {\n    shell.openPath(scriptsDir)\n  })\n\n  ipcMain.handle(\"system:getAutoLaunch\", () => {\n    if (process.env.APPIMAGE) {\n      return checkAppImageAutoLaunchStatus()\n    }\n\n    return app.getLoginItemSettings().openAtLogin\n  })\n\n  ipcMain.handle(\"system:setAutoLaunch\", (event, enable) => {\n    store.set(\"autoLaunch\", enable)\n\n    if (process.env.APPIMAGE) {\n      setAppImageAutoLaunch(enable)\n    } else {\n      app.setLoginItemSettings({\n        openAtLogin: enable,\n        openAsHidden: false,\n      })\n    }\n\n    return enable\n  })\n\n  ipcMain.handle(\"system:getMinimalToTray\", () => {\n    return store.get(\"minimalToTray\")\n  })\n\n  ipcMain.handle(\"system:setMinimalToTray\", (event, enable) => {\n    store.set(\"minimalToTray\", enable)\n    AppState.setIsQuitting(!enable)\n\n    if (enable) {\n      initTray(win)\n    } else {\n      destroyTray()\n    }\n  })\n}\n","import { ipcMain, BrowserWindow } from \"electron\"\nimport fse from \"fs-extra\"\nimport path from \"node:path\"\nimport { scriptsDir } from \"../constant\"\n\nexport function ipcUtilHandler(win: BrowserWindow) {\n  ipcMain.handle(\"util:fillPathToConfig\", async (_, _config: string) => {\n    try {\n      const { mcpServers: servers } = JSON.parse(_config) as {mcpServers: Record<string, {enabled: boolean, command?: string, args?: string[]}>}\n      const mcpServers = Object.keys(servers).reduce((acc, server) => {\n        const { args } = servers[server]\n\n        if (!args)\n          return acc\n\n        const pathToScript = args.find((arg) => arg.endsWith(\"js\") || arg.endsWith(\"ts\"))\n        if (!pathToScript)\n          return acc\n\n        const isScriptsExist = fse.existsSync(pathToScript)\n        if (isScriptsExist)\n          return acc\n\n        const argsIndex = args.reduce((acc, arg, index) => pathToScript === arg ? index : acc, -1)\n        if (fse.existsSync(path.join(scriptsDir, pathToScript))) {\n          args[argsIndex] = path.join(scriptsDir, pathToScript)\n        }\n\n        const filename = path.parse(pathToScript).base\n        if (fse.existsSync(path.join(scriptsDir, filename))) {\n          args[argsIndex] = path.join(scriptsDir, filename)\n        }\n\n        acc[server] = {\n          ...servers[server],\n          args,\n        }\n\n        return acc\n      }, servers)\n\n      return JSON.stringify({ mcpServers })\n    } catch (error) {\n      return _config\n    }\n  })\n}\n","export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export const VERSION = '4.83.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError, AbortError };\n","/**\n * @license\n * web-streams-polyfill v4.0.0-beta.3\n * Copyright 2021 Mattias Buelens, Diwank Singh Tomer and other contributors.\n * This code is released under the MIT license.\n * SPDX-License-Identifier: MIT\n */\nconst e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?Symbol:e=>`Symbol(${e})`;function t(){}function r(e){return\"object\"==typeof e&&null!==e||\"function\"==typeof e}const o=t;function n(e,t){try{Object.defineProperty(e,\"name\",{value:t,configurable:!0})}catch(e){}}const a=Promise,i=Promise.prototype.then,l=Promise.resolve.bind(a),s=Promise.reject.bind(a);function u(e){return new a(e)}function c(e){return l(e)}function d(e){return s(e)}function f(e,t,r){return i.call(e,t,r)}function b(e,t,r){f(f(e,t,r),void 0,o)}function h(e,t){b(e,t)}function _(e,t){b(e,void 0,t)}function p(e,t,r){return f(e,t,r)}function m(e){f(e,void 0,o)}let y=e=>{if(\"function\"==typeof queueMicrotask)y=queueMicrotask;else{const e=c(void 0);y=t=>f(e,t)}return y(e)};function g(e,t,r){if(\"function\"!=typeof e)throw new TypeError(\"Argument is not a function\");return Function.prototype.apply.call(e,t,r)}function w(e,t,r){try{return c(g(e,t,r))}catch(e){return d(e)}}class S{constructor(){this._cursor=0,this._size=0,this._front={_elements:[],_next:void 0},this._back=this._front,this._cursor=0,this._size=0}get length(){return this._size}push(e){const t=this._back;let r=t;16383===t._elements.length&&(r={_elements:[],_next:void 0}),t._elements.push(e),r!==t&&(this._back=r,t._next=r),++this._size}shift(){const e=this._front;let t=e;const r=this._cursor;let o=r+1;const n=e._elements,a=n[r];return 16384===o&&(t=e._next,o=0),--this._size,this._cursor=o,e!==t&&(this._front=t),n[r]=void 0,a}forEach(e){let t=this._cursor,r=this._front,o=r._elements;for(;!(t===o.length&&void 0===r._next||t===o.length&&(r=r._next,o=r._elements,t=0,0===o.length));)e(o[t]),++t}peek(){const e=this._front,t=this._cursor;return e._elements[t]}}const v=e(\"[[AbortSteps]]\"),R=e(\"[[ErrorSteps]]\"),T=e(\"[[CancelSteps]]\"),q=e(\"[[PullSteps]]\"),C=e(\"[[ReleaseSteps]]\");function E(e,t){e._ownerReadableStream=t,t._reader=e,\"readable\"===t._state?O(e):\"closed\"===t._state?function(e){O(e),j(e)}(e):B(e,t._storedError)}function P(e,t){return Gt(e._ownerReadableStream,t)}function W(e){const t=e._ownerReadableStream;\"readable\"===t._state?A(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")):function(e,t){B(e,t)}(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")),t._readableStreamController[C](),t._reader=void 0,e._ownerReadableStream=void 0}function k(e){return new TypeError(\"Cannot \"+e+\" a stream using a released reader\")}function O(e){e._closedPromise=u(((t,r)=>{e._closedPromise_resolve=t,e._closedPromise_reject=r}))}function B(e,t){O(e),A(e,t)}function A(e,t){void 0!==e._closedPromise_reject&&(m(e._closedPromise),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0)}function j(e){void 0!==e._closedPromise_resolve&&(e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0)}const z=Number.isFinite||function(e){return\"number\"==typeof e&&isFinite(e)},L=Math.trunc||function(e){return e<0?Math.ceil(e):Math.floor(e)};function F(e,t){if(void 0!==e&&(\"object\"!=typeof(r=e)&&\"function\"!=typeof r))throw new TypeError(`${t} is not an object.`);var r}function I(e,t){if(\"function\"!=typeof e)throw new TypeError(`${t} is not a function.`)}function D(e,t){if(!function(e){return\"object\"==typeof e&&null!==e||\"function\"==typeof e}(e))throw new TypeError(`${t} is not an object.`)}function $(e,t,r){if(void 0===e)throw new TypeError(`Parameter ${t} is required in '${r}'.`)}function M(e,t,r){if(void 0===e)throw new TypeError(`${t} is required in '${r}'.`)}function Y(e){return Number(e)}function Q(e){return 0===e?0:e}function N(e,t){const r=Number.MAX_SAFE_INTEGER;let o=Number(e);if(o=Q(o),!z(o))throw new TypeError(`${t} is not a finite number`);if(o=function(e){return Q(L(e))}(o),o<0||o>r)throw new TypeError(`${t} is outside the accepted range of 0 to ${r}, inclusive`);return z(o)&&0!==o?o:0}function H(e){if(!r(e))return!1;if(\"function\"!=typeof e.getReader)return!1;try{return\"boolean\"==typeof e.locked}catch(e){return!1}}function x(e){if(!r(e))return!1;if(\"function\"!=typeof e.getWriter)return!1;try{return\"boolean\"==typeof e.locked}catch(e){return!1}}function V(e,t){if(!Vt(e))throw new TypeError(`${t} is not a ReadableStream.`)}function U(e,t){e._reader._readRequests.push(t)}function G(e,t,r){const o=e._reader._readRequests.shift();r?o._closeSteps():o._chunkSteps(t)}function X(e){return e._reader._readRequests.length}function J(e){const t=e._reader;return void 0!==t&&!!K(t)}class ReadableStreamDefaultReader{constructor(e){if($(e,1,\"ReadableStreamDefaultReader\"),V(e,\"First parameter\"),Ut(e))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");E(this,e),this._readRequests=new S}get closed(){return K(this)?this._closedPromise:d(ee(\"closed\"))}cancel(e){return K(this)?void 0===this._ownerReadableStream?d(k(\"cancel\")):P(this,e):d(ee(\"cancel\"))}read(){if(!K(this))return d(ee(\"read\"));if(void 0===this._ownerReadableStream)return d(k(\"read from\"));let e,t;const r=u(((r,o)=>{e=r,t=o}));return function(e,t){const r=e._ownerReadableStream;r._disturbed=!0,\"closed\"===r._state?t._closeSteps():\"errored\"===r._state?t._errorSteps(r._storedError):r._readableStreamController[q](t)}(this,{_chunkSteps:t=>e({value:t,done:!1}),_closeSteps:()=>e({value:void 0,done:!0}),_errorSteps:e=>t(e)}),r}releaseLock(){if(!K(this))throw ee(\"releaseLock\");void 0!==this._ownerReadableStream&&function(e){W(e);const t=new TypeError(\"Reader was released\");Z(e,t)}(this)}}function K(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_readRequests\")&&e instanceof ReadableStreamDefaultReader)}function Z(e,t){const r=e._readRequests;e._readRequests=new S,r.forEach((e=>{e._errorSteps(t)}))}function ee(e){return new TypeError(`ReadableStreamDefaultReader.prototype.${e} can only be used on a ReadableStreamDefaultReader`)}Object.defineProperties(ReadableStreamDefaultReader.prototype,{cancel:{enumerable:!0},read:{enumerable:!0},releaseLock:{enumerable:!0},closed:{enumerable:!0}}),n(ReadableStreamDefaultReader.prototype.cancel,\"cancel\"),n(ReadableStreamDefaultReader.prototype.read,\"read\"),n(ReadableStreamDefaultReader.prototype.releaseLock,\"releaseLock\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableStreamDefaultReader.prototype,e.toStringTag,{value:\"ReadableStreamDefaultReader\",configurable:!0});class te{constructor(e,t){this._ongoingPromise=void 0,this._isFinished=!1,this._reader=e,this._preventCancel=t}next(){const e=()=>this._nextSteps();return this._ongoingPromise=this._ongoingPromise?p(this._ongoingPromise,e,e):e(),this._ongoingPromise}return(e){const t=()=>this._returnSteps(e);return this._ongoingPromise?p(this._ongoingPromise,t,t):t()}_nextSteps(){if(this._isFinished)return Promise.resolve({value:void 0,done:!0});const e=this._reader;return void 0===e?d(k(\"iterate\")):f(e.read(),(e=>{var t;return this._ongoingPromise=void 0,e.done&&(this._isFinished=!0,null===(t=this._reader)||void 0===t||t.releaseLock(),this._reader=void 0),e}),(e=>{var t;throw this._ongoingPromise=void 0,this._isFinished=!0,null===(t=this._reader)||void 0===t||t.releaseLock(),this._reader=void 0,e}))}_returnSteps(e){if(this._isFinished)return Promise.resolve({value:e,done:!0});this._isFinished=!0;const t=this._reader;if(void 0===t)return d(k(\"finish iterating\"));if(this._reader=void 0,!this._preventCancel){const r=t.cancel(e);return t.releaseLock(),p(r,(()=>({value:e,done:!0})))}return t.releaseLock(),c({value:e,done:!0})}}const re={next(){return oe(this)?this._asyncIteratorImpl.next():d(ne(\"next\"))},return(e){return oe(this)?this._asyncIteratorImpl.return(e):d(ne(\"return\"))}};function oe(e){if(!r(e))return!1;if(!Object.prototype.hasOwnProperty.call(e,\"_asyncIteratorImpl\"))return!1;try{return e._asyncIteratorImpl instanceof te}catch(e){return!1}}function ne(e){return new TypeError(`ReadableStreamAsyncIterator.${e} can only be used on a ReadableSteamAsyncIterator`)}\"symbol\"==typeof e.asyncIterator&&Object.defineProperty(re,e.asyncIterator,{value(){return this},writable:!0,configurable:!0});const ae=Number.isNaN||function(e){return e!=e};function ie(e,t,r,o,n){new Uint8Array(e).set(new Uint8Array(r,o,n),t)}function le(e){const t=function(e,t,r){if(e.slice)return e.slice(t,r);const o=r-t,n=new ArrayBuffer(o);return ie(n,0,e,t,o),n}(e.buffer,e.byteOffset,e.byteOffset+e.byteLength);return new Uint8Array(t)}function se(e){const t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function ue(e,t,r){if(\"number\"!=typeof(o=r)||ae(o)||o<0||r===1/0)throw new RangeError(\"Size must be a finite, non-NaN, non-negative number.\");var o;e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function ce(e){e._queue=new S,e._queueTotalSize=0}class ReadableStreamBYOBRequest{constructor(){throw new TypeError(\"Illegal constructor\")}get view(){if(!fe(this))throw Be(\"view\");return this._view}respond(e){if(!fe(this))throw Be(\"respond\");if($(e,1,\"respond\"),e=N(e,\"First parameter\"),void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");this._view.buffer,function(e,t){const r=e._pendingPullIntos.peek();if(\"closed\"===e._controlledReadableByteStream._state){if(0!==t)throw new TypeError(\"bytesWritten must be 0 when calling respond() on a closed stream\")}else{if(0===t)throw new TypeError(\"bytesWritten must be greater than 0 when calling respond() on a readable stream\");if(r.bytesFilled+t>r.byteLength)throw new RangeError(\"bytesWritten out of range\")}r.buffer=r.buffer,qe(e,t)}(this._associatedReadableByteStreamController,e)}respondWithNewView(e){if(!fe(this))throw Be(\"respondWithNewView\");if($(e,1,\"respondWithNewView\"),!ArrayBuffer.isView(e))throw new TypeError(\"You can only respond with array buffer views\");if(void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");e.buffer,function(e,t){const r=e._pendingPullIntos.peek();if(\"closed\"===e._controlledReadableByteStream._state){if(0!==t.byteLength)throw new TypeError(\"The view's length must be 0 when calling respondWithNewView() on a closed stream\")}else if(0===t.byteLength)throw new TypeError(\"The view's length must be greater than 0 when calling respondWithNewView() on a readable stream\");if(r.byteOffset+r.bytesFilled!==t.byteOffset)throw new RangeError(\"The region specified by view does not match byobRequest\");if(r.bufferByteLength!==t.buffer.byteLength)throw new RangeError(\"The buffer of view has different capacity than byobRequest\");if(r.bytesFilled+t.byteLength>r.byteLength)throw new RangeError(\"The region specified by view is larger than byobRequest\");const o=t.byteLength;r.buffer=t.buffer,qe(e,o)}(this._associatedReadableByteStreamController,e)}}Object.defineProperties(ReadableStreamBYOBRequest.prototype,{respond:{enumerable:!0},respondWithNewView:{enumerable:!0},view:{enumerable:!0}}),n(ReadableStreamBYOBRequest.prototype.respond,\"respond\"),n(ReadableStreamBYOBRequest.prototype.respondWithNewView,\"respondWithNewView\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableStreamBYOBRequest.prototype,e.toStringTag,{value:\"ReadableStreamBYOBRequest\",configurable:!0});class ReadableByteStreamController{constructor(){throw new TypeError(\"Illegal constructor\")}get byobRequest(){if(!de(this))throw Ae(\"byobRequest\");return function(e){if(null===e._byobRequest&&e._pendingPullIntos.length>0){const t=e._pendingPullIntos.peek(),r=new Uint8Array(t.buffer,t.byteOffset+t.bytesFilled,t.byteLength-t.bytesFilled),o=Object.create(ReadableStreamBYOBRequest.prototype);!function(e,t,r){e._associatedReadableByteStreamController=t,e._view=r}(o,e,r),e._byobRequest=o}return e._byobRequest}(this)}get desiredSize(){if(!de(this))throw Ae(\"desiredSize\");return ke(this)}close(){if(!de(this))throw Ae(\"close\");if(this._closeRequested)throw new TypeError(\"The stream has already been closed; do not close it again!\");const e=this._controlledReadableByteStream._state;if(\"readable\"!==e)throw new TypeError(`The stream (in ${e} state) is not in the readable state and cannot be closed`);!function(e){const t=e._controlledReadableByteStream;if(e._closeRequested||\"readable\"!==t._state)return;if(e._queueTotalSize>0)return void(e._closeRequested=!0);if(e._pendingPullIntos.length>0){if(e._pendingPullIntos.peek().bytesFilled>0){const t=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");throw Pe(e,t),t}}Ee(e),Xt(t)}(this)}enqueue(e){if(!de(this))throw Ae(\"enqueue\");if($(e,1,\"enqueue\"),!ArrayBuffer.isView(e))throw new TypeError(\"chunk must be an array buffer view\");if(0===e.byteLength)throw new TypeError(\"chunk must have non-zero byteLength\");if(0===e.buffer.byteLength)throw new TypeError(\"chunk's buffer must have non-zero byteLength\");if(this._closeRequested)throw new TypeError(\"stream is closed or draining\");const t=this._controlledReadableByteStream._state;if(\"readable\"!==t)throw new TypeError(`The stream (in ${t} state) is not in the readable state and cannot be enqueued to`);!function(e,t){const r=e._controlledReadableByteStream;if(e._closeRequested||\"readable\"!==r._state)return;const o=t.buffer,n=t.byteOffset,a=t.byteLength,i=o;if(e._pendingPullIntos.length>0){const t=e._pendingPullIntos.peek();t.buffer,0,Re(e),t.buffer=t.buffer,\"none\"===t.readerType&&ge(e,t)}if(J(r))if(function(e){const t=e._controlledReadableByteStream._reader;for(;t._readRequests.length>0;){if(0===e._queueTotalSize)return;We(e,t._readRequests.shift())}}(e),0===X(r))me(e,i,n,a);else{e._pendingPullIntos.length>0&&Ce(e);G(r,new Uint8Array(i,n,a),!1)}else Le(r)?(me(e,i,n,a),Te(e)):me(e,i,n,a);be(e)}(this,e)}error(e){if(!de(this))throw Ae(\"error\");Pe(this,e)}[T](e){he(this),ce(this);const t=this._cancelAlgorithm(e);return Ee(this),t}[q](e){const t=this._controlledReadableByteStream;if(this._queueTotalSize>0)return void We(this,e);const r=this._autoAllocateChunkSize;if(void 0!==r){let t;try{t=new ArrayBuffer(r)}catch(t){return void e._errorSteps(t)}const o={buffer:t,bufferByteLength:r,byteOffset:0,byteLength:r,bytesFilled:0,elementSize:1,viewConstructor:Uint8Array,readerType:\"default\"};this._pendingPullIntos.push(o)}U(t,e),be(this)}[C](){if(this._pendingPullIntos.length>0){const e=this._pendingPullIntos.peek();e.readerType=\"none\",this._pendingPullIntos=new S,this._pendingPullIntos.push(e)}}}function de(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_controlledReadableByteStream\")&&e instanceof ReadableByteStreamController)}function fe(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_associatedReadableByteStreamController\")&&e instanceof ReadableStreamBYOBRequest)}function be(e){const t=function(e){const t=e._controlledReadableByteStream;if(\"readable\"!==t._state)return!1;if(e._closeRequested)return!1;if(!e._started)return!1;if(J(t)&&X(t)>0)return!0;if(Le(t)&&ze(t)>0)return!0;if(ke(e)>0)return!0;return!1}(e);if(!t)return;if(e._pulling)return void(e._pullAgain=!0);e._pulling=!0;b(e._pullAlgorithm(),(()=>(e._pulling=!1,e._pullAgain&&(e._pullAgain=!1,be(e)),null)),(t=>(Pe(e,t),null)))}function he(e){Re(e),e._pendingPullIntos=new S}function _e(e,t){let r=!1;\"closed\"===e._state&&(r=!0);const o=pe(t);\"default\"===t.readerType?G(e,o,r):function(e,t,r){const o=e._reader._readIntoRequests.shift();r?o._closeSteps(t):o._chunkSteps(t)}(e,o,r)}function pe(e){const t=e.bytesFilled,r=e.elementSize;return new e.viewConstructor(e.buffer,e.byteOffset,t/r)}function me(e,t,r,o){e._queue.push({buffer:t,byteOffset:r,byteLength:o}),e._queueTotalSize+=o}function ye(e,t,r,o){let n;try{n=t.slice(r,r+o)}catch(t){throw Pe(e,t),t}me(e,n,0,o)}function ge(e,t){t.bytesFilled>0&&ye(e,t.buffer,t.byteOffset,t.bytesFilled),Ce(e)}function we(e,t){const r=t.elementSize,o=t.bytesFilled-t.bytesFilled%r,n=Math.min(e._queueTotalSize,t.byteLength-t.bytesFilled),a=t.bytesFilled+n,i=a-a%r;let l=n,s=!1;i>o&&(l=i-t.bytesFilled,s=!0);const u=e._queue;for(;l>0;){const r=u.peek(),o=Math.min(l,r.byteLength),n=t.byteOffset+t.bytesFilled;ie(t.buffer,n,r.buffer,r.byteOffset,o),r.byteLength===o?u.shift():(r.byteOffset+=o,r.byteLength-=o),e._queueTotalSize-=o,Se(e,o,t),l-=o}return s}function Se(e,t,r){r.bytesFilled+=t}function ve(e){0===e._queueTotalSize&&e._closeRequested?(Ee(e),Xt(e._controlledReadableByteStream)):be(e)}function Re(e){null!==e._byobRequest&&(e._byobRequest._associatedReadableByteStreamController=void 0,e._byobRequest._view=null,e._byobRequest=null)}function Te(e){for(;e._pendingPullIntos.length>0;){if(0===e._queueTotalSize)return;const t=e._pendingPullIntos.peek();we(e,t)&&(Ce(e),_e(e._controlledReadableByteStream,t))}}function qe(e,t){const r=e._pendingPullIntos.peek();Re(e);\"closed\"===e._controlledReadableByteStream._state?function(e,t){\"none\"===t.readerType&&Ce(e);const r=e._controlledReadableByteStream;if(Le(r))for(;ze(r)>0;)_e(r,Ce(e))}(e,r):function(e,t,r){if(Se(0,t,r),\"none\"===r.readerType)return ge(e,r),void Te(e);if(r.bytesFilled<r.elementSize)return;Ce(e);const o=r.bytesFilled%r.elementSize;if(o>0){const t=r.byteOffset+r.bytesFilled;ye(e,r.buffer,t-o,o)}r.bytesFilled-=o,_e(e._controlledReadableByteStream,r),Te(e)}(e,t,r),be(e)}function Ce(e){return e._pendingPullIntos.shift()}function Ee(e){e._pullAlgorithm=void 0,e._cancelAlgorithm=void 0}function Pe(e,t){const r=e._controlledReadableByteStream;\"readable\"===r._state&&(he(e),ce(e),Ee(e),Jt(r,t))}function We(e,t){const r=e._queue.shift();e._queueTotalSize-=r.byteLength,ve(e);const o=new Uint8Array(r.buffer,r.byteOffset,r.byteLength);t._chunkSteps(o)}function ke(e){const t=e._controlledReadableByteStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}function Oe(e,t,r){const o=Object.create(ReadableByteStreamController.prototype);let n,a,i;n=void 0!==t.start?()=>t.start(o):()=>{},a=void 0!==t.pull?()=>t.pull(o):()=>c(void 0),i=void 0!==t.cancel?e=>t.cancel(e):()=>c(void 0);const l=t.autoAllocateChunkSize;if(0===l)throw new TypeError(\"autoAllocateChunkSize must be greater than 0\");!function(e,t,r,o,n,a,i){t._controlledReadableByteStream=e,t._pullAgain=!1,t._pulling=!1,t._byobRequest=null,t._queue=t._queueTotalSize=void 0,ce(t),t._closeRequested=!1,t._started=!1,t._strategyHWM=a,t._pullAlgorithm=o,t._cancelAlgorithm=n,t._autoAllocateChunkSize=i,t._pendingPullIntos=new S,e._readableStreamController=t,b(c(r()),(()=>(t._started=!0,be(t),null)),(e=>(Pe(t,e),null)))}(e,o,n,a,i,r,l)}function Be(e){return new TypeError(`ReadableStreamBYOBRequest.prototype.${e} can only be used on a ReadableStreamBYOBRequest`)}function Ae(e){return new TypeError(`ReadableByteStreamController.prototype.${e} can only be used on a ReadableByteStreamController`)}function je(e,t){e._reader._readIntoRequests.push(t)}function ze(e){return e._reader._readIntoRequests.length}function Le(e){const t=e._reader;return void 0!==t&&!!Fe(t)}Object.defineProperties(ReadableByteStreamController.prototype,{close:{enumerable:!0},enqueue:{enumerable:!0},error:{enumerable:!0},byobRequest:{enumerable:!0},desiredSize:{enumerable:!0}}),n(ReadableByteStreamController.prototype.close,\"close\"),n(ReadableByteStreamController.prototype.enqueue,\"enqueue\"),n(ReadableByteStreamController.prototype.error,\"error\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableByteStreamController.prototype,e.toStringTag,{value:\"ReadableByteStreamController\",configurable:!0});class ReadableStreamBYOBReader{constructor(e){if($(e,1,\"ReadableStreamBYOBReader\"),V(e,\"First parameter\"),Ut(e))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");if(!de(e._readableStreamController))throw new TypeError(\"Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source\");E(this,e),this._readIntoRequests=new S}get closed(){return Fe(this)?this._closedPromise:d(De(\"closed\"))}cancel(e){return Fe(this)?void 0===this._ownerReadableStream?d(k(\"cancel\")):P(this,e):d(De(\"cancel\"))}read(e){if(!Fe(this))return d(De(\"read\"));if(!ArrayBuffer.isView(e))return d(new TypeError(\"view must be an array buffer view\"));if(0===e.byteLength)return d(new TypeError(\"view must have non-zero byteLength\"));if(0===e.buffer.byteLength)return d(new TypeError(\"view's buffer must have non-zero byteLength\"));if(e.buffer,void 0===this._ownerReadableStream)return d(k(\"read from\"));let t,r;const o=u(((e,o)=>{t=e,r=o}));return function(e,t,r){const o=e._ownerReadableStream;o._disturbed=!0,\"errored\"===o._state?r._errorSteps(o._storedError):function(e,t,r){const o=e._controlledReadableByteStream;let n=1;t.constructor!==DataView&&(n=t.constructor.BYTES_PER_ELEMENT);const a=t.constructor,i=t.buffer,l={buffer:i,bufferByteLength:i.byteLength,byteOffset:t.byteOffset,byteLength:t.byteLength,bytesFilled:0,elementSize:n,viewConstructor:a,readerType:\"byob\"};if(e._pendingPullIntos.length>0)return e._pendingPullIntos.push(l),void je(o,r);if(\"closed\"!==o._state){if(e._queueTotalSize>0){if(we(e,l)){const t=pe(l);return ve(e),void r._chunkSteps(t)}if(e._closeRequested){const t=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");return Pe(e,t),void r._errorSteps(t)}}e._pendingPullIntos.push(l),je(o,r),be(e)}else{const e=new a(l.buffer,l.byteOffset,0);r._closeSteps(e)}}(o._readableStreamController,t,r)}(this,e,{_chunkSteps:e=>t({value:e,done:!1}),_closeSteps:e=>t({value:e,done:!0}),_errorSteps:e=>r(e)}),o}releaseLock(){if(!Fe(this))throw De(\"releaseLock\");void 0!==this._ownerReadableStream&&function(e){W(e);const t=new TypeError(\"Reader was released\");Ie(e,t)}(this)}}function Fe(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_readIntoRequests\")&&e instanceof ReadableStreamBYOBReader)}function Ie(e,t){const r=e._readIntoRequests;e._readIntoRequests=new S,r.forEach((e=>{e._errorSteps(t)}))}function De(e){return new TypeError(`ReadableStreamBYOBReader.prototype.${e} can only be used on a ReadableStreamBYOBReader`)}function $e(e,t){const{highWaterMark:r}=e;if(void 0===r)return t;if(ae(r)||r<0)throw new RangeError(\"Invalid highWaterMark\");return r}function Me(e){const{size:t}=e;return t||(()=>1)}function Ye(e,t){F(e,t);const r=null==e?void 0:e.highWaterMark,o=null==e?void 0:e.size;return{highWaterMark:void 0===r?void 0:Y(r),size:void 0===o?void 0:Qe(o,`${t} has member 'size' that`)}}function Qe(e,t){return I(e,t),t=>Y(e(t))}function Ne(e,t,r){return I(e,r),r=>w(e,t,[r])}function He(e,t,r){return I(e,r),()=>w(e,t,[])}function xe(e,t,r){return I(e,r),r=>g(e,t,[r])}function Ve(e,t,r){return I(e,r),(r,o)=>w(e,t,[r,o])}Object.defineProperties(ReadableStreamBYOBReader.prototype,{cancel:{enumerable:!0},read:{enumerable:!0},releaseLock:{enumerable:!0},closed:{enumerable:!0}}),n(ReadableStreamBYOBReader.prototype.cancel,\"cancel\"),n(ReadableStreamBYOBReader.prototype.read,\"read\"),n(ReadableStreamBYOBReader.prototype.releaseLock,\"releaseLock\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableStreamBYOBReader.prototype,e.toStringTag,{value:\"ReadableStreamBYOBReader\",configurable:!0});const Ue=\"function\"==typeof AbortController;class WritableStream{constructor(e={},t={}){void 0===e?e=null:D(e,\"First parameter\");const r=Ye(t,\"Second parameter\"),o=function(e,t){F(e,t);const r=null==e?void 0:e.abort,o=null==e?void 0:e.close,n=null==e?void 0:e.start,a=null==e?void 0:e.type,i=null==e?void 0:e.write;return{abort:void 0===r?void 0:Ne(r,e,`${t} has member 'abort' that`),close:void 0===o?void 0:He(o,e,`${t} has member 'close' that`),start:void 0===n?void 0:xe(n,e,`${t} has member 'start' that`),write:void 0===i?void 0:Ve(i,e,`${t} has member 'write' that`),type:a}}(e,\"First parameter\");var n;(n=this)._state=\"writable\",n._storedError=void 0,n._writer=void 0,n._writableStreamController=void 0,n._writeRequests=new S,n._inFlightWriteRequest=void 0,n._closeRequest=void 0,n._inFlightCloseRequest=void 0,n._pendingAbortRequest=void 0,n._backpressure=!1;if(void 0!==o.type)throw new RangeError(\"Invalid type is specified\");const a=Me(r);!function(e,t,r,o){const n=Object.create(WritableStreamDefaultController.prototype);let a,i,l,s;a=void 0!==t.start?()=>t.start(n):()=>{};i=void 0!==t.write?e=>t.write(e,n):()=>c(void 0);l=void 0!==t.close?()=>t.close():()=>c(void 0);s=void 0!==t.abort?e=>t.abort(e):()=>c(void 0);!function(e,t,r,o,n,a,i,l){t._controlledWritableStream=e,e._writableStreamController=t,t._queue=void 0,t._queueTotalSize=void 0,ce(t),t._abortReason=void 0,t._abortController=function(){if(Ue)return new AbortController}(),t._started=!1,t._strategySizeAlgorithm=l,t._strategyHWM=i,t._writeAlgorithm=o,t._closeAlgorithm=n,t._abortAlgorithm=a;const s=bt(t);nt(e,s);const u=r();b(c(u),(()=>(t._started=!0,dt(t),null)),(r=>(t._started=!0,Ze(e,r),null)))}(e,n,a,i,l,s,r,o)}(this,o,$e(r,1),a)}get locked(){if(!Ge(this))throw _t(\"locked\");return Xe(this)}abort(e){return Ge(this)?Xe(this)?d(new TypeError(\"Cannot abort a stream that already has a writer\")):Je(this,e):d(_t(\"abort\"))}close(){return Ge(this)?Xe(this)?d(new TypeError(\"Cannot close a stream that already has a writer\")):rt(this)?d(new TypeError(\"Cannot close an already-closing stream\")):Ke(this):d(_t(\"close\"))}getWriter(){if(!Ge(this))throw _t(\"getWriter\");return new WritableStreamDefaultWriter(this)}}function Ge(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_writableStreamController\")&&e instanceof WritableStream)}function Xe(e){return void 0!==e._writer}function Je(e,t){var r;if(\"closed\"===e._state||\"errored\"===e._state)return c(void 0);e._writableStreamController._abortReason=t,null===(r=e._writableStreamController._abortController)||void 0===r||r.abort(t);const o=e._state;if(\"closed\"===o||\"errored\"===o)return c(void 0);if(void 0!==e._pendingAbortRequest)return e._pendingAbortRequest._promise;let n=!1;\"erroring\"===o&&(n=!0,t=void 0);const a=u(((r,o)=>{e._pendingAbortRequest={_promise:void 0,_resolve:r,_reject:o,_reason:t,_wasAlreadyErroring:n}}));return e._pendingAbortRequest._promise=a,n||et(e,t),a}function Ke(e){const t=e._state;if(\"closed\"===t||\"errored\"===t)return d(new TypeError(`The stream (in ${t} state) is not in the writable state and cannot be closed`));const r=u(((t,r)=>{const o={_resolve:t,_reject:r};e._closeRequest=o})),o=e._writer;var n;return void 0!==o&&e._backpressure&&\"writable\"===t&&Et(o),ue(n=e._writableStreamController,lt,0),dt(n),r}function Ze(e,t){\"writable\"!==e._state?tt(e):et(e,t)}function et(e,t){const r=e._writableStreamController;e._state=\"erroring\",e._storedError=t;const o=e._writer;void 0!==o&&it(o,t),!function(e){if(void 0===e._inFlightWriteRequest&&void 0===e._inFlightCloseRequest)return!1;return!0}(e)&&r._started&&tt(e)}function tt(e){e._state=\"errored\",e._writableStreamController[R]();const t=e._storedError;if(e._writeRequests.forEach((e=>{e._reject(t)})),e._writeRequests=new S,void 0===e._pendingAbortRequest)return void ot(e);const r=e._pendingAbortRequest;if(e._pendingAbortRequest=void 0,r._wasAlreadyErroring)return r._reject(t),void ot(e);b(e._writableStreamController[v](r._reason),(()=>(r._resolve(),ot(e),null)),(t=>(r._reject(t),ot(e),null)))}function rt(e){return void 0!==e._closeRequest||void 0!==e._inFlightCloseRequest}function ot(e){void 0!==e._closeRequest&&(e._closeRequest._reject(e._storedError),e._closeRequest=void 0);const t=e._writer;void 0!==t&&St(t,e._storedError)}function nt(e,t){const r=e._writer;void 0!==r&&t!==e._backpressure&&(t?function(e){Rt(e)}(r):Et(r)),e._backpressure=t}Object.defineProperties(WritableStream.prototype,{abort:{enumerable:!0},close:{enumerable:!0},getWriter:{enumerable:!0},locked:{enumerable:!0}}),n(WritableStream.prototype.abort,\"abort\"),n(WritableStream.prototype.close,\"close\"),n(WritableStream.prototype.getWriter,\"getWriter\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(WritableStream.prototype,e.toStringTag,{value:\"WritableStream\",configurable:!0});class WritableStreamDefaultWriter{constructor(e){if($(e,1,\"WritableStreamDefaultWriter\"),function(e,t){if(!Ge(e))throw new TypeError(`${t} is not a WritableStream.`)}(e,\"First parameter\"),Xe(e))throw new TypeError(\"This stream has already been locked for exclusive writing by another writer\");this._ownerWritableStream=e,e._writer=this;const t=e._state;if(\"writable\"===t)!rt(e)&&e._backpressure?Rt(this):qt(this),gt(this);else if(\"erroring\"===t)Tt(this,e._storedError),gt(this);else if(\"closed\"===t)qt(this),gt(r=this),vt(r);else{const t=e._storedError;Tt(this,t),wt(this,t)}var r}get closed(){return at(this)?this._closedPromise:d(mt(\"closed\"))}get desiredSize(){if(!at(this))throw mt(\"desiredSize\");if(void 0===this._ownerWritableStream)throw yt(\"desiredSize\");return function(e){const t=e._ownerWritableStream,r=t._state;if(\"errored\"===r||\"erroring\"===r)return null;if(\"closed\"===r)return 0;return ct(t._writableStreamController)}(this)}get ready(){return at(this)?this._readyPromise:d(mt(\"ready\"))}abort(e){return at(this)?void 0===this._ownerWritableStream?d(yt(\"abort\")):function(e,t){return Je(e._ownerWritableStream,t)}(this,e):d(mt(\"abort\"))}close(){if(!at(this))return d(mt(\"close\"));const e=this._ownerWritableStream;return void 0===e?d(yt(\"close\")):rt(e)?d(new TypeError(\"Cannot close an already-closing stream\")):Ke(this._ownerWritableStream)}releaseLock(){if(!at(this))throw mt(\"releaseLock\");void 0!==this._ownerWritableStream&&function(e){const t=e._ownerWritableStream,r=new TypeError(\"Writer was released and can no longer be used to monitor the stream's closedness\");it(e,r),function(e,t){\"pending\"===e._closedPromiseState?St(e,t):function(e,t){wt(e,t)}(e,t)}(e,r),t._writer=void 0,e._ownerWritableStream=void 0}(this)}write(e){return at(this)?void 0===this._ownerWritableStream?d(yt(\"write to\")):function(e,t){const r=e._ownerWritableStream,o=r._writableStreamController,n=function(e,t){try{return e._strategySizeAlgorithm(t)}catch(t){return ft(e,t),1}}(o,t);if(r!==e._ownerWritableStream)return d(yt(\"write to\"));const a=r._state;if(\"errored\"===a)return d(r._storedError);if(rt(r)||\"closed\"===a)return d(new TypeError(\"The stream is closing or closed and cannot be written to\"));if(\"erroring\"===a)return d(r._storedError);const i=function(e){return u(((t,r)=>{const o={_resolve:t,_reject:r};e._writeRequests.push(o)}))}(r);return function(e,t,r){try{ue(e,t,r)}catch(t){return void ft(e,t)}const o=e._controlledWritableStream;if(!rt(o)&&\"writable\"===o._state){nt(o,bt(e))}dt(e)}(o,t,n),i}(this,e):d(mt(\"write\"))}}function at(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_ownerWritableStream\")&&e instanceof WritableStreamDefaultWriter)}function it(e,t){\"pending\"===e._readyPromiseState?Ct(e,t):function(e,t){Tt(e,t)}(e,t)}Object.defineProperties(WritableStreamDefaultWriter.prototype,{abort:{enumerable:!0},close:{enumerable:!0},releaseLock:{enumerable:!0},write:{enumerable:!0},closed:{enumerable:!0},desiredSize:{enumerable:!0},ready:{enumerable:!0}}),n(WritableStreamDefaultWriter.prototype.abort,\"abort\"),n(WritableStreamDefaultWriter.prototype.close,\"close\"),n(WritableStreamDefaultWriter.prototype.releaseLock,\"releaseLock\"),n(WritableStreamDefaultWriter.prototype.write,\"write\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(WritableStreamDefaultWriter.prototype,e.toStringTag,{value:\"WritableStreamDefaultWriter\",configurable:!0});const lt={};class WritableStreamDefaultController{constructor(){throw new TypeError(\"Illegal constructor\")}get abortReason(){if(!st(this))throw pt(\"abortReason\");return this._abortReason}get signal(){if(!st(this))throw pt(\"signal\");if(void 0===this._abortController)throw new TypeError(\"WritableStreamDefaultController.prototype.signal is not supported\");return this._abortController.signal}error(e){if(!st(this))throw pt(\"error\");\"writable\"===this._controlledWritableStream._state&&ht(this,e)}[v](e){const t=this._abortAlgorithm(e);return ut(this),t}[R](){ce(this)}}function st(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_controlledWritableStream\")&&e instanceof WritableStreamDefaultController)}function ut(e){e._writeAlgorithm=void 0,e._closeAlgorithm=void 0,e._abortAlgorithm=void 0,e._strategySizeAlgorithm=void 0}function ct(e){return e._strategyHWM-e._queueTotalSize}function dt(e){const t=e._controlledWritableStream;if(!e._started)return;if(void 0!==t._inFlightWriteRequest)return;if(\"erroring\"===t._state)return void tt(t);if(0===e._queue.length)return;const r=e._queue.peek().value;r===lt?function(e){const t=e._controlledWritableStream;(function(e){e._inFlightCloseRequest=e._closeRequest,e._closeRequest=void 0})(t),se(e);const r=e._closeAlgorithm();ut(e),b(r,(()=>(function(e){e._inFlightCloseRequest._resolve(void 0),e._inFlightCloseRequest=void 0,\"erroring\"===e._state&&(e._storedError=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._resolve(),e._pendingAbortRequest=void 0)),e._state=\"closed\";const t=e._writer;void 0!==t&&vt(t)}(t),null)),(e=>(function(e,t){e._inFlightCloseRequest._reject(t),e._inFlightCloseRequest=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._reject(t),e._pendingAbortRequest=void 0),Ze(e,t)}(t,e),null)))}(e):function(e,t){const r=e._controlledWritableStream;!function(e){e._inFlightWriteRequest=e._writeRequests.shift()}(r);b(e._writeAlgorithm(t),(()=>{!function(e){e._inFlightWriteRequest._resolve(void 0),e._inFlightWriteRequest=void 0}(r);const t=r._state;if(se(e),!rt(r)&&\"writable\"===t){const t=bt(e);nt(r,t)}return dt(e),null}),(t=>(\"writable\"===r._state&&ut(e),function(e,t){e._inFlightWriteRequest._reject(t),e._inFlightWriteRequest=void 0,Ze(e,t)}(r,t),null)))}(e,r)}function ft(e,t){\"writable\"===e._controlledWritableStream._state&&ht(e,t)}function bt(e){return ct(e)<=0}function ht(e,t){const r=e._controlledWritableStream;ut(e),et(r,t)}function _t(e){return new TypeError(`WritableStream.prototype.${e} can only be used on a WritableStream`)}function pt(e){return new TypeError(`WritableStreamDefaultController.prototype.${e} can only be used on a WritableStreamDefaultController`)}function mt(e){return new TypeError(`WritableStreamDefaultWriter.prototype.${e} can only be used on a WritableStreamDefaultWriter`)}function yt(e){return new TypeError(\"Cannot \"+e+\" a stream using a released writer\")}function gt(e){e._closedPromise=u(((t,r)=>{e._closedPromise_resolve=t,e._closedPromise_reject=r,e._closedPromiseState=\"pending\"}))}function wt(e,t){gt(e),St(e,t)}function St(e,t){void 0!==e._closedPromise_reject&&(m(e._closedPromise),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"rejected\")}function vt(e){void 0!==e._closedPromise_resolve&&(e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"resolved\")}function Rt(e){e._readyPromise=u(((t,r)=>{e._readyPromise_resolve=t,e._readyPromise_reject=r})),e._readyPromiseState=\"pending\"}function Tt(e,t){Rt(e),Ct(e,t)}function qt(e){Rt(e),Et(e)}function Ct(e,t){void 0!==e._readyPromise_reject&&(m(e._readyPromise),e._readyPromise_reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"rejected\")}function Et(e){void 0!==e._readyPromise_resolve&&(e._readyPromise_resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"fulfilled\")}Object.defineProperties(WritableStreamDefaultController.prototype,{abortReason:{enumerable:!0},signal:{enumerable:!0},error:{enumerable:!0}}),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(WritableStreamDefaultController.prototype,e.toStringTag,{value:\"WritableStreamDefaultController\",configurable:!0});const Pt=\"undefined\"!=typeof DOMException?DOMException:void 0;const Wt=function(e){if(\"function\"!=typeof e&&\"object\"!=typeof e)return!1;try{return new e,!0}catch(e){return!1}}(Pt)?Pt:function(){const e=function(e,t){this.message=e||\"\",this.name=t||\"Error\",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)};return e.prototype=Object.create(Error.prototype),Object.defineProperty(e.prototype,\"constructor\",{value:e,writable:!0,configurable:!0}),e}();function kt(e,t,r,o,n,a){const i=e.getReader(),l=t.getWriter();Vt(e)&&(e._disturbed=!0);let s,_,g,w=!1,S=!1,v=\"readable\",R=\"writable\",T=!1,q=!1;const C=u((e=>{g=e}));let E=Promise.resolve(void 0);return u(((P,W)=>{let k;function O(){if(w)return;const e=u(((e,t)=>{!function r(o){o?e():f(function(){if(w)return c(!0);return f(l.ready,(()=>f(i.read(),(e=>!!e.done||(E=l.write(e.value),m(E),!1)))))}(),r,t)}(!1)}));m(e)}function B(){return v=\"closed\",r?L():z((()=>(Ge(t)&&(T=rt(t),R=t._state),T||\"closed\"===R?c(void 0):\"erroring\"===R||\"errored\"===R?d(_):(T=!0,l.close()))),!1,void 0),null}function A(e){return w||(v=\"errored\",s=e,o?L(!0,e):z((()=>l.abort(e)),!0,e)),null}function j(e){return S||(R=\"errored\",_=e,n?L(!0,e):z((()=>i.cancel(e)),!0,e)),null}if(void 0!==a&&(k=()=>{const e=void 0!==a.reason?a.reason:new Wt(\"Aborted\",\"AbortError\"),t=[];o||t.push((()=>\"writable\"===R?l.abort(e):c(void 0))),n||t.push((()=>\"readable\"===v?i.cancel(e):c(void 0))),z((()=>Promise.all(t.map((e=>e())))),!0,e)},a.aborted?k():a.addEventListener(\"abort\",k)),Vt(e)&&(v=e._state,s=e._storedError),Ge(t)&&(R=t._state,_=t._storedError,T=rt(t)),Vt(e)&&Ge(t)&&(q=!0,g()),\"errored\"===v)A(s);else if(\"erroring\"===R||\"errored\"===R)j(_);else if(\"closed\"===v)B();else if(T||\"closed\"===R){const e=new TypeError(\"the destination writable stream closed before all data could be piped to it\");n?L(!0,e):z((()=>i.cancel(e)),!0,e)}function z(e,t,r){function o(){return\"writable\"!==R||T?n():h(function(){let e;return c(function t(){if(e!==E)return e=E,p(E,t,t)}())}(),n),null}function n(){return e?b(e(),(()=>F(t,r)),(e=>F(!0,e))):F(t,r),null}w||(w=!0,q?o():h(C,o))}function L(e,t){z(void 0,e,t)}function F(e,t){return S=!0,l.releaseLock(),i.releaseLock(),void 0!==a&&a.removeEventListener(\"abort\",k),e?W(t):P(void 0),null}w||(b(i.closed,B,A),b(l.closed,(function(){return S||(R=\"closed\"),null}),j)),q?O():y((()=>{q=!0,g(),O()}))}))}function Ot(e,t){return function(e){try{return e.getReader({mode:\"byob\"}).releaseLock(),!0}catch(e){return!1}}(e)?function(e){let t,r,o,n,a,i=e.getReader(),l=!1,s=!1,d=!1,f=!1,h=!1,p=!1;const m=u((e=>{a=e}));function y(e){_(e.closed,(t=>(e!==i||(o.error(t),n.error(t),h&&p||a(void 0)),null)))}function g(){l&&(i.releaseLock(),i=e.getReader(),y(i),l=!1),b(i.read(),(e=>{var t,r;if(d=!1,f=!1,e.done)return h||o.close(),p||n.close(),null===(t=o.byobRequest)||void 0===t||t.respond(0),null===(r=n.byobRequest)||void 0===r||r.respond(0),h&&p||a(void 0),null;const l=e.value,u=l;let c=l;if(!h&&!p)try{c=le(l)}catch(e){return o.error(e),n.error(e),a(i.cancel(e)),null}return h||o.enqueue(u),p||n.enqueue(c),s=!1,d?S():f&&v(),null}),(()=>(s=!1,null)))}function w(t,r){l||(i.releaseLock(),i=e.getReader({mode:\"byob\"}),y(i),l=!0);const u=r?n:o,c=r?o:n;b(i.read(t),(e=>{var t;d=!1,f=!1;const o=r?p:h,n=r?h:p;if(e.done){o||u.close(),n||c.close();const r=e.value;return void 0!==r&&(o||u.byobRequest.respondWithNewView(r),n||null===(t=c.byobRequest)||void 0===t||t.respond(0)),o&&n||a(void 0),null}const l=e.value;if(n)o||u.byobRequest.respondWithNewView(l);else{let e;try{e=le(l)}catch(e){return u.error(e),c.error(e),a(i.cancel(e)),null}o||u.byobRequest.respondWithNewView(l),c.enqueue(e)}return s=!1,d?S():f&&v(),null}),(()=>(s=!1,null)))}function S(){if(s)return d=!0,c(void 0);s=!0;const e=o.byobRequest;return null===e?g():w(e.view,!1),c(void 0)}function v(){if(s)return f=!0,c(void 0);s=!0;const e=n.byobRequest;return null===e?g():w(e.view,!0),c(void 0)}function R(e){if(h=!0,t=e,p){const e=[t,r],o=i.cancel(e);a(o)}return m}function T(e){if(p=!0,r=e,h){const e=[t,r],o=i.cancel(e);a(o)}return m}const q=new ReadableStream({type:\"bytes\",start(e){o=e},pull:S,cancel:R}),C=new ReadableStream({type:\"bytes\",start(e){n=e},pull:v,cancel:T});return y(i),[q,C]}(e):function(e,t){const r=e.getReader();let o,n,a,i,l,s=!1,d=!1,f=!1,h=!1;const p=u((e=>{l=e}));function m(){return s?(d=!0,c(void 0)):(s=!0,b(r.read(),(e=>{if(d=!1,e.done)return f||a.close(),h||i.close(),f&&h||l(void 0),null;const t=e.value,r=t,o=t;return f||a.enqueue(r),h||i.enqueue(o),s=!1,d&&m(),null}),(()=>(s=!1,null))),c(void 0))}function y(e){if(f=!0,o=e,h){const e=[o,n],t=r.cancel(e);l(t)}return p}function g(e){if(h=!0,n=e,f){const e=[o,n],t=r.cancel(e);l(t)}return p}const w=new ReadableStream({start(e){a=e},pull:m,cancel:y}),S=new ReadableStream({start(e){i=e},pull:m,cancel:g});return _(r.closed,(e=>(a.error(e),i.error(e),f&&h||l(void 0),null))),[w,S]}(e)}class ReadableStreamDefaultController{constructor(){throw new TypeError(\"Illegal constructor\")}get desiredSize(){if(!Bt(this))throw Dt(\"desiredSize\");return Lt(this)}close(){if(!Bt(this))throw Dt(\"close\");if(!Ft(this))throw new TypeError(\"The stream is not in a state that permits close\");!function(e){if(!Ft(e))return;const t=e._controlledReadableStream;e._closeRequested=!0,0===e._queue.length&&(jt(e),Xt(t))}(this)}enqueue(e){if(!Bt(this))throw Dt(\"enqueue\");if(!Ft(this))throw new TypeError(\"The stream is not in a state that permits enqueue\");return function(e,t){if(!Ft(e))return;const r=e._controlledReadableStream;if(Ut(r)&&X(r)>0)G(r,t,!1);else{let r;try{r=e._strategySizeAlgorithm(t)}catch(t){throw zt(e,t),t}try{ue(e,t,r)}catch(t){throw zt(e,t),t}}At(e)}(this,e)}error(e){if(!Bt(this))throw Dt(\"error\");zt(this,e)}[T](e){ce(this);const t=this._cancelAlgorithm(e);return jt(this),t}[q](e){const t=this._controlledReadableStream;if(this._queue.length>0){const r=se(this);this._closeRequested&&0===this._queue.length?(jt(this),Xt(t)):At(this),e._chunkSteps(r)}else U(t,e),At(this)}[C](){}}function Bt(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_controlledReadableStream\")&&e instanceof ReadableStreamDefaultController)}function At(e){const t=function(e){const t=e._controlledReadableStream;if(!Ft(e))return!1;if(!e._started)return!1;if(Ut(t)&&X(t)>0)return!0;if(Lt(e)>0)return!0;return!1}(e);if(!t)return;if(e._pulling)return void(e._pullAgain=!0);e._pulling=!0;b(e._pullAlgorithm(),(()=>(e._pulling=!1,e._pullAgain&&(e._pullAgain=!1,At(e)),null)),(t=>(zt(e,t),null)))}function jt(e){e._pullAlgorithm=void 0,e._cancelAlgorithm=void 0,e._strategySizeAlgorithm=void 0}function zt(e,t){const r=e._controlledReadableStream;\"readable\"===r._state&&(ce(e),jt(e),Jt(r,t))}function Lt(e){const t=e._controlledReadableStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}function Ft(e){return!e._closeRequested&&\"readable\"===e._controlledReadableStream._state}function It(e,t,r,o){const n=Object.create(ReadableStreamDefaultController.prototype);let a,i,l;a=void 0!==t.start?()=>t.start(n):()=>{},i=void 0!==t.pull?()=>t.pull(n):()=>c(void 0),l=void 0!==t.cancel?e=>t.cancel(e):()=>c(void 0),function(e,t,r,o,n,a,i){t._controlledReadableStream=e,t._queue=void 0,t._queueTotalSize=void 0,ce(t),t._started=!1,t._closeRequested=!1,t._pullAgain=!1,t._pulling=!1,t._strategySizeAlgorithm=i,t._strategyHWM=a,t._pullAlgorithm=o,t._cancelAlgorithm=n,e._readableStreamController=t,b(c(r()),(()=>(t._started=!0,At(t),null)),(e=>(zt(t,e),null)))}(e,n,a,i,l,r,o)}function Dt(e){return new TypeError(`ReadableStreamDefaultController.prototype.${e} can only be used on a ReadableStreamDefaultController`)}function $t(e,t,r){return I(e,r),r=>w(e,t,[r])}function Mt(e,t,r){return I(e,r),r=>w(e,t,[r])}function Yt(e,t,r){return I(e,r),r=>g(e,t,[r])}function Qt(e,t){if(\"bytes\"!==(e=`${e}`))throw new TypeError(`${t} '${e}' is not a valid enumeration value for ReadableStreamType`);return e}function Nt(e,t){if(\"byob\"!==(e=`${e}`))throw new TypeError(`${t} '${e}' is not a valid enumeration value for ReadableStreamReaderMode`);return e}function Ht(e,t){F(e,t);const r=null==e?void 0:e.preventAbort,o=null==e?void 0:e.preventCancel,n=null==e?void 0:e.preventClose,a=null==e?void 0:e.signal;return void 0!==a&&function(e,t){if(!function(e){if(\"object\"!=typeof e||null===e)return!1;try{return\"boolean\"==typeof e.aborted}catch(e){return!1}}(e))throw new TypeError(`${t} is not an AbortSignal.`)}(a,`${t} has member 'signal' that`),{preventAbort:Boolean(r),preventCancel:Boolean(o),preventClose:Boolean(n),signal:a}}function xt(e,t){F(e,t);const r=null==e?void 0:e.readable;M(r,\"readable\",\"ReadableWritablePair\"),function(e,t){if(!H(e))throw new TypeError(`${t} is not a ReadableStream.`)}(r,`${t} has member 'readable' that`);const o=null==e?void 0:e.writable;return M(o,\"writable\",\"ReadableWritablePair\"),function(e,t){if(!x(e))throw new TypeError(`${t} is not a WritableStream.`)}(o,`${t} has member 'writable' that`),{readable:r,writable:o}}Object.defineProperties(ReadableStreamDefaultController.prototype,{close:{enumerable:!0},enqueue:{enumerable:!0},error:{enumerable:!0},desiredSize:{enumerable:!0}}),n(ReadableStreamDefaultController.prototype.close,\"close\"),n(ReadableStreamDefaultController.prototype.enqueue,\"enqueue\"),n(ReadableStreamDefaultController.prototype.error,\"error\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableStreamDefaultController.prototype,e.toStringTag,{value:\"ReadableStreamDefaultController\",configurable:!0});class ReadableStream{constructor(e={},t={}){void 0===e?e=null:D(e,\"First parameter\");const r=Ye(t,\"Second parameter\"),o=function(e,t){F(e,t);const r=e,o=null==r?void 0:r.autoAllocateChunkSize,n=null==r?void 0:r.cancel,a=null==r?void 0:r.pull,i=null==r?void 0:r.start,l=null==r?void 0:r.type;return{autoAllocateChunkSize:void 0===o?void 0:N(o,`${t} has member 'autoAllocateChunkSize' that`),cancel:void 0===n?void 0:$t(n,r,`${t} has member 'cancel' that`),pull:void 0===a?void 0:Mt(a,r,`${t} has member 'pull' that`),start:void 0===i?void 0:Yt(i,r,`${t} has member 'start' that`),type:void 0===l?void 0:Qt(l,`${t} has member 'type' that`)}}(e,\"First parameter\");var n;if((n=this)._state=\"readable\",n._reader=void 0,n._storedError=void 0,n._disturbed=!1,\"bytes\"===o.type){if(void 0!==r.size)throw new RangeError(\"The strategy for a byte stream cannot have a size function\");Oe(this,o,$e(r,0))}else{const e=Me(r);It(this,o,$e(r,1),e)}}get locked(){if(!Vt(this))throw Kt(\"locked\");return Ut(this)}cancel(e){return Vt(this)?Ut(this)?d(new TypeError(\"Cannot cancel a stream that already has a reader\")):Gt(this,e):d(Kt(\"cancel\"))}getReader(e){if(!Vt(this))throw Kt(\"getReader\");return void 0===function(e,t){F(e,t);const r=null==e?void 0:e.mode;return{mode:void 0===r?void 0:Nt(r,`${t} has member 'mode' that`)}}(e,\"First parameter\").mode?new ReadableStreamDefaultReader(this):function(e){return new ReadableStreamBYOBReader(e)}(this)}pipeThrough(e,t={}){if(!H(this))throw Kt(\"pipeThrough\");$(e,1,\"pipeThrough\");const r=xt(e,\"First parameter\"),o=Ht(t,\"Second parameter\");if(this.locked)throw new TypeError(\"ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream\");if(r.writable.locked)throw new TypeError(\"ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream\");return m(kt(this,r.writable,o.preventClose,o.preventAbort,o.preventCancel,o.signal)),r.readable}pipeTo(e,t={}){if(!H(this))return d(Kt(\"pipeTo\"));if(void 0===e)return d(\"Parameter 1 is required in 'pipeTo'.\");if(!x(e))return d(new TypeError(\"ReadableStream.prototype.pipeTo's first argument must be a WritableStream\"));let r;try{r=Ht(t,\"Second parameter\")}catch(e){return d(e)}return this.locked?d(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream\")):e.locked?d(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream\")):kt(this,e,r.preventClose,r.preventAbort,r.preventCancel,r.signal)}tee(){if(!H(this))throw Kt(\"tee\");if(this.locked)throw new TypeError(\"Cannot tee a stream that already has a reader\");return Ot(this)}values(e){if(!H(this))throw Kt(\"values\");return function(e,t){const r=e.getReader(),o=new te(r,t),n=Object.create(re);return n._asyncIteratorImpl=o,n}(this,function(e,t){F(e,t);const r=null==e?void 0:e.preventCancel;return{preventCancel:Boolean(r)}}(e,\"First parameter\").preventCancel)}}function Vt(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_readableStreamController\")&&e instanceof ReadableStream)}function Ut(e){return void 0!==e._reader}function Gt(e,r){if(e._disturbed=!0,\"closed\"===e._state)return c(void 0);if(\"errored\"===e._state)return d(e._storedError);Xt(e);const o=e._reader;if(void 0!==o&&Fe(o)){const e=o._readIntoRequests;o._readIntoRequests=new S,e.forEach((e=>{e._closeSteps(void 0)}))}return p(e._readableStreamController[T](r),t)}function Xt(e){e._state=\"closed\";const t=e._reader;if(void 0!==t&&(j(t),K(t))){const e=t._readRequests;t._readRequests=new S,e.forEach((e=>{e._closeSteps()}))}}function Jt(e,t){e._state=\"errored\",e._storedError=t;const r=e._reader;void 0!==r&&(A(r,t),K(r)?Z(r,t):Ie(r,t))}function Kt(e){return new TypeError(`ReadableStream.prototype.${e} can only be used on a ReadableStream`)}function Zt(e,t){F(e,t);const r=null==e?void 0:e.highWaterMark;return M(r,\"highWaterMark\",\"QueuingStrategyInit\"),{highWaterMark:Y(r)}}Object.defineProperties(ReadableStream.prototype,{cancel:{enumerable:!0},getReader:{enumerable:!0},pipeThrough:{enumerable:!0},pipeTo:{enumerable:!0},tee:{enumerable:!0},values:{enumerable:!0},locked:{enumerable:!0}}),n(ReadableStream.prototype.cancel,\"cancel\"),n(ReadableStream.prototype.getReader,\"getReader\"),n(ReadableStream.prototype.pipeThrough,\"pipeThrough\"),n(ReadableStream.prototype.pipeTo,\"pipeTo\"),n(ReadableStream.prototype.tee,\"tee\"),n(ReadableStream.prototype.values,\"values\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ReadableStream.prototype,e.toStringTag,{value:\"ReadableStream\",configurable:!0}),\"symbol\"==typeof e.asyncIterator&&Object.defineProperty(ReadableStream.prototype,e.asyncIterator,{value:ReadableStream.prototype.values,writable:!0,configurable:!0});const er=e=>e.byteLength;n(er,\"size\");class ByteLengthQueuingStrategy{constructor(e){$(e,1,\"ByteLengthQueuingStrategy\"),e=Zt(e,\"First parameter\"),this._byteLengthQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!rr(this))throw tr(\"highWaterMark\");return this._byteLengthQueuingStrategyHighWaterMark}get size(){if(!rr(this))throw tr(\"size\");return er}}function tr(e){return new TypeError(`ByteLengthQueuingStrategy.prototype.${e} can only be used on a ByteLengthQueuingStrategy`)}function rr(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_byteLengthQueuingStrategyHighWaterMark\")&&e instanceof ByteLengthQueuingStrategy)}Object.defineProperties(ByteLengthQueuingStrategy.prototype,{highWaterMark:{enumerable:!0},size:{enumerable:!0}}),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(ByteLengthQueuingStrategy.prototype,e.toStringTag,{value:\"ByteLengthQueuingStrategy\",configurable:!0});const or=()=>1;n(or,\"size\");class CountQueuingStrategy{constructor(e){$(e,1,\"CountQueuingStrategy\"),e=Zt(e,\"First parameter\"),this._countQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!ar(this))throw nr(\"highWaterMark\");return this._countQueuingStrategyHighWaterMark}get size(){if(!ar(this))throw nr(\"size\");return or}}function nr(e){return new TypeError(`CountQueuingStrategy.prototype.${e} can only be used on a CountQueuingStrategy`)}function ar(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_countQueuingStrategyHighWaterMark\")&&e instanceof CountQueuingStrategy)}function ir(e,t,r){return I(e,r),r=>w(e,t,[r])}function lr(e,t,r){return I(e,r),r=>g(e,t,[r])}function sr(e,t,r){return I(e,r),(r,o)=>w(e,t,[r,o])}Object.defineProperties(CountQueuingStrategy.prototype,{highWaterMark:{enumerable:!0},size:{enumerable:!0}}),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(CountQueuingStrategy.prototype,e.toStringTag,{value:\"CountQueuingStrategy\",configurable:!0});class TransformStream{constructor(e={},t={},r={}){void 0===e&&(e=null);const o=Ye(t,\"Second parameter\"),n=Ye(r,\"Third parameter\"),a=function(e,t){F(e,t);const r=null==e?void 0:e.flush,o=null==e?void 0:e.readableType,n=null==e?void 0:e.start,a=null==e?void 0:e.transform,i=null==e?void 0:e.writableType;return{flush:void 0===r?void 0:ir(r,e,`${t} has member 'flush' that`),readableType:o,start:void 0===n?void 0:lr(n,e,`${t} has member 'start' that`),transform:void 0===a?void 0:sr(a,e,`${t} has member 'transform' that`),writableType:i}}(e,\"First parameter\");if(void 0!==a.readableType)throw new RangeError(\"Invalid readableType specified\");if(void 0!==a.writableType)throw new RangeError(\"Invalid writableType specified\");const i=$e(n,0),l=Me(n),s=$e(o,1),f=Me(o);let b;!function(e,t,r,o,n,a){function i(){return t}function l(t){return function(e,t){const r=e._transformStreamController;if(e._backpressure){return p(e._backpressureChangePromise,(()=>{if(\"erroring\"===(Ge(e._writable)?e._writable._state:e._writableState))throw Ge(e._writable)?e._writable._storedError:e._writableStoredError;return pr(r,t)}))}return pr(r,t)}(e,t)}function s(t){return function(e,t){return cr(e,t),c(void 0)}(e,t)}function u(){return function(e){const t=e._transformStreamController,r=t._flushAlgorithm();return hr(t),p(r,(()=>{if(\"errored\"===e._readableState)throw e._readableStoredError;gr(e)&&wr(e)}),(t=>{throw cr(e,t),e._readableStoredError}))}(e)}function d(){return function(e){return fr(e,!1),e._backpressureChangePromise}(e)}function f(t){return dr(e,t),c(void 0)}e._writableState=\"writable\",e._writableStoredError=void 0,e._writableHasInFlightOperation=!1,e._writableStarted=!1,e._writable=function(e,t,r,o,n,a,i){return new WritableStream({start(r){e._writableController=r;try{const t=r.signal;void 0!==t&&t.addEventListener(\"abort\",(()=>{\"writable\"===e._writableState&&(e._writableState=\"erroring\",t.reason&&(e._writableStoredError=t.reason))}))}catch(e){}return p(t(),(()=>(e._writableStarted=!0,Cr(e),null)),(t=>{throw e._writableStarted=!0,Rr(e,t),t}))},write:t=>(function(e){e._writableHasInFlightOperation=!0}(e),p(r(t),(()=>(function(e){e._writableHasInFlightOperation=!1}(e),Cr(e),null)),(t=>{throw function(e,t){e._writableHasInFlightOperation=!1,Rr(e,t)}(e,t),t}))),close:()=>(function(e){e._writableHasInFlightOperation=!0}(e),p(o(),(()=>(function(e){e._writableHasInFlightOperation=!1;\"erroring\"===e._writableState&&(e._writableStoredError=void 0);e._writableState=\"closed\"}(e),null)),(t=>{throw function(e,t){e._writableHasInFlightOperation=!1,e._writableState,Rr(e,t)}(e,t),t}))),abort:t=>(e._writableState=\"errored\",e._writableStoredError=t,n(t))},{highWaterMark:a,size:i})}(e,i,l,u,s,r,o),e._readableState=\"readable\",e._readableStoredError=void 0,e._readableCloseRequested=!1,e._readablePulling=!1,e._readable=function(e,t,r,o,n,a){return new ReadableStream({start:r=>(e._readableController=r,t().catch((t=>{Sr(e,t)}))),pull:()=>(e._readablePulling=!0,r().catch((t=>{Sr(e,t)}))),cancel:t=>(e._readableState=\"closed\",o(t))},{highWaterMark:n,size:a})}(e,i,d,f,n,a),e._backpressure=void 0,e._backpressureChangePromise=void 0,e._backpressureChangePromise_resolve=void 0,fr(e,!0),e._transformStreamController=void 0}(this,u((e=>{b=e})),s,f,i,l),function(e,t){const r=Object.create(TransformStreamDefaultController.prototype);let o,n;o=void 0!==t.transform?e=>t.transform(e,r):e=>{try{return _r(r,e),c(void 0)}catch(e){return d(e)}};n=void 0!==t.flush?()=>t.flush(r):()=>c(void 0);!function(e,t,r,o){t._controlledTransformStream=e,e._transformStreamController=t,t._transformAlgorithm=r,t._flushAlgorithm=o}(e,r,o,n)}(this,a),void 0!==a.start?b(a.start(this._transformStreamController)):b(void 0)}get readable(){if(!ur(this))throw yr(\"readable\");return this._readable}get writable(){if(!ur(this))throw yr(\"writable\");return this._writable}}function ur(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_transformStreamController\")&&e instanceof TransformStream)}function cr(e,t){Sr(e,t),dr(e,t)}function dr(e,t){hr(e._transformStreamController),function(e,t){e._writableController.error(t);\"writable\"===e._writableState&&Tr(e,t)}(e,t),e._backpressure&&fr(e,!1)}function fr(e,t){void 0!==e._backpressureChangePromise&&e._backpressureChangePromise_resolve(),e._backpressureChangePromise=u((t=>{e._backpressureChangePromise_resolve=t})),e._backpressure=t}Object.defineProperties(TransformStream.prototype,{readable:{enumerable:!0},writable:{enumerable:!0}}),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(TransformStream.prototype,e.toStringTag,{value:\"TransformStream\",configurable:!0});class TransformStreamDefaultController{constructor(){throw new TypeError(\"Illegal constructor\")}get desiredSize(){if(!br(this))throw mr(\"desiredSize\");return vr(this._controlledTransformStream)}enqueue(e){if(!br(this))throw mr(\"enqueue\");_r(this,e)}error(e){if(!br(this))throw mr(\"error\");var t;t=e,cr(this._controlledTransformStream,t)}terminate(){if(!br(this))throw mr(\"terminate\");!function(e){const t=e._controlledTransformStream;gr(t)&&wr(t);const r=new TypeError(\"TransformStream terminated\");dr(t,r)}(this)}}function br(e){return!!r(e)&&(!!Object.prototype.hasOwnProperty.call(e,\"_controlledTransformStream\")&&e instanceof TransformStreamDefaultController)}function hr(e){e._transformAlgorithm=void 0,e._flushAlgorithm=void 0}function _r(e,t){const r=e._controlledTransformStream;if(!gr(r))throw new TypeError(\"Readable side is not in a state that permits enqueue\");try{!function(e,t){e._readablePulling=!1;try{e._readableController.enqueue(t)}catch(t){throw Sr(e,t),t}}(r,t)}catch(e){throw dr(r,e),r._readableStoredError}const o=function(e){return!function(e){if(!gr(e))return!1;if(e._readablePulling)return!0;if(vr(e)>0)return!0;return!1}(e)}(r);o!==r._backpressure&&fr(r,!0)}function pr(e,t){return p(e._transformAlgorithm(t),void 0,(t=>{throw cr(e._controlledTransformStream,t),t}))}function mr(e){return new TypeError(`TransformStreamDefaultController.prototype.${e} can only be used on a TransformStreamDefaultController`)}function yr(e){return new TypeError(`TransformStream.prototype.${e} can only be used on a TransformStream`)}function gr(e){return!e._readableCloseRequested&&\"readable\"===e._readableState}function wr(e){e._readableState=\"closed\",e._readableCloseRequested=!0,e._readableController.close()}function Sr(e,t){\"readable\"===e._readableState&&(e._readableState=\"errored\",e._readableStoredError=t),e._readableController.error(t)}function vr(e){return e._readableController.desiredSize}function Rr(e,t){\"writable\"!==e._writableState?qr(e):Tr(e,t)}function Tr(e,t){e._writableState=\"erroring\",e._writableStoredError=t,!function(e){return e._writableHasInFlightOperation}(e)&&e._writableStarted&&qr(e)}function qr(e){e._writableState=\"errored\"}function Cr(e){\"erroring\"===e._writableState&&qr(e)}Object.defineProperties(TransformStreamDefaultController.prototype,{enqueue:{enumerable:!0},error:{enumerable:!0},terminate:{enumerable:!0},desiredSize:{enumerable:!0}}),n(TransformStreamDefaultController.prototype.enqueue,\"enqueue\"),n(TransformStreamDefaultController.prototype.error,\"error\"),n(TransformStreamDefaultController.prototype.terminate,\"terminate\"),\"symbol\"==typeof e.toStringTag&&Object.defineProperty(TransformStreamDefaultController.prototype,e.toStringTag,{value:\"TransformStreamDefaultController\",configurable:!0});export{ByteLengthQueuingStrategy,CountQueuingStrategy,ReadableByteStreamController,ReadableStream,ReadableStreamBYOBReader,ReadableStreamBYOBRequest,ReadableStreamDefaultController,ReadableStreamDefaultReader,TransformStream,TransformStreamDefaultController,WritableStream,WritableStreamDefaultController,WritableStreamDefaultWriter};\n","export const isFunction = (value) => (typeof value === \"function\");\n","/*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank */\nimport { isFunction } from \"./isFunction.js\";\nconst CHUNK_SIZE = 65536;\nasync function* clonePart(part) {\n    const end = part.byteOffset + part.byteLength;\n    let position = part.byteOffset;\n    while (position !== end) {\n        const size = Math.min(end - position, CHUNK_SIZE);\n        const chunk = part.buffer.slice(position, position + size);\n        position += chunk.byteLength;\n        yield new Uint8Array(chunk);\n    }\n}\nasync function* consumeNodeBlob(blob) {\n    let position = 0;\n    while (position !== blob.size) {\n        const chunk = blob.slice(position, Math.min(blob.size, position + CHUNK_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n    }\n}\nexport async function* consumeBlobParts(parts, clone = false) {\n    for (const part of parts) {\n        if (ArrayBuffer.isView(part)) {\n            if (clone) {\n                yield* clonePart(part);\n            }\n            else {\n                yield part;\n            }\n        }\n        else if (isFunction(part.stream)) {\n            yield* part.stream();\n        }\n        else {\n            yield* consumeNodeBlob(part);\n        }\n    }\n}\nexport function* sliceBlob(blobParts, blobSize, start = 0, end) {\n    end !== null && end !== void 0 ? end : (end = blobSize);\n    let relativeStart = start < 0\n        ? Math.max(blobSize + start, 0)\n        : Math.min(start, blobSize);\n    let relativeEnd = end < 0\n        ? Math.max(blobSize + end, 0)\n        : Math.min(end, blobSize);\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    let added = 0;\n    for (const part of blobParts) {\n        if (added >= span) {\n            break;\n        }\n        const partSize = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n        if (relativeStart && partSize <= relativeStart) {\n            relativeStart -= partSize;\n            relativeEnd -= partSize;\n        }\n        else {\n            let chunk;\n            if (ArrayBuffer.isView(part)) {\n                chunk = part.subarray(relativeStart, Math.min(partSize, relativeEnd));\n                added += chunk.byteLength;\n            }\n            else {\n                chunk = part.slice(relativeStart, Math.min(partSize, relativeEnd));\n                added += chunk.size;\n            }\n            relativeEnd -= partSize;\n            relativeStart = 0;\n            yield chunk;\n        }\n    }\n}\n","/*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Blob_parts, _Blob_type, _Blob_size;\nimport { ReadableStream } from \"web-streams-polyfill\";\nimport { isFunction } from \"./isFunction.js\";\nimport { consumeBlobParts, sliceBlob } from \"./blobHelpers.js\";\nexport class Blob {\n    constructor(blobParts = [], options = {}) {\n        _Blob_parts.set(this, []);\n        _Blob_type.set(this, \"\");\n        _Blob_size.set(this, 0);\n        options !== null && options !== void 0 ? options : (options = {});\n        if (typeof blobParts !== \"object\" || blobParts === null) {\n            throw new TypeError(\"Failed to construct 'Blob': \"\n                + \"The provided value cannot be converted to a sequence.\");\n        }\n        if (!isFunction(blobParts[Symbol.iterator])) {\n            throw new TypeError(\"Failed to construct 'Blob': \"\n                + \"The object must have a callable @@iterator property.\");\n        }\n        if (typeof options !== \"object\" && !isFunction(options)) {\n            throw new TypeError(\"Failed to construct 'Blob': parameter 2 cannot convert to dictionary.\");\n        }\n        const encoder = new TextEncoder();\n        for (const raw of blobParts) {\n            let part;\n            if (ArrayBuffer.isView(raw)) {\n                part = new Uint8Array(raw.buffer.slice(raw.byteOffset, raw.byteOffset + raw.byteLength));\n            }\n            else if (raw instanceof ArrayBuffer) {\n                part = new Uint8Array(raw.slice(0));\n            }\n            else if (raw instanceof Blob) {\n                part = raw;\n            }\n            else {\n                part = encoder.encode(String(raw));\n            }\n            __classPrivateFieldSet(this, _Blob_size, __classPrivateFieldGet(this, _Blob_size, \"f\") + (ArrayBuffer.isView(part) ? part.byteLength : part.size), \"f\");\n            __classPrivateFieldGet(this, _Blob_parts, \"f\").push(part);\n        }\n        const type = options.type === undefined ? \"\" : String(options.type);\n        __classPrivateFieldSet(this, _Blob_type, /^[\\x20-\\x7E]*$/.test(type) ? type : \"\", \"f\");\n    }\n    static [(_Blob_parts = new WeakMap(), _Blob_type = new WeakMap(), _Blob_size = new WeakMap(), Symbol.hasInstance)](value) {\n        return Boolean(value\n            && typeof value === \"object\"\n            && isFunction(value.constructor)\n            && (isFunction(value.stream)\n                || isFunction(value.arrayBuffer))\n            && /^(Blob|File)$/.test(value[Symbol.toStringTag]));\n    }\n    get type() {\n        return __classPrivateFieldGet(this, _Blob_type, \"f\");\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _Blob_size, \"f\");\n    }\n    slice(start, end, contentType) {\n        return new Blob(sliceBlob(__classPrivateFieldGet(this, _Blob_parts, \"f\"), this.size, start, end), {\n            type: contentType\n        });\n    }\n    async text() {\n        const decoder = new TextDecoder();\n        let result = \"\";\n        for await (const chunk of consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"))) {\n            result += decoder.decode(chunk, { stream: true });\n        }\n        result += decoder.decode();\n        return result;\n    }\n    async arrayBuffer() {\n        const view = new Uint8Array(this.size);\n        let offset = 0;\n        for await (const chunk of consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"))) {\n            view.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return view.buffer;\n    }\n    stream() {\n        const iterator = consumeBlobParts(__classPrivateFieldGet(this, _Blob_parts, \"f\"), true);\n        return new ReadableStream({\n            async pull(controller) {\n                const { value, done } = await iterator.next();\n                if (done) {\n                    return queueMicrotask(() => controller.close());\n                }\n                controller.enqueue(value);\n            },\n            async cancel() {\n                await iterator.return();\n            }\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return \"Blob\";\n    }\n}\nObject.defineProperties(Blob.prototype, {\n    type: { enumerable: true },\n    size: { enumerable: true },\n    slice: { enumerable: true },\n    stream: { enumerable: true },\n    text: { enumerable: true },\n    arrayBuffer: { enumerable: true }\n});\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _File_name, _File_lastModified;\nimport { Blob } from \"./Blob.js\";\nexport class File extends Blob {\n    constructor(fileBits, name, options = {}) {\n        super(fileBits, options);\n        _File_name.set(this, void 0);\n        _File_lastModified.set(this, 0);\n        if (arguments.length < 2) {\n            throw new TypeError(\"Failed to construct 'File': 2 arguments required, \"\n                + `but only ${arguments.length} present.`);\n        }\n        __classPrivateFieldSet(this, _File_name, String(name), \"f\");\n        const lastModified = options.lastModified === undefined\n            ? Date.now()\n            : Number(options.lastModified);\n        if (!Number.isNaN(lastModified)) {\n            __classPrivateFieldSet(this, _File_lastModified, lastModified, \"f\");\n        }\n    }\n    static [(_File_name = new WeakMap(), _File_lastModified = new WeakMap(), Symbol.hasInstance)](value) {\n        return value instanceof Blob\n            && value[Symbol.toStringTag] === \"File\"\n            && typeof value.name === \"string\";\n    }\n    get name() {\n        return __classPrivateFieldGet(this, _File_name, \"f\");\n    }\n    get lastModified() {\n        return __classPrivateFieldGet(this, _File_lastModified, \"f\");\n    }\n    get webkitRelativePath() {\n        return \"\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"File\";\n    }\n}\n","import { File } from \"./File.js\";\nexport const isFile = (value) => value instanceof File;\n","import { Blob } from \"./Blob.js\";\nexport const isBlob = (value) => value instanceof Blob;\n","import { deprecate } from \"util\";\nexport const deprecateConstructorEntries = deprecate(() => { }, \"Constructor \\\"entries\\\" argument is not spec-compliant \"\n    + \"and will be removed in next major release.\");\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FormData_instances, _FormData_entries, _FormData_setEntry;\nimport { inspect } from \"util\";\nimport { File } from \"./File.js\";\nimport { isFile } from \"./isFile.js\";\nimport { isBlob } from \"./isBlob.js\";\nimport { isFunction } from \"./isFunction.js\";\nimport { deprecateConstructorEntries } from \"./deprecateConstructorEntries.js\";\nexport class FormData {\n    constructor(entries) {\n        _FormData_instances.add(this);\n        _FormData_entries.set(this, new Map());\n        if (entries) {\n            deprecateConstructorEntries();\n            entries.forEach(({ name, value, fileName }) => this.append(name, value, fileName));\n        }\n    }\n    static [(_FormData_entries = new WeakMap(), _FormData_instances = new WeakSet(), Symbol.hasInstance)](value) {\n        return Boolean(value\n            && isFunction(value.constructor)\n            && value[Symbol.toStringTag] === \"FormData\"\n            && isFunction(value.append)\n            && isFunction(value.set)\n            && isFunction(value.get)\n            && isFunction(value.getAll)\n            && isFunction(value.has)\n            && isFunction(value.delete)\n            && isFunction(value.entries)\n            && isFunction(value.values)\n            && isFunction(value.keys)\n            && isFunction(value[Symbol.iterator])\n            && isFunction(value.forEach));\n    }\n    append(name, value, fileName) {\n        __classPrivateFieldGet(this, _FormData_instances, \"m\", _FormData_setEntry).call(this, {\n            name,\n            fileName,\n            append: true,\n            rawValue: value,\n            argsLength: arguments.length\n        });\n    }\n    set(name, value, fileName) {\n        __classPrivateFieldGet(this, _FormData_instances, \"m\", _FormData_setEntry).call(this, {\n            name,\n            fileName,\n            append: false,\n            rawValue: value,\n            argsLength: arguments.length\n        });\n    }\n    get(name) {\n        const field = __classPrivateFieldGet(this, _FormData_entries, \"f\").get(String(name));\n        if (!field) {\n            return null;\n        }\n        return field[0];\n    }\n    getAll(name) {\n        const field = __classPrivateFieldGet(this, _FormData_entries, \"f\").get(String(name));\n        if (!field) {\n            return [];\n        }\n        return field.slice();\n    }\n    has(name) {\n        return __classPrivateFieldGet(this, _FormData_entries, \"f\").has(String(name));\n    }\n    delete(name) {\n        __classPrivateFieldGet(this, _FormData_entries, \"f\").delete(String(name));\n    }\n    *keys() {\n        for (const key of __classPrivateFieldGet(this, _FormData_entries, \"f\").keys()) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const name of this.keys()) {\n            const values = this.getAll(name);\n            for (const value of values) {\n                yield [name, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [(_FormData_setEntry = function _FormData_setEntry({ name, rawValue, append, fileName, argsLength }) {\n        const methodName = append ? \"append\" : \"set\";\n        if (argsLength < 2) {\n            throw new TypeError(`Failed to execute '${methodName}' on 'FormData': `\n                + `2 arguments required, but only ${argsLength} present.`);\n        }\n        name = String(name);\n        let value;\n        if (isFile(rawValue)) {\n            value = fileName === undefined\n                ? rawValue\n                : new File([rawValue], fileName, {\n                    type: rawValue.type,\n                    lastModified: rawValue.lastModified\n                });\n        }\n        else if (isBlob(rawValue)) {\n            value = new File([rawValue], fileName === undefined ? \"blob\" : fileName, {\n                type: rawValue.type\n            });\n        }\n        else if (fileName) {\n            throw new TypeError(`Failed to execute '${methodName}' on 'FormData': `\n                + \"parameter 2 is not of type 'Blob'.\");\n        }\n        else {\n            value = String(rawValue);\n        }\n        const values = __classPrivateFieldGet(this, _FormData_entries, \"f\").get(name);\n        if (!values) {\n            return void __classPrivateFieldGet(this, _FormData_entries, \"f\").set(name, [value]);\n        }\n        if (!append) {\n            return void __classPrivateFieldGet(this, _FormData_entries, \"f\").set(name, [value]);\n        }\n        values.push(value);\n    }, Symbol.iterator)]() {\n        return this.entries();\n    }\n    forEach(callback, thisArg) {\n        for (const [name, value] of this) {\n            callback.call(thisArg, value, name, this);\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"FormData\";\n    }\n    [inspect.custom]() {\n        return this[Symbol.toStringTag];\n    }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*!\n * humanize-ms - index.js\n * Copyright(c) 2014 dead_horse <dead_horse@qq.com>\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar util = require('util');\nvar ms = require('ms');\n\nmodule.exports = function (t) {\n  if (typeof t === 'number') return t;\n  var r = ms(t);\n  if (r === undefined) {\n    var err = new Error(util.format('humanize-ms(%j) result undefined', t));\n    console.warn(err.stack);\n  }\n  return r;\n};\n","'use strict';\n\nmodule.exports = {\n  // agent\n  CURRENT_ID: Symbol('agentkeepalive#currentId'),\n  CREATE_ID: Symbol('agentkeepalive#createId'),\n  INIT_SOCKET: Symbol('agentkeepalive#initSocket'),\n  CREATE_HTTPS_CONNECTION: Symbol('agentkeepalive#createHttpsConnection'),\n  // socket\n  SOCKET_CREATED_TIME: Symbol('agentkeepalive#socketCreatedTime'),\n  SOCKET_NAME: Symbol('agentkeepalive#socketName'),\n  SOCKET_REQUEST_COUNT: Symbol('agentkeepalive#socketRequestCount'),\n  SOCKET_REQUEST_FINISHED_COUNT: Symbol('agentkeepalive#socketRequestFinishedCount'),\n};\n","'use strict';\n\nconst OriginalAgent = require('http').Agent;\nconst ms = require('humanize-ms');\nconst debug = require('util').debuglog('agentkeepalive');\nconst {\n  INIT_SOCKET,\n  CURRENT_ID,\n  CREATE_ID,\n  SOCKET_CREATED_TIME,\n  SOCKET_NAME,\n  SOCKET_REQUEST_COUNT,\n  SOCKET_REQUEST_FINISHED_COUNT,\n} = require('./constants');\n\n// OriginalAgent come from\n// - https://github.com/nodejs/node/blob/v8.12.0/lib/_http_agent.js\n// - https://github.com/nodejs/node/blob/v10.12.0/lib/_http_agent.js\n\n// node <= 10\nlet defaultTimeoutListenerCount = 1;\nconst majorVersion = parseInt(process.version.split('.', 1)[0].substring(1));\nif (majorVersion >= 11 && majorVersion <= 12) {\n  defaultTimeoutListenerCount = 2;\n} else if (majorVersion >= 13) {\n  defaultTimeoutListenerCount = 3;\n}\n\nfunction deprecate(message) {\n  console.log('[agentkeepalive:deprecated] %s', message);\n}\n\nclass Agent extends OriginalAgent {\n  constructor(options) {\n    options = options || {};\n    options.keepAlive = options.keepAlive !== false;\n    // default is keep-alive and 4s free socket timeout\n    // see https://medium.com/ssense-tech/reduce-networking-errors-in-nodejs-23b4eb9f2d83\n    if (options.freeSocketTimeout === undefined) {\n      options.freeSocketTimeout = 4000;\n    }\n    // Legacy API: keepAliveTimeout should be rename to `freeSocketTimeout`\n    if (options.keepAliveTimeout) {\n      deprecate('options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');\n      options.freeSocketTimeout = options.keepAliveTimeout;\n      delete options.keepAliveTimeout;\n    }\n    // Legacy API: freeSocketKeepAliveTimeout should be rename to `freeSocketTimeout`\n    if (options.freeSocketKeepAliveTimeout) {\n      deprecate('options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');\n      options.freeSocketTimeout = options.freeSocketKeepAliveTimeout;\n      delete options.freeSocketKeepAliveTimeout;\n    }\n\n    // Sets the socket to timeout after timeout milliseconds of inactivity on the socket.\n    // By default is double free socket timeout.\n    if (options.timeout === undefined) {\n      // make sure socket default inactivity timeout >= 8s\n      options.timeout = Math.max(options.freeSocketTimeout * 2, 8000);\n    }\n\n    // support humanize format\n    options.timeout = ms(options.timeout);\n    options.freeSocketTimeout = ms(options.freeSocketTimeout);\n    options.socketActiveTTL = options.socketActiveTTL ? ms(options.socketActiveTTL) : 0;\n\n    super(options);\n\n    this[CURRENT_ID] = 0;\n\n    // create socket success counter\n    this.createSocketCount = 0;\n    this.createSocketCountLastCheck = 0;\n\n    this.createSocketErrorCount = 0;\n    this.createSocketErrorCountLastCheck = 0;\n\n    this.closeSocketCount = 0;\n    this.closeSocketCountLastCheck = 0;\n\n    // socket error event count\n    this.errorSocketCount = 0;\n    this.errorSocketCountLastCheck = 0;\n\n    // request finished counter\n    this.requestCount = 0;\n    this.requestCountLastCheck = 0;\n\n    // including free socket timeout counter\n    this.timeoutSocketCount = 0;\n    this.timeoutSocketCountLastCheck = 0;\n\n    this.on('free', socket => {\n      // https://github.com/nodejs/node/pull/32000\n      // Node.js native agent will check socket timeout eqs agent.options.timeout.\n      // Use the ttl or freeSocketTimeout to overwrite.\n      const timeout = this.calcSocketTimeout(socket);\n      if (timeout > 0 && socket.timeout !== timeout) {\n        socket.setTimeout(timeout);\n      }\n    });\n  }\n\n  get freeSocketKeepAliveTimeout() {\n    deprecate('agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead');\n    return this.options.freeSocketTimeout;\n  }\n\n  get timeout() {\n    deprecate('agent.timeout is deprecated, please use agent.options.timeout instead');\n    return this.options.timeout;\n  }\n\n  get socketActiveTTL() {\n    deprecate('agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead');\n    return this.options.socketActiveTTL;\n  }\n\n  calcSocketTimeout(socket) {\n    /**\n     * return <= 0: should free socket\n     * return > 0: should update socket timeout\n     * return undefined: not find custom timeout\n     */\n    let freeSocketTimeout = this.options.freeSocketTimeout;\n    const socketActiveTTL = this.options.socketActiveTTL;\n    if (socketActiveTTL) {\n      // check socketActiveTTL\n      const aliveTime = Date.now() - socket[SOCKET_CREATED_TIME];\n      const diff = socketActiveTTL - aliveTime;\n      if (diff <= 0) {\n        return diff;\n      }\n      if (freeSocketTimeout && diff < freeSocketTimeout) {\n        freeSocketTimeout = diff;\n      }\n    }\n    // set freeSocketTimeout\n    if (freeSocketTimeout) {\n      // set free keepalive timer\n      // try to use socket custom freeSocketTimeout first, support headers['keep-alive']\n      // https://github.com/node-modules/urllib/blob/b76053020923f4d99a1c93cf2e16e0c5ba10bacf/lib/urllib.js#L498\n      const customFreeSocketTimeout = socket.freeSocketTimeout || socket.freeSocketKeepAliveTimeout;\n      return customFreeSocketTimeout || freeSocketTimeout;\n    }\n  }\n\n  keepSocketAlive(socket) {\n    const result = super.keepSocketAlive(socket);\n    // should not keepAlive, do nothing\n    if (!result) return result;\n\n    const customTimeout = this.calcSocketTimeout(socket);\n    if (typeof customTimeout === 'undefined') {\n      return true;\n    }\n    if (customTimeout <= 0) {\n      debug('%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s',\n        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], customTimeout);\n      return false;\n    }\n    if (socket.timeout !== customTimeout) {\n      socket.setTimeout(customTimeout);\n    }\n    return true;\n  }\n\n  // only call on addRequest\n  reuseSocket(...args) {\n    // reuseSocket(socket, req)\n    super.reuseSocket(...args);\n    const socket = args[0];\n    const req = args[1];\n    req.reusedSocket = true;\n    const agentTimeout = this.options.timeout;\n    if (getSocketTimeout(socket) !== agentTimeout) {\n      // reset timeout before use\n      socket.setTimeout(agentTimeout);\n      debug('%s reset timeout to %sms', socket[SOCKET_NAME], agentTimeout);\n    }\n    socket[SOCKET_REQUEST_COUNT]++;\n    debug('%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      getSocketTimeout(socket));\n  }\n\n  [CREATE_ID]() {\n    const id = this[CURRENT_ID]++;\n    if (this[CURRENT_ID] === Number.MAX_SAFE_INTEGER) this[CURRENT_ID] = 0;\n    return id;\n  }\n\n  [INIT_SOCKET](socket, options) {\n    // bugfix here.\n    // https on node 8, 10 won't set agent.options.timeout by default\n    // TODO: need to fix on node itself\n    if (options.timeout) {\n      const timeout = getSocketTimeout(socket);\n      if (!timeout) {\n        socket.setTimeout(options.timeout);\n      }\n    }\n\n    if (this.options.keepAlive) {\n      // Disable Nagle's algorithm: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/\n      // https://fengmk2.com/benchmark/nagle-algorithm-delayed-ack-mock.html\n      socket.setNoDelay(true);\n    }\n    this.createSocketCount++;\n    if (this.options.socketActiveTTL) {\n      socket[SOCKET_CREATED_TIME] = Date.now();\n    }\n    // don't show the hole '-----BEGIN CERTIFICATE----' key string\n    socket[SOCKET_NAME] = `sock[${this[CREATE_ID]()}#${options._agentKey}]`.split('-----BEGIN', 1)[0];\n    socket[SOCKET_REQUEST_COUNT] = 1;\n    socket[SOCKET_REQUEST_FINISHED_COUNT] = 0;\n    installListeners(this, socket, options);\n  }\n\n  createConnection(options, oncreate) {\n    let called = false;\n    const onNewCreate = (err, socket) => {\n      if (called) return;\n      called = true;\n\n      if (err) {\n        this.createSocketErrorCount++;\n        return oncreate(err);\n      }\n      this[INIT_SOCKET](socket, options);\n      oncreate(err, socket);\n    };\n\n    const newSocket = super.createConnection(options, onNewCreate);\n    if (newSocket) onNewCreate(null, newSocket);\n    return newSocket;\n  }\n\n  get statusChanged() {\n    const changed = this.createSocketCount !== this.createSocketCountLastCheck ||\n      this.createSocketErrorCount !== this.createSocketErrorCountLastCheck ||\n      this.closeSocketCount !== this.closeSocketCountLastCheck ||\n      this.errorSocketCount !== this.errorSocketCountLastCheck ||\n      this.timeoutSocketCount !== this.timeoutSocketCountLastCheck ||\n      this.requestCount !== this.requestCountLastCheck;\n    if (changed) {\n      this.createSocketCountLastCheck = this.createSocketCount;\n      this.createSocketErrorCountLastCheck = this.createSocketErrorCount;\n      this.closeSocketCountLastCheck = this.closeSocketCount;\n      this.errorSocketCountLastCheck = this.errorSocketCount;\n      this.timeoutSocketCountLastCheck = this.timeoutSocketCount;\n      this.requestCountLastCheck = this.requestCount;\n    }\n    return changed;\n  }\n\n  getCurrentStatus() {\n    return {\n      createSocketCount: this.createSocketCount,\n      createSocketErrorCount: this.createSocketErrorCount,\n      closeSocketCount: this.closeSocketCount,\n      errorSocketCount: this.errorSocketCount,\n      timeoutSocketCount: this.timeoutSocketCount,\n      requestCount: this.requestCount,\n      freeSockets: inspect(this.freeSockets),\n      sockets: inspect(this.sockets),\n      requests: inspect(this.requests),\n    };\n  }\n}\n\n// node 8 don't has timeout attribute on socket\n// https://github.com/nodejs/node/pull/21204/files#diff-e6ef024c3775d787c38487a6309e491dR408\nfunction getSocketTimeout(socket) {\n  return socket.timeout || socket._idleTimeout;\n}\n\nfunction installListeners(agent, socket, options) {\n  debug('%s create, timeout %sms', socket[SOCKET_NAME], getSocketTimeout(socket));\n\n  // listener socket events: close, timeout, error, free\n  function onFree() {\n    // create and socket.emit('free') logic\n    // https://github.com/nodejs/node/blob/master/lib/_http_agent.js#L311\n    // no req on the socket, it should be the new socket\n    if (!socket._httpMessage && socket[SOCKET_REQUEST_COUNT] === 1) return;\n\n    socket[SOCKET_REQUEST_FINISHED_COUNT]++;\n    agent.requestCount++;\n    debug('%s(requests: %s, finished: %s) free',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n\n    // should reuse on pedding requests?\n    const name = agent.getName(options);\n    if (socket.writable && agent.requests[name] && agent.requests[name].length) {\n      // will be reuse on agent free listener\n      socket[SOCKET_REQUEST_COUNT]++;\n      debug('%s(requests: %s, finished: %s) will be reuse on agent free event',\n        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n    }\n  }\n  socket.on('free', onFree);\n\n  function onClose(isError) {\n    debug('%s(requests: %s, finished: %s) close, isError: %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], isError);\n    agent.closeSocketCount++;\n  }\n  socket.on('close', onClose);\n\n  // start socket timeout handler\n  function onTimeout() {\n    // onTimeout and emitRequestTimeout(_http_client.js)\n    // https://github.com/nodejs/node/blob/v12.x/lib/_http_client.js#L711\n    const listenerCount = socket.listeners('timeout').length;\n    // node <= 10, default listenerCount is 1, onTimeout\n    // 11 < node <= 12, default listenerCount is 2, onTimeout and emitRequestTimeout\n    // node >= 13, default listenerCount is 3, onTimeout,\n    //   onTimeout(https://github.com/nodejs/node/pull/32000/files#diff-5f7fb0850412c6be189faeddea6c5359R333)\n    //   and emitRequestTimeout\n    const timeout = getSocketTimeout(socket);\n    const req = socket._httpMessage;\n    const reqTimeoutListenerCount = req && req.listeners('timeout').length || 0;\n    debug('%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      timeout, listenerCount, defaultTimeoutListenerCount, !!req, reqTimeoutListenerCount);\n    if (debug.enabled) {\n      debug('timeout listeners: %s', socket.listeners('timeout').map(f => f.name).join(', '));\n    }\n    agent.timeoutSocketCount++;\n    const name = agent.getName(options);\n    if (agent.freeSockets[name] && agent.freeSockets[name].indexOf(socket) !== -1) {\n      // free socket timeout, destroy quietly\n      socket.destroy();\n      // Remove it from freeSockets list immediately to prevent new requests\n      // from being sent through this socket.\n      agent.removeSocket(socket, options);\n      debug('%s is free, destroy quietly', socket[SOCKET_NAME]);\n    } else {\n      // if there is no any request socket timeout handler,\n      // agent need to handle socket timeout itself.\n      //\n      // custom request socket timeout handle logic must follow these rules:\n      //  1. Destroy socket first\n      //  2. Must emit socket 'agentRemove' event tell agent remove socket\n      //     from freeSockets list immediately.\n      //     Otherise you may be get 'socket hang up' error when reuse\n      //     free socket and timeout happen in the same time.\n      if (reqTimeoutListenerCount === 0) {\n        const error = new Error('Socket timeout');\n        error.code = 'ERR_SOCKET_TIMEOUT';\n        error.timeout = timeout;\n        // must manually call socket.end() or socket.destroy() to end the connection.\n        // https://nodejs.org/dist/latest-v10.x/docs/api/net.html#net_socket_settimeout_timeout_callback\n        socket.destroy(error);\n        agent.removeSocket(socket, options);\n        debug('%s destroy with timeout error', socket[SOCKET_NAME]);\n      }\n    }\n  }\n  socket.on('timeout', onTimeout);\n\n  function onError(err) {\n    const listenerCount = socket.listeners('error').length;\n    debug('%s(requests: %s, finished: %s) error: %s, listenerCount: %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      err, listenerCount);\n    agent.errorSocketCount++;\n    if (listenerCount === 1) {\n      // if socket don't contain error event handler, don't catch it, emit it again\n      debug('%s emit uncaught error event', socket[SOCKET_NAME]);\n      socket.removeListener('error', onError);\n      socket.emit('error', err);\n    }\n  }\n  socket.on('error', onError);\n\n  function onRemove() {\n    debug('%s(requests: %s, finished: %s) agentRemove',\n      socket[SOCKET_NAME],\n      socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    socket.removeListener('close', onClose);\n    socket.removeListener('error', onError);\n    socket.removeListener('free', onFree);\n    socket.removeListener('timeout', onTimeout);\n    socket.removeListener('agentRemove', onRemove);\n  }\n  socket.on('agentRemove', onRemove);\n}\n\nmodule.exports = Agent;\n\nfunction inspect(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key].length;\n  }\n  return res;\n}\n","'use strict';\n\nconst OriginalHttpsAgent = require('https').Agent;\nconst HttpAgent = require('./agent');\nconst {\n  INIT_SOCKET,\n  CREATE_HTTPS_CONNECTION,\n} = require('./constants');\n\nclass HttpsAgent extends HttpAgent {\n  constructor(options) {\n    super(options);\n\n    this.defaultPort = 443;\n    this.protocol = 'https:';\n    this.maxCachedSessions = this.options.maxCachedSessions;\n    /* istanbul ignore next */\n    if (this.maxCachedSessions === undefined) {\n      this.maxCachedSessions = 100;\n    }\n\n    this._sessionCache = {\n      map: {},\n      list: [],\n    };\n  }\n\n  createConnection(options, oncreate) {\n    const socket = this[CREATE_HTTPS_CONNECTION](options, oncreate);\n    this[INIT_SOCKET](socket, options);\n    return socket;\n  }\n}\n\n// https://github.com/nodejs/node/blob/master/lib/https.js#L89\nHttpsAgent.prototype[CREATE_HTTPS_CONNECTION] = OriginalHttpsAgent.prototype.createConnection;\n\n[\n  'getName',\n  '_getSession',\n  '_cacheSession',\n  // https://github.com/nodejs/node/pull/4982\n  '_evictSession',\n].forEach(function(method) {\n  /* istanbul ignore next */\n  if (typeof OriginalHttpsAgent.prototype[method] === 'function') {\n    HttpsAgent.prototype[method] = OriginalHttpsAgent.prototype[method];\n  }\n});\n\nmodule.exports = HttpsAgent;\n","'use strict';\n\nconst HttpAgent = require('./lib/agent');\nmodule.exports = HttpAgent;\nmodule.exports.HttpAgent = HttpAgent;\nmodule.exports.HttpsAgent = require('./lib/https_agent');\nmodule.exports.constants = require('./lib/constants');\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\nimport { EventTarget, defineEventAttribute } from 'event-target-shim';\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexport default AbortController;\nexport { AbortController, AbortSignal };\n//# sourceMappingURL=abort-controller.mjs.map\n","const alphabet = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nfunction createBoundary() {\n    let size = 16;\n    let res = \"\";\n    while (size--) {\n        res += alphabet[(Math.random() * alphabet.length) << 0];\n    }\n    return res;\n}\nexport default createBoundary;\n","const getType = (value) => (Object.prototype.toString.call(value).slice(8, -1).toLowerCase());\nfunction isPlainObject(value) {\n    if (getType(value) !== \"object\") {\n        return false;\n    }\n    const pp = Object.getPrototypeOf(value);\n    if (pp === null || pp === undefined) {\n        return true;\n    }\n    const Ctor = pp.constructor && pp.constructor.toString();\n    return Ctor === Object.toString();\n}\nexport default isPlainObject;\n","const normalizeValue = (value) => String(value)\n    .replace(/\\r|\\n/g, (match, i, str) => {\n    if ((match === \"\\r\" && str[i + 1] !== \"\\n\")\n        || (match === \"\\n\" && str[i - 1] !== \"\\r\")) {\n        return \"\\r\\n\";\n    }\n    return match;\n});\nexport default normalizeValue;\n","const escapeName = (name) => String(name)\n    .replace(/\\r/g, \"%0D\")\n    .replace(/\\n/g, \"%0A\")\n    .replace(/\"/g, \"%22\");\nexport default escapeName;\n","const isFunction = (value) => (typeof value === \"function\");\nexport default isFunction;\n","import isFunction from \"./isFunction.js\";\nexport const isFileLike = (value) => Boolean(value\n    && typeof value === \"object\"\n    && isFunction(value.constructor)\n    && value[Symbol.toStringTag] === \"File\"\n    && isFunction(value.stream)\n    && value.name != null\n    && value.size != null\n    && value.lastModified != null);\n","import isFunction from \"./isFunction.js\";\nexport const isFormData = (value) => Boolean(value\n    && isFunction(value.constructor)\n    && value[Symbol.toStringTag] === \"FormData\"\n    && isFunction(value.append)\n    && isFunction(value.getAll)\n    && isFunction(value.entries)\n    && isFunction(value[Symbol.iterator]));\nexport const isFormDataLike = isFormData;\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FormDataEncoder_instances, _FormDataEncoder_CRLF, _FormDataEncoder_CRLF_BYTES, _FormDataEncoder_CRLF_BYTES_LENGTH, _FormDataEncoder_DASHES, _FormDataEncoder_encoder, _FormDataEncoder_footer, _FormDataEncoder_form, _FormDataEncoder_options, _FormDataEncoder_getFieldHeader;\nimport createBoundary from \"./util/createBoundary.js\";\nimport isPlainObject from \"./util/isPlainObject.js\";\nimport normalize from \"./util/normalizeValue.js\";\nimport escape from \"./util/escapeName.js\";\nimport { isFileLike } from \"./util/isFileLike.js\";\nimport { isFormData } from \"./util/isFormData.js\";\nconst defaultOptions = {\n    enableAdditionalHeaders: false\n};\nexport class FormDataEncoder {\n    constructor(form, boundaryOrOptions, options) {\n        _FormDataEncoder_instances.add(this);\n        _FormDataEncoder_CRLF.set(this, \"\\r\\n\");\n        _FormDataEncoder_CRLF_BYTES.set(this, void 0);\n        _FormDataEncoder_CRLF_BYTES_LENGTH.set(this, void 0);\n        _FormDataEncoder_DASHES.set(this, \"-\".repeat(2));\n        _FormDataEncoder_encoder.set(this, new TextEncoder());\n        _FormDataEncoder_footer.set(this, void 0);\n        _FormDataEncoder_form.set(this, void 0);\n        _FormDataEncoder_options.set(this, void 0);\n        if (!isFormData(form)) {\n            throw new TypeError(\"Expected first argument to be a FormData instance.\");\n        }\n        let boundary;\n        if (isPlainObject(boundaryOrOptions)) {\n            options = boundaryOrOptions;\n        }\n        else {\n            boundary = boundaryOrOptions;\n        }\n        if (!boundary) {\n            boundary = createBoundary();\n        }\n        if (typeof boundary !== \"string\") {\n            throw new TypeError(\"Expected boundary argument to be a string.\");\n        }\n        if (options && !isPlainObject(options)) {\n            throw new TypeError(\"Expected options argument to be an object.\");\n        }\n        __classPrivateFieldSet(this, _FormDataEncoder_form, form, \"f\");\n        __classPrivateFieldSet(this, _FormDataEncoder_options, { ...defaultOptions, ...options }, \"f\");\n        __classPrivateFieldSet(this, _FormDataEncoder_CRLF_BYTES, __classPrivateFieldGet(this, _FormDataEncoder_encoder, \"f\").encode(__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _FormDataEncoder_CRLF_BYTES_LENGTH, __classPrivateFieldGet(this, _FormDataEncoder_CRLF_BYTES, \"f\").byteLength, \"f\");\n        this.boundary = `form-data-boundary-${boundary}`;\n        this.contentType = `multipart/form-data; boundary=${this.boundary}`;\n        __classPrivateFieldSet(this, _FormDataEncoder_footer, __classPrivateFieldGet(this, _FormDataEncoder_encoder, \"f\").encode(`${__classPrivateFieldGet(this, _FormDataEncoder_DASHES, \"f\")}${this.boundary}${__classPrivateFieldGet(this, _FormDataEncoder_DASHES, \"f\")}${__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\").repeat(2)}`), \"f\");\n        this.contentLength = String(this.getContentLength());\n        this.headers = Object.freeze({\n            \"Content-Type\": this.contentType,\n            \"Content-Length\": this.contentLength\n        });\n        Object.defineProperties(this, {\n            boundary: { writable: false, configurable: false },\n            contentType: { writable: false, configurable: false },\n            contentLength: { writable: false, configurable: false },\n            headers: { writable: false, configurable: false }\n        });\n    }\n    getContentLength() {\n        let length = 0;\n        for (const [name, raw] of __classPrivateFieldGet(this, _FormDataEncoder_form, \"f\")) {\n            const value = isFileLike(raw) ? raw : __classPrivateFieldGet(this, _FormDataEncoder_encoder, \"f\").encode(normalize(raw));\n            length += __classPrivateFieldGet(this, _FormDataEncoder_instances, \"m\", _FormDataEncoder_getFieldHeader).call(this, name, value).byteLength;\n            length += isFileLike(value) ? value.size : value.byteLength;\n            length += __classPrivateFieldGet(this, _FormDataEncoder_CRLF_BYTES_LENGTH, \"f\");\n        }\n        return length + __classPrivateFieldGet(this, _FormDataEncoder_footer, \"f\").byteLength;\n    }\n    *values() {\n        for (const [name, raw] of __classPrivateFieldGet(this, _FormDataEncoder_form, \"f\").entries()) {\n            const value = isFileLike(raw) ? raw : __classPrivateFieldGet(this, _FormDataEncoder_encoder, \"f\").encode(normalize(raw));\n            yield __classPrivateFieldGet(this, _FormDataEncoder_instances, \"m\", _FormDataEncoder_getFieldHeader).call(this, name, value);\n            yield value;\n            yield __classPrivateFieldGet(this, _FormDataEncoder_CRLF_BYTES, \"f\");\n        }\n        yield __classPrivateFieldGet(this, _FormDataEncoder_footer, \"f\");\n    }\n    async *encode() {\n        for (const part of this.values()) {\n            if (isFileLike(part)) {\n                yield* part.stream();\n            }\n            else {\n                yield part;\n            }\n        }\n    }\n    [(_FormDataEncoder_CRLF = new WeakMap(), _FormDataEncoder_CRLF_BYTES = new WeakMap(), _FormDataEncoder_CRLF_BYTES_LENGTH = new WeakMap(), _FormDataEncoder_DASHES = new WeakMap(), _FormDataEncoder_encoder = new WeakMap(), _FormDataEncoder_footer = new WeakMap(), _FormDataEncoder_form = new WeakMap(), _FormDataEncoder_options = new WeakMap(), _FormDataEncoder_instances = new WeakSet(), _FormDataEncoder_getFieldHeader = function _FormDataEncoder_getFieldHeader(name, value) {\n        let header = \"\";\n        header += `${__classPrivateFieldGet(this, _FormDataEncoder_DASHES, \"f\")}${this.boundary}${__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\")}`;\n        header += `Content-Disposition: form-data; name=\"${escape(name)}\"`;\n        if (isFileLike(value)) {\n            header += `; filename=\"${escape(value.name)}\"${__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\")}`;\n            header += `Content-Type: ${value.type || \"application/octet-stream\"}`;\n        }\n        if (__classPrivateFieldGet(this, _FormDataEncoder_options, \"f\").enableAdditionalHeaders === true) {\n            header += `${__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\")}Content-Length: ${isFileLike(value) ? value.size : value.byteLength}`;\n        }\n        return __classPrivateFieldGet(this, _FormDataEncoder_encoder, \"f\").encode(`${header}${__classPrivateFieldGet(this, _FormDataEncoder_CRLF, \"f\").repeat(2)}`);\n    }, Symbol.iterator)]() {\n        return this.values();\n    }\n    [Symbol.asyncIterator]() {\n        return this.encode();\n    }\n}\nexport const Encoder = FormDataEncoder;\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","import * as nf from 'node-fetch';\nimport * as fd from 'formdata-node';\nimport KeepAliveAgent from 'agentkeepalive';\nimport { AbortController as AbortControllerPolyfill } from 'abort-controller';\nimport { ReadStream as FsReadStream } from 'node:fs';\nimport { FormDataEncoder } from 'form-data-encoder';\nimport { Readable } from 'node:stream';\nimport { MultipartBody } from \"./MultipartBody.mjs\";\nimport { ReadableStream } from 'node:stream/web';\nlet fileFromPathWarned = false;\nasync function fileFromPath(path, ...args) {\n    // this import fails in environments that don't handle export maps correctly, like old versions of Jest\n    const { fileFromPath: _fileFromPath } = await import('formdata-node/file-from-path');\n    if (!fileFromPathWarned) {\n        console.warn(`fileFromPath is deprecated; use fs.createReadStream(${JSON.stringify(path)}) instead`);\n        fileFromPathWarned = true;\n    }\n    // @ts-ignore\n    return await _fileFromPath(path, ...args);\n}\nconst defaultHttpAgent = new KeepAliveAgent({ keepAlive: true, timeout: 5 * 60 * 1000 });\nconst defaultHttpsAgent = new KeepAliveAgent.HttpsAgent({ keepAlive: true, timeout: 5 * 60 * 1000 });\nasync function getMultipartRequestOptions(form, opts) {\n    const encoder = new FormDataEncoder(form);\n    const readable = Readable.from(encoder);\n    const body = new MultipartBody(readable);\n    const headers = {\n        ...opts.headers,\n        ...encoder.headers,\n        'Content-Length': encoder.contentLength,\n    };\n    return { ...opts, body: body, headers };\n}\nexport function getRuntime() {\n    // Polyfill global object if needed.\n    if (typeof AbortController === 'undefined') {\n        // @ts-expect-error (the types are subtly different, but compatible in practice)\n        globalThis.AbortController = AbortControllerPolyfill;\n    }\n    return {\n        kind: 'node',\n        fetch: nf.default,\n        Request: nf.Request,\n        Response: nf.Response,\n        Headers: nf.Headers,\n        FormData: fd.FormData,\n        Blob: fd.Blob,\n        File: fd.File,\n        ReadableStream,\n        getMultipartRequestOptions,\n        getDefaultAgent: (url) => (url.startsWith('https') ? defaultHttpsAgent : defaultHttpAgent),\n        fileFromPath,\n        isFsReadStream: (value) => value instanceof FsReadStream,\n    };\n}\n//# sourceMappingURL=node-runtime.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","import { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        // if there is a trailing new line then the last entry will be an empty\n        // string which we don't care about\n        if (trailingNewline) {\n            lines.pop();\n        }\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 2; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks) {\n    const decoder = new LineDecoder();\n    const lines = [];\n    for (const chunk of chunks) {\n        lines.push(...decoder.decode(chunk));\n    }\n    return lines;\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        options = { ...options };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(options.timeout);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __metadata: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        const modifiedArgs = args.map((arg) => {\n            if (!arg) {\n                return arg;\n            }\n            // Check for sensitive headers in request body 'headers' object\n            if (arg['headers']) {\n                // clone so we don't mutate\n                const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n                for (const header in arg['headers']) {\n                    if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                        modifiedArg['headers'][header] = 'REDACTED';\n                    }\n                }\n                return modifiedArg;\n            }\n            let modifiedArg = null;\n            // Check for sensitive headers in headers object\n            for (const header in arg) {\n                if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                    // avoid making a copy until we need to\n                    modifiedArg ?? (modifiedArg = { ...arg });\n                    modifiedArg[header] = 'REDACTED';\n                }\n            }\n            return modifiedArg ?? arg;\n        });\n        console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nimport { Completions, } from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: { ...choice.message, parsed: null, tool_calls: choice.message.tool_calls ?? [] },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? [],\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\n//# sourceMappingURL=realtime.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { sleep } from \"../../../core.mjs\";\nimport { allSettledWithThrow } from \"../../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport * as VectorStoresAPI from \"./vector-stores/vector-stores.mjs\";\nimport { VectorStores, VectorStoresPage, } from \"./vector-stores/vector-stores.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.vectorStores = new VectorStoresAPI.VectorStores(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.VectorStores = VectorStores;\nBeta.VectorStoresPage = VectorStoresPage;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, options);\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose`s, the correct `mime_type` must be specified. Please refer\n     * to documentation for the supported MIME types for your use case:\n     *\n     * - [Assistants](https://platform.openai.com/docs/assistants/tools/file-search#supported-files)\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","import { Anthropic } from \"@anthropic-ai/sdk\"\nimport { ipcMain, BrowserWindow } from \"electron\"\nimport { Ollama } from \"ollama\"\nimport OpenAI from \"openai\"\nimport { Mistral } from \"@mistralai/mistralai\"\n\nexport function ipcLlmHandler(win: BrowserWindow) {\n  ipcMain.handle(\"llm:openaiModelList\", async (_, apiKey: string) => {\n    try {\n      const client = new OpenAI({ apiKey })\n      const models = await client.models.list()\n      return models.data.map((model) => model.id)\n    } catch (error) {\n      return []\n    }\n  })\n\n  ipcMain.handle(\"llm:anthropicModelList\", async (_, apiKey: string, baseURL: string) => {\n    try {\n      const client = new Anthropic({ apiKey, baseURL })\n      const models = await client.models.list()\n      return models.data.map((model) => model.id)\n    } catch (error) {\n      return []\n    }\n  })\n\n  ipcMain.handle(\"llm:ollamaModelList\", async (_, baseURL: string) => {\n    try {\n      const ollama = new Ollama({ host: baseURL })\n      const list = await ollama.list()\n      return list.models.map((model) => model.name)\n    } catch (error) {\n      return []\n    }\n  })\n\n  ipcMain.handle(\"llm:openaiCompatibleModelList\", async (_, apiKey: string, baseURL: string) => {\n    try {\n      const client = new OpenAI({ apiKey, baseURL })\n      const list = await client.models.list()\n      return list.data.map((model) => model.id)\n    } catch (error) {\n      return []\n    }\n  })\n\n  ipcMain.handle(\"llm:googleGenaiModelList\", async (_, apiKey: string) => {\n    try {\n      const url = `https://generativelanguage.googleapis.com/v1beta/models?key=${apiKey}`\n      const response = await fetch(url)\n      const data = await response.json() as { models: { name: string }[] }\n      return data.models.map((model) => model.name)\n    } catch (error) {\n      return []\n    }\n  })\n\n  ipcMain.handle(\"llm:mistralaiModelList\", async (_, apiKey: string) => {\n    try {\n      const client = new Mistral({ apiKey })\n      const models = await client.models.list()\n      return models.data?.map((model) => model.id) ?? []\n    } catch (error) {\n      return []\n    }\n  })\n}\n","import { ipcMain, BrowserWindow, Menu } from \"electron\"\n\nconst selectionMenu = Menu.buildFromTemplate([\n  { role: \"copy\" },\n  { role: \"selectAll\" }\n])\n\nconst inputMenu = Menu.buildFromTemplate([\n  { role: \"copy\" },\n  { role: \"paste\" },\n  { role: \"cut\" },\n  { role: \"selectAll\" }\n])\n\nexport function ipcMenuHandler(win: BrowserWindow) {\n  ipcMain.handle(\"show-selection-context-menu\", () => {\n    selectionMenu.popup()\n  })\n\n  ipcMain.handle(\"show-input-context-menu\", () => {\n    inputMenu.popup()\n  })\n}","import { BrowserWindow } from \"electron\"\nimport { ipcEnvHandler } from \"./env\"\nimport { ipcSystemHandler } from \"./system\"\nimport { ipcUtilHandler } from \"./util\"\nimport { ipcLlmHandler } from \"./llm\"\nimport { ipcMenuHandler } from \"./menu\"\n\nexport function ipcHandler(win: BrowserWindow) {\n  ipcEnvHandler(win)\n  ipcSystemHandler(win)\n  ipcUtilHandler(win)\n  ipcLlmHandler(win)\n  ipcMenuHandler(win)\n}","import { net, protocol } from \"electron\"\nimport path from \"node:path\"\n\nprotocol.registerSchemesAsPrivileged([\n  {\n    scheme: \"local-file\",\n    privileges: {\n      secure: true,\n      supportFetchAPI: true,\n      bypassCSP: true,\n      stream: true,\n    }\n  }\n])\n\nprotocol.registerSchemesAsPrivileged([\n  {\n    scheme: \"img\",\n    privileges: {\n      secure: true,\n      supportFetchAPI: true,\n      bypassCSP: true,\n      stream: true,\n    }\n  }\n])\n\nexport function initProtocol() {\n  protocol.handle(\"local-file\", (req) => {\n    const url = req.url.replace(\"local-file:///\", process.platform === \"win32\" ? \"file:///\" : \"file://\")\n    return net.fetch(url)\n  })\n\n  protocol.handle(\"img\", (req) => {\n    // Remove 'img://'\n    const url = req.url.substring(6);\n    const assetPath = path.join(process.env.VITE_PUBLIC, \"image\", url)\n    return net.fetch(`file://${assetPath}`)\n  })\n\n}","import { app, BrowserWindow, shell, ipcMain } from \"electron\"\nimport { createRequire } from \"node:module\"\nimport { fileURLToPath } from \"node:url\"\nimport path from \"node:path\"\nimport os from \"node:os\"\nimport AppState from \"./state\"\nimport { cleanup, initMCPClient } from \"./service\"\nimport { getNvmPath, modifyPath } from \"./util\"\nimport { binDirList, darwinPathList } from \"./constant\"\nimport { update } from \"./update\"\nimport { ipcHandler } from \"./ipc\"\nimport { initTray } from \"./tray\"\nimport { store } from \"./store\"\nimport { initProtocol } from \"./protocol\"\n\nconst require = createRequire(import.meta.url)\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.mjs   > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.APP_ROOT = path.join(__dirname, \"../..\")\n\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, \"dist-electron\")\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, \"dist\")\nexport const VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL\n\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\n  ? path.join(process.env.APP_ROOT, \"public\")\n  : RENDERER_DIST\n\n// Disable GPU Acceleration for Windows 7\nif (os.release().startsWith(\"6.1\"))\n  app.disableHardwareAcceleration()\n\n// Set application name for Windows 10+ notifications\nif (process.platform === \"win32\")\n  app.setAppUserModelId(app.getName())\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\nlet win: BrowserWindow | null = null\nconst preload = path.join(__dirname, \"../preload/index.mjs\")\nconst indexHtml = path.join(RENDERER_DIST, \"index.html\")\n\nasync function onReady() {\n  if (process.platform === \"win32\") {\n    binDirList.forEach(modifyPath)\n  } else if (process.platform === \"darwin\") {\n    darwinPathList.forEach(modifyPath)\n\n    const nvmPath = getNvmPath()\n    if (nvmPath) {\n      modifyPath(nvmPath)\n    }\n  }\n\n  initMCPClient()\n  initProtocol()\n  createWindow()\n}\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: \"Patrick\",\n    icon: path.join(process.env.VITE_PUBLIC, \"favicon.ico\"),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      // nodeIntegration: true,\n\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      // contextIsolation: false,\n    },\n  })\n\n  // resolve cors\n  win.webContents.session.webRequest.onBeforeSendHeaders(\n    (details, callback) => {\n      callback({ requestHeaders: { ...details.requestHeaders, Origin: '*' } });\n    },\n  );\n\n  win.webContents.session.webRequest.onHeadersReceived((details, callback) => {\n    callback({\n      responseHeaders: {\n        ...details.responseHeaders,\n        'Access-Control-Allow-Origin': ['*'],\n        'Access-Control-Allow-Credentials': ['true'],\n        'Access-Control-Allow-Methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n        'Access-Control-Allow-Headers': ['Content-Type', 'Authorization'],\n      },\n    });\n  });\n\n  if (VITE_DEV_SERVER_URL) { // #298\n    win.loadURL(VITE_DEV_SERVER_URL)\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools()\n  } else {\n    win.setMenu(null)\n    win.loadFile(indexHtml)\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on(\"did-finish-load\", () => {\n    win?.webContents.send(\"main-process-message\", new Date().toLocaleString())\n  })\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith(\"https:\"))\n      shell.openExternal(url)\n\n    return { action: \"deny\" }\n  })\n\n  win.on(\"close\", (event) => {\n    if (!AppState.isQuitting) {\n      event.preventDefault()\n      win?.hide()\n      return false\n    }\n\n    return true\n  })\n\n  // Auto update\n  update(win)\n\n  // Tray\n  const shouldminimalToTray = store.get(\"minimalToTray\")\n  if (process.platform !== \"darwin\" && shouldminimalToTray) {\n    initTray(win)\n    AppState.setIsQuitting(false)\n  }\n\n  // ipc handler\n  ipcHandler(win)\n\n  const shouldAutoLaunch = store.get(\"autoLaunch\")\n  app.setLoginItemSettings({\n    openAtLogin: shouldAutoLaunch,\n    openAsHidden: false\n  })\n}\n\napp.whenReady().then(onReady)\n\napp.on(\"window-all-closed\", async () => {\n  win = null\n\n  if (process.platform !== \"darwin\" && AppState.isQuitting) {\n    await cleanup()\n    app.quit()\n  }\n})\n\napp.on(\"second-instance\", () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized())\n      win.restore()\n\n    win.focus()\n  }\n})\n\napp.on(\"before-quit\", () => {\n  AppState.setIsQuitting(true)\n})\n\napp.on(\"activate\", () => {\n  const allWindows = BrowserWindow.getAllWindows()\n  if (allWindows.length) {\n    allWindows[0].focus()\n  } else {\n    if (win) {\n      win.show()\n    } else {\n      createWindow()\n    }\n  }\n})\n\n// New window example arg: new windows url\nipcMain.handle(\"open-win\", (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  if (VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${VITE_DEV_SERVER_URL}#${arg}`)\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg })\n  }\n})\n"],"names":["s","i","str","_","m","x","camelcaseModule","root","path","obj","_a","toolCalls","e","_b","_d","_c","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","_v","_u","_x","_w","_z","_y","_B","_A","_D","_C","_F","_E","_H","_G","_J","_I","_L","_K","_N","_M","messages","require$$0","a","b","original","retry","AbortError","pRetry","error","pRetryModule","validate_1","validate","uuid","parse_1","parse","v","arr","stringify_1","stringify","rng_1","rng","v1_1","require$$1","v1","dt","n","v1ToV6_1","v1ToV6","v35_1","v35","URL","version","md5_1","md5","v3_1","v3","v4_1","require$$2","v4","sha1_1","sha1","v5_1","v5","v6_1","v6","v6ToV1_1","v6ToV1","v7_1","v7","version_1","_v2","has","l","ee","j","pFinally","pTimeout","pTimeoutModule","lowerBound_1","lowerBound","it","STATUS_NO_RETRY","uuid.validate","defaultOptions","k","getRuntimeEnvironment","stringifyForTracing","config","getEnvironmentVariable","AsyncCaller","limit","update","attachments","uuid.v4","like","kind","isBrowser","isWebWorker","isJsDom","isDeno","isNode","getEnv","runtimeEnvironment","isTracingEnabled","stripNonAlphanumeric","convertToDottedOrderFormat","value","client","Client","TRACING_ALS_KEY","mockAsyncLocalStorage","MockAsyncLocalStorage","AsyncLocalStorageProviderSingleton","AsyncLocalStorageProvider","keys","t","_coerceToDict","text","styles","integer","elapsed","p","queue","id","err","uuidv4","h","c","buffer","schema","regex","types","base","color","edges","isUuid","caller","z","state","result","sql","escapeName","InlineForeignKeys","ne","or","gt","lt","max","f","w","PreparedQueryBase","logger","envPath","eq","and","Database","chats","https","DatabaseMode","ErrorCode","level","process","fs","blocks","d","len","len2","__defProp","__defNormalProp","__publicField","i2","cache","input","systemPrompt","r","PROJECT_ROOT","files","testTools","port","crypto","spawn","configDir","win","AppState","acc","is_array","format","fetch","FormData","File","ReadableStream","getMultipartRequestOptions","fileFromPath","V","S","U","tr46","at","R","res","URLImpl_1","utils","privateData","Stream","Blob","blob","isBlob","ct","desc","Headers","agent","URL$1","isDomainOrSubdomain","isSameProtocol","abort","abortAndFinalize","o","u","g","T","q","C","E","P","W","O","B","L","A","F","y","isFunction","clone","__classPrivateFieldGet","__classPrivateFieldSet","_FormData_setEntry","ms","debug","require$$3","deprecate","inspect","agentkeepaliveModule","AbortSignal","AbortController","isFileLike","normalize","_FormDataEncoder_getFieldHeader","escape","Readable","AbortControllerPolyfill","nf.default","nf.Headers","fd.FormData","fd.Blob","FsReadStream","shims.kind","shims.setShims","auto.getRuntime","opts","Page","shimsKind","retryMessage","modifiedArg","CompletionsAPI.Completions","Chat","Completions","Core.multipartFormRequestOptions","TranscriptionsAPI.Transcriptions","TranslationsAPI.Translations","SpeechAPI.Speech","_EventStream_handleError","inputTool","content","name","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","refusal","rest","index","chunk","SessionsAPI.Sessions","Core.isObj","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","StepsAPI.Steps","RunsAPI.Runs","MessagesAPI.Messages","Files","FilesAPI.Files","FileBatchesAPI.FileBatches","RealtimeAPI.Realtime","VectorStoresAPI.VectorStores","ChatAPI.Chat","AssistantsAPI.Assistants","ThreadsAPI.Threads","CheckpointsAPI.Checkpoints","JobsAPI.Jobs","PartsAPI.Parts","Core.APIClient","Core.readEnv","Errors.OpenAIError","Core.isRunningInBrowser","API.Completions","API.Chat","API.Embeddings","API.Files","API.Images","API.Audio","API.Moderations","API.Models","API.FineTuning","API.Beta","API.Batches","API.Uploads","qs.stringify","Errors.APIError","Errors.APIConnectionError","Errors.APIConnectionTimeoutError","Errors.APIUserAbortError","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Uploads.toFile","Uploads.fileFromPath","UploadsAPIUploads","net","__dirname","os"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,SAAS;AAAA,EAAf;AACS,sCAAa;AAAA;AAAA,EAEb,cAAc,YAAqB;AACxC,SAAK,aAAa;AAAA,EAAA;AAEtB;AAEA,MAAe,aAAA,IAAI,SAAS;ACKrB,SAAS,iBAAiBA,IAAG;AAEhC,MAAI,OAAOA,OAAM,aAAa;AAC1B,WAAO;AAAA,EACf;AAEI,MAAI;AACA,WAAO,KAAK,MAAMA,EAAC;AAAA,EAC3B,SACW,OAAO;AAAA,EAElB;AAEI,MAAI,QAAQ;AACZ,QAAM,QAAQ,CAAE;AAChB,MAAI,iBAAiB;AACrB,MAAI,UAAU;AAEd,WAAS,QAAQA,IAAG;AAChB,QAAI,gBAAgB;AAChB,UAAI,SAAS,OAAO,CAAC,SAAS;AAC1B,yBAAiB;AAAA,MACjC,WACqB,SAAS,QAAQ,CAAC,SAAS;AAChC,eAAO;AAAA,MACvB,WACqB,SAAS,MAAM;AACpB,kBAAU,CAAC;AAAA,MAC3B,OACiB;AACD,kBAAU;AAAA,MAC1B;AAAA,IACA,OACa;AACD,UAAI,SAAS,KAAK;AACd,yBAAiB;AACjB,kBAAU;AAAA,MAC1B,WACqB,SAAS,KAAK;AACnB,cAAM,KAAK,GAAG;AAAA,MAC9B,WACqB,SAAS,KAAK;AACnB,cAAM,KAAK,GAAG;AAAA,MAC9B,WACqB,SAAS,OAAO,SAAS,KAAK;AACnC,YAAI,SAAS,MAAM,MAAM,SAAS,CAAC,MAAM,MAAM;AAC3C,gBAAM,IAAK;AAAA,QAC/B,OACqB;AAED,iBAAO;AAAA,QAC3B;AAAA,MACA;AAAA,IACA;AAEQ,aAAS;AAAA,EACjB;AAGI,MAAI,gBAAgB;AAChB,aAAS;AAAA,EACjB;AAEI,WAASC,KAAI,MAAM,SAAS,GAAGA,MAAK,GAAGA,MAAK,GAAG;AAC3C,aAAS,MAAMA,EAAC;AAAA,EACxB;AAEI,MAAI;AACA,WAAO,KAAK,MAAM,KAAK;AAAA,EAC/B,SACW,OAAO;AAEV,WAAO;AAAA,EACf;AACA;;;;;;;;;ACtFA,eAAiB,SAAUC,MAAK,KAAK;AACpC,QAAI,OAAOA,SAAQ,UAAU;AAC5B,YAAM,IAAI,UAAU,mBAAmB;AAAA,IACzC;AAEC,UAAM,OAAO,QAAQ,cAAc,MAAM;AAEzC,WAAOA,KACL,QAAQ,qBAAqB,OAAO,MAAM,IAAI,EAC9C,QAAQ,4BAA4B,OAAO,MAAM,IAAI,EACrD,YAAa;AAAA,EACf;;;;;;;;;;ACVD,QAAM,YAAY;AAClB,QAAM,YAAY;AAClB,QAAM,kBAAkB;AACxB,QAAM,aAAa;AACnB,QAAM,aAAa;AAEnB,QAAM,qBAAqB,IAAI,OAAO,MAAM,WAAW,MAAM;AAC7D,QAAM,4BAA4B,IAAI,OAAO,WAAW,SAAS,WAAW,QAAQ,IAAI;AACxF,QAAM,yBAAyB,IAAI,OAAO,SAAS,WAAW,QAAQ,IAAI;AAE1E,QAAM,oBAAoB,CAAC,QAAQ,aAAa,gBAAgB;AAC/D,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AACtB,QAAI,sBAAsB;AAE1B,aAASD,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACvC,YAAM,YAAY,OAAOA,EAAC;AAE1B,UAAI,mBAAmB,UAAU,KAAK,SAAS,GAAG;AACjD,iBAAS,OAAO,MAAM,GAAGA,EAAC,IAAI,MAAM,OAAO,MAAMA,EAAC;AAClD,0BAAkB;AAClB,8BAAsB;AACtB,0BAAkB;AAClB,QAAAA;AAAA,MACH,WAAa,mBAAmB,uBAAuB,UAAU,KAAK,SAAS,GAAG;AAC/E,iBAAS,OAAO,MAAM,GAAGA,KAAI,CAAC,IAAI,MAAM,OAAO,MAAMA,KAAI,CAAC;AAC1D,8BAAsB;AACtB,0BAAkB;AAClB,0BAAkB;AAAA,MACrB,OAAS;AACN,0BAAkB,YAAY,SAAS,MAAM,aAAa,YAAY,SAAS,MAAM;AACrF,8BAAsB;AACtB,0BAAkB,YAAY,SAAS,MAAM,aAAa,YAAY,SAAS,MAAM;AAAA,MACxF;AAAA,IACA;AAEC,WAAO;AAAA,EACP;AAED,QAAM,+BAA+B,CAAC,OAAO,gBAAgB;AAC5D,oBAAgB,YAAY;AAE5B,WAAO,MAAM,QAAQ,iBAAiB,QAAM,YAAY,EAAE,CAAC;AAAA,EAC3D;AAED,QAAM,cAAc,CAAC,OAAO,gBAAgB;AAC3C,8BAA0B,YAAY;AACtC,2BAAuB,YAAY;AAEnC,WAAO,MAAM,QAAQ,2BAA2B,CAACE,IAAG,eAAe,YAAY,UAAU,CAAC,EACxF,QAAQ,wBAAwB,CAAAC,OAAK,YAAYA,EAAC,CAAC;AAAA,EACrD;AAED,QAAM,YAAY,CAAC,OAAO,YAAY;AACrC,QAAI,EAAE,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,IAAI;AACzD,YAAM,IAAI,UAAU,8CAA8C;AAAA,IACpE;AAEC,cAAU;AAAA,MACT,YAAY;AAAA,MACZ,8BAA8B;AAAA,MAC9B,GAAG;AAAA,IACH;AAED,QAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAQ,MAAM,IAAI,CAAAC,OAAKA,GAAE,KAAM,CAAA,EAC7B,OAAO,CAAAA,OAAKA,GAAE,MAAM,EACpB,KAAK,GAAG;AAAA,IACZ,OAAQ;AACN,cAAQ,MAAM,KAAM;AAAA,IACtB;AAEC,QAAI,MAAM,WAAW,GAAG;AACvB,aAAO;AAAA,IACT;AAEC,UAAM,cAAc,QAAQ,WAAW,QACtC,YAAU,OAAO,YAAa,IAC9B,YAAU,OAAO,kBAAkB,QAAQ,MAAM;AAClD,UAAM,cAAc,QAAQ,WAAW,QACtC,YAAU,OAAO,YAAa,IAC9B,YAAU,OAAO,kBAAkB,QAAQ,MAAM;AAElD,QAAI,MAAM,WAAW,GAAG;AACvB,aAAO,QAAQ,aAAa,YAAY,KAAK,IAAI,YAAY,KAAK;AAAA,IACpE;AAEC,UAAM,eAAe,UAAU,YAAY,KAAK;AAEhD,QAAI,cAAc;AACjB,cAAQ,kBAAkB,OAAO,aAAa,WAAW;AAAA,IAC3D;AAEC,YAAQ,MAAM,QAAQ,oBAAoB,EAAE;AAE5C,QAAI,QAAQ,8BAA8B;AACzC,cAAQ,6BAA6B,OAAO,WAAW;AAAA,IACzD,OAAQ;AACN,cAAQ,YAAY,KAAK;AAAA,IAC3B;AAEC,QAAI,QAAQ,YAAY;AACvB,cAAQ,YAAY,MAAM,OAAO,CAAC,CAAC,IAAI,MAAM,MAAM,CAAC;AAAA,IACtD;AAEC,WAAO,YAAY,OAAO,WAAW;AAAA,EACrC;AAEDC,YAAA,UAAiB;AAEjBA,YAAA,QAAA,UAAyB;;;;AC9GlB,SAAS,UAAU,KAAK,KAAK;AAChC,UAAO,2BAAM,SAAQ,UAAU,GAAG;AACtC;AAIO,SAAS,QAAQ,QAAQ,QAAQ,KAAK;AACzC,QAAM,SAAS,CAAE;AACjB,aAAW,OAAO,QAAQ;AACtB,QAAI,OAAO,OAAO,QAAQ,GAAG,GAAG;AAC5B,aAAO,OAAO,KAAK,GAAG,CAAC,IAAI,OAAO,GAAG;AAAA,IACjD;AAAA,EACA;AACI,SAAO;AACX;ACfA,SAAS,YAAY,KAAK;AACtB,SAAO,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,GAAG,IAAK;AACrD;AACA,SAAS,eAAeC,OAAM,YAAY;AACtC,QAAM,SAAS,YAAYA,KAAI;AAC/B,aAAW,CAACC,OAAM,QAAQ,KAAK,OAAO,QAAQ,UAAU,GAAG;AACvD,UAAM,CAAC,MAAM,GAAG,YAAY,IAAIA,MAAK,MAAM,GAAG,EAAE,QAAS;AAEzD,QAAI,UAAU;AACd,eAAW,QAAQ,aAAa,WAAW;AACvC,UAAI,QAAQ,IAAI,MAAM,QAAW;AAC7B;AAAA,MAChB;AACY,cAAQ,IAAI,IAAI,YAAY,QAAQ,IAAI,CAAC;AACzC,gBAAU,QAAQ,IAAI;AAAA,IAClC;AACQ,QAAI,QAAQ,IAAI,MAAM,QAAW;AAC7B,cAAQ,IAAI,IAAI;AAAA,QACZ,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,IAAI,CAAC,QAAQ;AAAA,MAChB;AAAA,IACb;AAAA,EACA;AACI,SAAO;AACX;AAKO,SAAS,mBAEhB,mBAAmB;AAGf,QAAM,cAAc,OAAO,eAAe,iBAAiB;AAC3D,QAAM,qBAAqB,OAAO,kBAAkB,YAAY,eAC3D,OAAO,YAAY,YAAY,cAC5B,kBAAkB,QAAO,MAAO,YAAY,QAAO;AAC3D,MAAI,oBAAoB;AACpB,WAAO,kBAAkB,QAAS;AAAA,EAC1C,OACS;AACD,WAAO,kBAAkB;AAAA,EACjC;AACA;AACO,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB,OAAO,UAAU;AACb,WAAO,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,QAAQ;AACR,WAAO;AAAA,MACH,GAAG,KAAK;AAAA,MACR,mBAAmB,KAAK,WAAW;AAAA,IACtC;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,IAAI,aAAa;AACb,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,gBAAgB;AAChB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,aAAa;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,WAAW,OAAO;AAC1B,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,YAAY,UAAU,CAAE;AAAA,EACrC;AAAA,EACI,SAAS;AACL,QAAI,CAAC,KAAK,iBAAiB;AACvB,aAAO,KAAK,qBAAsB;AAAA,IAC9C;AACQ;AAAA;AAAA,MAEA,KAAK,qBAAqB,gBACtB,OAAO,KAAK,cAAc,YAC1B,MAAM,QAAQ,KAAK,SAAS;AAAA,MAAG;AAG/B,aAAO,KAAK,qBAAsB;AAAA,IAC9C;AACQ,UAAM,UAAU,CAAE;AAClB,UAAM,UAAU,CAAE;AAClB,UAAM,SAAS,OAAO,KAAK,KAAK,SAAS,EAAE,OAAO,CAAC,KAAK,QAAQ;AAC5D,UAAI,GAAG,IAAI,OAAO,OAAO,KAAK,GAAG,IAAI,KAAK,UAAU,GAAG;AACvD,aAAO;AAAA,IACV,GAAE,EAAE;AAEL,aAEI,UAAU,OAAO,eAAe,IAAI,GAAG,SAAS,UAAU,OAAO,eAAe,OAAO,GAAG;AAC1F,aAAO,OAAO,SAAS,QAAQ,IAAI,SAAS,cAAc,IAAI,CAAC;AAC/D,aAAO,OAAO,SAAS,QAAQ,IAAI,SAAS,cAAc,IAAI,CAAC;AAC/D,aAAO,OAAO,QAAQ,QAAQ,IAAI,SAAS,iBAAiB,IAAI,CAAC;AAAA,IAC7E;AAGQ,WAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,YAAY;AAEtC,UAAI,OAAO;AAEX,UAAI,QAAQ;AACZ,YAAM,CAAC,MAAM,GAAG,YAAY,IAAI,QAAQ,MAAM,GAAG,EAAE,QAAS;AAC5D,iBAAW,OAAO,aAAa,WAAW;AACtC,YAAI,EAAE,OAAO,SAAS,KAAK,GAAG,MAAM;AAChC;AACJ,YAAI,EAAE,OAAO,UAAU,MAAM,GAAG,MAAM,QAAW;AAC7C,cAAI,OAAO,KAAK,GAAG,MAAM,YAAY,KAAK,GAAG,KAAK,MAAM;AACpD,kBAAM,GAAG,IAAI,CAAE;AAAA,UACvC,WAC6B,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG;AAC/B,kBAAM,GAAG,IAAI,CAAE;AAAA,UACvC;AAAA,QACA;AACgB,eAAO,KAAK,GAAG;AACf,gBAAQ,MAAM,GAAG;AAAA,MACjC;AACY,UAAI,QAAQ,QAAQ,KAAK,IAAI,MAAM,QAAW;AAC1C,cAAM,IAAI,IAAI,MAAM,IAAI,KAAK,KAAK,IAAI;AAAA,MACtD;AAAA,IACA,CAAS;AACD,WAAO;AAAA,MACH,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,KAAK;AAAA,MACT,QAAQ,QAAQ,OAAO,KAAK,OAAO,EAAE,SAAS,eAAe,QAAQ,OAAO,IAAI,QAAQ,WAAW,OAAO;AAAA,IAC7G;AAAA,EACT;AAAA,EACI,uBAAuB;AACnB,WAAO;AAAA,MACH,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,KAAK;AAAA,IACZ;AAAA,EACT;AACA;AC7KO,SAAS,aAAa,cAAc,eAAe;AAEtD,MAAI,OAAO,iBAAiB,UAAU;AAClC,QAAI,OAAO,kBAAkB,UAAU;AACnC,aAAO,eAAe;AAAA,IAClC,OACa;AACD,aAAO,CAAC,EAAE,MAAM,QAAQ,MAAM,aAAY,GAAI,GAAG,aAAa;AAAA,IAC1E;AAAA,EAEA,WACa,MAAM,QAAQ,aAAa,GAAG;AACnC,WAAQ,YAAY,cAAc,aAAa,KAAK;AAAA,MAChD,GAAG;AAAA,MACH,GAAG;AAAA,IACN;AAAA,EACT,OACS;AAED,WAAO,CAAC,GAAG,cAAc,EAAE,MAAM,QAAQ,MAAM,eAAe;AAAA,EACtE;AACA;AAgBA,SAAS,wBAAwB,KAAK,YAAY;AAE9C,WAAS,OAAOC,MAAK,cAAc;AAC/B,QAAI,OAAOA,SAAQ,YAAYA,SAAQ,QAAQA,SAAQ,QAAW;AAC9D,aAAOA;AAAA,IACnB;AACQ,QAAI,gBAAgB,YAAY;AAC5B,UAAI,MAAM,QAAQA,IAAG,GAAG;AACpB,eAAO;AAAA,MACvB;AACY,aAAO;AAAA,IACnB;AACQ,QAAI,MAAM,QAAQA,IAAG,GAAG;AACpB,aAAOA,KAAI,IAAI,CAAC,SAAS,OAAO,MAAM,eAAe,CAAC,CAAC;AAAA,IACnE;AACQ,UAAM,SAAS,CAAE;AACjB,eAAW,OAAO,OAAO,KAAKA,IAAG,GAAG;AAChC,aAAO,GAAG,IAAI,OAAOA,KAAI,GAAG,GAAG,eAAe,CAAC;AAAA,IAC3D;AACQ,WAAO;AAAA,EACf;AACI,SAAO,KAAK,UAAU,OAAO,KAAK,CAAC,GAAG,MAAM,CAAC;AACjD;AAMO,MAAM,oBAAoB,aAAa;AAAA,EAC1C,IAAI,aAAa;AAEb,WAAO;AAAA,MACH,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,IACtB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,OAAO;AACP,WAAO,OAAO,KAAK,YAAY,WAAW,KAAK,UAAU;AAAA,EACjE;AAAA;AAAA,EAEI,UAAU;AACN,WAAO,KAAK,SAAU;AAAA,EAC9B;AAAA,EACI,YAAY,QAEZ,QAAQ;AACJ,QAAI,OAAO,WAAW,UAAU;AAE5B,eAAS;AAAA,QACL,SAAS;AAAA,QACT,mBAAmB;AAAA,QACnB,mBAAmB,CAAE;AAAA,MACxB;AAAA,IACb;AAEQ,QAAI,CAAC,OAAO,mBAAmB;AAE3B,aAAO,oBAAoB,CAAE;AAAA,IACzC;AACQ,QAAI,CAAC,OAAO,mBAAmB;AAE3B,aAAO,oBAAoB,CAAE;AAAA,IACzC;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,UAAU;AAAA,IAChD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAKD,WAAO,eAAe,MAAM,MAAM;AAAA,MAC9B,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,OAAO,OAAO;AACnB,SAAK,UAAU,OAAO;AACtB,SAAK,oBAAoB,OAAO;AAChC,SAAK,oBAAoB,OAAO;AAChC,SAAK,KAAK,OAAO;AAAA,EACzB;AAAA,EACI,SAAS;AACL,WAAO;AAAA,MACH,MAAM,KAAK,SAAU;AAAA,MACrB,MAAM,KAAK,OAAM,EACZ;AAAA,IACR;AAAA,EACT;AAAA,EACI,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA;AAAA,EAEI,IAAI,mBAAmB;AACnB,WAAO;AAAA,MACH,IAAI,KAAK;AAAA,MACT,SAAS,KAAK;AAAA,MACd,MAAM,KAAK;AAAA,MACX,mBAAmB,KAAK;AAAA,MACxB,mBAAmB,KAAK;AAAA,IAC3B;AAAA,EACT;AAAA;AAAA;AAAA,EAGI,UAAU,OAAO;AACb,SAAK,KAAK;AAGV,SAAK,UAAU,KAAK;AAAA,EAC5B;AAAA,EACI,KAAK,OAAO,WAAW,IAAI;AAEvB,WAAO,KAAK,YAAY,QAAS;AAAA,EACzC;AAAA;AAAA,EAEI,CAAC,OAAO,IAAI,4BAA4B,CAAC,EAAE,OAAO;AAC9C,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACnB;AACQ,UAAM,YAAY,wBAAwB,KAAK,kBAAkB,KAAK,IAAI,GAAG,KAAK,CAAC;AAEnF,WAAO,GAAG,KAAK,YAAY,QAAO,CAAE,IAAI,SAAS;AAAA,EACzD;AACA;AAKO,SAAS,YAEhB,MAEA,OAEE;AACE,QAAM,SAAS,EAAE,GAAG,KAAM;AAC1B,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC9C,QAAI,OAAO,GAAG,KAAK,MAAM;AACrB,aAAO,GAAG,IAAI;AAAA,IAC1B,WACiB,SAAS,MAAM;AACpB;AAAA,IACZ,WACiB,OAAO,OAAO,GAAG,MAAM,OAAO,SACnC,MAAM,QAAQ,OAAO,GAAG,CAAC,MAAM,MAAM,QAAQ,KAAK,GAAG;AACrD,YAAM,IAAI,MAAM,SAAS,GAAG,mEAAmE;AAAA,IAC3G,WACiB,OAAO,OAAO,GAAG,MAAM,UAAU;AACtC,UAAI,QAAQ,QAAQ;AAEhB;AAAA,MAChB;AACY,aAAO,GAAG,KAAK;AAAA,IAC3B,WACiB,OAAO,OAAO,GAAG,MAAM,YAAY,CAAC,MAAM,QAAQ,OAAO,GAAG,CAAC,GAAG;AACrE,aAAO,GAAG,IAAI,YAAY,OAAO,GAAG,GAAG,KAAK;AAAA,IACxD,WACiB,MAAM,QAAQ,OAAO,GAAG,CAAC,GAAG;AACjC,aAAO,GAAG,IAAI,YAAY,OAAO,GAAG,GAAG,KAAK;AAAA,IACxD,WACiB,OAAO,GAAG,MAAM,OAAO;AAC5B;AAAA,IACZ,OACa;AACD,cAAQ,KAAK,SAAS,GAAG,wEAAwE;AAAA,IAC7G;AAAA,EACA;AACI,SAAO;AACX;AAEO,SAAS,YAAY,MAAM,OAAO;AACrC,MAAI,SAAS,UAAa,UAAU,QAAW;AAC3C,WAAO;AAAA,EACf,WACa,SAAS,UAAa,UAAU,QAAW;AAChD,WAAO,QAAQ;AAAA,EACvB,OACS;AACD,UAAM,SAAS,CAAC,GAAG,IAAI;AACvB,eAAW,QAAQ,OAAO;AACtB,UAAI,OAAO,SAAS,YAChB,WAAW,QACX,OAAO,KAAK,UAAU,UAAU;AAChC,cAAM,UAAU,OAAO,UAAU,CAAC,aAAa,SAAS,UAAU,KAAK,KAAK;AAC5E,YAAI,YAAY,IAAI;AAChB,iBAAO,OAAO,IAAI,YAAY,OAAO,OAAO,GAAG,IAAI;AAAA,QACvE,OACqB;AACD,iBAAO,KAAK,IAAI;AAAA,QACpC;AAAA,MACA,WACqB,OAAO,SAAS,YACrB,UAAU,QACV,KAAK,SAAS,IAAI;AAElB;AAAA,MAChB,OACiB;AACD,eAAO,KAAK,IAAI;AAAA,MAChC;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AACA;AAmCO,MAAM,yBAAyB,YAAY;AAClD;AACO,SAAS,wBAAwBJ,IAAG;AACvC,SAAO,OAAOA,GAAE,SAAS;AAC7B;AACO,SAAS,cAAc,aAAa;AACvC,SAAO,QAAO,2CAAa,cAAa;AAC5C;AC3TO,MAAM,oBAAoB,YAAY;AAAA,EACzC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,IAAI,aAAa;AAEb,WAAO,EAAE,cAAc,eAAgB;AAAA,EAC/C;AAAA,EACI,YAAY,QAAQ,cAAc,MAAM;AACpC,QAAI,OAAO,WAAW,UAAU;AAE5B,eAAS,EAAE,SAAS,QAAQ,MAAM,aAA4B;AAAA,IAC1E;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,yBAAyB;AAAA,MACjD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAKD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AASD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,eAAe,OAAO;AAC3B,SAAK,WAAW,OAAO;AACvB,SAAK,SAAS,OAAO;AAAA,EAC7B;AAAA,EACI,WAAW;AACP,WAAO;AAAA,EACf;AAAA,EACI,OAAO,WAAW,SAAS;AACvB,WAAO,QAAQ,SAAQ,MAAO;AAAA,EACtC;AAAA,EACI,IAAI,mBAAmB;AACnB,WAAO;AAAA,MACH,GAAG,MAAM;AAAA,MACT,cAAc,KAAK;AAAA,MACnB,UAAU,KAAK;AAAA,IAClB;AAAA,EACT;AACA;AAmEO,SAAS,sBAEhB,cAAc;AACV,QAAM,YAAY,CAAE;AACpB,QAAM,mBAAmB,CAAE;AAC3B,aAAW,YAAY,cAAc;AACjC,QAAI,CAAC,SAAS,UAAU;AACpB;AAAA,IACZ,OACa;AACD,YAAM,eAAe,SAAS,SAAS;AACvC,UAAI;AACA,cAAM,eAAe,KAAK,MAAM,SAAS,SAAS,SAAS;AAC3D,cAAM,SAAS;AAAA,UACX,MAAM,gBAAgB;AAAA,UACtB,MAAM,gBAAgB,CAAE;AAAA,UACxB,IAAI,SAAS;AAAA,QAChB;AACD,kBAAU,KAAK,MAAM;AAAA,MACrC,SACmB,OAAO;AACV,yBAAiB,KAAK;AAAA,UAClB,MAAM;AAAA,UACN,MAAM,SAAS,SAAS;AAAA,UACxB,IAAI,SAAS;AAAA,UACb,OAAO;AAAA,QAC3B,CAAiB;AAAA,MACjB;AAAA,IACA;AAAA,EACA;AACI,SAAO,CAAC,WAAW,gBAAgB;AACvC;ACzKO,MAAM,kBAAkB,YAAY;AAAA,EACvC,IAAI,aAAa;AAEb,WAAO;AAAA,MACH,GAAG,MAAM;AAAA,MACT,YAAY;AAAA,MACZ,oBAAoB;AAAA,IACvB;AAAA,EACT;AAAA,EACI,YAAY,QAEZ,QAAQ;;AACJ,QAAI;AACJ,QAAI,OAAO,WAAW,UAAU;AAC5B,mBAAa;AAAA,QACT,SAAS;AAAA,QACT,YAAY,CAAE;AAAA,QACd,oBAAoB,CAAE;AAAA,QACtB,mBAAmB,UAAU,CAAE;AAAA,MAClC;AAAA,IACb,OACa;AACD,mBAAa;AACb,YAAM,gBAAeK,MAAA,WAAW,sBAAX,gBAAAA,IAA8B;AACnD,YAAM,YAAY,WAAW;AAC7B,UAAI,EAAE,gBAAgB,SAClB,aAAa,SAAS,MACrB,cAAc,UAAa,UAAU,WAAW,IAAI;AACrD,gBAAQ,KAAK;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB,EAAkB,KAAK,GAAG,CAAC;AAAA,MAC3B;AACY,UAAI;AACA,YAAI,EAAE,gBAAgB,SAAS,cAAc,QAAW;AACpD,gBAAM,CAACC,YAAW,gBAAgB,IAAI,sBAAsB,YAAY;AACxE,qBAAW,aAAaA,cAAa,CAAE;AACvC,qBAAW,qBAAqB,oBAAoB,CAAE;AAAA,QAC1E,OACqB;AACD,qBAAW,aAAa,WAAW,cAAc,CAAE;AACnD,qBAAW,qBAAqB,WAAW,sBAAsB,CAAE;AAAA,QACvF;AAAA,MACA,SACmBC,IAAG;AAEN,mBAAW,aAAa,CAAE;AAC1B,mBAAW,qBAAqB,CAAE;AAAA,MAClD;AAAA,IACA;AAGQ,UAAM,UAAU;AAGhB,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,sBAAsB;AAAA,MAC9C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AAID,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,QAAI,OAAO,eAAe,UAAU;AAChC,WAAK,aAAa,WAAW,cAAc,KAAK;AAChD,WAAK,qBACD,WAAW,sBAAsB,KAAK;AAAA,IACtD;AACQ,SAAK,iBAAiB,WAAW;AAAA,EACzC;AAAA,EACI,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,WAAW;AACP,WAAO;AAAA,EACf;AAAA,EACI,IAAI,mBAAmB;AACnB,WAAO;AAAA,MACH,GAAG,MAAM;AAAA,MACT,YAAY,KAAK;AAAA,MACjB,oBAAoB,KAAK;AAAA,MACzB,gBAAgB,KAAK;AAAA,IACxB;AAAA,EACT;AACA;AAIO,SAAS,iBAAiBP,IAAG;AAChC,SAAOA,GAAE,SAAQ,MAAO;AAC5B;AAKO,MAAM,uBAAuB,iBAAiB;AAAA,EACjD,YAAY,QAAQ;AAChB,QAAI;AACJ,QAAI,OAAO,WAAW,UAAU;AAC5B,mBAAa;AAAA,QACT,SAAS;AAAA,QACT,YAAY,CAAE;AAAA,QACd,oBAAoB,CAAE;AAAA,QACtB,kBAAkB,CAAE;AAAA,MACvB;AAAA,IACb,WACiB,OAAO,qBAAqB,QAAW;AAC5C,mBAAa;AAAA,QACT,GAAG;AAAA,QACH,YAAY,OAAO,cAAc,CAAE;AAAA,QACnC,oBAAoB,CAAE;AAAA,QACtB,kBAAkB,CAAE;AAAA,QACpB,gBAAgB,OAAO,mBAAmB,SACpC,OAAO,iBACP;AAAA,MACT;AAAA,IACb,OACa;AACD,YAAM,YAAY,CAAE;AACpB,YAAM,mBAAmB,CAAE;AAC3B,iBAAW,iBAAiB,OAAO,kBAAkB;AACjD,YAAI,aAAa,CAAE;AACnB,YAAI;AACA,uBAAa,iBAAiB,cAAc,QAAQ,IAAI;AACxD,cAAI,eAAe,QACf,OAAO,eAAe,YACtB,MAAM,QAAQ,UAAU,GAAG;AAC3B,kBAAM,IAAI,MAAM,iCAAiC;AAAA,UACzE;AACoB,oBAAU,KAAK;AAAA,YACX,MAAM,cAAc,QAAQ;AAAA,YAC5B,MAAM;AAAA,YACN,IAAI,cAAc;AAAA,YAClB,MAAM;AAAA,UAC9B,CAAqB;AAAA,QACrB,SACuBO,IAAG;AACN,2BAAiB,KAAK;AAAA,YAClB,MAAM,cAAc;AAAA,YACpB,MAAM,cAAc;AAAA,YACpB,IAAI,cAAc;AAAA,YAClB,OAAO;AAAA,YACP,MAAM;AAAA,UAC9B,CAAqB;AAAA,QACrB;AAAA,MACA;AACY,mBAAa;AAAA,QACT,GAAG;AAAA,QACH,YAAY;AAAA,QACZ,oBAAoB;AAAA,QACpB,gBAAgB,OAAO,mBAAmB,SACpC,OAAO,iBACP;AAAA,MACT;AAAA,IACb;AAGQ,UAAM,UAAU;AAIhB,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,sBAAsB;AAAA,MAC9C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AAID,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,mBACD,WAAW,oBAAoB,KAAK;AACxC,SAAK,aAAa,WAAW,cAAc,KAAK;AAChD,SAAK,qBACD,WAAW,sBAAsB,KAAK;AAC1C,SAAK,iBAAiB,WAAW;AAAA,EACzC;AAAA,EACI,IAAI,aAAa;AAEb,WAAO;AAAA,MACH,GAAG,MAAM;AAAA,MACT,YAAY;AAAA,MACZ,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,IACrB;AAAA,EACT;AAAA,EACI,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,WAAW;AACP,WAAO;AAAA,EACf;AAAA,EACI,IAAI,mBAAmB;AACnB,WAAO;AAAA,MACH,GAAG,MAAM;AAAA,MACT,YAAY,KAAK;AAAA,MACjB,kBAAkB,KAAK;AAAA,MACvB,oBAAoB,KAAK;AAAA,MACzB,gBAAgB,KAAK;AAAA,IACxB;AAAA,EACT;AAAA,EACI,OAAO,OAAO;;AACV,UAAM,iBAAiB;AAAA,MACnB,SAAS,aAAa,KAAK,SAAS,MAAM,OAAO;AAAA,MACjD,mBAAmB,YAAY,KAAK,mBAAmB,MAAM,iBAAiB;AAAA,MAC9E,mBAAmB,YAAY,KAAK,mBAAmB,MAAM,iBAAiB;AAAA,MAC9E,kBAAkB,CAAE;AAAA,MACpB,IAAI,KAAK,MAAM,MAAM;AAAA,IACxB;AACD,QAAI,KAAK,qBAAqB,UAC1B,MAAM,qBAAqB,QAAW;AACtC,YAAM,eAAe,YAAY,KAAK,kBAAkB,MAAM,gBAAgB;AAC9E,UAAI,iBAAiB,UAAa,aAAa,SAAS,GAAG;AACvD,uBAAe,mBAAmB;AAAA,MAClD;AAAA,IACA;AACQ,QAAI,KAAK,mBAAmB,UACxB,MAAM,mBAAmB,QAAW;AACpC,YAAM,oBAAoB;AAAA,QACtB,MAAKC,OAAAH,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAG,IAA0C,WAAU,YACrDC,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,WAAU,WAAc;AAAA,UACnE,UAAQE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAD,IAA0C,UAAS,QACtDE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,UAAS;AAAA,QAC7E;AAAA,QACgB,MAAKE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAD,IAA0C,gBAC3C,YACAE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,gBACvC,WAAc;AAAA,UAClB,eAAaE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAD,IAA0C,eAAc,QAChEE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,eAAc;AAAA,QAClF;AAAA,QACgB,MAAKE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAD,IAA0C,oBAC3C,YACAE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,oBACvC,WAAc;AAAA,UAClB,mBAAiBE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,wBAArB,gBAAAD,IAA0C,mBAAkB,QACxEE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,wBAAtB,gBAAAD,IAA2C,mBAAkB;AAAA,QACtF;AAAA,MACa;AACD,YAAM,qBAAqB;AAAA,QACvB,MAAKE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,yBAArB,gBAAAD,IAA2C,WAAU,YACtDE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,yBAAtB,gBAAAD,IAA4C,WAAU,WAAc;AAAA,UACpE,UAAQE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,yBAArB,gBAAAD,IAA2C,UAAS,QACvDE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,yBAAtB,gBAAAD,IAA4C,UAAS;AAAA,QAC9E;AAAA,QACgB,MAAKE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,yBAArB,gBAAAD,IAA2C,eAC5C,YACAE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,yBAAtB,gBAAAD,IAA4C,eACxC,WAAc;AAAA,UAClB,cAAYE,OAAAC,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,yBAArB,gBAAAD,IAA2C,cAAa,QAC/DE,OAAAC,MAAA,MAAM,mBAAN,gBAAAA,IAAsB,yBAAtB,gBAAAD,IAA4C,cAAa;AAAA,QAClF;AAAA,MACa;AACD,YAAM,OAAO,KAAK,kBAAkB;AAAA,QAChC,cAAc;AAAA,QACd,eAAe;AAAA,QACf,cAAc;AAAA,MACjB;AACD,YAAM,QAAQ,MAAM,kBAAkB;AAAA,QAClC,cAAc;AAAA,QACd,eAAe;AAAA,QACf,cAAc;AAAA,MACjB;AACD,YAAM,iBAAiB;AAAA,QACnB,cAAc,KAAK,eAAe,MAAM;AAAA,QACxC,eAAe,KAAK,gBAAgB,MAAM;AAAA,QAC1C,cAAc,KAAK,eAAe,MAAM;AAAA;AAAA;AAAA,QAGxC,GAAI,OAAO,KAAK,iBAAiB,EAAE,SAAS,KAAK;AAAA,UAC7C,qBAAqB;AAAA,QACzC;AAAA,QACgB,GAAI,OAAO,KAAK,kBAAkB,EAAE,SAAS,KAAK;AAAA,UAC9C,sBAAsB;AAAA,QAC1C;AAAA,MACa;AACD,qBAAe,iBAAiB;AAAA,IAC5C;AACQ,WAAO,IAAI,eAAe,cAAc;AAAA,EAChD;AACA;AC3TO,MAAM,qBAAqB,YAAY;AAAA,EAC1C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,WAAW;AACP,WAAO;AAAA,EACf;AACA;ACPO,MAAM,sBAAsB,YAAY;AAAA,EAC3C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,WAAW;AACP,WAAO;AAAA,EACf;AACA;ACTO,SAAS,wBAAwB,OAAO,eAAe;AAC1D,QAAM,gBAAgB;AACtB,QAAM,UAAU,GAAG,MAAM,OAAO;AAAA;AAAA,4EAAiF,aAAa;AAAA;AAC9H,SAAO;AACX;ACNO,SAAS,YAAY,UAAU;AAClC,SAAO,CAAC,EAAE,YACN,OAAO,aAAa,YACpB,UAAU,YACV,SAAS,SAAS;AAC1B;AAMO,MAAM,kCAAkC,MAAM;AAAA,EACjD,YAAY,SAAS,QAAQ;AACzB,UAAM,OAAO;AACb,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,SAAS;AAAA,EACtB;AACA;ACbA,SAAS,gBAAgB,UAAU;AAC/B,MAAI,YAAY,QAAQ,GAAG;AACvB,WAAO;AAAA,EACf,WACa,OAAO,SAAS,OAAO,YAC5B,SAAS,SAAS,cAClB,OAAO,SAAS,aAAa,YAC7B,SAAS,aAAa,QACtB,eAAe,SAAS,YACxB,OAAO,SAAS,SAAS,cAAc,YACvC,UAAU,SAAS,YACnB,OAAO,SAAS,SAAS,SAAS,UAAU;AAE5C,WAAO;AAAA,MACH,IAAI,SAAS;AAAA,MACb,MAAM,KAAK,MAAM,SAAS,SAAS,SAAS;AAAA,MAC5C,MAAM,SAAS,SAAS;AAAA,MACxB,MAAM;AAAA,IACT;AAAA,EACT,OACS;AAED,WAAO;AAAA,EACf;AACA;AACA,SAAS,wBAAwB7C,IAAG;AAChC,SAAQ,OAAOA,OAAM,YACjBA,MAAK,QACLA,GAAE,OAAO,KACT,MAAM,QAAQA,GAAE,EAAE,KAClBA,GAAE,UAAU,QACZ,OAAOA,GAAE,WAAW;AAC5B;AACA,SAAS,4BAA4B,QAAQ;AACzC,MAAI;AACJ,MAAI;AAEJ,MAAI,wBAAwB,MAAM,GAAG;AACjC,UAAM,YAAY,OAAO,GAAG,GAAG,EAAE;AACjC,QAAI,cAAc,kBAAkB,cAAc,qBAAqB;AACnE,aAAO;AAAA,IACnB,WACiB,cAAc,eAAe,cAAc,kBAAkB;AAClE,aAAO;AAAA,IACnB,WACiB,cAAc,mBACnB,cAAc,sBAAsB;AACpC,aAAO;AAAA,IACnB,OACa;AACD,aAAO;AAAA,IACnB;AACQ,WAAO,OAAO;AAAA,EACtB,OACS;AACD,UAAM,EAAE,MAAM,eAAe,GAAG,YAAa,IAAG;AAChD,WAAO;AACP,WAAO;AAAA,EACf;AACI,MAAI,SAAS,WAAW,SAAS,QAAQ;AACrC,WAAO,IAAI,aAAa,IAAI;AAAA,EACpC,WACa,SAAS,QAAQ,SAAS,aAAa;AAC5C,UAAM,EAAE,YAAY,cAAc,GAAG,MAAO,IAAG;AAC/C,QAAI,CAAC,MAAM,QAAQ,YAAY,GAAG;AAC9B,aAAO,IAAI,UAAU,IAAI;AAAA,IACrC;AACQ,UAAM,aAAa,aAAa,IAAI,eAAe;AACnD,WAAO,IAAI,UAAU,EAAE,GAAG,OAAO,WAAU,CAAE;AAAA,EACrD,WACa,SAAS,UAAU;AACxB,WAAO,IAAI,cAAc,IAAI;AAAA,EACrC,WACa,SAAS,aAAa;AAC3B,WAAO,IAAI,cAAc;AAAA,MACrB,GAAG;AAAA,MACH,mBAAmB;AAAA,QACf,GAAG,KAAK;AAAA,QACR,iBAAiB;AAAA,MACpB;AAAA,IACb,CAAS;AAAA,EACT,WACa,SAAS,UAAU,kBAAkB,MAAM;AAChD,WAAO,IAAI,YAAY;AAAA,MACnB,GAAG;AAAA,MACH,SAAS,KAAK;AAAA,MACd,cAAc,KAAK;AAAA,MACnB,MAAM,KAAK;AAAA,IACvB,CAAS;AAAA,EACT,OACS;AACD,UAAM,QAAQ,wBAAwB,IAAI,MAAM;AAAA;AAAA,YAAyI,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC,EAAE,GAAG,0BAA0B;AACvP,UAAM;AAAA,EACd;AACA;AACO,SAAS,2BAA2B,aAAa;AACpD,MAAI,OAAO,gBAAgB,UAAU;AACjC,WAAO,IAAI,aAAa,WAAW;AAAA,EAC3C,WACa,cAAc,WAAW,GAAG;AACjC,WAAO;AAAA,EACf;AACI,MAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,UAAM,CAAC,MAAM,OAAO,IAAI;AACxB,WAAO,4BAA4B,EAAE,MAAM,SAAS;AAAA,EAC5D,WACa,wBAAwB,WAAW,GAAG;AAC3C,UAAM,EAAE,MAAM,MAAM,GAAG,KAAM,IAAG;AAChC,WAAO,4BAA4B,EAAE,GAAG,MAAM,KAAI,CAAE;AAAA,EAC5D,OACS;AACD,WAAO,4BAA4B,WAAW;AAAA,EACtD;AACA;AAKO,SAAS,gBAAgB+C,WAAU,cAAc,SAAS,WAAW,MAAM;AAC9E,QAAM,kBAAkB,CAAE;AAC1B,aAAWhD,MAAKgD,WAAU;AACtB,QAAI;AACJ,QAAIhD,GAAE,SAAU,MAAK,SAAS;AAC1B,aAAO;AAAA,IACnB,WACiBA,GAAE,SAAU,MAAK,MAAM;AAC5B,aAAO;AAAA,IACnB,WACiBA,GAAE,SAAU,MAAK,UAAU;AAChC,aAAO;AAAA,IACnB,WACiBA,GAAE,SAAU,MAAK,YAAY;AAClC,aAAO;AAAA,IACnB,WACiBA,GAAE,SAAU,MAAK,QAAQ;AAC9B,aAAO;AAAA,IACnB,WACiBA,GAAE,SAAU,MAAK,WAAW;AACjC,aAAOA,GAAE;AAAA,IACrB,OACa;AACD,YAAM,IAAI,MAAM,iCAAiCA,GAAE,SAAU,CAAA,EAAE;AAAA,IAC3E;AACQ,UAAM,UAAUA,GAAE,OAAO,GAAGA,GAAE,IAAI,OAAO;AACzC,UAAM,kBAAkB,OAAOA,GAAE,YAAY,WACvCA,GAAE,UACF,KAAK,UAAUA,GAAE,SAAS,MAAM,CAAC;AACvC,oBAAgB,KAAK,GAAG,IAAI,KAAK,OAAO,GAAG,eAAe,EAAE;AAAA,EACpE;AACI,SAAO,gBAAgB,KAAK,IAAI;AACpC;;;;;;;;AC/JA,WAAS,eAAe,UAAU,SAAS;AAEzC,QAAI,OAAO,YAAY,WAAW;AAChC,gBAAU,EAAE,SAAS,QAAS;AAAA,IAClC;AAEE,SAAK,oBAAoB,KAAK,MAAM,KAAK,UAAU,QAAQ,CAAC;AAC5D,SAAK,YAAY;AACjB,SAAK,WAAW,WAAW,CAAE;AAC7B,SAAK,gBAAgB,WAAW,QAAQ,gBAAgB;AACxD,SAAK,MAAM;AACX,SAAK,UAAU,CAAE;AACjB,SAAK,YAAY;AACjB,SAAK,oBAAoB;AACzB,SAAK,sBAAsB;AAC3B,SAAK,WAAW;AAChB,SAAK,kBAAkB;AACvB,SAAK,SAAS;AAEd,QAAI,KAAK,SAAS,SAAS;AACzB,WAAK,kBAAkB,KAAK,UAAU,MAAM,CAAC;AAAA,IACjD;AAAA,EACA;AACA,oBAAiB;AAEjB,iBAAe,UAAU,QAAQ,WAAW;AAC1C,SAAK,YAAY;AACjB,SAAK,YAAY,KAAK,kBAAkB,MAAM,CAAC;AAAA,EACjD;AAEA,iBAAe,UAAU,OAAO,WAAW;AACzC,QAAI,KAAK,UAAU;AACjB,mBAAa,KAAK,QAAQ;AAAA,IAC9B;AACE,QAAI,KAAK,QAAQ;AACf,mBAAa,KAAK,MAAM;AAAA,IAC5B;AAEE,SAAK,YAAkB,CAAE;AACzB,SAAK,kBAAkB;AAAA,EACxB;AAED,iBAAe,UAAU,QAAQ,SAAS,KAAK;AAC7C,QAAI,KAAK,UAAU;AACjB,mBAAa,KAAK,QAAQ;AAAA,IAC9B;AAEE,QAAI,CAAC,KAAK;AACR,aAAO;AAAA,IACX;AACE,QAAI,eAAc,oBAAI,KAAM,GAAC,QAAS;AACtC,QAAI,OAAO,cAAc,KAAK,mBAAmB,KAAK,eAAe;AACnE,WAAK,QAAQ,KAAK,GAAG;AACrB,WAAK,QAAQ,QAAQ,IAAI,MAAM,iCAAiC,CAAC;AACjE,aAAO;AAAA,IACX;AAEE,SAAK,QAAQ,KAAK,GAAG;AAErB,QAAI,UAAU,KAAK,UAAU,MAAO;AACpC,QAAI,YAAY,QAAW;AACzB,UAAI,KAAK,iBAAiB;AAExB,aAAK,QAAQ,OAAO,GAAG,KAAK,QAAQ,SAAS,CAAC;AAC9C,kBAAU,KAAK,gBAAgB,MAAM,EAAE;AAAA,MAC7C,OAAW;AACL,eAAO;AAAA,MACb;AAAA,IACA;AAEE,QAAI,OAAO;AACX,SAAK,SAAS,WAAW,WAAW;AAClC,WAAK;AAEL,UAAI,KAAK,qBAAqB;AAC5B,aAAK,WAAW,WAAW,WAAW;AACpC,eAAK,oBAAoB,KAAK,SAAS;AAAA,QAC/C,GAAS,KAAK,iBAAiB;AAEzB,YAAI,KAAK,SAAS,OAAO;AACrB,eAAK,SAAS,MAAO;AAAA,QAC/B;AAAA,MACA;AAEI,WAAK,IAAI,KAAK,SAAS;AAAA,IACxB,GAAE,OAAO;AAEV,QAAI,KAAK,SAAS,OAAO;AACrB,WAAK,OAAO,MAAO;AAAA,IACzB;AAEE,WAAO;AAAA,EACR;AAED,iBAAe,UAAU,UAAU,SAAS,IAAI,YAAY;AAC1D,SAAK,MAAM;AAEX,QAAI,YAAY;AACd,UAAI,WAAW,SAAS;AACtB,aAAK,oBAAoB,WAAW;AAAA,MAC1C;AACI,UAAI,WAAW,IAAI;AACjB,aAAK,sBAAsB,WAAW;AAAA,MAC5C;AAAA,IACA;AAEE,QAAI,OAAO;AACX,QAAI,KAAK,qBAAqB;AAC5B,WAAK,WAAW,WAAW,WAAW;AACpC,aAAK,oBAAqB;AAAA,MAChC,GAAO,KAAK,iBAAiB;AAAA,IAC7B;AAEE,SAAK,mBAAkB,oBAAI,KAAI,GAAG,QAAS;AAE3C,SAAK,IAAI,KAAK,SAAS;AAAA,EACxB;AAED,iBAAe,UAAU,MAAM,SAAS,IAAI;AAC1C,YAAQ,IAAI,0CAA0C;AACtD,SAAK,QAAQ,EAAE;AAAA,EAChB;AAED,iBAAe,UAAU,QAAQ,SAAS,IAAI;AAC5C,YAAQ,IAAI,4CAA4C;AACxD,SAAK,QAAQ,EAAE;AAAA,EAChB;AAED,iBAAe,UAAU,QAAQ,eAAe,UAAU;AAE1D,iBAAe,UAAU,SAAS,WAAW;AAC3C,WAAO,KAAK;AAAA,EACb;AAED,iBAAe,UAAU,WAAW,WAAW;AAC7C,WAAO,KAAK;AAAA,EACb;AAED,iBAAe,UAAU,YAAY,WAAW;AAC9C,QAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,aAAO;AAAA,IACX;AAEE,QAAI,SAAS,CAAE;AACf,QAAI,YAAY;AAChB,QAAI,iBAAiB;AAErB,aAASH,KAAI,GAAGA,KAAI,KAAK,QAAQ,QAAQA,MAAK;AAC5C,UAAI,QAAQ,KAAK,QAAQA,EAAC;AAC1B,UAAI,UAAU,MAAM;AACpB,UAAI,SAAS,OAAO,OAAO,KAAK,KAAK;AAErC,aAAO,OAAO,IAAI;AAElB,UAAI,SAAS,gBAAgB;AAC3B,oBAAY;AACZ,yBAAiB;AAAA,MACvB;AAAA,IACA;AAEE,WAAO;AAAA,EACR;;;;;;;;ACjKD,QAAI,iBAAiBoD,uBAA4B;AAEjD,YAAoB,YAAA,SAAS,SAAS;AACpC,UAAI,WAAW,QAAQ,SAAS,OAAO;AACvC,aAAO,IAAI,eAAe,UAAU;AAAA,QAChC,SAAS,YAAY,QAAQ,WAAW,QAAQ,YAAY;AAAA,QAC5D,OAAO,WAAW,QAAQ;AAAA,QAC1B,cAAc,WAAW,QAAQ;AAAA,MACvC,CAAG;AAAA,IACF;AAED,YAAmB,WAAA,SAAS,SAAS;AACnC,UAAI,mBAAmB,OAAO;AAC5B,eAAO,CAAE,EAAC,OAAO,OAAO;AAAA,MAC5B;AAEE,UAAI,OAAO;AAAA,QACT,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,YAAY,IAAI;AAAA,QAChB,YAAY;AAAA,QACZ,WAAW;AAAA,MACZ;AACD,eAAS,OAAO,SAAS;AACvB,aAAK,GAAG,IAAI,QAAQ,GAAG;AAAA,MAC3B;AAEE,UAAI,KAAK,aAAa,KAAK,YAAY;AACrC,cAAM,IAAI,MAAM,uCAAuC;AAAA,MAC3D;AAEE,UAAI,WAAW,CAAE;AACjB,eAASpD,KAAI,GAAGA,KAAI,KAAK,SAASA,MAAK;AACrC,iBAAS,KAAK,KAAK,cAAcA,IAAG,IAAI,CAAC;AAAA,MAC7C;AAEE,UAAI,WAAW,QAAQ,WAAW,CAAC,SAAS,QAAQ;AAClD,iBAAS,KAAK,KAAK,cAAcA,IAAG,IAAI,CAAC;AAAA,MAC7C;AAGE,eAAS,KAAK,SAASqD,IAAEC,IAAG;AAC1B,eAAOD,KAAIC;AAAA,MACf,CAAG;AAED,aAAO;AAAA,IACR;AAED,YAAA,gBAAwB,SAAS,SAAS,MAAM;AAC9C,UAAI,SAAU,KAAK,YACd,KAAK,OAAM,IAAK,IACjB;AAEJ,UAAI,UAAU,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK,IAAI,KAAK,QAAQ,OAAO,CAAC;AAC/F,gBAAU,KAAK,IAAI,SAAS,KAAK,UAAU;AAE3C,aAAO;AAAA,IACR;AAED,YAAA,OAAe,SAAS,KAAK,SAAS,SAAS;AAC7C,UAAI,mBAAmB,OAAO;AAC5B,kBAAU;AACV,kBAAU;AAAA,MACd;AAEE,UAAI,CAAC,SAAS;AACZ,kBAAU,CAAE;AACZ,iBAAS,OAAO,KAAK;AACnB,cAAI,OAAO,IAAI,GAAG,MAAM,YAAY;AAClC,oBAAQ,KAAK,GAAG;AAAA,UACxB;AAAA,QACA;AAAA,MACA;AAEE,eAAStD,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACvC,YAAI,SAAW,QAAQA,EAAC;AACxB,YAAI,WAAW,IAAI,MAAM;AAEzB,YAAI,MAAM,KAAI,SAAS,aAAauD,WAAU;AAC5C,cAAI,KAAW,QAAQ,UAAU,OAAO;AACxC,cAAI,OAAW,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AACtD,cAAI,WAAW,KAAK,IAAK;AAEzB,eAAK,KAAK,SAAS,KAAK;AACtB,gBAAI,GAAG,MAAM,GAAG,GAAG;AACjB;AAAA,YACV;AACQ,gBAAI,KAAK;AACP,wBAAU,CAAC,IAAI,GAAG,UAAW;AAAA,YACvC;AACQ,qBAAS,MAAM,MAAM,SAAS;AAAA,UACtC,CAAO;AAED,aAAG,QAAQ,WAAW;AACpB,YAAAA,UAAS,MAAM,KAAK,IAAI;AAAA,UAChC,CAAO;AAAA,QACP,GAAM,KAAK,KAAK,QAAQ;AACpB,YAAI,MAAM,EAAE,UAAU;AAAA,MAC1B;AAAA;;;;;;;;;AClGA,UAAiBH,eAAsB;;;;;;;ACCvC,QAAMI,SAAQJ,aAAgB;AAE9B,QAAM,mBAAmB;AAAA,IACxB;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,EACA;AAAA,EAED,MAAMK,oBAAmB,MAAM;AAAA,IAC9B,YAAY,SAAS;AACpB,YAAO;AAEP,UAAI,mBAAmB,OAAO;AAC7B,aAAK,gBAAgB;AACrB,SAAC,EAAC,QAAO,IAAI;AAAA,MAChB,OAAS;AACN,aAAK,gBAAgB,IAAI,MAAM,OAAO;AACtC,aAAK,cAAc,QAAQ,KAAK;AAAA,MACnC;AAEE,WAAK,OAAO;AACZ,WAAK,UAAU;AAAA,IACjB;AAAA,EACA;AAEA,QAAM,0BAA0B,CAAC,OAAO,eAAe,YAAY;AAElE,UAAM,cAAc,QAAQ,WAAW,gBAAgB;AAEvD,UAAM,gBAAgB;AACtB,UAAM,cAAc;AACpB,WAAO;AAAA,EACP;AAED,QAAM,iBAAiB,kBAAgB,iBAAiB,SAAS,YAAY;AAE7E,QAAMC,UAAS,CAAC,OAAO,YAAY,IAAI,QAAQ,CAAC,SAAS,WAAW;AACnE,cAAU;AAAA,MACT,iBAAiB,MAAM;AAAA,MAAE;AAAA,MACzB,SAAS;AAAA,MACT,GAAG;AAAA,IACH;AAED,UAAM,YAAYF,OAAM,UAAU,OAAO;AAEzC,cAAU,QAAQ,OAAM,kBAAiB;AACxC,UAAI;AACH,gBAAQ,MAAM,MAAM,aAAa,CAAC;AAAA,MAClC,SAAQ,OAAO;AACf,YAAI,EAAE,iBAAiB,QAAQ;AAC9B,iBAAO,IAAI,UAAU,0BAA0B,KAAK,kCAAkC,CAAC;AACvF;AAAA,QACJ;AAEG,YAAI,iBAAiBC,aAAY;AAChC,oBAAU,KAAM;AAChB,iBAAO,MAAM,aAAa;AAAA,QAC9B,WAAc,iBAAiB,aAAa,CAAC,eAAe,MAAM,OAAO,GAAG;AACxE,oBAAU,KAAM;AAChB,iBAAO,KAAK;AAAA,QAChB,OAAU;AACN,kCAAwB,OAAO,eAAe,OAAO;AAErD,cAAI;AACH,kBAAM,QAAQ,gBAAgB,KAAK;AAAA,UACnC,SAAQE,QAAO;AACf,mBAAOA,MAAK;AACZ;AAAA,UACL;AAEI,cAAI,CAAC,UAAU,MAAM,KAAK,GAAG;AAC5B,mBAAO,UAAU,WAAW;AAAA,UACjC;AAAA,QACA;AAAA,MACA;AAAA,IACA,CAAE;AAAA,EACF,CAAC;AAEDC,WAAA,UAAiBF;AAEjBE,WAAA,QAAA,UAAyBF;AAEzBE,WAAA,QAAA,aAA4BH;;;;;;;;;;;AClF5B,SAAO,eAAe,KAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACc,MAAA,UAAG;AACH,MAAe,UAAG;;;;;;;;ACJjC,SAAO,eAAe,KAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACc,MAAA,UAAG;AACH,MAAe,UAAG;;;;;;;;;;ACJjC,SAAO,eAAe,OAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACc,QAAA,UAAG;AACH,QAAe,UAAG;;;;;;;ACJjC,SAAO,eAAeI,YAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,aAAA,UAAG;AAClB,MAAI,SAAS,qDAA4C;AACzD,WAAS,uBAAuBlD,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAASmD,UAASC,OAAM;AACtB,WAAO,OAAOA,UAAS,YAAY,OAAO,QAAQ,KAAKA,KAAI;AAAA,EAC7D;AACeF,aAAe,UAAGC;;;;;;;ACTjC,SAAO,eAAeE,OAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,QAAA,UAAG;AAClB,MAAI,YAAY,wDAA+C;AAC/D,WAAS,uBAAuBrD,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAASsD,QAAMF,OAAM;AACnB,QAAI,EAAK,GAAA,UAAU,SAASA,KAAI,GAAG;AACjC,YAAM,UAAU,cAAc;AAAA,IAClC;AACE,QAAIG;AACJ,UAAMC,OAAM,IAAI,WAAW,EAAE;AAG7B,IAAAA,KAAI,CAAC,KAAKD,KAAI,SAASH,MAAK,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO;AAClD,IAAAI,KAAI,CAAC,IAAID,OAAM,KAAK;AACpB,IAAAC,KAAI,CAAC,IAAID,OAAM,IAAI;AACnB,IAAAC,KAAI,CAAC,IAAID,KAAI;AAGb,IAAAC,KAAI,CAAC,KAAKD,KAAI,SAASH,MAAK,MAAM,GAAG,EAAE,GAAG,EAAE,OAAO;AACnD,IAAAI,KAAI,CAAC,IAAID,KAAI;AAGb,IAAAC,KAAI,CAAC,KAAKD,KAAI,SAASH,MAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,IAAAI,KAAI,CAAC,IAAID,KAAI;AAGb,IAAAC,KAAI,CAAC,KAAKD,KAAI,SAASH,MAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,IAAAI,KAAI,CAAC,IAAID,KAAI;AAIb,IAAAC,KAAI,EAAE,KAAKD,KAAI,SAASH,MAAK,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,gBAAgB;AACnE,IAAAI,KAAI,EAAE,IAAID,KAAI,aAAc;AAC5B,IAAAC,KAAI,EAAE,IAAID,OAAM,KAAK;AACrB,IAAAC,KAAI,EAAE,IAAID,OAAM,KAAK;AACrB,IAAAC,KAAI,EAAE,IAAID,OAAM,IAAI;AACpB,IAAAC,KAAI,EAAE,IAAID,KAAI;AACd,WAAOC;AAAA,EACT;AACeH,QAAe,UAAGC;;;;;;;;ACzCjC,SAAO,eAAeG,aAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,cAAA,UAAG;AAClBA,cAAA,kBAA0B;AAC1B,MAAI,YAAY,wDAA+C;AAC/D,WAAS,uBAAuBzD,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAKnF,QAAM,YAAY,CAAE;AACpB,WAASX,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC5B,cAAU,MAAMA,KAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAAA,EAClD;AACA,WAAS,gBAAgBmE,MAAK,SAAS,GAAG;AAMxC,YAAQ,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,UAAUA,KAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAUA,KAAI,SAAS,EAAE,CAAC,IAAI,UAAUA,KAAI,SAAS,EAAE,CAAC,IAAI,UAAUA,KAAI,SAAS,EAAE,CAAC,IAAI,UAAUA,KAAI,SAAS,EAAE,CAAC,IAAI,UAAUA,KAAI,SAAS,EAAE,CAAC,IAAI,UAAUA,KAAI,SAAS,EAAE,CAAC,GAAG,YAAa;AAAA,EACpgB;AACA,WAASE,WAAUF,MAAK,SAAS,GAAG;AAClC,UAAMJ,QAAO,gBAAgBI,MAAK,MAAM;AAMxC,QAAI,EAAK,GAAA,UAAU,SAASJ,KAAI,GAAG;AACjC,YAAM,UAAU,6BAA6B;AAAA,IACjD;AACE,WAAOA;AAAA,EACT;AACeK,cAAe,UAAGC;;;;;;;;;ACnCjC,SAAO,eAAeC,KAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACDA,MAAA,UAAkBC;AAClB,MAAI,cAAc,uBAAuB,UAAsB;AAC/D,WAAS,uBAAuB5D,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,QAAM,YAAY,IAAI,WAAW,GAAG;AACpC,MAAI,UAAU,UAAU;AACxB,WAAS4D,QAAM;AACb,QAAI,UAAU,UAAU,SAAS,IAAI;AACnC,kBAAY,QAAQ,eAAe,SAAS;AAC5C,gBAAU;AAAA,IACd;AACE,WAAO,UAAU,MAAM,SAAS,WAAW,EAAE;AAAA,EAC/C;;;;;;;ACdA,SAAO,eAAeC,IAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,KAAA,UAAG;AAClB,MAAI,OAAO,mDAA0C;AACrD,MAAI,aAAsCC,iCAAA;AAC1C,WAAS,uBAAuB9D,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAMnF,MAAI;AACJ,MAAI;AAGJ,MAAI,aAAa;AACjB,MAAI,aAAa;AAGjB,WAAS+D,KAAG,SAAS,KAAK,QAAQ;AAChC,QAAI1E,KAAI,OAAO,UAAU;AACzB,UAAMsD,KAAI,OAAO,IAAI,MAAM,EAAE;AAC7B,cAAU,WAAW,CAAE;AACvB,QAAI,OAAO,QAAQ;AACnB,QAAI,WAAW,QAAQ;AAGvB,QAAI,CAAC,QAAQ,KAAK;AAChB,UAAI,CAAC,MAAM;AACT,eAAO;AAAA,MACb;AACI,UAAI,YAAY,MAAM;AACpB,mBAAW;AAAA,MACjB;AAAA,IACA;AAIE,QAAI,QAAQ,QAAQ,YAAY,MAAM;AACpC,YAAM,YAAY,QAAQ,WAAW,QAAQ,OAAO,KAAK,SAAU;AAGnE,UAAI,QAAQ,MAAM;AAChB,eAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;AAG1F,YAAI,CAAC,WAAW,CAAC,QAAQ,KAAK;AAE5B,eAAK,CAAC,KAAK;AAEX,oBAAU;AAAA,QAClB;AAAA,MACA;AAGI,UAAI,YAAY,MAAM;AAEpB,oBAAY,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK;AAChD,YAAI,cAAc,UAAa,CAAC,QAAQ,KAAK;AAC3C,sBAAY;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAME,QAAI,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ,KAAK,IAAK;AAIpE,QAAI,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ,aAAa;AAGvE,UAAMqB,MAAK,QAAQ,cAAc,QAAQ,cAAc;AAGvD,QAAIA,MAAK,KAAK,QAAQ,aAAa,QAAW;AAC5C,iBAAW,WAAW,IAAI;AAAA,IAC9B;AAIE,SAAKA,MAAK,KAAK,QAAQ,eAAe,QAAQ,UAAU,QAAW;AACjE,cAAQ;AAAA,IACZ;AAGE,QAAI,SAAS,KAAO;AAClB,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AACE,iBAAa;AACb,iBAAa;AACb,gBAAY;AAGZ,aAAS;AAGT,UAAM,OAAO,QAAQ,aAAa,MAAQ,SAAS;AACnD,IAAArB,GAAEtD,IAAG,IAAI,OAAO,KAAK;AACrB,IAAAsD,GAAEtD,IAAG,IAAI,OAAO,KAAK;AACrB,IAAAsD,GAAEtD,IAAG,IAAI,OAAO,IAAI;AACpB,IAAAsD,GAAEtD,IAAG,IAAI,KAAK;AAGd,UAAM,MAAM,QAAQ,aAAc,MAAQ;AAC1C,IAAAsD,GAAEtD,IAAG,IAAI,QAAQ,IAAI;AACrB,IAAAsD,GAAEtD,IAAG,IAAI,MAAM;AAGf,IAAAsD,GAAEtD,IAAG,IAAI,QAAQ,KAAK,KAAM;AAC5B,IAAAsD,GAAEtD,IAAG,IAAI,QAAQ,KAAK;AAGtB,IAAAsD,GAAEtD,IAAG,IAAI,aAAa,IAAI;AAG1B,IAAAsD,GAAEtD,IAAG,IAAI,WAAW;AAGpB,aAAS4E,KAAI,GAAGA,KAAI,GAAG,EAAEA,IAAG;AAC1B,MAAAtB,GAAEtD,KAAI4E,EAAC,IAAI,KAAKA,EAAC;AAAA,IACrB;AACE,WAAO,QAAO,GAAI,WAAW,iBAAiBtB,EAAC;AAAA,EACjD;AACekB,KAAe,UAAGE;;;;;;;;AChIjC,SAAO,eAAeG,QAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACDA,SAAA,UAAkBC;AAClB,MAAI,SAAS,qDAA4C;AACzD,MAAI,aAAsCL,iCAAA;AAC1C,WAAS,uBAAuB9D,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAQnF,WAASmE,SAAOf,OAAM;AACpB,UAAM,UAAU,OAAOA,UAAS,YAAe,GAAA,OAAO,SAASA,KAAI,IAAIA;AACvE,UAAM,UAAU,QAAQ,OAAO;AAC/B,WAAO,OAAOA,UAAS,YAAW,GAAI,WAAW,iBAAiB,OAAO,IAAI;AAAA,EAC/E;AAGA,WAAS,QAAQ,SAAS,YAAY,OAAO;AAC3C,WAAO,WAAW,IAAI,QAAQ,CAAC,IAAI,OAAS,IAAI,QAAQ,CAAC,KAAK,IAAI,KAAO,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,GAAG,KAAO,QAAQ,CAAC,IAAI,IAAM,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,CAAC;AAAA,EAC7d;;;;;;;;;ACvBA,SAAO,eAAegB,KAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACDA,MAAA,MAAcA,IAAA,MAAc;AAC5BA,MAAA,UAAkBC;AAClB,MAAI,aAAsC5B,iCAAA;AAC1C,MAAI,SAAS,qDAA4C;AACzD,WAAS,uBAAuBzC,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAAS,cAAcV,MAAK;AAC1B,IAAAA,OAAM,SAAS,mBAAmBA,IAAG,CAAC;AAEtC,UAAM,QAAQ,CAAE;AAChB,aAASD,KAAI,GAAGA,KAAIC,KAAI,QAAQ,EAAED,IAAG;AACnC,YAAM,KAAKC,KAAI,WAAWD,EAAC,CAAC;AAAA,IAChC;AACE,WAAO;AAAA,EACT;AACA,QAAM,MAAM+E,IAAW,MAAG;AAC1B,QAAME,OAAMF,IAAW,MAAG;AAC1B,WAASC,MAAI,MAAME,UAAS,UAAU;AACpC,aAAS,aAAa,OAAO,WAAW,KAAK,QAAQ;AACnD,UAAI;AACJ,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,cAAc,KAAK;AAAA,MACjC;AACI,UAAI,OAAO,cAAc,UAAU;AACjC,qBAAgB,GAAA,OAAO,SAAS,SAAS;AAAA,MAC/C;AACI,YAAM,aAAa,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,YAAY,IAAI;AACpG,cAAM,UAAU,kEAAkE;AAAA,MACxF;AAKI,UAAI,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM;AAC5C,YAAM,IAAI,SAAS;AACnB,YAAM,IAAI,OAAO,UAAU,MAAM;AACjC,cAAQ,SAAS,KAAK;AACtB,YAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAOA;AAC7B,YAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAO;AAC7B,UAAI,KAAK;AACP,iBAAS,UAAU;AACnB,iBAASlF,KAAI,GAAGA,KAAI,IAAI,EAAEA,IAAG;AAC3B,cAAI,SAASA,EAAC,IAAI,MAAMA,EAAC;AAAA,QACjC;AACM,eAAO;AAAA,MACb;AACI,cAAW,GAAA,WAAW,iBAAiB,KAAK;AAAA,IAChD;AAGE,QAAI;AACF,mBAAa,OAAO;AAAA,IACrB,SAAQ,KAAK;AAAA,IAAA;AAGd,iBAAa,MAAM;AACnB,iBAAa,MAAMiF;AACnB,WAAO;AAAA,EACT;;;;;;;;AC5DA,SAAO,eAAeE,KAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,MAAA,UAAG;AAClB,MAAI,cAAc,uBAAuB,UAAsB;AAC/D,WAAS,uBAAuBxE,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAASyE,MAAI,OAAO;AAClB,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAQ,OAAO,KAAK,KAAK;AAAA,IAC7B,WAAa,OAAO,UAAU,UAAU;AACpC,cAAQ,OAAO,KAAK,OAAO,MAAM;AAAA,IACrC;AACE,WAAO,YAAY,QAAQ,WAAW,KAAK,EAAE,OAAO,KAAK,EAAE,OAAQ;AAAA,EACrE;AACeD,MAAe,UAAGC;;;;;;;ACdjC,SAAO,eAAeC,IAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,KAAA,UAAG;AAClB,MAAItD,MAAK,mDAA0C;AACnD,MAAI,MAAM,mDAA0C;AACpD,WAAS,uBAAuBpB,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,QAAM2E,QAAK,GAAIvD,IAAG,SAAS,MAAM,IAAM,IAAI,OAAO;AACnCsD,KAAe,UAAGC;;;;;;;;;ACRjC,SAAO,eAAe,QAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACc,SAAA,UAAG;AAClB,MAAI,cAAc,uBAAuB,UAAsB;AAC/D,WAAS,uBAAuB3E,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACpE,SAAA,UAAkB;AAAA,IAC/B,YAAY,YAAY,QAAQ;AAAA;;;;;;;ACPlC,SAAO,eAAe4E,MAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,OAAA,UAAG;AAClB,MAAI,UAAU,sDAA6C;AAC3D,MAAI,OAAO,mDAA0C;AACrD,MAAI,aAAsCC,iCAAA;AAC1C,WAAS,uBAAuB7E,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAAS8E,IAAG,SAAS,KAAK,QAAQ;AAChC,QAAI,QAAQ,QAAQ,cAAc,CAAC,OAAO,CAAC,SAAS;AAClD,aAAO,QAAQ,QAAQ,WAAY;AAAA,IACvC;AACE,cAAU,WAAW,CAAE;AACvB,UAAM,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK,SAAU;AAG9D,SAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAC3B,SAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAG3B,QAAI,KAAK;AACP,eAAS,UAAU;AACnB,eAASzF,KAAI,GAAGA,KAAI,IAAI,EAAEA,IAAG;AAC3B,YAAI,SAASA,EAAC,IAAI,KAAKA,EAAC;AAAA,MAC9B;AACI,aAAO;AAAA,IACX;AACE,YAAW,GAAA,WAAW,iBAAiB,IAAI;AAAA,EAC7C;AACeuF,OAAe,UAAGE;;;;;;;;;AC7BjC,SAAO,eAAeC,MAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,OAAA,UAAG;AAClB,MAAI,cAAc,uBAAuB,UAAsB;AAC/D,WAAS,uBAAuB/E,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAASgF,OAAK,OAAO;AACnB,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAQ,OAAO,KAAK,KAAK;AAAA,IAC7B,WAAa,OAAO,UAAU,UAAU;AACpC,cAAQ,OAAO,KAAK,OAAO,MAAM;AAAA,IACrC;AACE,WAAO,YAAY,QAAQ,WAAW,MAAM,EAAE,OAAO,KAAK,EAAE,OAAQ;AAAA,EACtE;AACeD,OAAe,UAAGC;;;;;;;ACdjC,SAAO,eAAeC,IAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,KAAA,UAAG;AAClB,MAAI7D,MAAK,mDAA0C;AACnD,MAAI,OAAO,oDAA2C;AACtD,WAAS,uBAAuBpB,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,QAAMkF,QAAK,GAAI9D,IAAG,SAAS,MAAM,IAAM,KAAK,OAAO;AACpC6D,KAAe,UAAGC;;;;;;;;ACRjC,SAAO,eAAeC,IAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACDA,KAAA,UAAkBC;AAClB,MAAI,aAAsC3C,iCAAA;AAC1C,MAAIrB,MAAK,kDAAyC;AAClD,MAAI,SAAS,sDAA6C;AAC1D,WAAS,uBAAuBpB,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAQnF,WAASoF,KAAG,UAAU,CAAA,GAAI,KAAK,SAAS,GAAG;AAIzC,QAAI,YAAYhE,IAAG,SAAS;AAAA,MAC1B,GAAG;AAAA,MACH,KAAK;AAAA,IACT,GAAK,IAAI,WAAW,EAAE,CAAC;AAGrB,aAAY,GAAA,OAAO,SAAS,KAAK;AAGjC,QAAI,KAAK;AACP,eAAS/B,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,YAAI,SAASA,EAAC,IAAI,MAAMA,EAAC;AAAA,MAC/B;AACI,aAAO;AAAA,IACX;AACE,YAAW,GAAA,WAAW,iBAAiB,KAAK;AAAA,EAC9C;;;;;;;;ACnCA,SAAO,eAAegG,QAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACDA,SAAA,UAAkBC;AAClB,MAAI,SAAS,qDAA4C;AACzD,MAAI,aAAsCxB,iCAAA;AAC1C,WAAS,uBAAuB9D,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAQnF,WAASsF,SAAOlC,OAAM;AACpB,UAAM,UAAU,OAAOA,UAAS,YAAe,GAAA,OAAO,SAASA,KAAI,IAAIA;AACvE,UAAM,UAAU,QAAQ,OAAO;AAC/B,WAAO,OAAOA,UAAS,YAAW,GAAI,WAAW,iBAAiB,OAAO,IAAI;AAAA,EAC/E;AAGA,WAAS,QAAQ,SAAS;AACxB,WAAO,WAAW,IAAI,QAAQ,CAAC,IAAI,OAAS,IAAI,QAAQ,CAAC,KAAK,IAAI,KAAO,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,IAAI,QAAQ,CAAC,IAAI,IAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,GAAG,MAAQ,QAAQ,CAAC,IAAI,QAAS,IAAI,QAAQ,CAAC,IAAI,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAS,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,GAAG,QAAQ,EAAE,CAAC;AAAA,EAC7d;;;;;;;;ACvBA,SAAO,eAAemC,IAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,KAAA,UAAG;AAClB,MAAI,OAAO,mDAA0C;AACrD,MAAI,aAAsCzB,iCAAA;AAC1C,WAAS,uBAAuB9D,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AAoCnF,MAAI,UAAU;AACd,MAAI,WAAW;AACf,MAAI,SAAS;AACb,WAASwF,KAAG,SAAS,KAAK,QAAQ;AAChC,cAAU,WAAW,CAAE;AAGvB,QAAInG,KAAI,OAAO,UAAU;AACzB,UAAMsD,KAAI,OAAO,IAAI,WAAW,EAAE;AAGlC,UAAM,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK,SAAU;AAG9D,UAAM,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ,KAAK,IAAK;AAGtE,QAAI,MAAM,QAAQ,QAAQ,SAAY,QAAQ,MAAM;AAGpD,QAAI,UAAU;AACd,QAAI,SAAS;AAGb,QAAI,QAAQ,UAAU,QAAQ,UAAU,QAAW;AACjD,eAAS;AAGT,UAAI,QAAQ,MAAM;AAChB,kBAAU;AACV,iBAAS;AAAA,MACf;AAAA,IACA;AAGE,QAAI,QAAQ,MAAM;AAEhB,UAAI,MAAM,YAAY;AACpB,cAAM;AAAA,MACZ;AAGI,gBAAU,QAAQ,KAAK;AACvB,eAAS,MAAM;AAAA,IACnB;AAGE,QAAI,YAAY,QAAQ,WAAW,MAAM;AACvC,gBAAU,KAAK,CAAC,IAAI;AACpB,gBAAU,WAAW,IAAI,KAAK,CAAC;AAC/B,eAAS,KAAK,CAAC,IAAI;AACnB,eAAS,UAAU,IAAI,KAAK,CAAC;AAC7B,eAAS,UAAU,IAAI,KAAK,EAAE,MAAM;AAAA,IACxC;AAGE,QAAI,QAAQ,MAAQ,UAAU,QAAQ,MAAM;AAC1C,UAAI,EAAE,SAAS,QAAS;AACtB,iBAAS;AACT,YAAI,EAAE,UAAU,MAAO;AACrB,oBAAU;AAKV;AAAA,QACR;AAAA,MACA;AAAA,IACA,OAAS;AAGL,eAAS;AAAA,IACb;AACE,eAAW;AACX,cAAU;AAGV,IAAAA,GAAEtD,IAAG,IAAI,SAAS,gBAAgB;AAClC,IAAAsD,GAAEtD,IAAG,IAAI,SAAS,aAAc;AAChC,IAAAsD,GAAEtD,IAAG,IAAI,SAAS,WAAY;AAC9B,IAAAsD,GAAEtD,IAAG,IAAI,SAAS,QAAU;AAC5B,IAAAsD,GAAEtD,IAAG,IAAI,SAAS,MAAQ;AAC1B,IAAAsD,GAAEtD,IAAG,IAAI,SAAS;AAGlB,IAAAsD,GAAEtD,IAAG,IAAI,YAAY,IAAI,KAAO;AAGhC,IAAAsD,GAAEtD,IAAG,IAAI,UAAU;AAGnB,IAAAsD,GAAEtD,IAAG,IAAI,WAAW,KAAK,KAAO;AAGhC,IAAAsD,GAAEtD,IAAG,IAAI,WAAW,IAAI;AAGxB,IAAAsD,GAAEtD,IAAG,IAAI,UAAU,IAAI,MAAO,KAAK,EAAE,IAAI;AAGzC,IAAAsD,GAAEtD,IAAG,IAAI,KAAK,EAAE;AAChB,IAAAsD,GAAEtD,IAAG,IAAI,KAAK,EAAE;AAChB,IAAAsD,GAAEtD,IAAG,IAAI,KAAK,EAAE;AAChB,IAAAsD,GAAEtD,IAAG,IAAI,KAAK,EAAE;AAChB,IAAAsD,GAAEtD,IAAG,IAAI,KAAK,EAAE;AAChB,WAAO,QAAO,GAAI,WAAW,iBAAiBsD,EAAC;AAAA,EACjD;AACe4C,KAAe,UAAGC;;;;;;;;ACrJjC,SAAO,eAAeC,SAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACcA,UAAA,UAAG;AAClB,MAAI,YAAY,wDAA+C;AAC/D,WAAS,uBAAuBzF,IAAG;AAAE,WAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA;EAAI;AACnF,WAASuE,UAAQnB,OAAM;AACrB,QAAI,EAAK,GAAA,UAAU,SAASA,KAAI,GAAG;AACjC,YAAM,UAAU,cAAc;AAAA,IAClC;AACE,WAAO,SAASA,MAAK,MAAM,IAAI,EAAE,GAAG,EAAE;AAAA,EACxC;AACeqC,UAAe,UAAGlB;;;;;;;;ACZjC,WAAO,eAAwB,SAAA,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,WAAO,eAAe,SAAS,OAAO;AAAA,MACpC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,KAAK;AAAA,MAChB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,OAAO;AAAA,MACpC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,KAAK;AAAA,MAChB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,SAAS;AAAA,MACtC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,OAAO;AAAA,MAClB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,WAAW;AAAA,MACtB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAOnD,IAAG;AAAA,MACd;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,UAAU;AAAA,MACvC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,OAAO;AAAA,MAClB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAOsE,KAAI;AAAA,MACf;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,IAAI;AAAA,MACf;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,IAAI;AAAA,MACf;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,IAAI;AAAA,MACf;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,UAAU;AAAA,MACvC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,OAAO;AAAA,MAClB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,IAAI;AAAA,MACf;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,YAAY;AAAA,MACzC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,UAAU;AAAA,MACrB;AAAA,IACA,CAAC;AACD,WAAO,eAAe,SAAS,WAAW;AAAA,MACxC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,SAAS;AAAA,MACpB;AAAA,IACA,CAAC;AACD,QAAI,OAAO,mDAA0C;AACrD,QAAI,OAAO,mDAA0C;AACrD,QAAI,SAAS,qDAA4C;AACzD,QAAI,aAAa,yDAAgD;AACjE,QAAItE,MAAK,kDAAyC;AAClD,QAAI,SAAS,sDAA6C;AAC1D,QAAIsE,OAAM,kDAAyC;AACnD,QAAI,MAAM,kDAAyC;AACnD,QAAI,MAAM,kDAAyC;AACnD,QAAI,MAAM,kDAAyC;AACnD,QAAI,SAAS,sDAA6C;AAC1D,QAAI,MAAM,kDAAyC;AACnD,QAAI,YAAY,wDAA+C;AAC/D,QAAI,WAAW,uDAA8C;AAC7D,aAAS,uBAAuB1F,IAAG;AAAE,aAAOA,MAAKA,GAAE,aAAaA,KAAI,EAAE,SAASA,GAAG;AAAA,IAAC;AAAA;;;;;ACtGjE,KAAK;AACD,KAAK;AACT,KAAK;AAChB,MAAM,KAAK,KAAK;AACL,KAAK;AACL,KAAK;AACD,KAAK;AACT,KAAK;AACJ,KAAK;AACL,KAAK;AACD,KAAK;AACrB,MAAMmD,aAAW,KAAK;AACJ,KAAK;AACT,KAAK;;;;;;;;ACZ1B,QAAIwC,OAAM,OAAO,UAAU,gBACvB,SAAS;AASb,aAAS,SAAS;AAAA,IAAA;AASlB,QAAI,OAAO,QAAQ;AACjB,aAAO,YAAY,uBAAO,OAAO,IAAI;AAMrC,UAAI,CAAC,IAAI,OAAM,EAAG,UAAW,UAAS;AAAA,IACxC;AAWA,aAAS,GAAG,IAAI,SAAS,MAAM;AAC7B,WAAK,KAAK;AACV,WAAK,UAAU;AACf,WAAK,OAAO,QAAQ;AAAA,IACtB;AAaA,aAAS,YAAY,SAAS,OAAO,IAAI,SAAS,MAAM;AACtD,UAAI,OAAO,OAAO,YAAY;AAC5B,cAAM,IAAI,UAAU,iCAAiC;AAAA,MACzD;AAEE,UAAI,WAAW,IAAI,GAAG,IAAI,WAAW,SAAS,IAAI,GAC9C,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,QAAQ,QAAQ,GAAG,EAAG,SAAQ,QAAQ,GAAG,IAAI,UAAU,QAAQ;AAAA,eAC3D,CAAC,QAAQ,QAAQ,GAAG,EAAE,GAAI,SAAQ,QAAQ,GAAG,EAAE,KAAK,QAAQ;AAAA,UAChE,SAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ,QAAQ,GAAG,GAAG,QAAQ;AAE3D,aAAO;AAAA,IACT;AASA,aAAS,WAAW,SAAS,KAAK;AAChC,UAAI,EAAE,QAAQ,iBAAiB,EAAG,SAAQ,UAAU,IAAI,OAAQ;AAAA,UAC3D,QAAO,QAAQ,QAAQ,GAAG;AAAA,IACjC;AASA,aAAS,eAAe;AACtB,WAAK,UAAU,IAAI,OAAQ;AAC3B,WAAK,eAAe;AAAA,IACtB;AASA,iBAAa,UAAU,aAAa,SAAS,aAAa;AACxD,UAAI,QAAQ,CAAA,GACR,QACA;AAEJ,UAAI,KAAK,iBAAiB,EAAG,QAAO;AAEpC,WAAK,QAAS,SAAS,KAAK,SAAU;AACpC,YAAIA,KAAI,KAAK,QAAQ,IAAI,EAAG,OAAM,KAAK,SAAS,KAAK,MAAM,CAAC,IAAI,IAAI;AAAA,MACxE;AAEE,UAAI,OAAO,uBAAuB;AAChC,eAAO,MAAM,OAAO,OAAO,sBAAsB,MAAM,CAAC;AAAA,MAC5D;AAEE,aAAO;AAAA,IACR;AASD,iBAAa,UAAU,YAAY,SAAS,UAAU,OAAO;AAC3D,UAAI,MAAM,SAAS,SAAS,QAAQ,OAChC,WAAW,KAAK,QAAQ,GAAG;AAE/B,UAAI,CAAC,SAAU,QAAO,CAAE;AACxB,UAAI,SAAS,GAAI,QAAO,CAAC,SAAS,EAAE;AAEpC,eAAStG,KAAI,GAAGuG,KAAI,SAAS,QAAQC,MAAK,IAAI,MAAMD,EAAC,GAAGvG,KAAIuG,IAAGvG,MAAK;AAClE,QAAAwG,IAAGxG,EAAC,IAAI,SAASA,EAAC,EAAE;AAAA,MACxB;AAEE,aAAOwG;AAAA,IACR;AASD,iBAAa,UAAU,gBAAgB,SAAS,cAAc,OAAO;AACnE,UAAI,MAAM,SAAS,SAAS,QAAQ,OAChC,YAAY,KAAK,QAAQ,GAAG;AAEhC,UAAI,CAAC,UAAW,QAAO;AACvB,UAAI,UAAU,GAAI,QAAO;AACzB,aAAO,UAAU;AAAA,IAClB;AASD,iBAAa,UAAU,OAAO,SAAS,KAAK,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AACrE,UAAI,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,KAAK,QAAQ,GAAG,EAAG,QAAO;AAE/B,UAAI,YAAY,KAAK,QAAQ,GAAG,GAC5B,MAAM,UAAU,QAChB,MACAxG;AAEJ,UAAI,UAAU,IAAI;AAChB,YAAI,UAAU,KAAM,MAAK,eAAe,OAAO,UAAU,IAAI,QAAW,IAAI;AAE5E,gBAAQ,KAAG;AAAA,UACT,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,OAAO,GAAG;AAAA,UACrD,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,EAAE,GAAG;AAAA,UACzD,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,EAAE,GAAG;AAAA,UAC7D,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,EAAE,GAAG;AAAA,UACjE,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,IAAI,EAAE,GAAG;AAAA,UACrE,KAAK;AAAG,mBAAO,UAAU,GAAG,KAAK,UAAU,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG;AAAA,QAC/E;AAEI,aAAKA,KAAI,GAAG,OAAO,IAAI,MAAM,MAAK,CAAC,GAAGA,KAAI,KAAKA,MAAK;AAClD,eAAKA,KAAI,CAAC,IAAI,UAAUA,EAAC;AAAA,QAC/B;AAEI,kBAAU,GAAG,MAAM,UAAU,SAAS,IAAI;AAAA,MAC9C,OAAS;AACL,YAAI,SAAS,UAAU,QACnByG;AAEJ,aAAKzG,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC3B,cAAI,UAAUA,EAAC,EAAE,KAAM,MAAK,eAAe,OAAO,UAAUA,EAAC,EAAE,IAAI,QAAW,IAAI;AAElF,kBAAQ,KAAG;AAAA,YACT,KAAK;AAAG,wBAAUA,EAAC,EAAE,GAAG,KAAK,UAAUA,EAAC,EAAE,OAAO;AAAG;AAAA,YACpD,KAAK;AAAG,wBAAUA,EAAC,EAAE,GAAG,KAAK,UAAUA,EAAC,EAAE,SAAS,EAAE;AAAG;AAAA,YACxD,KAAK;AAAG,wBAAUA,EAAC,EAAE,GAAG,KAAK,UAAUA,EAAC,EAAE,SAAS,IAAI,EAAE;AAAG;AAAA,YAC5D,KAAK;AAAG,wBAAUA,EAAC,EAAE,GAAG,KAAK,UAAUA,EAAC,EAAE,SAAS,IAAI,IAAI,EAAE;AAAG;AAAA,YAChE;AACE,kBAAI,CAAC,KAAM,MAAKyG,KAAI,GAAG,OAAO,IAAI,MAAM,MAAK,CAAC,GAAGA,KAAI,KAAKA,MAAK;AAC7D,qBAAKA,KAAI,CAAC,IAAI,UAAUA,EAAC;AAAA,cACrC;AAEU,wBAAUzG,EAAC,EAAE,GAAG,MAAM,UAAUA,EAAC,EAAE,SAAS,IAAI;AAAA,UAC1D;AAAA,QACA;AAAA,MACA;AAEE,aAAO;AAAA,IACR;AAWD,iBAAa,UAAU,KAAK,SAAS,GAAG,OAAO,IAAI,SAAS;AAC1D,aAAO,YAAY,MAAM,OAAO,IAAI,SAAS,KAAK;AAAA,IACnD;AAWD,iBAAa,UAAU,OAAO,SAAS,KAAK,OAAO,IAAI,SAAS;AAC9D,aAAO,YAAY,MAAM,OAAO,IAAI,SAAS,IAAI;AAAA,IAClD;AAYD,iBAAa,UAAU,iBAAiB,SAAS,eAAe,OAAO,IAAI,SAAS,MAAM;AACxF,UAAI,MAAM,SAAS,SAAS,QAAQ;AAEpC,UAAI,CAAC,KAAK,QAAQ,GAAG,EAAG,QAAO;AAC/B,UAAI,CAAC,IAAI;AACP,mBAAW,MAAM,GAAG;AACpB,eAAO;AAAA,MACX;AAEE,UAAI,YAAY,KAAK,QAAQ,GAAG;AAEhC,UAAI,UAAU,IAAI;AAChB,YACE,UAAU,OAAO,OAChB,CAAC,QAAQ,UAAU,UACnB,CAAC,WAAW,UAAU,YAAY,UACnC;AACA,qBAAW,MAAM,GAAG;AAAA,QAC1B;AAAA,MACA,OAAS;AACL,iBAASA,KAAI,GAAG,SAAS,CAAA,GAAI,SAAS,UAAU,QAAQA,KAAI,QAAQA,MAAK;AACvE,cACE,UAAUA,EAAC,EAAE,OAAO,MACnB,QAAQ,CAAC,UAAUA,EAAC,EAAE,QACtB,WAAW,UAAUA,EAAC,EAAE,YAAY,SACrC;AACA,mBAAO,KAAK,UAAUA,EAAC,CAAC;AAAA,UAChC;AAAA,QACA;AAKI,YAAI,OAAO,OAAQ,MAAK,QAAQ,GAAG,IAAI,OAAO,WAAW,IAAI,OAAO,CAAC,IAAI;AAAA,YACpE,YAAW,MAAM,GAAG;AAAA,MAC7B;AAEE,aAAO;AAAA,IACR;AASD,iBAAa,UAAU,qBAAqB,SAAS,mBAAmB,OAAO;AAC7E,UAAI;AAEJ,UAAI,OAAO;AACT,cAAM,SAAS,SAAS,QAAQ;AAChC,YAAI,KAAK,QAAQ,GAAG,EAAG,YAAW,MAAM,GAAG;AAAA,MAC/C,OAAS;AACL,aAAK,UAAU,IAAI,OAAQ;AAC3B,aAAK,eAAe;AAAA,MACxB;AAEE,aAAO;AAAA,IACR;AAKD,iBAAa,UAAU,MAAM,aAAa,UAAU;AACpD,iBAAa,UAAU,cAAc,aAAa,UAAU;AAK5D,iBAAa,WAAW;AAKxB,iBAAa,eAAe;AAKO;AACjC,uBAAiB;AAAA,IACnB;AAAA;;;;;;;;;AC9UA,aAAiB,CAAC,SAAS,cAAc;AACxC,gBAAY,cAAc,MAAM;AAAA;AAEhC,WAAO,QAAQ;AAAA,MACd,SAAO,IAAI,QAAQ,aAAW;AAC7B,gBAAQ,UAAS,CAAE;AAAA,MACtB,CAAG,EAAE,KAAK,MAAM,GAAG;AAAA,MACjB,SAAO,IAAI,QAAQ,aAAW;AAC7B,gBAAQ,UAAS,CAAE;AAAA,MACtB,CAAG,EAAE,KAAK,MAAM;AACb,cAAM;AAAA,MACN,CAAA;AAAA,IACD;AAAA,EACD;;;;;;;ACZD,QAAM0G,YAAWtD,gBAAoB;AAAA,EAErC,MAAM,qBAAqB,MAAM;AAAA,IAChC,YAAY,SAAS;AACpB,YAAM,OAAO;AACb,WAAK,OAAO;AAAA,IACd;AAAA,EACA;AAEA,QAAMuD,aAAW,CAAC,SAAS,cAAc,aAAa,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtF,QAAI,OAAO,iBAAiB,YAAY,eAAe,GAAG;AACzD,YAAM,IAAI,UAAU,iDAAiD;AAAA,IACvE;AAEC,QAAI,iBAAiB,UAAU;AAC9B,cAAQ,OAAO;AACf;AAAA,IACF;AAEC,UAAM,QAAQ,WAAW,MAAM;AAC9B,UAAI,OAAO,aAAa,YAAY;AACnC,YAAI;AACH,kBAAQ,SAAQ,CAAE;AAAA,QAClB,SAAQ,OAAO;AACf,iBAAO,KAAK;AAAA,QAChB;AAEG;AAAA,MACH;AAEE,YAAM,UAAU,OAAO,aAAa,WAAW,WAAW,2BAA2B,YAAY;AACjG,YAAM,eAAe,oBAAoB,QAAQ,WAAW,IAAI,aAAa,OAAO;AAEpF,UAAI,OAAO,QAAQ,WAAW,YAAY;AACzC,gBAAQ,OAAQ;AAAA,MACnB;AAEE,aAAO,YAAY;AAAA,IACnB,GAAE,YAAY;AAGf,IAAAD;AAAA;AAAA,MAEC,QAAQ,KAAK,SAAS,MAAM;AAAA,MAC5B,MAAM;AACL,qBAAa,KAAK;AAAA,MACrB;AAAA,IACE;AAAA,EACF,CAAC;AAEDE,WAAA,UAAiBD;AAEjBC,WAAA,QAAA,UAAyBD;AAEzBC,WAAA,QAAA,eAA8B;;;;;;;;;ACvD9B,SAAO,eAAeC,YAAS,cAAc,EAAE,OAAO,MAAM;AAG5D,WAASC,aAAW,OAAO,OAAO,YAAY;AAC1C,QAAI,QAAQ;AACZ,QAAI,QAAQ,MAAM;AAClB,WAAO,QAAQ,GAAG;AACd,YAAM,OAAQ,QAAQ,IAAK;AAC3B,UAAIC,MAAK,QAAQ;AACjB,UAAI,WAAW,MAAMA,GAAE,GAAG,KAAK,KAAK,GAAG;AACnC,gBAAQ,EAAEA;AACV,iBAAS,OAAO;AAAA,MAC5B,OACa;AACD,gBAAQ;AAAA,MACpB;AAAA,IACA;AACI,WAAO;AAAA,EACX;AACAF,aAAA,UAAkBC;;;;;;;ACnBlB,SAAO,eAAe,eAAS,cAAc,EAAE,OAAO,MAAM;AAC5D,QAAM,gBAAgB1D,kBAAwB;AAAA,EAC9C,MAAM,cAAc;AAAA,IAChB,cAAc;AACV,WAAK,SAAS,CAAE;AAAA,IACxB;AAAA,IACI,QAAQ,KAAK,SAAS;AAClB,gBAAU,OAAO,OAAO,EAAE,UAAU,EAAG,GAAE,OAAO;AAChD,YAAM,UAAU;AAAA,QACZ,UAAU,QAAQ;AAAA,QAClB;AAAA,MACH;AACD,UAAI,KAAK,QAAQ,KAAK,OAAO,KAAK,OAAO,CAAC,EAAE,YAAY,QAAQ,UAAU;AACtE,aAAK,OAAO,KAAK,OAAO;AACxB;AAAA,MACZ;AACQ,YAAM,QAAQ,cAAc,QAAQ,KAAK,QAAQ,SAAS,CAACC,IAAGC,OAAMA,GAAE,WAAWD,GAAE,QAAQ;AAC3F,WAAK,OAAO,OAAO,OAAO,GAAG,OAAO;AAAA,IAC5C;AAAA,IACI,UAAU;AACN,YAAM,OAAO,KAAK,OAAO,MAAO;AAChC,aAAO,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAAA,IAChE;AAAA,IACI,OAAO,SAAS;AACZ,aAAO,KAAK,OAAO,OAAO,CAAC,YAAY,QAAQ,aAAa,QAAQ,QAAQ,EAAE,IAAI,CAAC,YAAY,QAAQ,GAAG;AAAA,IAClH;AAAA,IACI,IAAI,OAAO;AACP,aAAO,KAAK,OAAO;AAAA,IAC3B;AAAA,EACA;AACA,gBAAA,UAAkB;;;;;;;AC9BlB,SAAO,eAAe,MAAS,cAAc,EAAE,OAAO,MAAM;AAC5D,QAAM,eAAeD,qBAAwB;AAC7C,QAAM,cAAcqB,gBAAoB;AACxC,QAAM,mBAAmBe,qBAA2B;AAEpD,QAAM,QAAQ,MAAM;AAAA,EAAG;AACvB,QAAM,eAAe,IAAI,YAAY,aAAc;AAAA,EAInD,MAAM,eAAe,aAAa;AAAA,IAC9B,YAAY,SAAS;AACjB,UAAI/E,KAAIG,KAAIE,KAAID;AAChB,YAAO;AACP,WAAK,iBAAiB;AACtB,WAAK,eAAe;AACpB,WAAK,gBAAgB;AACrB,WAAK,gBAAgB;AACrB,WAAK,eAAe;AAEpB,gBAAU,OAAO,OAAO,EAAE,2BAA2B,OAAO,aAAa,UAAU,UAAU,GAAG,aAAa,UAAU,WAAW,MAAM,YAAY,iBAAiB,QAAS,GAAE,OAAO;AACvL,UAAI,EAAE,OAAO,QAAQ,gBAAgB,YAAY,QAAQ,eAAe,IAAI;AACxE,cAAM,IAAI,UAAU,iEAAiED,OAAMH,MAAK,QAAQ,iBAAiB,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAU,OAAM,QAAQG,QAAO,SAASA,MAAK,EAAE,OAAO,OAAO,QAAQ,WAAW,GAAG;AAAA,MAC5P;AACQ,UAAI,QAAQ,aAAa,UAAa,EAAE,OAAO,SAAS,QAAQ,QAAQ,KAAK,QAAQ,YAAY,IAAI;AACjG,cAAM,IAAI,UAAU,4DAA4DC,OAAMC,MAAK,QAAQ,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAU,OAAM,QAAQD,QAAO,SAASA,MAAK,EAAE,OAAO,OAAO,QAAQ,QAAQ,GAAG;AAAA,MACjP;AACQ,WAAK,6BAA6B,QAAQ;AAC1C,WAAK,qBAAqB,QAAQ,gBAAgB,YAAY,QAAQ,aAAa;AACnF,WAAK,eAAe,QAAQ;AAC5B,WAAK,YAAY,QAAQ;AACzB,WAAK,SAAS,IAAI,QAAQ,WAAY;AACtC,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,QAAQ;AAC3B,WAAK,WAAW,QAAQ;AACxB,WAAK,kBAAkB,QAAQ,mBAAmB;AAClD,WAAK,YAAY,QAAQ,cAAc;AAAA,IAC/C;AAAA,IACI,IAAI,4BAA4B;AAC5B,aAAO,KAAK,sBAAsB,KAAK,iBAAiB,KAAK;AAAA,IACrE;AAAA,IACI,IAAI,8BAA8B;AAC9B,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACzC;AAAA,IACI,QAAQ;AACJ,WAAK;AACL,WAAK,mBAAoB;AACzB,WAAK,KAAK,MAAM;AAAA,IACxB;AAAA,IACI,mBAAmB;AACf,WAAK,cAAe;AACpB,WAAK,gBAAgB;AACrB,UAAI,KAAK,kBAAkB,GAAG;AAC1B,aAAK,aAAc;AACnB,aAAK,eAAe;AACpB,aAAK,KAAK,MAAM;AAAA,MAC5B;AAAA,IACA;AAAA,IACI,oBAAoB;AAChB,WAAK,YAAa;AAClB,WAAK,4BAA6B;AAClC,WAAK,aAAa;AAAA,IAC1B;AAAA,IACI,oBAAoB;AAChB,YAAM,MAAM,KAAK,IAAK;AACtB,UAAI,KAAK,gBAAgB,QAAW;AAChC,cAAM,QAAQ,KAAK,eAAe;AAClC,YAAI,QAAQ,GAAG;AAGX,eAAK,iBAAkB,KAAK,6BAA8B,KAAK,gBAAgB;AAAA,QAC/F,OACiB;AAED,cAAI,KAAK,eAAe,QAAW;AAC/B,iBAAK,aAAa,WAAW,MAAM;AAC/B,mBAAK,kBAAmB;AAAA,YAC3B,GAAE,KAAK;AAAA,UAC5B;AACgB,iBAAO;AAAA,QACvB;AAAA,MACA;AACQ,aAAO;AAAA,IACf;AAAA,IACI,qBAAqB;AACjB,UAAI,KAAK,OAAO,SAAS,GAAG;AAGxB,YAAI,KAAK,aAAa;AAClB,wBAAc,KAAK,WAAW;AAAA,QAC9C;AACY,aAAK,cAAc;AACnB,aAAK,iBAAkB;AACvB,eAAO;AAAA,MACnB;AACQ,UAAI,CAAC,KAAK,WAAW;AACjB,cAAM,wBAAwB,CAAC,KAAK,kBAAmB;AACvD,YAAI,KAAK,6BAA6B,KAAK,6BAA6B;AACpE,gBAAM,MAAM,KAAK,OAAO,QAAS;AACjC,cAAI,CAAC,KAAK;AACN,mBAAO;AAAA,UAC3B;AACgB,eAAK,KAAK,QAAQ;AAClB,cAAK;AACL,cAAI,uBAAuB;AACvB,iBAAK,4BAA6B;AAAA,UACtD;AACgB,iBAAO;AAAA,QACvB;AAAA,MACA;AACQ,aAAO;AAAA,IACf;AAAA,IACI,8BAA8B;AAC1B,UAAI,KAAK,sBAAsB,KAAK,gBAAgB,QAAW;AAC3D;AAAA,MACZ;AACQ,WAAK,cAAc,YAAY,MAAM;AACjC,aAAK,YAAa;AAAA,MAC9B,GAAW,KAAK,SAAS;AACjB,WAAK,eAAe,KAAK,IAAK,IAAG,KAAK;AAAA,IAC9C;AAAA,IACI,cAAc;AACV,UAAI,KAAK,mBAAmB,KAAK,KAAK,kBAAkB,KAAK,KAAK,aAAa;AAC3E,sBAAc,KAAK,WAAW;AAC9B,aAAK,cAAc;AAAA,MAC/B;AACQ,WAAK,iBAAiB,KAAK,6BAA6B,KAAK,gBAAgB;AAC7E,WAAK,cAAe;AAAA,IAC5B;AAAA;AAAA;AAAA;AAAA,IAII,gBAAgB;AAEZ,aAAO,KAAK,sBAAsB;AAAA,MAAA;AAAA,IAC1C;AAAA,IACI,IAAI,cAAc;AACd,aAAO,KAAK;AAAA,IACpB;AAAA,IACI,IAAI,YAAY,gBAAgB;AAC5B,UAAI,EAAE,OAAO,mBAAmB,YAAY,kBAAkB,IAAI;AAC9D,cAAM,IAAI,UAAU,gEAAgE,cAAc,OAAO,OAAO,cAAc,GAAG;AAAA,MAC7I;AACQ,WAAK,eAAe;AACpB,WAAK,cAAe;AAAA,IAC5B;AAAA;AAAA;AAAA;AAAA,IAII,MAAM,IAAI,IAAI,UAAU,IAAI;AACxB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAM,MAAM,YAAY;AACpB,eAAK;AACL,eAAK;AACL,cAAI;AACA,kBAAM,YAAa,KAAK,aAAa,UAAa,QAAQ,YAAY,SAAa,GAAI,IAAG,YAAY,QAAQ,QAAQ,QAAQ,IAAI,GAAI,QAAQ,YAAY,SAAY,KAAK,WAAW,QAAQ,SAAU,MAAM;AAC1M,kBAAI,QAAQ,mBAAmB,SAAY,KAAK,kBAAkB,QAAQ,gBAAgB;AACtF,uBAAO,YAAY;AAAA,cAC/C;AACwB,qBAAO;AAAA,YAC/B,CAAqB;AACD,oBAAQ,MAAM,SAAS;AAAA,UAC3C,SACuB,OAAO;AACV,mBAAO,KAAK;AAAA,UAChC;AACgB,eAAK,MAAO;AAAA,QACf;AACD,aAAK,OAAO,QAAQ,KAAK,OAAO;AAChC,aAAK,mBAAoB;AACzB,aAAK,KAAK,KAAK;AAAA,MAC3B,CAAS;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMI,MAAM,OAAO,WAAW,SAAS;AAC7B,aAAO,QAAQ,IAAI,UAAU,IAAI,OAAO,cAAc,KAAK,IAAI,WAAW,OAAO,CAAC,CAAC;AAAA,IAC3F;AAAA;AAAA;AAAA;AAAA,IAII,QAAQ;AACJ,UAAI,CAAC,KAAK,WAAW;AACjB,eAAO;AAAA,MACnB;AACQ,WAAK,YAAY;AACjB,WAAK,cAAe;AACpB,aAAO;AAAA,IACf;AAAA;AAAA;AAAA;AAAA,IAII,QAAQ;AACJ,WAAK,YAAY;AAAA,IACzB;AAAA;AAAA;AAAA;AAAA,IAII,QAAQ;AACJ,WAAK,SAAS,IAAI,KAAK,YAAa;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMI,MAAM,UAAU;AAEZ,UAAI,KAAK,OAAO,SAAS,GAAG;AACxB;AAAA,MACZ;AACQ,aAAO,IAAI,QAAQ,aAAW;AAC1B,cAAM,kBAAkB,KAAK;AAC7B,aAAK,gBAAgB,MAAM;AACvB,0BAAiB;AACjB,kBAAS;AAAA,QACZ;AAAA,MACb,CAAS;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMI,MAAM,SAAS;AAEX,UAAI,KAAK,kBAAkB,KAAK,KAAK,OAAO,SAAS,GAAG;AACpD;AAAA,MACZ;AACQ,aAAO,IAAI,QAAQ,aAAW;AAC1B,cAAM,kBAAkB,KAAK;AAC7B,aAAK,eAAe,MAAM;AACtB,0BAAiB;AACjB,kBAAS;AAAA,QACZ;AAAA,MACb,CAAS;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAII,IAAI,OAAO;AACP,aAAO,KAAK,OAAO;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMI,OAAO,SAAS;AAEZ,aAAO,KAAK,OAAO,OAAO,OAAO,EAAE;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA,IAII,IAAI,UAAU;AACV,aAAO,KAAK;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA,IAII,IAAI,WAAW;AACX,aAAO,KAAK;AAAA,IACpB;AAAA,IACI,IAAI,UAAU;AACV,aAAO,KAAK;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA,IAII,IAAI,QAAQ,cAAc;AACtB,WAAK,WAAW;AAAA,IACxB;AAAA,EACA;AACA,OAAA,UAAkB;;;;;AClRlB,MAAM,+BAA+B,IAAI,SAAS,MAAM,GAAG,IAAI;AAC/D,MAAM,qCAAqC,OAAO,IAAI,yBAAyB;AAaxE,MAAM,0BAA0B,MAAM;AACzC,SAAQ,WAAW,kCAAkC,KACjD;AACR;AClBA,MAAMmG,oBAAkB;AAAA,EACpB;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AACJ;AACA,MAAM,gBAAgB;AAAA,EAClB;AAAA;AACJ;AAcO,IAAA,gBAAA,MAAM,YAAY;AAAA,EACrB,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,wBAAwB;AAAA,MAChD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,iBAAiB,OAAO,kBAAkB;AAC/C,SAAK,aAAa,OAAO,cAAc;AACvC,QAAI,aAAa,WAAW;AAExB,WAAK,QAAQ,IAAI,UAAU,QAAQ;AAAA,QAC/B,aAAa,KAAK;AAAA,MAClC,CAAa;AAAA,IACb,OACa;AAED,WAAK,QAAQ,IAAI,UAAU,EAAE,aAAa,KAAK,gBAAgB;AAAA,IAC3E;AACQ,SAAK,uBAAuB,iCAAQ;AAAA,EAC5C;AAAA;AAAA,EAEI,KAAK,aAAa,MAAM;AACpB,UAAM,uBAAuB,KAAK;AAClC,WAAO,KAAK,MAAM,IAAI,MAAM,OAAO,MAAM,SAAS,GAAG,IAAI,EAAE,MAAM,CAAC,UAAU;AAExE,UAAI,iBAAiB,OAAO;AACxB,cAAM;AAAA,MACtB,OACiB;AACD,cAAM,IAAI,MAAM,KAAK;AAAA,MACrC;AAAA,IACA,CAAS,GAAG;AAAA,MACA,MAAM,gBAAgB,OAAO;AACzB,YAAI,MAAM,QAAQ,WAAW,QAAQ,KACjC,MAAM,QAAQ,WAAW,cAAc,KACvC,MAAM,QAAQ,WAAW,YAAY,GAAG;AACxC,gBAAM;AAAA,QAC1B;AAEgB,aAAI,+BAAO,UAAS,gBAAgB;AAChC,gBAAM;AAAA,QAC1B;AAEgB,cAAM,WAAW,+BAAO;AACxB,cAAM,SAAS,qCAAU;AACzB,YAAI,QAAQ;AACR,cAAIA,kBAAgB,SAAS,CAAC,MAAM,GAAG;AACnC,kBAAM;AAAA,UAC9B,WAC6B,cAAc,SAAS,CAAC,MAAM,GAAG;AACtC;AAAA,UACxB;AACoB,cAAI,sBAAsB;AACtB,kBAAM,qBAAqB,QAAQ;AAAA,UAC3D;AAAA,QACA;AAAA,MACa;AAAA;AAAA;AAAA,MAGD,SAAS,KAAK;AAAA,MACd,WAAW;AAAA,IACvB,CAAS,GAAG,EAAE,gBAAgB,MAAM;AAAA,EACpC;AAAA;AAAA,EAEI,gBAAgB,SAAS,aAAa,MAAM;AAGxC,QAAI,QAAQ,QAAQ;AAChB,aAAO,QAAQ,KAAK;AAAA,QAChB,KAAK,KAAK,UAAU,GAAG,IAAI;AAAA,QAC3B,IAAI,QAAQ,CAAC9G,IAAG,WAAW;;AACvB,WAAAO,MAAA,QAAQ,WAAR,gBAAAA,IAAgB,iBAAiB,SAAS,MAAM;AAC5C,mBAAO,IAAI,MAAM,YAAY,CAAC;AAAA,UACtD;AAAA,QACA,CAAiB;AAAA,MACjB,CAAa;AAAA,IACb;AACQ,WAAO,KAAK,KAAK,UAAU,GAAG,IAAI;AAAA,EAC1C;AAAA,EACI,SAAS,MAAM;AACX,WAAO,KAAK,KAAK,MAAM,wBAAuB,EAAG,GAAG,IAAI,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,MAAM,QAAQ,OAAO,GAAG,CAAC,CAAC;AAAA,EACnH;AACA;ACnIO,SAAS,mBAEhB,SAAS;AACL,SAAO,QAAO,mCAAS,cAAa;AACxC;AACO,SAAS,iCAAiC,SAAS;AACtD,QAAM,YAAY;AAAA,IACd,MAAM,QAAQ,SAAU;AAAA,IACxB,MAAM,EAAE,SAAS,QAAQ,QAAS;AAAA,EACrC;AAED,OAAI,mCAAS,sBACT,OAAO,KAAK,QAAQ,iBAAiB,EAAE,SAAS,GAAG;AACnD,cAAU,KAAK,oBAAoB,EAAE,GAAG,QAAQ,kBAAmB;AAAA,EAC3E;AACI,SAAO;AACX;ACfO,SAAS,WAAWR,MAAK,OAAO;AACnC,MAAI,CAACgH,WAAchH,IAAG,GAAG;AACrB,UAAM,MAAM,UAAU,SAChB,oBAAoB,KAAK,KAAKA,IAAG,KACjC,iBAAiBA,IAAG;AAC1B,UAAM,IAAI,MAAM,GAAG;AAAA,EAC3B;AACI,SAAOA;AACX;ACTA,MAAM,iBAAiB,CAAE;AAClB,SAAS,SAAS,SAAS;AAC9B,MAAI,CAAC,eAAe,OAAO,GAAG;AAC1B,YAAQ,KAAK,OAAO;AACpB,mBAAe,OAAO,IAAI;AAAA,EAClC;AACA;ACGO,SAAS,sBAAsB,YAAY;AAC9C,MAAI,CAAC,cACD,WAAW,MAAM,GAAG,EAAE,SAAS,KAC/B,WAAW,WAAW,GAAG,KACzB,WAAW,SAAS,GAAG,KACvB,WAAW,MAAM,GAAG,EAAE,SAAS,GAAG;AAClC,UAAM,IAAI,MAAM,8BAA8B,UAAU,EAAE;AAAA,EAClE;AACI,QAAM,CAAC,eAAe,UAAU,IAAI,WAAW,MAAM,GAAG;AACxD,QAAM,SAAS,cAAc;AAC7B,MAAI,cAAc,SAAS,GAAG,GAAG;AAC7B,UAAM,CAAC,OAAO,IAAI,IAAI,cAAc,MAAM,KAAK,CAAC;AAChD,QAAI,CAAC,SAAS,CAAC,MAAM;AACjB,YAAM,IAAI,MAAM,8BAA8B,UAAU,EAAE;AAAA,IACtE;AACQ,WAAO,CAAC,OAAO,MAAM,MAAM;AAAA,EACnC,OACS;AACD,QAAI,CAAC,eAAe;AAChB,YAAM,IAAI,MAAM,8BAA8B,UAAU,EAAE;AAAA,IACtE;AACQ,WAAO,CAAC,KAAK,eAAe,MAAM;AAAA,EAC1C;AACA;ACoBO,MAAM,+BAA+B,MAAM;AAAA,EAC9C,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACpB;AACA;AASO,eAAe,eAAe,UAAU,SAAS,SAAS;AAG7D,MAAI;AACJ,MAAI,SAAS,IAAI;AACb,QAAI,SAAS;AACT,kBAAY,MAAM,SAAS,KAAM;AAAA,IAC7C;AACQ;AAAA,EACR;AACI,cAAY,MAAM,SAAS,KAAM;AACjC,QAAM,cAAc,aAAa,OAAO,sBAAsB,SAAS,MAAM,MAAM,SAAS,UAAU,sBAAsB,SAAS;AACrI,MAAI,SAAS,WAAW,KAAK;AACzB,UAAM,IAAI,uBAAuB,WAAW;AAAA,EACpD;AACI,QAAM,IAAI,MAAM,WAAW;AAC/B;AChFA,IAAI,qBAAqB;AACzB,IAAI,wBAAwB,EAAE,QAAQ,aAAc;AACpD,IAAI,MAAM,CAAE;AACZ,IAAI,gBAAgB,CAAE;AACtB,SAASiH,mBAAiB;AACtB,SAAO;AAAA,IACH,YAAY,OAAO;AAAA,IACnB,YAAY,OAAO;AAAA,EACtB;AACL;AAEO,SAAS7C,YAAU,KAAK,UAAU,QAAQ,SAAS;;AACtD,MAAI;AACA,WAAO,KAAK,UAAU,KAAK,UAAU,MAAM;AAAA,EACnD,SACW1D,IAAG;AAEN,QAAI,GAACF,MAAAE,GAAE,YAAF,gBAAAF,IAAW,SAAS,2CAA0C;AAC/D,cAAQ,KAAK,qDAAqD;AAClE,aAAO;AAAA,IACnB;AACQ,YAAQ,KAAK,qFAAqF;AAClG,QAAI,OAAO,YAAY,aAAa;AAChC,gBAAUyG,iBAAgB;AAAA,IACtC;AACQ,WAAO,KAAK,IAAI,GAAG,CAAA,GAAI,QAAW,GAAG,OAAO;AAC5C,QAAI;AACJ,QAAI;AACA,UAAI,cAAc,WAAW,GAAG;AAC5B,cAAM,KAAK,UAAU,KAAK,UAAU,MAAM;AAAA,MAC1D,OACiB;AACD,cAAM,KAAK,UAAU,KAAK,oBAAoB,QAAQ,GAAG,MAAM;AAAA,MAC/E;AAAA,IACA,SACehH,IAAG;AACN,aAAO,KAAK,UAAU,qEAAqE;AAAA,IACvG,UACgB;AACJ,aAAO,IAAI,WAAW,GAAG;AACrB,YAAI,OAAO,IAAI,IAAK;AACpB,YAAI,KAAK,WAAW,GAAG;AACnB,iBAAO,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QACnE,OACqB;AACD,eAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC;AAAA,QAC7C;AAAA,MACA;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AACA;AACA,SAAS,WAAW,SAAS,KAAKiH,IAAG,QAAQ;AACzC,MAAI,qBAAqB,OAAO,yBAAyB,QAAQA,EAAC;AAClE,MAAI,mBAAmB,QAAQ,QAAW;AACtC,QAAI,mBAAmB,cAAc;AACjC,aAAO,eAAe,QAAQA,IAAG,EAAE,OAAO,SAAS;AACnD,UAAI,KAAK,CAAC,QAAQA,IAAG,KAAK,kBAAkB,CAAC;AAAA,IACzD,OACa;AACD,oBAAc,KAAK,CAAC,KAAKA,IAAG,OAAO,CAAC;AAAA,IAChD;AAAA,EACA,OACS;AACD,WAAOA,EAAC,IAAI;AACZ,QAAI,KAAK,CAAC,QAAQA,IAAG,GAAG,CAAC;AAAA,EACjC;AACA;AACA,SAAS,OAAO,KAAKA,IAAG,WAAW,OAAO,QAAQ,OAAO,SAAS;AAC9D,WAAS;AACT,MAAInH;AACJ,MAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AACzC,SAAKA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AAC/B,UAAI,MAAMA,EAAC,MAAM,KAAK;AAClB,mBAAW,uBAAuB,KAAKmH,IAAG,MAAM;AAChD;AAAA,MAChB;AAAA,IACA;AACQ,QAAI,OAAO,QAAQ,eAAe,eAC9B,QAAQ,QAAQ,YAAY;AAC5B,iBAAW,oBAAoB,KAAKA,IAAG,MAAM;AAC7C;AAAA,IACZ;AACQ,QAAI,OAAO,QAAQ,eAAe,eAC9B,YAAY,IAAI,QAAQ,YAAY;AACpC,iBAAW,oBAAoB,KAAKA,IAAG,MAAM;AAC7C;AAAA,IACZ;AACQ,UAAM,KAAK,GAAG;AAEd,QAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,WAAKnH,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AAC7B,eAAO,IAAIA,EAAC,GAAGA,IAAGA,IAAG,OAAO,KAAK,OAAO,OAAO;AAAA,MAC/D;AAAA,IACA,OACa;AACD,UAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,WAAKA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAC9B,YAAI,MAAM,KAAKA,EAAC;AAChB,eAAO,IAAI,GAAG,GAAG,KAAKA,IAAG,OAAO,KAAK,OAAO,OAAO;AAAA,MACnE;AAAA,IACA;AACQ,UAAM,IAAK;AAAA,EACnB;AACA;AAmGA,SAAS,oBAAoB,UAAU;AACnC,aACI,OAAO,aAAa,cACd,WACA,SAAUmH,IAAGjD,IAAG;AACd,WAAOA;AAAA,EACV;AACT,SAAO,SAAU,KAAK,KAAK;AACvB,QAAI,cAAc,SAAS,GAAG;AAC1B,eAASlE,KAAI,GAAGA,KAAI,cAAc,QAAQA,MAAK;AAC3C,YAAI,OAAO,cAAcA,EAAC;AAC1B,YAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AACpC,gBAAM,KAAK,CAAC;AACZ,wBAAc,OAAOA,IAAG,CAAC;AACzB;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AACQ,WAAO,SAAS,KAAK,MAAM,KAAK,GAAG;AAAA,EACtC;AACL;ACtNO,SAAS,6BAA6B,KAAK;AAC9C,QAAM,aAAaoH,wBAAuB;AAC1C,QAAM,UAAU,4BAA6B;AAC7C,QAAM,QAAQ,IAAI,SAAS,CAAE;AAC7B,QAAM,WAAW,MAAM;AACvB,MAAI,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,SAAS;AAAA,MACL,GAAG;AAAA,MACH,GAAG,+BAAO;AAAA,IACb;AAAA,IACD,UAAU;AAAA,MACN,GAAG;AAAA,MACH,GAAI,QAAQ,eAAe,IAAI,cACzB,EAAE,aAAa,IAAI,eAAe,QAAQ,YAAW,IACrD;MACN,GAAG;AAAA,IACN;AAAA,EACJ;AACD,SAAO;AACX;AACA,MAAM,yBAAyB,MAAM;AACjC,QAAM,kBAAkB,gCAAgC,uBAAuB;AAC/E,MAAI,oBAAoB,QAAW;AAC/B,WAAO;AAAA,EACf;AACI,QAAM,eAAe,WAAW,eAAe;AAC/C,MAAI,eAAe,KAAK,eAAe,GAAG;AACtC,UAAM,IAAI,MAAM,wEAAwE,YAAY,EAAE;AAAA,EAC9G;AACI,SAAO;AACX;AAEA,MAAM,cAAc,CAAC,QAAQ;AACzB,QAAM,cAAc,IAAI,QAAQ,WAAW,EAAE,EAAE,QAAQ,YAAY,EAAE;AACrE,QAAM,WAAW,YAAY,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC;AACvD,SAAQ,aAAa,eAAe,aAAa,eAAe,aAAa;AACjF;AACA,eAAe,QAAQ,UAAU;AAC7B,QAAM,SAAS,CAAE;AACjB,mBAAiB,QAAQ,UAAU;AAC/B,WAAO,KAAK,IAAI;AAAA,EACxB;AACI,SAAO;AACX;AACA,SAAS,WAAWnH,MAAK;AACrB,MAAIA,SAAQ,QAAW;AACnB,WAAO;AAAA,EACf;AACI,SAAOA,KACF,KAAI,EACJ,QAAQ,YAAY,IAAI,EACxB,QAAQ,YAAY,IAAI;AACjC;AACA,MAAM,YAAY,OAAO,aAAa;AAClC,OAAI,qCAAU,YAAW,KAAK;AAC1B,UAAM,aAAa,SAAS,SAAS,QAAQ,IAAI,aAAa,KAAK,MAAM,EAAE,IAAI;AAC/E,QAAI,aAAa,GAAG;AAChB,YAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,UAAU,CAAC;AAE9D,aAAO;AAAA,IACnB;AAAA,EACA;AAEI,SAAO;AACX;AACO,MAAM,eAAe;AAAA,EACxB,cAAc;AACV,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,OAAO;AACH,WAAO,KAAK,MAAM,CAAC;AAAA,EAC3B;AAAA,EACI,KAAK,MAAM;AACP,QAAI;AACJ,UAAM,cAAc,IAAI,QAAQ,CAAC,YAAY;AAGzC,2BAAqB;AAAA,IACjC,CAAS;AACD,UAAM,OAAOoH,YAAoB,KAAK,IAAI,EAAE;AAC5C,SAAK,MAAM,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,SAAS,KAAK;AAAA;AAAA,MAEd;AAAA,MACA;AAAA,MACA;AAAA,IACZ,CAAS;AACD,SAAK,aAAa;AAClB,WAAO;AAAA,EACf;AAAA,EACI,IAAI,eAAe;;AACf,QAAI,gBAAgB,GAAG;AACnB,YAAM,IAAI,MAAM,oDAAoD;AAAA,IAChF;AACQ,UAAM,SAAS,CAAE;AACjB,QAAI,kBAAkB;AAEtB,WAAO,qBAAmB5G,MAAA,KAAK,KAAM,MAAX,gBAAAA,IAAa,SAAQ,KAAK,iBAChD,KAAK,MAAM,SAAS,GAAG;AACvB,YAAM,OAAO,KAAK,MAAM,MAAO;AAC/B,UAAI,MAAM;AACN,eAAO,KAAK,IAAI;AAChB,2BAAmB,KAAK;AACxB,aAAK,aAAa,KAAK;AAAA,MACvC;AAAA,IACA;AAGQ,QAAI,OAAO,WAAW,KAAK,KAAK,MAAM,SAAS,GAAG;AAC9C,YAAM,OAAO,KAAK,MAAM,MAAO;AAC/B,aAAO,KAAK,IAAI;AAChB,yBAAmB,KAAK;AACxB,WAAK,aAAa,KAAK;AAAA,IACnC;AACQ,WAAO;AAAA,MACH,OAAO,IAAI,CAACsG,SAAQ,EAAE,QAAQA,IAAG,QAAQ,MAAMA,IAAG,QAAS,EAAC;AAAA,MAC5D,MAAM,OAAO,QAAQ,CAACA,QAAOA,IAAG,mBAAkB,CAAE;AAAA,IACvD;AAAA,EACT;AACA;AAEO,MAAM,iCAAiC;AAC9C,MAAM,8BAA8B;AAC7B,IAAA,WAAA,MAAM,OAAO;AAAA,EAChB,YAAYO,UAAS,IAAI;;AACrB,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,oBAAI,IAAG;AAAA,IAC1B,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,IAAI,eAAc;AAAA,IACrC,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,+BAA+B;AAAA,MACvD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,8BAA8B;AAAA,MACtD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAOC,yBAAuB,8BAA8B,MAAM;AAAA,IAC9E,CAAS;AACD,WAAO,eAAe,MAAM,yBAAyB;AAAA,MACjD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,yBAAyB;AAAA,MACjD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,UAAM,gBAAgB,OAAO,uBAAwB;AACrD,SAAK,oBAAoB,uBAAwB;AACjD,SAAK,SAAS,WAAWD,QAAO,UAAU,cAAc,MAAM,KAAK;AACnE,QAAI,KAAK,OAAO,SAAS,GAAG,GAAG;AAC3B,WAAK,SAAS,KAAK,OAAO,MAAM,GAAG,EAAE;AAAA,IACjD;AACQ,SAAK,SAAS,WAAWA,QAAO,UAAU,cAAc,MAAM;AAC9D,SAAK,SAAS,WAAWA,QAAO,UAAU,cAAc,MAAM;AAC9D,SAAI7G,MAAA,KAAK,WAAL,gBAAAA,IAAa,SAAS,MAAM;AAC5B,WAAK,SAAS,KAAK,OAAO,MAAM,GAAG,EAAE;AAAA,IACjD;AACQ,SAAK,aAAa6G,QAAO,cAAc;AACvC,SAAK,SAAS,IAAIE,cAAYF,QAAO,iBAAiB,CAAA,CAAE;AACxD,SAAK,wBACDA,QAAO,yBAAyB,KAAK;AACzC,QAAI,KAAK,wBAAwB,GAAG;AAChC,YAAM,IAAI,MAAM,2CAA2C;AAAA,IACvE;AACQ,SAAK,oBAAoB,IAAIE,cAAY;AAAA,MACrC,YAAY;AAAA,MACZ,gBAAgB,KAAK;AAAA,MACrB,GAAIF,QAAO,iBAAiB;MAC5B,sBAAsB;AAAA,IAClC,CAAS;AACD,SAAK,aACDA,QAAO,cAAcA,QAAO,cAAc,cAAc;AAC5D,SAAK,cACDA,QAAO,eAAeA,QAAO,cAAc,cAAc;AAC7D,SAAK,mBAAmBA,QAAO,oBAAoB,KAAK;AACxD,SAAK,6BACDA,QAAO,8BAA8B,KAAK;AAC9C,SAAK,sBAAsBA,QAAO;AAClC,SAAK,eAAeA,QAAO,gBAAgB,CAAE;AAC7C,SAAK,kBAAkBA,QAAO,mBAAmB,KAAK;AAAA,EAC9D;AAAA,EACI,OAAO,yBAAyB;AAC5B,UAAM,SAAS,gCAAgC,SAAS;AACxD,UAAM,SAAS,gCAAgC,UAAU,KACrD;AACJ,UAAM,aAAa,gCAAgC,aAAa,MAAM;AACtE,UAAM,cAAc,gCAAgC,cAAc,MAAM;AACxE,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IACH;AAAA,EACT;AAAA,EACI,aAAa;AACT,QAAI,KAAK,QAAQ;AACb,aAAO,KAAK;AAAA,IACxB,WACiB,YAAY,KAAK,MAAM,GAAG;AAC/B,WAAK,SAAS;AACd,aAAO,KAAK;AAAA,IACxB,WACiB,KAAK,OAAO,SAAS,MAAM,KAChC,CAAC,KAAK,OAAO,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,KAAK,GAAG;AAC/C,WAAK,SAAS,KAAK,OAAO,QAAQ,QAAQ,EAAE;AAC5C,aAAO,KAAK;AAAA,IACxB,WACiB,KAAK,OAAO,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,KAAK,GAAG;AACnD,WAAK,SAAS;AACd,aAAO,KAAK;AAAA,IACxB,WACiB,KAAK,OAAO,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,IAAI,GAAG;AAClD,WAAK,SAAS;AACd,aAAO,KAAK;AAAA,IACxB,OACa;AACD,WAAK,SAAS;AACd,aAAO,KAAK;AAAA,IACxB;AAAA,EACA;AAAA,EACI,IAAI,UAAU;AACV,UAAM,UAAU;AAAA,MACZ,cAAc,gBAAgB,WAAW;AAAA,IAC5C;AACD,QAAI,KAAK,QAAQ;AACb,cAAQ,WAAW,IAAI,GAAG,KAAK,MAAM;AAAA,IACjD;AACQ,WAAO;AAAA,EACf;AAAA,EACI,cAAc,QAAQ;AAClB,QAAI,KAAK,eAAe,OAAO;AAC3B,aAAO;AAAA,IACnB;AACQ,QAAI,KAAK,eAAe,MAAM;AAC1B,aAAO,CAAE;AAAA,IACrB;AACQ,QAAI,OAAO,KAAK,eAAe,YAAY;AACvC,aAAO,KAAK,WAAW,MAAM;AAAA,IACzC;AACQ,WAAO;AAAA,EACf;AAAA,EACI,eAAe,SAAS;AACpB,QAAI,KAAK,gBAAgB,OAAO;AAC5B,aAAO;AAAA,IACnB;AACQ,QAAI,KAAK,gBAAgB,MAAM;AAC3B,aAAO,CAAE;AAAA,IACrB;AACQ,QAAI,OAAO,KAAK,gBAAgB,YAAY;AACxC,aAAO,KAAK,YAAY,OAAO;AAAA,IAC3C;AACQ,WAAO;AAAA,EACf;AAAA,EACI,+BAA+B,KAAK;AAChC,UAAM,YAAY,EAAE,GAAG,IAAK;AAC5B,QAAI,UAAU,WAAW,QAAW;AAChC,gBAAU,SAAS,KAAK,cAAc,UAAU,MAAM;AAAA,IAClE;AACQ,QAAI,UAAU,YAAY,QAAW;AACjC,gBAAU,UAAU,KAAK,eAAe,UAAU,OAAO;AAAA,IACrE;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,aAAa/G,OAAM,aAAa;AAClC,UAAM,gBAAe,2CAAa,eAAc;AAChD,UAAM,MAAM,GAAG,KAAK,MAAM,GAAGA,KAAI,IAAI,YAAY;AACjD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,KAAK;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,mBAAmBA,KAAI,EAAE;AACxD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,KAAKA,OAAM,aAAa;AAC1B,UAAM,WAAW,MAAM,KAAK,aAAaA,OAAM,WAAW;AAC1D,WAAO,SAAS,KAAM;AAAA,EAC9B;AAAA,EACI,OAAO,cAAcA,OAAM,cAAc,IAAI,gBAAe,GAAI,WAAW;AACvE,QAAI,SAAS,OAAO,YAAY,IAAI,QAAQ,CAAC,KAAK;AAClD,UAAMkH,SAAQ,OAAO,YAAY,IAAI,OAAO,CAAC,KAAK;AAClD,WAAO,MAAM;AACT,kBAAY,IAAI,UAAU,OAAO,MAAM,CAAC;AACxC,kBAAY,IAAI,SAAS,OAAOA,MAAK,CAAC;AACtC,YAAM,MAAM,GAAG,KAAK,MAAM,GAAGlH,KAAI,IAAI,WAAW;AAChD,YAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,KAAK;AAAA,QACpE,QAAQ;AAAA,QACR,SAAS,KAAK;AAAA,QACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,QAC3C,GAAG,KAAK;AAAA,MACxB,CAAa;AACD,YAAM,eAAe,UAAU,mBAAmBA,KAAI,EAAE;AACxD,YAAM,QAAQ,YACR,UAAU,MAAM,SAAS,KAAM,CAAA,IAC/B,MAAM,SAAS,KAAM;AAC3B,UAAI,MAAM,WAAW,GAAG;AACpB;AAAA,MAChB;AACY,YAAM;AACN,UAAI,MAAM,SAASkH,QAAO;AACtB;AAAA,MAChB;AACY,gBAAU,MAAM;AAAA,IAC5B;AAAA,EACA;AAAA,EACI,OAAO,wBAAwBlH,OAAM,OAAO,MAAM,gBAAgB,QAAQ,UAAU,QAAQ;AACxF,UAAM,aAAa,OAAO,EAAE,GAAG,KAAM,IAAG,CAAE;AAC1C,WAAO,MAAM;AACT,YAAM,WAAW,MAAM,KAAK,OAAO,KAAK,2BAA2B,GAAG,KAAK,MAAM,GAAGA,KAAI,IAAI;AAAA,QACxF,QAAQ;AAAA,QACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,QAChE,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,QAC3C,GAAG,KAAK;AAAA,QACR,MAAM,KAAK,UAAU,UAAU;AAAA,MAC/C,CAAa;AACD,YAAM,eAAe,MAAM,SAAS,KAAM;AAC1C,UAAI,CAAC,cAAc;AACf;AAAA,MAChB;AACY,UAAI,CAAC,aAAa,OAAO,GAAG;AACxB;AAAA,MAChB;AACY,YAAM,aAAa,OAAO;AAC1B,YAAM,UAAU,aAAa;AAC7B,UAAI,CAAC,SAAS;AACV;AAAA,MAChB;AACY,UAAI,CAAC,QAAQ,MAAM;AACf;AAAA,MAChB;AACY,iBAAW,SAAS,QAAQ;AAAA,IACxC;AAAA,EACA;AAAA,EACI,mBAAmB,MAAM,QAAQ,OAAO;AACpC,QAAI,KAAK,sBAAsB,QAAW;AACtC,aAAO;AAAA,IACnB;AACQ,QAAI,OAAO;AACP,YAAM,UAAU,CAAE;AAClB,iBAAW,OAAO,MAAM;AACpB,YAAI,CAAC,KAAK,kBAAkB,IAAI,IAAI,EAAE,GAAG;AACrC,kBAAQ,KAAK,GAAG;AAAA,QACpC,OACqB;AACD,eAAK,kBAAkB,OAAO,IAAI,EAAE;AAAA,QACxD;AAAA,MACA;AACY,aAAO;AAAA,IACnB,OACa;AACD,YAAM,UAAU,CAAE;AAClB,iBAAW,OAAO,MAAM;AACpB,YAAK,IAAI,OAAO,IAAI,YAChB,CAAC,KAAK,kBAAkB,IAAI,IAAI,QAAQ,KACxC,KAAK,OAAM,IAAK,KAAK,mBAAmB;AACxC,kBAAQ,KAAK,GAAG;AAAA,QACpC,OACqB;AACD,eAAK,kBAAkB,IAAI,IAAI,EAAE;AAAA,QACrD;AAAA,MACA;AACY,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,MAAM,0BAA0B;;AAC5B,UAAM,aAAa,MAAM,KAAK,kBAAmB;AACjD,WAAQ,KAAK,yBACTE,MAAA,WAAW,wBAAX,gBAAAA,IAAgC,qBAChC;AAAA,EACZ;AAAA,EACI,MAAM,uBAAuB;;AACzB,UAAM,aAAa,MAAM,KAAK,kBAAmB;AACjD,aAAQA,MAAA,WAAW,mBAAX,gBAAAA,IAA2B,uCAAsC;AAAA,EACjF;AAAA,EACI,oBAAoB,gBAAgB;AAChC,UAAM,WAAW,CAAE;AACnB,WAAO,KAAK,eAAe,MAAM,SAAS,GAAG;AACzC,YAAM,CAAC,OAAO,IAAI,IAAI,KAAK,eAAe,IAAI,cAAc;AAC5D,UAAI,CAAC,MAAM,QAAQ;AACf,aAAM;AACN;AAAA,MAChB;AACY,YAAM,eAAe,KAAK,cAAc,OAAO,IAAI,EAAE,MAAM,QAAQ,KAAK;AACxE,eAAS,KAAK,YAAY;AAAA,IACtC;AACQ,WAAO,QAAQ,IAAI,QAAQ;AAAA,EACnC;AAAA,EACI,MAAM,cAAc,OAAO,MAAM;;AAC7B,QAAI,CAAC,MAAM,QAAQ;AACf,WAAM;AACN;AAAA,IACZ;AACQ,QAAI;AACA,YAAM,eAAe;AAAA,QACjB,YAAY,MACP,OAAO,CAAC,SAAS,KAAK,WAAW,QAAQ,EACzC,IAAI,CAAC,SAAS,KAAK,IAAI;AAAA,QAC5B,YAAY,MACP,OAAO,CAAC,SAAS,KAAK,WAAW,QAAQ,EACzC,IAAI,CAAC,SAAS,KAAK,IAAI;AAAA,MAC/B;AACD,YAAM,aAAa,MAAM,KAAK,kBAAmB;AACjD,WAAIA,MAAA,yCAAY,wBAAZ,gBAAAA,IAAiC,wBAAwB;AACzD,cAAM,KAAK,oBAAoB,YAAY;AAAA,MAC3D,OACiB;AACD,cAAM,KAAK,gBAAgB,YAAY;AAAA,MACvD;AAAA,IACA,UACgB;AACJ,WAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,MAAM,oBAAoB,MAAM;AAC5B,iBAAa,KAAK,gBAAgB;AAClC,SAAK,mBAAmB;AACxB,QAAI,KAAK,WAAW,UAAU;AAC1B,WAAK,OAAO,6BAA6B,KAAK,IAAI;AAAA,IAC9D;AACQ,UAAM,cAAc,KAAK,eAAe,KAAK,IAAI;AACjD,QAAI,KAAK,iBAAiB;AAEtB,aAAO;AAAA,IACnB;AACQ,UAAM,iBAAiB,MAAM,KAAK,wBAAyB;AAC3D,QAAI,KAAK,eAAe,YAAY,gBAAgB;AAChD,WAAK,KAAK,oBAAoB,cAAc;AAAA,IACxD;AACQ,QAAI,KAAK,eAAe,MAAM,SAAS,GAAG;AACtC,WAAK,mBAAmB,WAAW,MAAM;AACrC,aAAK,mBAAmB;AACxB,aAAK,KAAK,oBAAoB,cAAc;AAAA,MAC5D,GAAe,KAAK,2BAA2B;AAAA,IAC/C;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,iBAAiB;AACnB,UAAM,WAAW,MAAM,wBAAyB,EAAC,GAAG,KAAK,MAAM,SAAS;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,EAAE,QAAQ,mBAAoB;AAAA,MACvC,QAAQ,YAAY,QAAQ,2BAA2B;AAAA,MACvD,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,iBAAiB;AAChD,WAAO,SAAS,KAAM;AAAA,EAC9B;AAAA,EACI,MAAM,oBAAoB;AACtB,QAAI,KAAK,0BAA0B,QAAW;AAC1C,WAAK,yBAAyB,YAAY;AACtC,YAAI,KAAK,gBAAgB,QAAW;AAChC,cAAI;AACA,iBAAK,cAAc,MAAM,KAAK,eAAgB;AAAA,UACtE,SAC2BE,IAAG;AACN,oBAAQ,KAAK,yHAAyH;AAAA,UAC9J;AAAA,QACA;AACgB,eAAO,KAAK,eAAe,CAAE;AAAA,MAC7C,GAAgB;AAAA,IAChB;AACQ,WAAO,KAAK,sBAAsB,KAAK,CAAC,eAAe;AACnD,UAAI,KAAK,gBAAgB,QAAW;AAChC,aAAK,wBAAwB;AAAA,MAC7C;AACY,aAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,MAAM,eAAe;AACjB,QAAI,CAAC,KAAK,UAAU;AAChB,WAAK,WAAW,KAAK,KAAK,WAAW;AAAA,IACjD;AACQ,WAAO,MAAM,KAAK;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,QAAQ;AACV,UAAM,iBAAiB,MAAM,KAAK,wBAAyB;AAC3D,UAAM,KAAK,oBAAoB,cAAc;AAAA,EACrD;AAAA,EACI,MAAM,UAAU,KAAK;AACjB,QAAI,CAAC,KAAK,mBAAmB,CAAC,GAAG,CAAC,EAAE,QAAQ;AACxC;AAAA,IACZ;AACQ,UAAM,UAAU,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AACvE,UAAM,eAAe,IAAI;AACzB,WAAO,IAAI;AACX,UAAM,YAAY,KAAK,+BAA+B;AAAA,MAClD;AAAA,MACA,GAAG;AAAA,MACH,YAAY,IAAI,cAAc,KAAK,IAAK;AAAA,IACpD,CAAS;AACD,QAAI,KAAK,oBACL,UAAU,aAAa,UACvB,UAAU,iBAAiB,QAAW;AACtC,WAAK,KAAK,oBAAoB;AAAA,QAC1B,QAAQ;AAAA,QACR,MAAM;AAAA,MACtB,CAAa,EAAE,MAAM,QAAQ,KAAK;AACtB;AAAA,IACZ;AACQ,UAAM,uBAAuB,6BAA6B,SAAS;AACnE,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,SAAS;AAAA,MACtF,QAAQ;AAAA,MACR;AAAA,MACA,MAAM0G,YAAoB,oBAAoB;AAAA,MAC9C,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,cAAc,IAAI;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,gBAAgB,EAAE,YAAY,cAAe;AAC/C,QAAI,eAAe,UAAa,eAAe,QAAW;AACtD;AAAA,IACZ;AACQ,QAAI,wBAAuB,yCAAY,IAAI,CAAC,WAAW,KAAK,+BAA+B,MAAM,OAAM,CAAE;AACzG,QAAI,wBAAuB,yCAAY,IAAI,CAACK,YAAW,KAAK,+BAA+BA,OAAM,OAAM,CAAE;AACzG,QAAI,qBAAqB,SAAS,KAAK,qBAAqB,SAAS,GAAG;AACpE,YAAM,aAAa,qBAAqB,OAAO,CAAC,QAAQ,QAAQ;AAC5D,YAAI,CAAC,IAAI,IAAI;AACT,iBAAO;AAAA,QAC3B;AACgB,eAAO,IAAI,EAAE,IAAI;AACjB,eAAO;AAAA,MACV,GAAE,EAAE;AACL,YAAM,oBAAoB,CAAE;AAC5B,iBAAW,eAAe,sBAAsB;AAC5C,YAAI,YAAY,OAAO,UAAa,WAAW,YAAY,EAAE,GAAG;AAC5D,qBAAW,YAAY,EAAE,IAAI;AAAA,YACzB,GAAG,WAAW,YAAY,EAAE;AAAA,YAC5B,GAAG;AAAA,UACN;AAAA,QACrB,OACqB;AACD,4BAAkB,KAAK,WAAW;AAAA,QACtD;AAAA,MACA;AACY,6BAAuB,OAAO,OAAO,UAAU;AAC/C,6BAAuB;AAAA,IACnC;AACQ,UAAM,WAAW;AAAA,MACb,MAAM,KAAK,mBAAmB,oBAAoB;AAAA,MAClD,OAAO,KAAK,mBAAmB,sBAAsB,IAAI;AAAA,IAC5D;AACD,QAAI,CAAC,SAAS,KAAK,UAAU,CAAC,SAAS,MAAM,QAAQ;AACjD;AAAA,IACZ;AACQ,UAAM,cAAc;AAAA,MAChB,MAAM,CAAE;AAAA,MACR,OAAO,CAAE;AAAA,IACZ;AACD,eAAWP,MAAK,CAAC,QAAQ,OAAO,GAAG;AAC/B,YAAM,MAAMA;AACZ,YAAM,aAAa,SAAS,GAAG,EAAE,QAAS;AAC1C,UAAI,YAAY,WAAW,IAAK;AAChC,aAAO,cAAc,QAAW;AAC5B,oBAAY,GAAG,EAAE,KAAK,SAAS;AAC/B,oBAAY,WAAW,IAAK;AAAA,MAC5C;AAAA,IACA;AACQ,QAAI,YAAY,KAAK,SAAS,KAAK,YAAY,MAAM,SAAS,GAAG;AAC7D,YAAM,KAAK,qBAAqBE,YAAoB,WAAW,CAAC;AAAA,IAC5E;AAAA,EACA;AAAA,EACI,MAAM,qBAAqB,MAAM;AAC7B,UAAM,UAAU;AAAA,MACZ,GAAG,KAAK;AAAA,MACR,gBAAgB;AAAA,MAChB,QAAQ;AAAA,IACX;AACD,UAAM,WAAW,MAAM,KAAK,kBAAkB,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,eAAe;AAAA,MACvG,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,oBAAoB,IAAI;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,oBAAoB,EAAE,YAAY,cAAe;AACnD,QAAI,eAAe,UAAa,eAAe,QAAW;AACtD;AAAA,IACZ;AAEQ,UAAM,iBAAiB,CAAE;AACzB,QAAI,uBAAuB,CAAE;AAC7B,eAAW,UAAU,cAAc,IAAI;AACnC,YAAM,iBAAiB,KAAK,+BAA+B,MAAM;AACjE,UAAI,eAAe,OAAO,UACtB,eAAe,gBAAgB,QAAW;AAC1C,uBAAe,eAAe,EAAE,IAAI,eAAe;AAAA,MACnE;AACY,aAAO,eAAe;AACtB,2BAAqB,KAAK,cAAc;AAAA,IACpD;AACQ,QAAI,uBAAuB,CAAE;AAC7B,eAAWK,WAAU,cAAc,IAAI;AACnC,2BAAqB,KAAK,KAAK,+BAA+BA,OAAM,CAAC;AAAA,IACjF;AAEQ,UAAM,mBAAmB,qBAAqB,KAAK,CAAC,cAAc;AAC9D,aAAQ,UAAU,aAAa,UAAa,UAAU,iBAAiB;AAAA,IACnF,CAAS;AACD,QAAI,qBAAqB,QAAW;AAChC,YAAM,IAAI,MAAM,uFAAuF;AAAA,IACnH;AACQ,UAAM,mBAAmB,qBAAqB,KAAK,CAAC,cAAc;AAC9D,aAAQ,UAAU,aAAa,UAAa,UAAU,iBAAiB;AAAA,IACnF,CAAS;AACD,QAAI,qBAAqB,QAAW;AAChC,YAAM,IAAI,MAAM,uFAAuF;AAAA,IACnH;AAEQ,QAAI,qBAAqB,SAAS,KAAK,qBAAqB,SAAS,GAAG;AACpE,YAAM,aAAa,qBAAqB,OAAO,CAAC,QAAQ,QAAQ;AAC5D,YAAI,CAAC,IAAI,IAAI;AACT,iBAAO;AAAA,QAC3B;AACgB,eAAO,IAAI,EAAE,IAAI;AACjB,eAAO;AAAA,MACV,GAAE,EAAE;AACL,YAAM,oBAAoB,CAAE;AAC5B,iBAAW,eAAe,sBAAsB;AAC5C,YAAI,YAAY,OAAO,UAAa,WAAW,YAAY,EAAE,GAAG;AAC5D,qBAAW,YAAY,EAAE,IAAI;AAAA,YACzB,GAAG,WAAW,YAAY,EAAE;AAAA,YAC5B,GAAG;AAAA,UACN;AAAA,QACrB,OACqB;AACD,4BAAkB,KAAK,WAAW;AAAA,QACtD;AAAA,MACA;AACY,6BAAuB,OAAO,OAAO,UAAU;AAC/C,6BAAuB;AAAA,IACnC;AACQ,QAAI,qBAAqB,WAAW,KAChC,qBAAqB,WAAW,GAAG;AACnC;AAAA,IACZ;AAEQ,UAAM,qBAAqB,CAAE;AAC7B,UAAM,mBAAmB,CAAE;AAC3B,eAAW,CAAC,QAAQ,QAAQ,KAAK;AAAA,MAC7B,CAAC,QAAQ,oBAAoB;AAAA,MAC7B,CAAC,SAAS,oBAAoB;AAAA,IAC1C,GAAW;AACC,iBAAW,mBAAmB,UAAU;AAEpC,cAAM,EAAE,QAAQ,SAAS,QAAQ,aAAa,GAAG,QAAO,IAAK;AAC7D,cAAM,SAAS,EAAE,QAAQ,SAAS,OAAQ;AAE1C,cAAM,qBAAqBL,YAAoB,OAAO;AACtD,yBAAiB,KAAK;AAAA,UAClB,MAAM,GAAG,MAAM,IAAI,QAAQ,EAAE;AAAA,UAC7B,SAAS,IAAI,KAAK,CAAC,kBAAkB,GAAG;AAAA,YACpC,MAAM,4BAA4B,mBAAmB,MAAM;AAAA;AAAA,UACnF,CAAqB;AAAA,QACrB,CAAiB;AAED,mBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC/C,cAAI,UAAU,QAAW;AACrB;AAAA,UACxB;AACoB,gBAAM,mBAAmBA,YAAoB,KAAK;AAClD,2BAAiB,KAAK;AAAA,YAClB,MAAM,GAAG,MAAM,IAAI,QAAQ,EAAE,IAAI,GAAG;AAAA,YACpC,SAAS,IAAI,KAAK,CAAC,gBAAgB,GAAG;AAAA,cAClC,MAAM,4BAA4B,iBAAiB,MAAM;AAAA,YACrF,CAAyB;AAAA,UACzB,CAAqB;AAAA,QACrB;AAEgB,YAAI,QAAQ,OAAO,QAAW;AAC1B,gBAAMM,eAAc,eAAe,QAAQ,EAAE;AAC7C,cAAIA,cAAa;AACb,mBAAO,eAAe,QAAQ,EAAE;AAChC,uBAAW,CAAC,MAAM,UAAU,KAAK,OAAO,QAAQA,YAAW,GAAG;AAC1D,kBAAI;AACJ,kBAAI;AACJ,kBAAI,MAAM,QAAQ,UAAU,GAAG;AAC3B,iBAAC,aAAa,OAAO,IAAI;AAAA,cACzD,OACiC;AACD,8BAAc,WAAW;AACzB,0BAAU,WAAW;AAAA,cACrD;AAE4B,kBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,wBAAQ,KAAK,wBAAwB,IAAI,aAAa,QAAQ,EAAE,yHACkC;AAClG;AAAA,cAChC;AAC4B,+BAAiB,KAAK;AAAA,gBAClB,MAAM,cAAc,QAAQ,EAAE,IAAI,IAAI;AAAA,gBACtC,SAAS,IAAI,KAAK,CAAC,OAAO,GAAG;AAAA,kBACzB,MAAM,GAAG,WAAW,YAAY,QAAQ,UAAU;AAAA,gBACtF,CAAiC;AAAA,cACjC,CAA6B;AAAA,YAC7B;AAAA,UACA;AAAA,QACA;AAEgB,2BAAmB,KAAK,SAAS,QAAQ,QAAQ,OAAO,QAAQ,EAAE,EAAE;AAAA,MACpF;AAAA,IACA;AACQ,UAAM,KAAK,sBAAsB,kBAAkB,mBAAmB,KAAK,IAAI,CAAC;AAAA,EACxF;AAAA,EACI,MAAM,sBAAsB,OAAO,SAAS;AACxC,QAAI;AAEA,YAAM,WAAW,8BAA8B,KAAK,OAAM,EAAG,SAAS,EAAE,EAAE,MAAM,CAAC;AACjF,YAAM,SAAS,CAAE;AACjB,iBAAW,QAAQ,OAAO;AAEtB,eAAO,KAAK,IAAI,KAAK,CAAC,KAAK,QAAQ;AAAA,CAAM,CAAC,CAAC;AAC3C,eAAO,KAAK,IAAI,KAAK;AAAA,UACjB,yCAAyC,KAAK,IAAI;AAAA;AAAA,UAClD,iBAAiB,KAAK,QAAQ,IAAI;AAAA;AAAA;AAAA,QACtD,CAAiB,CAAC;AACF,eAAO,KAAK,KAAK,OAAO;AACxB,eAAO,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,MAC9C;AAEY,aAAO,KAAK,IAAI,KAAK,CAAC,KAAK,QAAQ;AAAA,CAAQ,CAAC,CAAC;AAE7C,YAAM,OAAO,IAAI,KAAK,MAAM;AAE5B,YAAM,cAAc,MAAM,KAAK,YAAa;AAC5C,YAAM,MAAM,MAAM,KAAK,kBAAkB,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,mBAAmB;AAAA,QACtG,QAAQ;AAAA,QACR,SAAS;AAAA,UACL,GAAG,KAAK;AAAA,UACR,gBAAgB,iCAAiC,QAAQ;AAAA,QAC5D;AAAA,QACD,MAAM;AAAA,QACN,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,QAC3C,GAAG,KAAK;AAAA,MACxB,CAAa;AACD,YAAM,eAAe,KAAK,yBAAyB,IAAI;AAAA,IAEnE,SACehH,IAAG;AACN,cAAQ,KAAK,GAAGA,GAAE,QAAQ,MAAM;AAAA;AAAA,WAAgB,OAAO,EAAE;AAAA,IACrE;AAAA,EACA;AAAA,EACI,MAAM,UAAU,OAAO,KAAK;AACxB,eAAW,KAAK;AAChB,QAAI,IAAI,QAAQ;AACZ,UAAI,SAAS,KAAK,cAAc,IAAI,MAAM;AAAA,IACtD;AACQ,QAAI,IAAI,SAAS;AACb,UAAI,UAAU,KAAK,eAAe,IAAI,OAAO;AAAA,IACzD;AAEQ,UAAM,OAAO,EAAE,GAAG,KAAK,IAAI,MAAO;AAClC,QAAI,CAAC,KAAK,mBAAmB,CAAC,IAAI,GAAG,IAAI,EAAE,QAAQ;AAC/C;AAAA,IACZ;AACQ,QAAI,KAAK,oBACL,KAAK,aAAa,UAClB,KAAK,iBAAiB,QAAW;AACjC,UAAI,IAAI,aAAa,UACjB,KAAK,kBAAkB,UACvB,KAAK,8BACL,CAAC,KAAK,iBAAiB;AAGvB,cAAM,KAAK,oBAAoB,EAAE,QAAQ,UAAU,MAAM,MAAM,EAAE,MAAM,QAAQ,KAAK;AACpF;AAAA,MAChB,OACiB;AACD,aAAK,KAAK,oBAAoB,EAAE,QAAQ,UAAU,MAAM,MAAM,EAAE,MAAM,QAAQ,KAAK;AAAA,MACnG;AACY;AAAA,IACZ;AACQ,UAAM,UAAU,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AACvE,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,SAAS,KAAK,IAAI;AAAA,MAC/F,QAAQ;AAAA,MACR;AAAA,MACA,MAAM0G,YAAoB,GAAG;AAAA,MAC7B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,cAAc,IAAI;AAAA,EACzD;AAAA,EACI,MAAM,QAAQ,OAAO,EAAE,cAAe,IAAG,EAAE,eAAe,SAAS;AAC/D,eAAW,KAAK;AAChB,QAAI,MAAM,MAAM,KAAK,KAAK,SAAS,KAAK,EAAE;AAC1C,QAAI,iBAAiB,IAAI,eAAe;AACpC,YAAM,MAAM,KAAK,eAAe,GAAG;AAAA,IAC/C;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,UAAU,EAAE,OAAO,KAAK,YAAW,GAAK;AAC1C,QAAI,QAAQ,QAAW;AACnB,UAAI;AACJ,UAAI,IAAI,YAAY;AAChB,oBAAY,IAAI;AAAA,MAChC,WACqB,2CAAa,aAAa;AAC/B,qBAAa,MAAM,KAAK,YAAY,EAAE,aAAa,2CAAa,YAAa,CAAA,GAAG;AAAA,MAChG,WACqB,2CAAa,WAAW;AAC7B,oBAAY,2CAAa;AAAA,MACzC,OACiB;AACD,cAAM,UAAU,MAAM,KAAK,YAAY;AAAA,UACnC,aAAa,gCAAgC,SAAS,KAAK;AAAA,QAC/E,CAAiB;AACD,oBAAY,QAAQ;AAAA,MACpC;AACY,YAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,aAAO,GAAG,KAAK,WAAU,CAAE,MAAM,QAAQ,eAAe,SAAS,MAAM,IAAI,EAAE;AAAA,IACzF,WACiB,UAAU,QAAW;AAC1B,YAAM,OAAO,MAAM,KAAK,QAAQ,KAAK;AACrC,UAAI,CAAC,KAAK,UAAU;AAChB,cAAM,IAAI,MAAM,OAAO,KAAK,kBAAkB;AAAA,MAC9D;AACY,YAAM,UAAU,KAAK,WAAY;AACjC,aAAO,GAAG,OAAO,GAAG,KAAK,QAAQ;AAAA,IAC7C,OACa;AACD,YAAM,IAAI,MAAM,kCAAkC;AAAA,IAC9D;AAAA,EACA;AAAA,EACI,MAAM,eAAe,KAAK;AACtB,UAAM,YAAY,MAAM,QAAQ,KAAK,SAAS,EAAE,IAAI,IAAI,cAAa,CAAE,CAAC;AACxE,UAAM,UAAU,CAAE;AAClB,UAAM,OAAO,CAAE;AAEf,cAAU,KAAK,CAAChE,IAAGC,SAAOD,MAAA,gBAAAA,GAAG,iBAAgB,IAAI,eAAcC,MAAA,gBAAAA,GAAG,iBAAgB,EAAE,CAAC;AACrF,eAAW,YAAY,WAAW;AAC9B,UAAI,SAAS,kBAAkB,QAC3B,SAAS,kBAAkB,QAAW;AACtC,cAAM,IAAI,MAAM,aAAa,SAAS,EAAE,gBAAgB;AAAA,MACxE;AACY,UAAI,EAAE,SAAS,iBAAiB,UAAU;AACtC,gBAAQ,SAAS,aAAa,IAAI,CAAE;AAAA,MACpD;AACY,cAAQ,SAAS,aAAa,EAAE,KAAK,QAAQ;AAC7C,WAAK,SAAS,EAAE,IAAI;AAAA,IAChC;AACQ,QAAI,aAAa,QAAQ,IAAI,EAAE,KAAK,CAAE;AACtC,eAAW,SAAS,SAAS;AACzB,UAAI,UAAU,IAAI,IAAI;AAClB,aAAK,KAAK,EAAE,aAAa,QAAQ,KAAK;AAAA,MACtD;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkFI,OAAO,SAAS,OAAO;AACnB,UAAM,EAAE,WAAW,aAAa,aAAa,SAAS,oBAAoB,WAAW,gBAAgB,QAAQ,SAAS,OAAO,IAAI,OAAO,QAAQ,aAAa,YAAY,OAAAmE,QAAO,OAAM,IAAM;AAC5L,QAAI,aAAa,CAAE;AACnB,QAAI,WAAW;AACX,mBAAa,MAAM,QAAQ,SAAS,IAAI,YAAY,CAAC,SAAS;AAAA,IAC1E;AACQ,QAAI,aAAa;AACb,YAAM,eAAe,MAAM,QAAQ,WAAW,IACxC,cACA,CAAC,WAAW;AAClB,YAAM,cAAc,MAAM,QAAQ,IAAI,aAAa,IAAI,CAAC,SAAS,KAAK,YAAY,EAAE,aAAa,KAAM,CAAA,EAAE,KAAK,CAAC,YAAY,QAAQ,EAAE,CAAC,CAAC;AACvI,iBAAW,KAAK,GAAG,WAAW;AAAA,IAC1C;AACQ,UAAM,iBAAiB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACH;AACD,UAAM,OAAO;AAAA,MACT,SAAS,WAAW,SAAS,aAAa;AAAA,MAC1C,UAAU;AAAA,MACV,mBAAmB;AAAA,MACnB;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,YAAY,YAAY,UAAU,YAAa,IAAG;AAAA,MAClD;AAAA,MACA;AAAA,MACA,OAAAA;AAAA,MACA,OAAO;AAAA,MACP,QAAQ,SAAS,SAAS;AAAA,MAC1B,SAAS;AAAA,IACZ;AACD,QAAI,cAAc;AAClB,qBAAiB,QAAQ,KAAK,wBAAwB,eAAe,IAAI,GAAG;AACxE,UAAIA,QAAO;AACP,YAAI,eAAeA,QAAO;AACtB;AAAA,QACpB;AACgB,YAAI,KAAK,SAAS,cAAcA,QAAO;AACnC,gBAAM,UAAU,KAAK,MAAM,GAAGA,SAAQ,WAAW;AACjD,iBAAO;AACP;AAAA,QACpB;AACgB,uBAAe,KAAK;AACpB,eAAO;AAAA,MACvB,OACiB;AACD,eAAO;AAAA,MACvB;AAAA,IACA;AAAA,EACA;AAAA,EACI,MAAM,YAAY,EAAE,IAAI,OAAO,WAAW,SAAS,cAAc,YAAY,qBAAqB,WAAW,SAAS,OAAO,OAAO,QAAQ,aAAa,YAAY,QAAQ,kBAAmB;AAC5L,QAAI,cAAc,cAAc,CAAE;AAClC,QAAI,cAAc;AACd,oBAAc;AAAA,QACV,GAAI,cAAc,CAAA;AAAA,QAClB,GAAI,MAAM,QAAQ,IAAI,aAAa,IAAI,CAAC,SAAS,KAAK,YAAY,EAAE,aAAa,KAAI,CAAE,EAAE,KAAK,CAAC,YAAY,QAAQ,EAAE,CAAC,CAAC;AAAA,MAC1H;AAAA,IACb;AACQ,UAAM,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,MACA,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,MACT,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,aAAa;AAAA,MACb,SAAS;AAAA,MACT,kBAAkB;AAAA,IACrB;AAED,UAAM,kBAAkB,OAAO,YAAY,OAAO,QAAQ,OAAO,EAAE,OAAO,CAAC,CAACvH,IAAG,KAAK,MAAM,UAAU,MAAS,CAAC;AAC9G,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,eAAe;AAAA,MAC5F,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,UAAU,eAAe;AAAA,MACpC,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,SAAS,OAAO,EAAE,QAAO,IAAK,CAAA,GAAI;AACpC,UAAM,OAAO;AAAA,MACT,QAAQ;AAAA,MACR,aAAa,WAAW0H,GAAS;AAAA,IACpC;AACD,eAAW,KAAK;AAChB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,SAAS,KAAK,UAAU;AAAA,MACrG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,QAAI,WAAW,QAAQ,EAAE,iBAAiB,SAAS;AAC/C,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAC1D;AACQ,WAAO,GAAG,KAAK,WAAY,CAAA,WAAW,OAAO,aAAa,CAAC;AAAA,EACnE;AAAA,EACI,MAAM,WAAW,OAAO;AACpB,eAAW,KAAK;AAChB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,SAAS,KAAK,UAAU;AAAA,MACrG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,eAAe,IAAI;AAAA,EAC1D;AAAA,EACI,MAAM,kBAAkB,OAAO;AAC3B,eAAW,KAAK;AAChB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,SAAS,KAAK,UAAU;AAAA,MACrG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,QAAI,WAAW,QAAQ,EAAE,iBAAiB,SAAS;AAC/C,aAAO;AAAA,IACnB;AACQ,WAAO,GAAG,KAAK,WAAY,CAAA,WAAW,OAAO,aAAa,CAAC;AAAA,EACnE;AAAA,EACI,MAAM,eAAe,YAAY,EAAE,OAAM,IAAM,CAAA,GAAI;AAC/C,UAAM,cAAc,IAAI,gBAAgB;AAAA,MACpC,aAAa;AAAA,IACzB,CAAS;AACD,QAAI,WAAW,QAAW;AACtB,iBAAW,SAAS,QAAQ;AACxB,oBAAY,OAAO,MAAM,KAAK;AAAA,MAC9C;AAAA,IACA;AACQ,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,WAAW,UAAU,QAAQ,WAAW,IAAI;AAAA,MACzH,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,OAAO,MAAM,SAAS,KAAM;AAClC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,wBAAwB,WAAW,aAAa;AAClD,QAAI,CAAC,aAAa,CAAC,aAAa;AAC5B,YAAM,IAAI,MAAM,+CAA+C;AAAA,IAC3E;AACQ,QAAI,CAAC,WAAW;AACZ,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,kBAAY,QAAQ;AAAA,IAChC;AACQ,eAAW,SAAS;AACpB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,SAAS,UAAU;AAAA,MAC7G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,cAAc,MAAM,SAAS,KAAM;AACzC,gBAAY,MAAM,GAAG,KAAK,WAAY,CAAA,WAAW,YAAY,WAAW;AACxE,WAAO;AAAA,EACf;AAAA,EACI,MAAM,aAAa,WAAW,aAAa;AACvC,QAAI,CAAC,aAAa,CAAC,aAAa;AAC5B,YAAM,IAAI,MAAM,+CAA+C;AAAA,IAC3E;AACQ,QAAI,CAAC,WAAW;AACZ,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,kBAAY,QAAQ;AAAA,IAChC;AACQ,UAAM,OAAO;AAAA,MACT,YAAY;AAAA,IACf;AACD,eAAW,SAAS;AACpB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,SAAS,UAAU;AAAA,MAC7G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,cAAc,MAAM,SAAS,KAAM;AACzC,gBAAY,MAAM,GAAG,KAAK,WAAY,CAAA,WAAW,YAAY,WAAW;AACxE,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,WAAW;AAC5B,eAAW,SAAS;AACpB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,SAAS,UAAU;AAAA,MAC7G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,mBAAmB,IAAI;AAAA,EAC9D;AAAA,EACI,MAAM,kBAAkB,YAAY;AAChC,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,WAAW,UAAU,aAAa;AAAA,MAC/G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,UAAU,MAAM,SAAS,KAAM;AACrC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASI,MAAM,mBAAmB,YAAY,SAAS;AAC1C,UAAM,SAAS,CAAE;AACjB,QAAI,mCAAS,YAAY;AACrB,aAAO,KAAK,QAAQ;AAAA,IAChC;AACQ,UAAM,YAAY,IAAI,gBAAiB;AACvC,WAAO,QAAQ,MAAM,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC7C,UAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,cAAM,QAAQ,CAAC1D,OAAM,UAAU,OAAO,KAAKA,EAAC,CAAC;AAAA,MAC7D,OACiB;AACD,kBAAU,OAAO,KAAK,KAAK;AAAA,MAC3C;AAAA,IACA,CAAS;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,WAAW,UAAU,aAAa,UAAU,SAAU,CAAA,IAAI;AAAA,MACvI,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,QAAI,CAAC,SAAS,IAAI;AACd,UAAI,YAAY,QAAQ;AACpB,cAAM,IAAI,MAAM;AAAA,UAA4C,SAAS,MAAM;AAAA,WAAc,OAAO,OAAO,KAAK,IAAI,CAAC,EAAE;AAAA,MACnI;AACY,YAAM,IAAI,MAAM,mCAAmC,SAAS,MAAM,IAAI,SAAS,UAAU,EAAE;AAAA,IACvG;AACQ,WAAO,OAAO,IAAI,CAAC,aAAa;AAAA,MAC5B,GAAG;AAAA,MACH,UAAU,KAAK,WAAY;AAAA,IACvC,EAAU;AAAA,EACV;AAAA,EACI,MAAM,cAAc,EAAE,aAAa,cAAc,MAAM,WAAW,MAAM,SAAS,OAAO,eAAe,MAAM,qBAAqB,KAAI,GAAK;AACvI,UAAM,UAAU,SAAS,iBAAiB;AAC1C,UAAM,WAAW,GAAG,KAAK,MAAM,YAAY,OAAO;AAClD,UAAM,QAAQ,gBAAgB,CAAE;AAChC,QAAI,UAAU;AACV,YAAM,UAAU,IAAI;AAAA,IAChC;AACQ,UAAM,OAAO;AAAA,MACT,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACH;AACD,QAAI,uBAAuB,MAAM;AAC7B,WAAK,sBAAsB,IAAI;AAAA,IAC3C;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,UAAU;AAAA,MACzE,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,cAAc,WAAW,EAAE,OAAO,MAAM,cAAc,MAAM,WAAW,MAAM,eAAe,MAAM,UAAU,KAAI,GAAK;AACvH,UAAM,WAAW,GAAG,KAAK,MAAM,aAAa,SAAS;AACrD,QAAI,QAAQ;AACZ,QAAI,UAAU;AACV,cAAQ,EAAE,GAAI,SAAS,CAAE,GAAG,SAAU;AAAA,IAClD;AACQ,UAAM,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,UAAU,IAAI,KAAK,OAAO,EAAE,YAAW,IAAK;AAAA,IACzD;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,UAAU;AAAA,MACzE,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,WAAW,EAAE,WAAW,eAAgB;AAE1C,QAAI3D,QAAO;AACX,UAAM,SAAS,IAAI,gBAAiB;AACpC,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,iBAAW,SAAS;AACpB,MAAAA,SAAQ,IAAI,SAAS;AAAA,IACjC,WACiB,gBAAgB,QAAW;AAChC,aAAO,OAAO,QAAQ,WAAW;AAAA,IAC7C,OACa;AACD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,GAAGA,KAAI,IAAI,MAAM,IAAI;AAAA,MAClG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AAGD,QAAI;AACA,YAAM,SAAS,MAAM,SAAS,KAAM;AACpC,UAAI,CAAC,SAAS,IAAI;AACd,eAAO;AAAA,MACvB;AAEY,UAAI,MAAM,QAAQ,MAAM,GAAG;AACvB,eAAO,OAAO,SAAS;AAAA,MACvC;AAEY,aAAO;AAAA,IACnB,SACeI,IAAG;AACN,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,MAAM,YAAY,EAAE,WAAW,aAAa,aAAY,GAAK;AACzD,QAAIJ,QAAO;AACX,UAAM,SAAS,IAAI,gBAAiB;AACpC,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,iBAAW,SAAS;AACpB,MAAAA,SAAQ,IAAI,SAAS;AAAA,IACjC,WACiB,gBAAgB,QAAW;AAChC,aAAO,OAAO,QAAQ,WAAW;AAAA,IAC7C,OACa;AACD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE;AACQ,QAAI,iBAAiB,QAAW;AAC5B,aAAO,OAAO,iBAAiB,aAAa,SAAQ,CAAE;AAAA,IAClE;AACQ,UAAM,WAAW,MAAM,KAAK,KAAKA,OAAM,MAAM;AAC7C,QAAI;AACJ,QAAI,MAAM,QAAQ,QAAQ,GAAG;AACzB,UAAI,SAAS,WAAW,GAAG;AACvB,cAAM,IAAI,MAAM,cAAc,SAAS,UAAU,WAAW,aAAa;AAAA,MACzF;AACY,eAAS,SAAS,CAAC;AAAA,IAC/B,OACa;AACD,eAAS;AAAA,IACrB;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,cAAc,EAAE,WAAW,eAAgB;AAC7C,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E;AACQ,UAAM,UAAU,MAAM,KAAK,YAAY,EAAE,WAAW,aAAa;AACjE,UAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,WAAO,GAAG,KAAK,YAAY,MAAM,QAAQ,eAAe,QAAQ,EAAE;AAAA,EAC1E;AAAA,EACI,MAAM,cAAc,EAAE,WAAW,eAAgB;AAC7C,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E;AACQ,UAAM,UAAU,MAAM,KAAK,YAAY,EAAE,WAAW,aAAa;AACjE,UAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,WAAO,GAAG,KAAK,YAAY,MAAM,QAAQ,aAAa,QAAQ,EAAE;AAAA,EACxE;AAAA,EACI,MAAM,eAAe;AACjB,QAAI,KAAK,cAAc,MAAM;AACzB,aAAO,KAAK;AAAA,IACxB;AACQ,UAAM,cAAc,IAAI,gBAAgB,EAAE,OAAO,IAAG,CAAE;AACtD,qBAAiB,YAAY,KAAK,cAAc,aAAa,WAAW,GAAG;AACvE,WAAK,YAAY,SAAS,CAAC,EAAE;AAC7B,aAAO,SAAS,CAAC,EAAE;AAAA,IAC/B;AACQ,UAAM,IAAI,MAAM,sCAAsC;AAAA,EAC9D;AAAA,EACI,OAAO,aAAa,EAAE,YAAY,MAAM,cAAc,oBAAoB,sBAAsB,eAAe,SAAW,IAAG,IAAI;AAC7H,UAAM,SAAS,IAAI,gBAAiB;AACpC,QAAI,eAAe,QAAW;AAC1B,iBAAW,aAAa,YAAY;AAChC,eAAO,OAAO,MAAM,SAAS;AAAA,MAC7C;AAAA,IACA;AACQ,QAAI,SAAS,QAAW;AACpB,aAAO,OAAO,QAAQ,IAAI;AAAA,IACtC;AACQ,QAAI,iBAAiB,QAAW;AAC5B,aAAO,OAAO,iBAAiB,YAAY;AAAA,IACvD;AACQ,QAAI,uBAAuB,QAAW;AAClC,aAAO,OAAO,qBAAqB,kBAAkB;AAAA,IACjE,WACiB,yBAAyB,QAAW;AACzC,YAAM,UAAU,MAAM,KAAK,YAAY;AAAA,QACnC,aAAa;AAAA,MAC7B,CAAa;AACD,aAAO,OAAO,qBAAqB,QAAQ,EAAE;AAAA,IACzD;AACQ,QAAI,kBAAkB,QAAW;AAC7B,aAAO,OAAO,kBAAkB,cAAc,SAAQ,CAAE;AAAA,IACpE;AACQ,QAAI,aAAa,QAAW;AACxB,aAAO,OAAO,YAAY,KAAK,UAAU,QAAQ,CAAC;AAAA,IAC9D;AACQ,qBAAiB,YAAY,KAAK,cAAc,aAAa,MAAM,GAAG;AAClE,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,MAAM,cAAc,EAAE,WAAW,eAAgB;AAC7C,QAAI;AACJ,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE,WACiB,cAAc,UAAa,gBAAgB,QAAW;AAC3D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,oBAAc,MAAM,KAAK,YAAY,EAAE,YAAa,CAAA,GAAG;AAAA,IACnE,OACa;AACD,mBAAa;AAAA,IACzB;AACQ,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,IAAI;AAAA,MACxG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,kBAAkB,UAAU,KAAK,WAAW,KAAK,IAAI;AAAA,EAC5F;AAAA,EACI,MAAM,UAAU,EAAE,SAAS,UAAU,WAAW,YAAY,aAAa,UAAU,QAAS;AACxF,UAAM,MAAM,GAAG,KAAK,MAAM;AAC1B,UAAM,WAAW,IAAI,SAAU;AAC/B,aAAS,OAAO,QAAQ,SAAS,QAAQ;AACzC,cAAU,QAAQ,CAAC,QAAQ;AACvB,eAAS,OAAO,cAAc,GAAG;AAAA,IAC7C,CAAS;AACD,eAAW,QAAQ,CAAC,QAAQ;AACxB,eAAS,OAAO,eAAe,GAAG;AAAA,IAC9C,CAAS;AACD,QAAI,aAAa;AACb,eAAS,OAAO,eAAe,WAAW;AAAA,IACtD;AACQ,QAAI,UAAU;AACV,eAAS,OAAO,aAAa,QAAQ;AAAA,IACjD;AACQ,QAAI,MAAM;AACN,eAAS,OAAO,QAAQ,IAAI;AAAA,IACxC;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,KAAK;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM;AAAA,MACN,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,YAAY;AAC3C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,cAAc,MAAM,EAAE,aAAa,UAAU,cAAc,eAAe,SAAW,IAAG,IAAI;AAC9F,UAAM,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA,OAAO,WAAW,EAAE,SAAQ,IAAK;AAAA,IACpC;AACD,QAAI,UAAU;AACV,WAAK,YAAY;AAAA,IAC7B;AACQ,QAAI,cAAc;AACd,WAAK,2BAA2B;AAAA,IAC5C;AACQ,QAAI,eAAe;AACf,WAAK,4BAA4B;AAAA,IAC7C;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,aAAa;AAAA,MAC1F,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,YAAY,EAAE,WAAW,eAAgB;AAC3C,QAAIA,QAAO;AAEX,UAAM,SAAS,IAAI,gBAAgB,EAAE,OAAO,IAAG,CAAE;AACjD,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,iBAAW,SAAS;AACpB,MAAAA,SAAQ,IAAI,SAAS;AAAA,IACjC,WACiB,gBAAgB,QAAW;AAChC,aAAO,OAAO,QAAQ,WAAW;AAAA,IAC7C,OACa;AACD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE;AACQ,UAAM,WAAW,MAAM,KAAK,KAAKA,OAAM,MAAM;AAC7C,QAAI;AACJ,QAAI,MAAM,QAAQ,QAAQ,GAAG;AACzB,UAAI,SAAS,WAAW,GAAG;AACvB,cAAM,IAAI,MAAM,cAAc,SAAS,UAAU,WAAW,aAAa;AAAA,MACzF;AACY,eAAS,SAAS,CAAC;AAAA,IAC/B,OACa;AACD,eAAS;AAAA,IACrB;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,WAAW,EAAE,WAAW,eAAgB;AAC1C,QAAI;AACA,YAAM,KAAK,YAAY,EAAE,WAAW,YAAW,CAAE;AACjD,aAAO;AAAA,IACnB,SACeI,IAAG;AACN;AAAA;AAAA,QAEAA,cAAa,SACTA,GAAE,QAAQ,kBAAmB,EAAC,SAAS,WAAW;AAAA,QAAG;AACrD,eAAO;AAAA,MACvB;AACY,YAAMA;AAAA,IAClB;AAAA,EACA;AAAA,EACI,MAAM,oBAAoB,EAAE,WAAW,aAAa,aAAa,UAAS,GAAK;AAC3E,QAAI,aAAa;AACjB,QAAI,eAAe,UAAa,gBAAgB,QAAW;AACvD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E,WACiB,eAAe,UAAa,gBAAgB,QAAW;AAC5D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,eAAe,QAAW;AAC/B,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC;AACQ,UAAM,YAAY,IAAI,gBAAgB;AAAA,MAClC,cAAc,OAAO,gBAAgB,WAC/B,cACA,YAAY,YAAa;AAAA,MAC/B,YAAY,OAAO,cAAc,WAAW,YAAY,UAAU,YAAa;AAAA,IAC3F,CAAS;AACD,UAAM,WAAW,MAAM,KAAK,KAAK,aAAa,UAAU,kBAAkB,SAAS;AACnF,WAAO;AAAA,EACf;AAAA,EACI,MAAM,4BAA4B,EAAE,WAAW,eAAgB;AAC3D,UAAMJ,QAAO;AACb,QAAI,cAAc,OAAW;AAAA,aAGpB,gBAAgB,QAAW;AAChC,mBAAa,MAAM,KAAK,YAAY,EAAE,YAAa,CAAA,GAAG;AAAA,IAClE,OACa;AACD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE;AACQ,UAAM,WAAW,MAAM,KAAK,aAAa,GAAGA,KAAI,IAAI,SAAS,YAAY;AACzE,UAAM,cAAc,MAAM,SAAS,KAAM;AACzC,UAAM,UAAU,YACX,KAAI,EACJ,MAAM,IAAI,EACV,IAAI,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC;AACnC,WAAO;AAAA,EACf;AAAA,EACI,OAAO,aAAa,EAAE,OAAAkH,SAAQ,KAAK,SAAS,GAAG,YAAY,aAAa,qBAAqB,SAAQ,IAAM,CAAA,GAAI;AAC3G,UAAMlH,QAAO;AACb,UAAM,SAAS,IAAI,gBAAgB;AAAA,MAC/B,OAAOkH,OAAM,SAAU;AAAA,MACvB,QAAQ,OAAO,SAAU;AAAA,IACrC,CAAS;AACD,QAAI,eAAe,QAAW;AAC1B,iBAAW,OAAO,YAAY;AAC1B,eAAO,OAAO,MAAM,GAAG;AAAA,MACvC;AAAA,IACA;AACQ,QAAI,gBAAgB,QAAW;AAC3B,aAAO,OAAO,QAAQ,WAAW;AAAA,IAC7C;AACQ,QAAI,wBAAwB,QAAW;AACnC,aAAO,OAAO,iBAAiB,mBAAmB;AAAA,IAC9D;AACQ,QAAI,aAAa,QAAW;AACxB,aAAO,OAAO,YAAY,KAAK,UAAU,QAAQ,CAAC;AAAA,IAC9D;AACQ,qBAAiB,YAAY,KAAK,cAAclH,OAAM,MAAM,GAAG;AAC3D,aAAO;AAAA,IACnB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,cAAc,OAAO;AACvB,UAAM,EAAE,WAAW,aAAa,GAAGmH,QAAQ,IAAG;AAC9C,QAAI,CAAC,aAAa,CAAC,aAAa;AAC5B,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E;AACQ,UAAM,aAAa,cAAc,MAAM,KAAK,YAAY,EAAE,YAAa,CAAA,GAAG;AAC1E,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,IAAI;AAAA,MACxG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAUA,OAAM;AAAA,MAC3B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,WAAQ,MAAM,SAAS,KAAM;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBI,MAAM,iBAAiB,OAAO;AAC1B,UAAM,EAAE,WAAW,aAAa,MAAM,IAAK,IAAG;AAC9C,QAAI,CAAC,aAAa,CAAC,aAAa;AAC5B,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E;AACQ,UAAM,aAAa,cAAc,MAAM,KAAK,YAAY,EAAE,YAAa,CAAA,GAAG;AAC1E,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,SAAS;AAAA,MAC7G,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU;AAAA,QACjB,OAAO,OAAO,SAAS,WAAW,OAAO,KAAK,YAAa;AAAA,QAC3D;AAAA,MAChB,CAAa;AAAA,MACD,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,qBAAqB;AAAA,EAC5D;AAAA,EACI,MAAM,cAAc,EAAE,WAAW,eAAgB;AAC7C,QAAInH,QAAO;AACX,QAAI,aAAa;AACjB,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,gBAAgB,QAAW;AAChC,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC;AACQ,QAAI,eAAe,QAAW;AAC1B,iBAAW,UAAU;AACrB,MAAAA,SAAQ,IAAI,UAAU;AAAA,IAClC,OACa;AACD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACnE;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,2BAA2B,KAAK,SAASA,OAAM;AAAA,MACnF,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,UAAUA,KAAI,EAAE;AAC/C,UAAM,SAAS,KAAM;AAAA,EAC7B;AAAA,EACI,MAAM,aAAa,EAAE,WAAW,aAAa,IAAG,GAAK;AACjD,QAAI,aAAa;AACjB,QAAI,CAAC,cAAc,CAAC,aAAa;AAC7B,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E,WACiB,cAAc,aAAa;AAChC,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,CAAC,YAAY;AAClB,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC;AACQ,eAAW,UAAU;AACrB,UAAM,OAAO;AAAA,MACT;AAAA,IACH;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,UAAU;AAAA,MAC9G,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,eAAe;AAC9C,UAAM,SAAS,KAAM;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BI,MAAM,gBAAgB,QAAQ,WAAWkH,QAAO,EAAE,OAAS,IAAG,IAAI;AAC9D,UAAM,OAAO;AAAA,MACT,OAAOA;AAAA,MACP;AAAA,IACH;AACD,QAAI,WAAW,QAAW;AACtB,WAAK,QAAQ,IAAI;AAAA,IAC7B;AACQ,eAAW,SAAS;AACpB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,SAAS,WAAW;AAAA,MAC9G,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,wBAAwB;AACvD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO,OAAO,UAAU;AAAA,EAChC;AAAA,EACI,MAAM,cAAc,QAAQ,SAAS,EAAE,WAAW,aAAa,WAAW,WAAW,UAAU,OAAO,YAAW,GAAK;AAClH,QAAI,aAAa;AACjB,QAAI,eAAe,UAAa,gBAAgB,QAAW;AACvD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E,WACiB,eAAe,UAAa,gBAAgB,QAAW;AAC5D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,eAAe,QAAW;AAC/B,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC;AACQ,UAAM,aAAa,aAAa,oBAAI,KAAM;AAC1C,UAAM,OAAO;AAAA,MACT,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA,YAAY,yCAAY;AAAA,MACxB,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MACA,eAAe;AAAA,IAClB;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,aAAa;AAAA,MAC1F,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,OAAO;AACxB,UAAM,EAAE,QAAQ,SAAS,UAAU,cAAc,YAAY,WAAW,YAAW,IAAM;AACzF,QAAI,aAAa;AACjB,QAAI,eAAe,UAAa,gBAAgB,QAAW;AACvD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAC1E,WACiB,eAAe,UAAa,gBAAgB,QAAW;AAC5D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,eAAe,QAAW;AAC/B,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC;AACQ,UAAM,oBAAoB,OAAO,IAAI,CAAC,OAAO,QAAQ;AACjD,aAAO;AAAA,QACH,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,SAAS,UAAU,QAAQ,GAAG,IAAI;AAAA,QAClC,UAAU,WAAW,SAAS,GAAG,IAAI;AAAA,QACrC,OAAO,MAAM,SAAS,MAAM,OAAO,GAAG,IAAI;AAAA,QAC1C,IAAI,aAAa,WAAW,GAAG,IAAI;AAAA,QACnC,eAAe,eAAe,aAAa,GAAG,IAAI;AAAA,MACrD;AAAA,IACb,CAAS;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,kBAAkB;AAAA,MAC/F,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,iBAAiB;AAAA,MACtC,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,iBAAiB;AAChD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,iBAAiB,OAAO,YAAY,SAAS;AAC/C,WAAO,KAAK,cAAc,EAAE,MAAK,GAAI,EAAE,QAAQ,WAAY,GAAE,OAAO;AAAA,EAC5E;AAAA,EACI,MAAM,kBAAkB,OAAO,aAAa,SAAS;AACjD,UAAM,aAAa,MAAM,IAAI,CAAC,YAAY;AACtC,UAAI,mBAAmB,OAAO,GAAG;AAC7B,eAAO,iCAAiC,OAAO;AAAA,MAC/D;AACY,aAAO;AAAA,IACnB,CAAS;AACD,UAAM,cAAc,mBAAmB,WAAW,IAC5C,iCAAiC,WAAW,IAC5C;AACN,WAAO,KAAK,cAAc,EAAE,OAAO,WAAY,GAAE,EAAE,QAAQ,YAAa,GAAE,OAAO;AAAA,EACzF;AAAA,EACI,MAAM,YAAY,WAAW;AACzB,eAAW,SAAS;AACpB,UAAMlH,QAAO,aAAa,SAAS;AACnC,UAAM,aAAa,MAAM,KAAK,KAAKA,KAAI;AACvC,UAAM,EAAE,iBAAiB,GAAG,KAAI,IAAK;AACrC,UAAM,UAAU;AAChB,QAAI,iBAAiB;AAEjB,cAAQ,cAAc,OAAO,QAAQ,eAAe,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AAChF,YAAI,IAAI,MAAM,cAAc,MAAM,CAAC,IAAI;AAAA,UACnC,eAAe,MAAM;AAAA,UACrB,WAAW,MAAM;AAAA,QACpB;AACD,eAAO;AAAA,MACV,GAAE,EAAE;AAAA,IACjB;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,aAAa,EAAE,WAAW,aAAa,YAAY,MAAM,QAAQ,cAAc,UAAU,OAAAkH,QAAO,QAAQ,QAAQ,mBAAkB,IAAM,CAAA,GAAI;AAC/I,QAAI;AACJ,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,mBAAa;AAAA,IACzB,WACiB,gBAAgB,QAAW;AAChC,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC,OACa;AACD,YAAM,IAAI,MAAM,yCAAyC;AAAA,IACrE;AACQ,UAAM,SAAS,IAAI,gBAAgB,EAAE,SAAS,WAAU,CAAE;AAC1D,UAAM,kBAAkB,OAClB,OAAO,SAAS,WACZ,OACA,6BAAM,gBACV;AACN,QAAI,iBAAiB;AACjB,aAAO,OAAO,SAAS,eAAe;AAAA,IAClD;AACQ,UAAM,gBAAgB,gBAAgB;AACtC,WAAO,OAAO,kBAAkB,cAAc,SAAQ,CAAE;AACxD,QAAI,eAAe,QAAW;AAC1B,iBAAW,OAAO,YAAY;AAC1B,eAAO,OAAO,MAAM,GAAG;AAAA,MACvC;AAAA,IACA;AACQ,QAAI,WAAW,QAAW;AACtB,iBAAW,SAAS,QAAQ;AACxB,eAAO,OAAO,UAAU,KAAK;AAAA,MAC7C;AAAA,IACA;AACQ,QAAI,aAAa,QAAW;AACxB,YAAM,qBAAqB,KAAK,UAAU,QAAQ;AAClD,aAAO,OAAO,YAAY,kBAAkB;AAAA,IACxD;AACQ,QAAIA,WAAU,QAAW;AACrB,aAAO,OAAO,SAASA,OAAM,SAAQ,CAAE;AAAA,IACnD;AACQ,QAAI,WAAW,QAAW;AACtB,aAAO,OAAO,UAAU,OAAO,SAAQ,CAAE;AAAA,IACrD;AACQ,QAAI,WAAW,QAAW;AACtB,aAAO,OAAO,UAAU,MAAM;AAAA,IAC1C;AACQ,QAAI,uBAAuB,MAAM;AAC7B,OAAC,mBAAmB,WAAW,UAAU,EAAE,QAAQ,CAAC,UAAU,OAAO,OAAO,UAAU,KAAK,CAAC;AAAA,IACxG;AACQ,QAAIzH,KAAI;AACR,qBAAiB,eAAe,KAAK,cAAc,aAAa,MAAM,GAAG;AACrE,iBAAW,cAAc,aAAa;AAClC,cAAM,EAAE,iBAAiB,GAAG,KAAI,IAAK;AACrC,cAAM,UAAU;AAChB,YAAI,iBAAiB;AACjB,kBAAQ,cAAc,OAAO,QAAQ,eAAe,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AAChF,gBAAI,IAAI,MAAM,cAAc,MAAM,CAAC,IAAI;AAAA,cACnC,eAAe,MAAM;AAAA,cACrB,WAAW,MAAM,aAAa;AAAA,YACjC;AACD,mBAAO;AAAA,UACV,GAAE,EAAE;AAAA,QACzB;AACgB,cAAM;AACN,QAAAA;AAAA,MAChB;AACY,UAAIyH,WAAU,UAAazH,MAAKyH,QAAO;AACnC;AAAA,MAChB;AAAA,IACA;AAAA,EACA;AAAA,EACI,MAAM,cAAc,WAAW;AAC3B,eAAW,SAAS;AACpB,UAAMlH,QAAO,aAAa,SAAS;AACnC,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,2BAA2B,KAAK,SAASA,OAAM;AAAA,MACnF,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,UAAUA,KAAI,EAAE;AAC/C,UAAM,SAAS,KAAM;AAAA,EAC7B;AAAA,EACI,MAAM,cAAc,WAAWmH,SAAQ;AACnC,eAAW,SAAS;AACpB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,SAAS,IAAI;AAAA,MACvG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAUA,OAAM;AAAA,MAC3B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gBAAgB;AAC/C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAeA,SAAQ;AACzB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,kBAAkB;AAAA,MAC/F,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAUA,OAAM;AAAA,MAC3B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,iBAAiB;AAChD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaI,MAAM,mBAAmB,EAAE,WAAW,aAAa,MAAM,IAAG,GAAK;AAC7D,QAAI;AACJ,QAAI,CAAC,WAAW;AACZ,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,0BAAoB,QAAQ;AAAA,IACxC,OACa;AACD,0BAAoB;AAAA,IAChC;AACQ,eAAW,iBAAiB;AAC5B,QAAK,QAAQ,OAAS,CAAC,QAAQ,CAAC,KAAM;AAClC,YAAM,IAAI,MAAM,gDAAgD;AAAA,IAC5E;AACQ,UAAM,SAAS,IAAI,gBAAiB;AACpC,QAAI,SAAS,QAAW;AACpB,aAAO,OAAO,SAAS,OAAO,SAAS,WAAW,OAAO,KAAK,aAAa;AAAA,IACvF;AACQ,QAAI,QAAQ,QAAW;AACnB,aAAO,OAAO,OAAO,GAAG;AAAA,IACpC;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,iBAAiB,YAAY,OAAO,SAAU,CAAA,IAAI;AAAA,MAC5I,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,QAAS;AAAA,MAC5B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,sBAAsB;AACrD,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA,EACI,MAAM,kBAAkB,EAAE,WAAW,aAAa,KAAI,GAAK;AACvD,QAAI;AACJ,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,iCAAiC;AAAA,IAC7D,WACiB,cAAc,UAAa,gBAAgB,QAAW;AAC3D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC,OACa;AACD,mBAAa;AAAA,IACzB;AACQ,eAAW,UAAU;AACrB,UAAM,SAAS,IAAI,gBAAiB;AACpC,UAAM,kBAAkB,OAClB,OAAO,SAAS,WACZ,OACA,6BAAM,gBACV;AACN,QAAI,iBAAiB;AACjB,aAAO,OAAO,SAAS,eAAe;AAAA,IAClD;AACQ,UAAM,WAAW,MAAM,KAAK,KAAK,aAAa,UAAU,WAAW,MAAM;AACzE,WAAO;AAAA,EACf;AAAA,EACI,MAAM,oBAAoB,EAAE,WAAW,aAAa,WAAW,YAAY,SAAS,SAAU;AAC1F,QAAI;AACJ,QAAI,cAAc,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,MAAM,iCAAiC;AAAA,IAC7D,WACiB,cAAc,UAAa,gBAAgB,QAAW;AAC3D,YAAM,IAAI,MAAM,wDAAwD;AAAA,IACpF,WACiB,cAAc,QAAW;AAC9B,YAAM,UAAU,MAAM,KAAK,YAAY,EAAE,YAAW,CAAE;AACtD,mBAAa,QAAQ;AAAA,IACjC,OACa;AACD,mBAAa;AAAA,IACzB;AACQ,eAAW,UAAU;AACrB,UAAM,OAAO;AAAA,MACT,YAAY;AAAA,MACZ,UAAU,WAAW,IAAI,CAAC,OAAO;AAC7B,mBAAW,EAAE;AACb,eAAO;AAAA,MACvB,CAAa;AAAA,MACD;AAAA,IACH;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,WAAW;AAAA,MAC/G,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,yBAAyB,IAAI;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,YAAY,KAAK,WAAW,EAAE,YAAY,eAAe,qBAAsB,EAAE,eAAe,SAAS;AAC3G,aAAS,iIAAiI;AAC1I,QAAI;AACJ,QAAI,OAAO,QAAQ,UAAU;AACzB,aAAO,MAAM,KAAK,QAAQ,KAAK,EAAE,cAAa,CAAE;AAAA,IAC5D,WACiB,OAAO,QAAQ,YAAY,QAAQ,KAAK;AAC7C,aAAO;AAAA,IACnB,OACa;AACD,YAAM,IAAI,MAAM,qBAAqB,OAAO,GAAG,EAAE;AAAA,IAC7D;AACQ,QAAI,KAAK,yBAAyB,QAC9B,KAAK,yBAAyB,QAAW;AACzC,yBAAmB,MAAM,KAAK,YAAY,KAAK,oBAAoB;AAAA,IAC/E;AACQ,UAAM,iBAAiB,MAAM,UAAU,YAAY,MAAM,gBAAgB;AACzE,UAAM,CAACxH,IAAG,SAAS,IAAI,MAAM,KAAK,uBAAuB,gBAAgB,MAAM,UAAU;AACzF,WAAO,UAAU,CAAC;AAAA,EAC1B;AAAA,EACI,MAAM,eAAe,OAAO,KAAK,EAAE,OAAO,OAAO,YAAY,SAAS,YAAY,qBAAqB,OAAO,aAAa,YAAY,gBAAgB,WAAW,2BAA4B;;AAC1L,QAAI,CAAC,SAAS,CAAC,WAAW;AACtB,YAAM,IAAI,MAAM,4CAA4C;AAAA,IACxE;AACQ,QAAI,SAAS,WAAW;AACpB,YAAM,IAAI,MAAM,gDAAgD;AAAA,IAC5E;AACQ,UAAM,kBAAkB;AAAA,MACpB,MAAM,sBAAsB;AAAA,MAC5B,UAAU,cAAc,CAAE;AAAA,IAC7B;AACD,QAAI,gBAAgB,WAChB,mDAAiB,cAAa,UAC9B,CAAC,gBAAgB,SAAS,OAAO,GAAG;AACpC,sBAAgB,SAAS,OAAO,IAAI,EAAE,QAAQ,YAAa;AAAA,IACvE;AACQ,SAAI,mDAAiB,cAAa,YAC9BO,MAAA,gBAAgB,SAAS,OAAO,MAAhC,gBAAAA,IAAmC,YAAW,QAAW;AACzD,iBAAW,gBAAgB,SAAS,OAAO,EAAE,MAAM;AAAA,IAC/D;AACQ,UAAM,WAAW;AAAA,MACb,IAAI,cAAcmH,GAAS;AAAA,MAC3B,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,2BAA2B;AAAA,MAC3B;AAAA,MACA,YAAY;AAAA,IACf;AACD,UAAM,MAAM,GAAG,KAAK,MAAM;AAC1B,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,KAAK;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,QAAQ;AAAA,MAC7B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,mBAAmB,IAAI;AACtD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,YAAY,EAAE,OAAO,OAAO,YAAY,WAAY;AACrE,UAAM,iBAAiB,CAAE;AACzB,QAAI,UAAU,UAAa,UAAU,MAAM;AACvC,qBAAe,OAAO,IAAI;AAAA,IACtC;AACQ,QAAI,UAAU,UAAa,UAAU,MAAM;AACvC,qBAAe,OAAO,IAAI;AAAA,IACtC;AACQ,QAAI,eAAe,UAAa,eAAe,MAAM;AACjD,qBAAe,YAAY,IAAI;AAAA,IAC3C;AACQ,QAAI,YAAY,UAAa,YAAY,MAAM;AAC3C,qBAAe,SAAS,IAAI;AAAA,IACxC;AACQ,eAAW,UAAU;AACrB,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,aAAa,UAAU,IAAI;AAAA,MACxG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,cAAc;AAAA,MACnC,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,mBAAmB,IAAI;AAAA,EAC9D;AAAA,EACI,MAAM,aAAa,YAAY;AAC3B,eAAW,UAAU;AACrB,UAAMrH,QAAO,aAAa,UAAU;AACpC,UAAM,WAAW,MAAM,KAAK,KAAKA,KAAI;AACrC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,YAAY;AAC7B,eAAW,UAAU;AACrB,UAAMA,QAAO,aAAa,UAAU;AACpC,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,2BAA2B,KAAK,SAASA,OAAM;AAAA,MACnF,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,UAAUA,KAAI,EAAE;AAC/C,UAAM,SAAS,KAAM;AAAA,EAC7B;AAAA,EACI,OAAO,aAAa,EAAE,QAAQ,cAAc,oBAAmB,IAAM,CAAA,GAAI;AACrE,UAAM,cAAc,IAAI,gBAAiB;AACzC,QAAI,QAAQ;AACR,kBAAY,OAAO,OAAO,OAAO,KAAK,GAAG,CAAC;AAAA,IACtD;AACQ,QAAI,cAAc;AACd,iBAAW,OAAO,cAAc;AAC5B,oBAAY,OAAO,OAAO,GAAG;AAAA,MAC7C;AAAA,IACA;AACQ,QAAI,qBAAqB;AACrB,iBAAW,QAAQ,qBAAqB;AACpC,oBAAY,OAAO,UAAU,IAAI;AAAA,MACjD;AAAA,IACA;AACQ,qBAAiB,aAAa,KAAK,cAAc,aAAa,WAAW,GAAG;AACxE,aAAO;AAAA,IACnB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBI,MAAM,6BAA6B,OAAO,aAAa,EAAE,YAAY,eAAiB,IAAG,IAAI;AACzF,UAAM,OAAO;AAAA,MACT,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,iBAAiB;AAAA,IACpB;AACD,QAAI,YAAY;AACZ,UAAI,OAAO,eAAe,UAAU;AAChC,aAAK,YAAY,IAAI;AAAA,MACrC,YACqB,yCAAY,WAAS,yCAAY,aAAW,yCAAY,OAAM;AACnE,aAAK,YAAY,IAAI;AAAA,MACrC;AAAA,IACA,OACa;AACD,WAAK,YAAY,IAAI;AAAA,QACjB,OAAO;AAAA,MACV;AAAA,IACb;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,oBAAoB;AAAA,MACjG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,4BAA4B,EAAE,MAAM,eAAe,oBAAoB,WAAW,aAAa,UAAU,MAAO;;AAClH,QAAI,cAAc,WAAW,GAAG;AAC5B,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACjE;AACQ,QAAI,CAAC,oBAAoB;AACrB,4BAAsB,MAAM,KAAK,YAAY;AAAA,QACzC,WAAW,cAAc,CAAC;AAAA,MAC7B,CAAA,GAAG;AAAA,IAChB;AACQ,QAAI,CAAC,sBAAsB,MAAM;AAC7B,YAAM,IAAI,MAAM,iCAAiC;AAAA,IAC7D;AACQ,UAAM,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA,MAChB,sBAAsB;AAAA,MACtB;AAAA,MACA,aAAaE,MAAA,aAAa,oBAAI,KAAI,MAArB,gBAAAA,IAA0B;AAAA,MACvC,OAAO,CAAE;AAAA,IACZ;AACD,QAAI;AACA,WAAK,MAAM,UAAU,IAAI;AAC7B,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,yBAAyB;AAAA,MACtG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,OAAO,4BAA4B,OAAO;AACtC,eAAW,KAAK;AAChB,UAAM,SAAS,IAAI,gBAAgB,EAAE,QAAQ,MAAK,CAAE;AACpD,qBAAiB,UAAU,KAAK,cAAc,oBAAoB,MAAM,GAAG;AACvE,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,mBAAmB,SAAS;AACxB,QAAI;AACJ,QAAI,aAAa,SAAS;AACtB,iBAAW,QAAQ;AAAA,IAC/B,OACa;AACD,iBAAW,CAAC,OAAO;AAAA,IAC/B;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,uBAAuB,mBAAmB,KAAK,YAAY;AAC7D,UAAM,cAAc,KAAK,mBAAmB,iBAAiB;AAC7D,UAAM,YAAY,CAAE;AACpB,eAAW,OAAO,aAAa;AAC3B,UAAI,cAAc,cAAc,CAAE;AAClC,UAAI,IAAI,eAAe;AACnB,sBAAc,EAAE,GAAG,IAAI,eAAe,GAAG,YAAa;AAAA,MACtE;AACY,UAAI,SAAS;AACb,UAAI,IAAI,aAAa;AACjB,iBAAS,IAAI;AAAA,MAC7B,WACqB,KAAK;AACV,iBAAS,IAAI;AAAA,MAC7B;AACY,gBAAU,KAAK,MAAM,KAAK,eAAe,QAAQ,IAAI,KAAK;AAAA,QACtD,OAAO,IAAI;AAAA,QACX,OAAO,IAAI;AAAA,QACX,SAAS,IAAI;AAAA,QACb,YAAY,IAAI;AAAA,QAChB,YAAY;AAAA,QACZ,aAAa,IAAI;AAAA,QACjB,gBAAgB,IAAI;AAAA,QACpB,oBAAoB;AAAA,MACpC,CAAa,CAAC;AAAA,IACd;AACQ,WAAO,CAAC,aAAa,SAAS;AAAA,EACtC;AAAA,EACI,MAAM,sBAAsB,mBAAmB,KAAK,YAAY;AAC5D,UAAM,CAAC,OAAO,IAAI,MAAM,KAAK,uBAAuB,mBAAmB,KAAK,UAAU;AACtF,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaI,OAAO,qBAAqB,UAAU,IAAI;AACtC,UAAM,EAAE,UAAU,MAAM,cAAc,OAAAgH,OAAO,IAAG;AAChD,UAAM,SAAS,IAAI,gBAAiB;AACpC,QAAI,UAAU;AACV,eAAS,QAAQ,CAAC,IAAIzH,OAAM;AACxB,mBAAW,IAAI,YAAYA,EAAC,GAAG;AAC/B,eAAO,OAAO,OAAO,EAAE;AAAA,MACvC,CAAa;AAAA,IACb;AACQ,QAAI;AACA,aAAO,OAAO,QAAQ,IAAI;AAC9B,QAAI;AACA,aAAO,OAAO,iBAAiB,YAAY;AAC/C,WAAO,OAAO,UAAUyH,WAAU,SAAY,KAAK,IAAIA,QAAO,GAAG,IAAI,KAAK,SAAQ,CAAE;AACpF,QAAI,QAAQ;AACZ,qBAAiB,UAAU,KAAK,cAAc,sBAAsB,MAAM,GAAG;AACzE,aAAO;AACP;AACA,UAAIA,WAAU,UAAa,SAASA;AAChC;AAAA,IAChB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASI,MAAM,sBAAsB,SAAS;AACjC,UAAM,EAAE,MAAM,aAAa,QAAS,IAAG;AACvC,UAAM,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA,IAAI,WAAWG,GAAS;AAAA,IAC3B;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,sBAAsB;AAAA,MACnG,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,OAAO,YAAY,OAAO,QAAQ,IAAI,EAAE,OAAO,CAAC,CAAC1H,IAAGgE,EAAC,MAAMA,OAAM,MAAS,CAAC,CAAC;AAAA,MACjG,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,yBAAyB;AACxD,UAAM,OAAO,MAAM,SAAS,KAAM;AAClC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,oBAAoB,SAAS;AAE/B,UAAM,sBAAsB,MAAM,KAAK,qBAAqB;AAAA,MACxD,UAAU,CAAC,OAAO;AAAA,IACrB,CAAA,EAAE,KAAM;AACT,QAAI,oBAAoB,MAAM;AAC1B,YAAM,IAAI,MAAM,4BAA4B,OAAO,YAAY;AAAA,IAC3E;AACQ,WAAO,oBAAoB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,MAAM,sBAAsB,SAAS,SAAS;AAC1C,UAAM,EAAE,MAAM,YAAW,IAAK;AAC9B,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,sBAAsB,WAAW,SAAS,SAAS,CAAC,IAAI;AAAA,MACrI,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,EAAE,MAAM,YAAW,CAAE;AAAA,MAC1C,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,yBAAyB;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,sBAAsB,SAAS;AACjC,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,sBAAsB,WAAW,SAAS,SAAS,CAAC,IAAI;AAAA,MACrI,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,QAAQ,mBAAoB;AAAA,MACxD,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,yBAAyB;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,yBAAyB,SAAS,QAAQ;AAC5C,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,sBAAsB,WAAW,SAAS,SAAS,CAAC,SAAS;AAAA,MAC1I,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,OAAO,IAAI,CAAC,IAAIlE,OAAM,WAAW,IAAI,UAAUA,EAAC,GAAG,EAAE,SAAQ,CAAE,CAAC;AAAA,MACrF,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,8BAA8B;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,MAAM,0BAA0B,SAAS,OAAO;AAC5C,UAAM,UAAU,sBAAsB,WAAW,SAAS,SAAS,CAAC;AACpE,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,GAAG,OAAO,IAAI,KAAK,IAAI;AAAA,MACpG,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,+BAA+B;AAC9D,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,6BAA6B,SAAS,YAAY;AACpD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,sBAAsB,WAAW,SAAS,SAAS,CAAC,SAAS,WAAW,YAAY,YAAY,CAAC,IAAI;AAAA,MAClL,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,QAAQ,mBAAoB;AAAA,MACxD,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,kCAAkC;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,2BAA2B,SAAS;AACtC,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,sBAAsB,WAAW,SAAS,SAAS,CAAC,SAAS;AAAA,MAC1I,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,gCAAgC;AAC/D,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA,EACI,MAAM,sBAAsB,OAAO;AAC/B,UAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,WAAO,SAAS,OAAO,SAAS,kBAAkB;AAAA,EAC1D;AAAA,EACI,MAAM,oBAAoB,QAAQ,OAAO;AACrC,UAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,WAAO,IAAI,MAAM,UAAU,MAAM;AAAA;AAAA,wBACjB,SAAS,aAAa;AAAA;AAAA,0BACpB,KAAK,EAAE;AAAA,EACjC;AAAA,EACI,MAAM,qBAAqB,oBAAoB;AAC3C,UAAM,MAAM,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,YAAY,kBAAkB,WAAW,CAAC,WAAW,CAAC,IAAI;AAAA,MAClI,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,OAAO,MAAM,IAAI,KAAM;AAC7B,QAAI,CAAC,IAAI,IAAI;AACT,YAAM,SAAS,OAAO,KAAK,WAAW,WAChC,KAAK,SACL,KAAK,UAAU,KAAK,MAAM;AAChC,YAAM,QAAQ,IAAI,MAAM,SAAS,IAAI,MAAM,KAAK,IAAI,UAAU;AAAA,EAAK,MAAM,EAAE;AAE3E,YAAM,aAAa,IAAI;AACvB,YAAM;AAAA,IAClB;AACQ,QAAI,KAAK,QAAQ,WAAW,GAAG;AAC3B,aAAO;AAAA,IACnB;AACQ,WAAO,KAAK,QAAQ,CAAC,EAAE;AAAA,EAC/B;AAAA,EACI,MAAM,oBAAoB,kBAAkB6H,OAAM;AAC9C,UAAM,CAAC,OAAO,YAAY3H,EAAC,IAAI,sBAAsB,gBAAgB;AACrE,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,UAAU,KAAK,IAAI,UAAU,IAAI;AAAA,MAC9G,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,MAAM2H,MAAI,CAAE;AAAA,MACnC,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,GAAGA,QAAO,SAAS,QAAQ,SAAS;AACnE,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA,EACI,MAAM,cAAc,kBAAkB;AAClC,UAAM,CAAC,OAAO,YAAY,UAAU,IAAI,sBAAsB,gBAAgB;AAC9E,QAAI,CAAE,MAAM,KAAK,sBAAsB,KAAK,GAAI;AAC5C,UAAI,eAAe,UAAU;AACzB,eAAO,GAAG,KAAK,WAAU,CAAE,QAAQ,KAAK,IAAI,UAAU,IAAI,WAAW,UAAU,GAAG,CAAC,CAAC;AAAA,MACpG,OACiB;AACD,eAAO,GAAG,KAAK,WAAY,CAAA,QAAQ,KAAK,IAAI,UAAU;AAAA,MACtE;AAAA,IACA,OACa;AACD,YAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,UAAI,eAAe,UAAU;AACzB,eAAO,GAAG,KAAK,WAAY,CAAA,YAAY,UAAU,IAAI,WAAW,UAAU,GAAG,CAAC,CAAC,mBAAmB,SAAS,EAAE;AAAA,MAC7H,OACiB;AACD,eAAO,GAAG,KAAK,YAAY,YAAY,UAAU,mBAAmB,SAAS,EAAE;AAAA,MAC/F;AAAA,IACA;AAAA,EACA;AAAA,EACI,MAAM,aAAa,kBAAkB;AACjC,UAAM,SAAS,MAAM,KAAK,UAAU,gBAAgB;AACpD,WAAO,CAAC,CAAC;AAAA,EACjB;AAAA,EACI,MAAM,WAAW,kBAAkB;AAC/B,WAAO,KAAK,oBAAoB,kBAAkB,IAAI;AAAA,EAC9D;AAAA,EACI,MAAM,aAAa,kBAAkB;AACjC,WAAO,KAAK,oBAAoB,kBAAkB,KAAK;AAAA,EAC/D;AAAA,EACI,OAAO,YAAY,oBAAoB;AACnC,qBAAiB,WAAW,KAAK,cAAc,YAAY,kBAAkB,KAAK,IAAI,gBAAe,GAAI,CAAC,QAAQ,IAAI,OAAO,GAAG;AAC5H,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,OAAO,YAAY,SAAS;AACxB,UAAM,SAAS,IAAI,gBAAiB;AACpC,WAAO,OAAO,eAAc,mCAAS,cAAa,YAAY;AAC9D,WAAO,OAAO,kBAAkB,MAAM;AACtC,WAAO,OAAO,gBAAgB,CAAC,EAAC,mCAAS,aAAY,UAAU;AAC/D,SAAI,mCAAS,cAAa,QAAW;AACjC,aAAO,OAAO,aAAa,QAAQ,SAAS,SAAQ,CAAE;AAAA,IAClE;AACQ,QAAI,mCAAS,OAAO;AAChB,aAAO,OAAO,SAAS,QAAQ,KAAK;AAAA,IAChD;AACQ,qBAAiB,WAAW,KAAK,cAAc,UAAU,QAAQ,CAAC,QAAQ,IAAI,KAAK,GAAG;AAClF,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,MAAM,UAAU,kBAAkB;AAC9B,UAAM,CAAC,OAAO,YAAY3H,EAAC,IAAI,sBAAsB,gBAAgB;AACrE,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,UAAU,KAAK,IAAI,UAAU,IAAI;AAAA,MAC9G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,QAAI,SAAS,WAAW,KAAK;AACzB,aAAO;AAAA,IACnB;AACQ,UAAM,eAAe,UAAU,YAAY;AAC3C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,QAAI,OAAO,MAAM;AACb,aAAO,OAAO;AAAA,IAC1B,OACa;AACD,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,MAAM,aAAa,kBAAkB,SAAS;AAC1C,UAAM,WAAW,MAAM,KAAK,aAAc;AAC1C,SAAI,mCAAS,aAAY,CAAC,SAAS,eAAe;AAC9C,YAAM,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,4CAGgB;AAAA,IAC5C;AACQ,UAAM,CAAC,OAAO,YAAYA,EAAC,IAAI,sBAAsB,gBAAgB;AACrE,QAAI,CAAE,MAAM,KAAK,sBAAsB,KAAK,GAAI;AAC5C,YAAM,MAAM,KAAK,oBAAoB,mBAAmB,KAAK;AAAA,IACzE;AACQ,UAAM,OAAO;AAAA,MACT,aAAa;AAAA,MACb,IAAI,mCAAS,gBAAe,EAAE,aAAa,QAAQ,YAAW;AAAA,MAC9D,IAAI,mCAAS,WAAU,EAAE,QAAQ,QAAQ,OAAM;AAAA,MAC/C,IAAI,mCAAS,SAAQ,EAAE,MAAM,QAAQ,KAAI;AAAA,MACzC,WAAW,CAAC,EAAC,mCAAS;AAAA,IACzB;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAyB,GAAE,GAAG,KAAK,MAAM,WAAW;AAAA,MACxF,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,eAAe;AAC9C,UAAM,EAAE,KAAI,IAAK,MAAM,SAAS,KAAM;AACtC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,aAAa,kBAAkB,QAAQ,SAAS;AAClD,QAAI,CAAE,MAAM,KAAK,aAAa,gBAAgB,GAAI;AAC9C,YAAM,IAAI,MAAM,kDAAkD;AAAA,IAC9E;AACQ,UAAM,CAAC,OAAO,YAAYA,EAAC,IAAI,sBAAsB,gBAAgB;AACrE,UAAM,4BAA2B,mCAAS,sBAAqB,YAAY,EAAC,mCAAS,oBAC/E,MAAM,KAAK,qBAAqB,GAAG,KAAK,IAAI,UAAU,EAAE,IACxD,mCAAS;AACf,UAAM,UAAU;AAAA,MACZ,UAAU,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC;AAAA,MAC3C,eAAe;AAAA,IAClB;AACD,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,YAAY,KAAK,IAAI,UAAU,IAAI;AAAA,MAChH,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,KAAK,SAAS,gBAAgB,mBAAoB;AAAA,MAChE,MAAM,KAAK,UAAU,OAAO;AAAA,MAC5B,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,eAAe;AAC9C,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO,KAAK,cAAc,GAAG,KAAK,IAAI,UAAU,GAAG,OAAO,cAAc,IAAI,OAAO,WAAW,KAAK,EAAE,EAAE;AAAA,EAC/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,wBAAwB,WAAW,UAAU,IAAI;AACnD,QAAI,CAAE,MAAM,KAAK,qBAAoB,GAAK;AACtC,YAAM,IAAI,MAAM,mHAAmH;AAAA,IAC/I;AACQ,UAAM,WAAW,IAAI,SAAU;AAC/B,eAAW,WAAW,SAAS;AAC3B,YAAM,YAAY,QAAQ;AAE1B,YAAM,cAAc;AAAA,QAChB,GAAI,QAAQ,YAAY,EAAE,UAAU,QAAQ,SAAQ;AAAA,QACpD,GAAI,QAAQ,SAAS,EAAE,OAAO,QAAQ,MAAK;AAAA,MAC9C;AAED,YAAM,qBAAqBmH,YAAoB,WAAW;AAC1D,YAAM,cAAc,IAAI,KAAK,CAAC,kBAAkB,GAAG;AAAA,QAC/C,MAAM;AAAA,MACtB,CAAa;AACD,eAAS,OAAO,WAAW,WAAW;AAEtC,UAAI,QAAQ,QAAQ;AAChB,cAAM,oBAAoBA,YAAoB,QAAQ,MAAM;AAC5D,cAAM,aAAa,IAAI,KAAK,CAAC,iBAAiB,GAAG;AAAA,UAC7C,MAAM;AAAA,QAC1B,CAAiB;AACD,iBAAS,OAAO,GAAG,SAAS,WAAW,UAAU;AAAA,MACjE;AAEY,UAAI,QAAQ,SAAS;AACjB,cAAM,qBAAqBA,YAAoB,QAAQ,OAAO;AAC9D,cAAM,cAAc,IAAI,KAAK,CAAC,kBAAkB,GAAG;AAAA,UAC/C,MAAM;AAAA,QAC1B,CAAiB;AACD,iBAAS,OAAO,GAAG,SAAS,YAAY,WAAW;AAAA,MACnE;AAEY,UAAI,QAAQ,aAAa;AACrB,mBAAW,CAAC,MAAM,UAAU,KAAK,OAAO,QAAQ,QAAQ,WAAW,GAAG;AAClE,cAAI;AACJ,cAAI;AACJ,cAAI,MAAM,QAAQ,UAAU,GAAG;AAC3B,aAAC,UAAU,IAAI,IAAI;AAAA,UAC3C,OACyB;AACD,uBAAW,WAAW;AACtB,mBAAO,WAAW;AAAA,UAC1C;AACoB,gBAAM,iBAAiB,IAAI,KAAK,CAAC,IAAI,GAAG;AAAA,YACpC,MAAM,GAAG,QAAQ,YAAY,KAAK,UAAU;AAAA,UACpE,CAAqB;AACD,mBAAS,OAAO,GAAG,SAAS,eAAe,IAAI,IAAI,cAAc;AAAA,QACrF;AAAA,MACA;AACY,UAAI,QAAQ,wBAAwB;AAChC,cAAM,mCAAmCA,YAAoB,QAAQ,sBAAsB;AAC3F,cAAM,4BAA4B,IAAI,KAAK,CAAC,gCAAgC,GAAG;AAAA,UAC3E,MAAM;AAAA,QAC1B,CAAiB;AACD,iBAAS,OAAO,GAAG,SAAS,2BAA2B,yBAAyB;AAAA,MAChG;AAAA,IACA;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,yBAAyB,SAAS,aAAa;AAAA,MAC5H,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM;AAAA,IAClB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,wBAAwB,WAAW,UAAU,IAAI;AACnD,QAAI,CAAE,MAAM,KAAK,qBAAoB,GAAK;AACtC,YAAM,IAAI,MAAM,mHAAmH;AAAA,IAC/I;AACQ,UAAM,WAAW,IAAI,SAAU;AAC/B,eAAW,WAAW,SAAS;AAC3B,YAAM,aAAa,QAAQ,MAAMO,GAAO,GAAI,SAAU;AAEtD,YAAM,cAAc;AAAA,QAChB,YAAY,QAAQ;AAAA,QACpB,GAAI,QAAQ,YAAY,EAAE,UAAU,QAAQ,SAAQ;AAAA,QACpD,GAAI,QAAQ,SAAS,EAAE,OAAO,QAAQ,MAAK;AAAA,MAC9C;AAED,YAAM,qBAAqBP,YAAoB,WAAW;AAC1D,YAAM,cAAc,IAAI,KAAK,CAAC,kBAAkB,GAAG;AAAA,QAC/C,MAAM;AAAA,MACtB,CAAa;AACD,eAAS,OAAO,WAAW,WAAW;AAEtC,YAAM,oBAAoBA,YAAoB,QAAQ,MAAM;AAC5D,YAAM,aAAa,IAAI,KAAK,CAAC,iBAAiB,GAAG;AAAA,QAC7C,MAAM;AAAA,MACtB,CAAa;AACD,eAAS,OAAO,GAAG,SAAS,WAAW,UAAU;AAEjD,UAAI,QAAQ,SAAS;AACjB,cAAM,qBAAqBA,YAAoB,QAAQ,OAAO;AAC9D,cAAM,cAAc,IAAI,KAAK,CAAC,kBAAkB,GAAG;AAAA,UAC/C,MAAM;AAAA,QAC1B,CAAiB;AACD,iBAAS,OAAO,GAAG,SAAS,YAAY,WAAW;AAAA,MACnE;AAEY,UAAI,QAAQ,aAAa;AACrB,mBAAW,CAAC,MAAM,UAAU,KAAK,OAAO,QAAQ,QAAQ,WAAW,GAAG;AAClE,cAAI;AACJ,cAAI;AACJ,cAAI,MAAM,QAAQ,UAAU,GAAG;AAC3B,aAAC,UAAU,IAAI,IAAI;AAAA,UAC3C,OACyB;AACD,uBAAW,WAAW;AACtB,mBAAO,WAAW;AAAA,UAC1C;AACoB,gBAAM,iBAAiB,IAAI,KAAK,CAAC,IAAI,GAAG;AAAA,YACpC,MAAM,GAAG,QAAQ,YAAY,KAAK,UAAU;AAAA,UACpE,CAAqB;AACD,mBAAS,OAAO,GAAG,SAAS,eAAe,IAAI,IAAI,cAAc;AAAA,QACrF;AAAA,MACA;AAAA,IACA;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,yBAAyB,SAAS,aAAa;AAAA,MAC5H,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,MAAM;AAAA,IAClB,CAAS;AACD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,aAAa,kBAAkB,SAAS;AAC1C,QAAI,CAAE,MAAM,KAAK,aAAa,gBAAgB,GAAI;AAC9C,YAAM,IAAI,MAAM,kDAAkD;AAAA,IAC9E;AACQ,UAAM,CAAC,OAAO,UAAU,IAAI,sBAAsB,gBAAgB;AAClE,QAAI,CAAE,MAAM,KAAK,sBAAsB,KAAK,GAAI;AAC5C,YAAM,MAAM,KAAK,oBAAoB,mBAAmB,KAAK;AAAA,IACzE;AACQ,UAAM,UAAU,CAAE;AAClB,SAAI,mCAAS,iBAAgB;AACzB,cAAQ,cAAc,QAAQ;AAClC,SAAI,mCAAS,YAAW;AACpB,cAAQ,SAAS,QAAQ;AAC7B,SAAI,mCAAS,UAAS;AAClB,cAAQ,OAAO,QAAQ;AAC3B,SAAI,mCAAS,cAAa;AACtB,cAAQ,YAAY,QAAQ;AAChC,SAAI,mCAAS,gBAAe;AACxB,cAAQ,cAAc,QAAQ;AAElC,QAAI,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACnC,YAAM,IAAI,MAAM,kCAAkC;AAAA,IAC9D;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,UAAU,KAAK,IAAI,UAAU,IAAI;AAAA,MAC9G,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,OAAO;AAAA,MAC5B,SAAS;AAAA,QACL,GAAG,KAAK;AAAA,QACR,gBAAgB;AAAA,MACnB;AAAA,MACD,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,eAAe;AAC9C,WAAO,SAAS,KAAM;AAAA,EAC9B;AAAA,EACI,MAAM,aAAa,kBAAkB;AACjC,QAAI,CAAE,MAAM,KAAK,aAAa,gBAAgB,GAAI;AAC9C,YAAM,IAAI,MAAM,kDAAkD;AAAA,IAC9E;AACQ,UAAM,CAAC,OAAO,YAAYnH,EAAC,IAAI,sBAAsB,gBAAgB;AACrE,QAAI,CAAE,MAAM,KAAK,sBAAsB,KAAK,GAAI;AAC5C,YAAM,MAAM,KAAK,oBAAoB,mBAAmB,KAAK;AAAA,IACzE;AACQ,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,wBAAuB,GAAI,GAAG,KAAK,MAAM,UAAU,KAAK,IAAI,UAAU,IAAI;AAAA,MAC9G,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,WAAO,MAAM,SAAS,KAAM;AAAA,EACpC;AAAA,EACI,MAAM,iBAAiB,kBAAkB,SAAS;AAC9C,UAAM,CAAC,OAAO,YAAY,UAAU,IAAI,sBAAsB,gBAAgB;AAC9E,UAAM,WAAW,MAAM,KAAK,OAAO,KAAK,2BAA2B,GAAG,KAAK,MAAM,YAAY,KAAK,IAAI,UAAU,IAAI,UAAU,IAAG,mCAAS,gBAAe,wBAAwB,EAAE,IAAI;AAAA,MACnL,QAAQ;AAAA,MACR,SAAS,KAAK;AAAA,MACd,QAAQ,YAAY,QAAQ,KAAK,UAAU;AAAA,MAC3C,GAAG,KAAK;AAAA,IACpB,CAAS;AACD,UAAM,eAAe,UAAU,oBAAoB;AACnD,UAAM,SAAS,MAAM,SAAS,KAAM;AACpC,WAAO;AAAA,MACH;AAAA,MACA,MAAM;AAAA,MACN,aAAa,OAAO;AAAA,MACpB,UAAU,OAAO;AAAA,MACjB,UAAU,OAAO;AAAA,IACpB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,YAAY,kBAAkB,SAAS;AACzC,UAAM,eAAe,MAAM,KAAK,iBAAiB,kBAAkB;AAAA,MAC/D,cAAc,mCAAS;AAAA,IACnC,CAAS;AACD,UAAM,SAAS,KAAK,UAAU,aAAa,QAAQ;AACnD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,WAAW,kBAAkB,SAAS;AAExC,QAAI,MAAM,KAAK,aAAa,gBAAgB,GAAG;AAC3C,UAAI,WAAW,OAAO,KAAK,OAAO,EAAE,KAAK,CAAC,QAAQ,QAAQ,QAAQ,GAAG;AACjE,cAAM,KAAK,aAAa,kBAAkB;AAAA,UACtC,aAAa,mCAAS;AAAA,UACtB,QAAQ,mCAAS;AAAA,UACjB,MAAM,mCAAS;AAAA,UACf,UAAU,mCAAS;AAAA,QACvC,CAAiB;AAAA,MACjB;AAAA,IACA,OACa;AACD,YAAM,KAAK,aAAa,kBAAkB;AAAA,QACtC,aAAa,mCAAS;AAAA,QACtB,QAAQ,mCAAS;AAAA,QACjB,MAAM,mCAAS;AAAA,QACf,UAAU,mCAAS;AAAA,MACnC,CAAa;AAAA,IACb;AACQ,QAAI,EAAC,mCAAS,SAAQ;AAClB,aAAO,MAAM,KAAK,cAAc,gBAAgB;AAAA,IAC5D;AAEQ,UAAM,MAAM,MAAM,KAAK,aAAa,kBAAkB,mCAAS,QAAQ;AAAA,MACnE,kBAAkB,mCAAS;AAAA,IACvC,CAAS;AACD,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,MAAM,mBAAmB,YAAY,UAAU,IAAI;AAC/C,UAAM,EAAE,eAAe,KAAK,QAAQ,YAAa,IAAG;AACpD,UAAM,CAAC,cAAc,SAAS,IAAI,KAAK,gBAAgB,YAAY,YAAY;AAC/E,UAAM,eAAe,IAAI,OAAO;AAAA,MAC5B,QAAQ;AAAA;AAAA;AAAA;AAAA,MAIR,QAAQ;AAAA,IACpB,CAAS;AACD,UAAM,KAAK,MAAM,aAAa,kBAAkB,SAAS;AACzD,UAAM,mBAAmB,eAAe,GAAG;AAC3C,QAAI;AACA,UAAI,MAAM,KAAK,WAAW,EAAE,WAAW,iBAAkB,CAAA,GAAG;AACxD,gBAAQ,IAAI,WAAW,gBAAgB,2CAA2C;AAClF;AAAA,MAChB;AAAA,IACA,SACeA,IAAG;AAAA,IAGlB;AAEQ,UAAM,WAAW,MAAM,aAAa,mBAAmB,SAAS;AAChE,UAAM,UAAU,MAAM,KAAK,cAAc,kBAAkB;AAAA,MACvD,aAAa,GAAG;AAAA,MAChB,UAAU,GAAG,aAAa;AAAA,MAC1B,cAAc,GAAG,4BAA4B;AAAA,MAC7C,eAAe,GAAG,6BAA6B;AAAA,IAC3D,CAAS;AACD,QAAI;AACA,YAAM,KAAK,eAAe;AAAA,QACtB,QAAQ,SAAS,IAAI,CAACS,OAAMA,GAAE,MAAM;AAAA,QACpC,SAAS,SAAS,QAAQ,CAACA,OAAOA,GAAE,UAAU,CAACA,GAAE,OAAO,IAAI,CAAE,CAAC;AAAA,QAC/D,WAAW,QAAQ;AAAA,MACnC,CAAa;AAAA,IACb,SACeA,IAAG;AACN,cAAQ,MAAM,4CAA4C,gBAAgB,kCACtC;AACpC,YAAMA;AAAA,IAClB;AAAA,EACA;AAAA,EACI,gBAAgB,YAAY,QAAQ,WAAW,GAAGmH,QAAO,WAAW;AAEhE,QAAI;AACA,iBAAW,UAAU;AACrB,aAAO,CAAC,QAAQ,UAAU;AAAA,IACtC,SACe5H,IAAG;AAAA,IAElB;AAEQ,QAAI;AACA,YAAM,YAAY,IAAI,IAAI,UAAU;AACpC,YAAM,YAAY,UAAU,SACvB,MAAM,GAAG,EACT,OAAO,CAAC,SAAS,SAAS,EAAE;AACjC,UAAI,UAAU,UAAU,UAAU;AAC9B,cAAM,YAAY,UAAU,UAAU,SAAS,QAAQ;AACvD,eAAO,CAAC,QAAQ,SAAS;AAAA,MACzC,OACiB;AACD,cAAM,IAAI,MAAM,kBAAkB4H,KAAI,SAAS,UAAU,EAAE;AAAA,MAC3E;AAAA,IACA,SACe,OAAO;AACV,YAAM,IAAI,MAAM,kBAAkBA,KAAI,kBAAkB,UAAU,EAAE;AAAA,IAChF;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBI,2BAA2B;AACvB,QAAI,KAAK,iBAAiB;AACtB,cAAQ,KAAK,sHAAsH;AACnI,aAAO,QAAQ,QAAS;AAAA,IACpC;AACQ,WAAO,QAAQ,IAAI;AAAA,MACf,GAAG,KAAK,eAAe,MAAM,IAAI,CAAC,EAAE,YAAa,MAAK,WAAW;AAAA,MACjE,KAAK,kBAAkB,MAAM,OAAQ;AAAA,IACjD,CAAS;AAAA,EACT;AACA;ACtlGO,MAAM,cAAc;ACF3B,IAAI;AACG,MAAMC,cAAY,MAAM,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa;AAC9E,MAAAC,gBAAc,MAAM,OAAO,eAAe,YACnD,WAAW,eACX,WAAW,YAAY,SAAS;AAC7B,MAAMC,YAAU,MAAO,OAAO,WAAW,eAAe,OAAO,SAAS,YAC1E,OAAO,cAAc,gBACjB,UAAU,UAAU,SAAS,SAAS,KACnC,UAAU,UAAU,SAAS,OAAO;AAGnC,MAAAC,WAAS,MAAM,OAAO,SAAS;AAErC,MAAMC,WAAS,MAAM,OAAO,YAAY,eAC3C,OAAO,QAAQ,aAAa,eAC5B,OAAO,QAAQ,SAAS,SAAS,eACjC,CAACD,SAAO;AACL,MAAME,WAAS,MAAM;AACxB,MAAI,WAAW;AACJ,WAAA;AAAA,EAAA;AAEX,MAAIL,eAAa;AACD,gBAAA;AAAA,EAAA,WAEPI,YAAU;AACH,gBAAA;AAAA,EAAA,WAEPH,iBAAe;AACR,gBAAA;AAAA,EAAA,WAEPC,aAAW;AACJ,gBAAA;AAAA,EAAA,WAEPC,YAAU;AACH,gBAAA;AAAA,EAAA,OAEX;AACW,gBAAA;AAAA,EAAA;AAET,SAAA;AACX;AACA,IAAIG;AACG,SAASjB,0BAAwB;AACpC,MAAIiB,yBAAuB,QAAW;AAClC,UAAM,MAAMD,SAAO;AACnB,UAAM,aAAa,QAAQ;AACNC,2BAAA;AAAA,MACjB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,KAAK;AAAA,MACL,aAAa;AAAA,MACb,GAAG;AAAA,IACP;AAAA,EAAA;AAEG,SAAAA;AACX;AAkCO,SAAS,8BAA8B;AACpC,QAAA,aAAa,wBAAwB,KAAK,CAAC;AACjD,QAAM,UAAU,CAAC;AACjB,QAAM,WAAW;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU,GAAG;AACnD,SAAK,IAAI,WAAW,YAAY,KAAK,IAAI,WAAW,YAAY,MAC5D,OAAO,UAAU,YACjB,CAAC,SAAS,SAAS,GAAG,KACtB,CAAC,IAAI,YAAY,EAAE,SAAS,KAAK,KACjC,CAAC,IAAI,YAAc,EAAA,SAAS,QAAQ,KACpC,CAAC,IAAI,YAAA,EAAc,SAAS,OAAO,GAAG;AACtC,UAAI,QAAQ,yBAAyB;AACjC,gBAAQ,aAAa,IAAI;AAAA,MAAA,OAExB;AACD,gBAAQ,GAAG,IAAI;AAAA,MAAA;AAAA,IACnB;AAAA,EACJ;AAEG,SAAA;AACX;AAWO,SAAS,0BAA0B;AAClC,MAAA;AAGI,QAAA,OAAO,YAAY,eAAe,QAAa,KAAA;AAExC,aAAA,OAAO,QAAQ,QAAA,GAAW,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AACzD,YAAA,GAAG,IAAI,OAAO,KAAK;AAChB,eAAA;AAAA,MACX,GAAG,EAAE;AAAA,IAAA;AAIF,WAAA;AAAA,WAEJ1H,IAAG;AAEC,WAAA;AAAA,EAAA;AAEf;AACO,SAAS4G,yBAAuB,MAAM;;AAGrC,MAAA;AACA,WAAO,OAAO,YAAY;AAAA;AAAA,OAElB9G,MAAA,gBAAA,gBAAAA,IAAc;AAAA,QAChB;AAAA,WAEHE,IAAG;AACC,WAAA;AAAA,EAAA;AAEf;AACO,SAAS,gCAAgC,MAAM;AAC1C,SAAA4G,yBAAuB,aAAa,IAAI,EAAE,KAC9CA,yBAAuB,aAAa,IAAI,EAAE;AAClD;AAOA,IAAI;AAMG,SAAS,UAAU;AACtB,MAAI,qBAAqB,QAAW;AACzB,WAAA;AAAA,EAAA;AAEX,QAAM,sBAAsB;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA,QAAM,OAAO,CAAC;AACd,aAAW,OAAO,qBAAqB;AAC7B,UAAA,SAASA,yBAAuB,GAAG;AACzC,QAAI,WAAW,QAAW;AACtB,WAAK,GAAG,IAAI;AAAA,IAAA;AAAA,EAChB;AAEe,qBAAA;AACZ,SAAA;AACX;ACvNO,MAAMe,qBAAmB,CAAC,mBAAmB;AAIhD,QAAM,UAAU,CAAC,cAAc,SAAS;AACxC,SAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,WAAW,gCAAgC,MAAM,MAAM,MAAM;AACxF;ACPO,MAAM,4BAA4B,OAAO,IAAI,sBAAsB;ACM1E,SAASC,uBAAqB,OAAO;AACjC,SAAO,MAAM,QAAQ,UAAU,EAAE;AACrC;AACO,SAASC,6BAA2B,OAAO,OAAO,iBAAiB,GAAG;AAGzE,QAAM,cAAc,eAAe,QAAQ,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,SAAS,GAAG,GAAG;AACzE,SAAQD,uBAAqB,GAAG,IAAI,KAAK,KAAK,EAAE,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,GAAG,WAAW,GAAG,IAAI;AACnG;AAIA,MAAM,QAAQ;AAAA,EACV,YAAY,UAAU,MAAM;AACxB,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA,EACpB;AAAA,EACI,OAAO,WAAW,OAAO;AACrB,UAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,QAAI,WAAW,CAAE;AACjB,QAAI,OAAO,CAAE;AACb,eAAW,QAAQ,OAAO;AACtB,YAAM,CAAC,KAAK,QAAQ,IAAI,KAAK,MAAM,GAAG;AACtC,YAAME,SAAQ,mBAAmB,QAAQ;AACzC,UAAI,QAAQ,sBAAsB;AAC9B,mBAAW,KAAK,MAAMA,MAAK;AAAA,MAC3C,WACqB,QAAQ,kBAAkB;AAC/B,eAAOA,OAAM,MAAM,GAAG;AAAA,MACtC;AAAA,IACA;AACQ,WAAO,IAAI,QAAQ,UAAU,IAAI;AAAA,EACzC;AAAA,EACI,WAAW;AACP,UAAM,QAAQ,CAAE;AAChB,QAAI,KAAK,YAAY,OAAO,KAAK,KAAK,QAAQ,EAAE,SAAS,GAAG;AACxD,YAAM,KAAK,sBAAsB,mBAAmB,KAAK,UAAU,KAAK,QAAQ,CAAC,CAAC,EAAE;AAAA,IAChG;AACQ,QAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AACnC,YAAM,KAAK,kBAAkB,mBAAmB,KAAK,KAAK,KAAK,GAAG,CAAC,CAAC,EAAE;AAAA,IAClF;AACQ,WAAO,MAAM,KAAK,GAAG;AAAA,EAC7B;AACA;AACO,MAAM,QAAQ;AAAA,EACjB,YAAY,gBAAgB;;AACxB,WAAO,eAAe,MAAM,MAAM;AAAA,MAC9B,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,wBAAwB;AAAA,MAChD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,yBAAyB;AAAA,MACjD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAKD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,QAAI,UAAU,cAAc,GAAG;AAC3B,aAAO,OAAO,MAAM,EAAE,GAAG,eAAc,CAAE;AACzC;AAAA,IACZ;AACQ,UAAM,gBAAgB,QAAQ,iBAAkB;AAChD,UAAM,EAAE,UAAU,GAAGnB,QAAM,IAAK;AAChC,UAAMoB,UAASpB,QAAO,UAAU,QAAQ,gBAAiB;AACzD,UAAM,kBAAkB;AAAA,MACpB,GAAG;AAAA,MACH,IAAG7G,MAAA6G,WAAA,gBAAAA,QAAQ,UAAR,gBAAA7G,IAAe;AAAA,IACrB;AACD,IAAA6G,QAAO,QAAQ,EAAE,GAAGA,QAAO,OAAO,UAAU,gBAAiB;AAC7D,WAAO,OAAO,MAAM,EAAE,GAAG,eAAe,GAAGA,SAAQ,QAAAoB,SAAQ;AAC3D,QAAI,CAAC,KAAK,UAAU;AAChB,UAAI,KAAK,YAAY;AACjB,aAAK,WAAW,KAAK,WAAW,YAAY,KAAK;AAAA,MACjE,OACiB;AACD,aAAK,WAAW,KAAK;AAAA,MACrC;AAAA,IACA;AACQ,SAAK,oBAAL,KAAK,kBAAoB;AACzB,SAAK,0BAAL,KAAK,wBAA0B;AAC/B,QAAI,CAAC,KAAK,cAAc;AACpB,YAAM,qBAAqBF,6BAA2B,KAAK,YAAY,KAAK,IAAI,KAAK,eAAe;AACpG,UAAI,KAAK,YAAY;AACjB,aAAK,eACD,KAAK,WAAW,eAAe,MAAM;AAAA,MACzD,OACiB;AACD,aAAK,eAAe;AAAA,MACpC;AAAA,IACA;AAAA,EACA;AAAA,EACI,OAAO,mBAAmB;AACtB,WAAO;AAAA,MACH,IAAIZ,GAAS;AAAA,MACb,UAAU;AAAA,MACV,cAAc,gCAAgC,SAAS,KACnDL,yBAAuB,mBAAmB;AAAA,MAC1C;AAAA,MACJ,YAAY,CAAE;AAAA,MACd,SAASA,yBAAuB,oBAAoB,KAAK;AAAA,MACzD,SAASA,yBAAuB,mBAAmB;AAAA,MACnD,gBAAgB,CAAE;AAAA,MAClB,YAAY,KAAK,IAAK;AAAA,MACtB,YAAY,CAAE;AAAA,MACd,QAAQ,CAAE;AAAA,MACV,OAAO,CAAE;AAAA,IACZ;AAAA,EACT;AAAA,EACI,OAAO,kBAAkB;AACrB,QAAI,CAAC,QAAQ,cAAc;AACvB,cAAQ,eAAe,IAAIoB,SAAQ;AAAA,IAC/C;AACQ,WAAO,QAAQ;AAAA,EACvB;AAAA,EACI,YAAYrB,SAAQ;;AAChB,UAAM,wBAAwB,KAAK,wBAAwB;AAC3D,UAAM,QAAQ,IAAI,QAAQ;AAAA,MACtB,GAAGA;AAAA,MACH,YAAY;AAAA,MACZ,cAAc,KAAK;AAAA,MACnB,QAAQ,KAAK;AAAA,MACb,gBAAgB,KAAK;AAAA,MACrB,iBAAiB;AAAA,MACjB;AAAA,IACZ,CAAS;AAED,QAAI,6BAA6B,MAAM;AAEnC,YAAM,yBAAyB,IAC3B,KAAK,yBAAyB;AAAA,IAC9C;AACQ,UAAM,WAAW,OAAO,IAAI,iBAAiB;AAC7C,UAAM,kBAAgB7G,MAAA6G,QAAO,UAAP,gBAAA7G,IAAe,cACjC,KAAK,MAAM,QAAQ;AAEvB,QAAI,qBAAqB,aAAa,GAAG;AACrC,YAAM,YAAY,EAAE,GAAG,cAAe;AACtC,YAAM,YAAY,sBAAsB,UAAU,SAAS,KACrDK,OAAAF,MAAA,UAAU,WAAU,SAApB,gBAAAE,IAAA,KAAAF,OACA;AACN,UAAI,WAAW;AAEX,eAAO,OAAO,WAAW,EAAE,cAAc,MAAM,IAAI;AAEnD,SAAAG,OAAAC,OAAAH,MAAA,UAAU,aAAV,gBAAAA,IACM,KAAK,2BADX,gBAAAG,IAEM,sBAFN,gBAAAD,IAAA,KAAAC,KAE0B;AAC1B,kBAAU,YAAY;AAAA,MACtC;AACY,YAAM,MAAM,QAAQ,IAAI;AAAA,IACpC;AAEQ,UAAM,UAAU,oBAAI,IAAK;AACzB,QAAI,UAAU;AACd,WAAO,WAAW,QAAQ,CAAC,QAAQ,IAAI,QAAQ,EAAE,GAAG;AAChD,cAAQ,IAAI,QAAQ,EAAE;AACtB,cAAQ,wBAAwB,KAAK,IAAI,QAAQ,uBAAuB,qBAAqB;AAC7F,gBAAU,QAAQ;AAAA,IAC9B;AACQ,SAAK,WAAW,KAAK,KAAK;AAC1B,WAAO;AAAA,EACf;AAAA,EACI,MAAM,IAAI,SAAS,OAAO,UAAU,KAAK,IAAK,GAAE,UAAU;AACtD,SAAK,UAAU,KAAK,WAAW;AAC/B,SAAK,QAAQ,KAAK,SAAS;AAC3B,SAAK,WAAW,KAAK,YAAY;AACjC,QAAI,YAAY,OAAO,KAAK,QAAQ,EAAE,SAAS,GAAG;AAC9C,WAAK,QAAQ,KAAK,QACZ,EAAE,GAAG,KAAK,OAAO,UAAU,EAAE,GAAG,KAAK,MAAM,UAAU,GAAG,SAAU,EAAA,IAClE,EAAE,SAAU;AAAA,IAC9B;AAAA,EACA;AAAA,EACI,iBAAiB,KAAK,YAAY,mBAAmB,MAAM;;AACvD,UAAM,WAAW,IAAI,SAAS,CAAE;AAChC,QAAI,CAAC,SAAS,SAAS;AACnB,eAAS,UAAU,CAAE;AAAA,IACjC;AACQ,QAAI,YAAY;AACZ,iBAAW,CAACmG,IAAGjD,EAAC,KAAK,OAAO,QAAQ,UAAU,GAAG;AAC7C,YAAI,CAAC,SAAS,QAAQiD,EAAC,GAAG;AACtB,mBAAS,QAAQA,EAAC,IAAIjD;AAAA,QAC1C;AAAA,MACA;AAAA,IACA;AACQ,QAAI;AACJ,QAAI;AACJ,QAAI,CAAC,kBAAkB;AACnB,mBAAa,IAAI,WAAW,IAAI,CAAC,cAAc,KAAK,iBAAiB,WAAW,YAAY,gBAAgB,CAAC;AAC7G,sBAAgB;AAAA,IAC5B,OACa;AACD,uBAAgBzD,MAAA,IAAI,eAAJ,gBAAAA,IAAgB;AAChC,mBAAa,CAAE;AAAA,IAC3B;AACQ,UAAM,eAAe;AAAA,MACjB,IAAI,IAAI;AAAA,MACR,MAAM,IAAI;AAAA,MACV,YAAY,IAAI;AAAA,MAChB,UAAU,IAAI;AAAA,MACd,UAAU,IAAI;AAAA,MACd,sBAAsB,IAAI;AAAA,MAC1B,OAAO;AAAA,MACP,YAAY,IAAI;AAAA,MAChB,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,MACZ,SAAS,IAAI;AAAA,MACb,cAAc,IAAI;AAAA,MAClB;AAAA,MACA;AAAA,MACA,UAAU,IAAI;AAAA,MACd,cAAc,IAAI;AAAA,MAClB,MAAM,IAAI;AAAA,MACV,aAAa,IAAI;AAAA,IACpB;AACD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,QAAQ,mBAAmB,MAAM;AACnC,QAAI;AACA,YAAM,aAAa2G,wBAAuB;AAC1C,YAAM,YAAY,MAAM,KAAK,iBAAiB,MAAM,YAAY,IAAI;AACpE,YAAM,KAAK,OAAO,UAAU,SAAS;AACrC,UAAI,CAAC,kBAAkB;AACnB,iBAAS,4FAA4F;AACrG,mBAAW,YAAY,KAAK,YAAY;AACpC,gBAAM,SAAS,QAAQ,KAAK;AAAA,QAChD;AAAA,MACA;AAAA,IACA,SACe,OAAO;AACV,cAAQ,MAAM,4BAA4B,KAAK,EAAE,KAAK,KAAK;AAAA,IACvE;AAAA,EACA;AAAA,EACI,MAAM,WAAW;;AACb,QAAI;AACA,YAAM,YAAY;AAAA,QACd,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,SAAS,KAAK;AAAA,QACd,gBAAe3G,MAAA,KAAK,eAAL,gBAAAA,IAAiB;AAAA,QAChC,sBAAsB,KAAK;AAAA,QAC3B,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,cAAc,KAAK;AAAA,QACnB,UAAU,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,aAAa,KAAK;AAAA,MACrB;AACD,YAAM,KAAK,OAAO,UAAU,KAAK,IAAI,SAAS;AAAA,IAC1D,SACe,OAAO;AACV,cAAQ,MAAM,6BAA6B,KAAK,EAAE,IAAI,KAAK;AAAA,IACvE;AAAA,EACA;AAAA,EACI,SAAS;AACL,WAAO,KAAK,iBAAiB,MAAM,QAAW,KAAK;AAAA,EAC3D;AAAA,EACI,OAAO,mBAAmB,cAAc,OAAO;;AAE3C,UAAM,kBAAkB,6CAAc;AACtC,QAAI;AACJ,QAAI;AACJ,QAAIiI;AACJ,QAAI,iBAAiBJ,mBAAkB;AACvC,QAAI,iBAAiB;AACjB,YAAM,gBAAc7H,MAAA,mDAAiB,mBAAjB,gBAAAA,IAAA,0BAAuC;AAC3D,YAAM,mBAAkBG,MAAA,mDAAiB,aAAjB,gBAAAA,IAA2B,KAAK,CAAC,aAAY,mCAAS,SAAQ;AACtF,mBAAYE,MAAA,mDAAiB,WAAjB,gBAAAA,IAAA,sBAA0B;AACtC,oBAAc,mDAAiB;AAC/B,MAAA4H,UAAS,mDAAiB;AAC1B,uBAAiB,kBAAkB,CAAC,CAAC;AAAA,IACjD;AACQ,QAAI,CAAC,WAAW;AACZ,aAAO,IAAI,QAAQ;AAAA,QACf,GAAG;AAAA,QACH,QAAAA;AAAA,QACA;AAAA,QACA,cAAc;AAAA,MAC9B,CAAa;AAAA,IACb;AACQ,UAAM,gBAAgB,IAAI,QAAQ;AAAA,MAC9B,MAAM,UAAU;AAAA,MAChB,IAAI,UAAU;AAAA,MACd,UAAU,UAAU;AAAA,MACpB,cAAc,UAAU;AAAA,MACxB,QAAAA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,MAAM;AAAA,QACF,GAAG,IAAI,MAAK,uCAAW,SAAQ,IAAI,QAAO,6CAAc,SAAQ,CAAA,CAAE,CAAC;AAAA,MACtE;AAAA,MACD,OAAO;AAAA,QACH,UAAU;AAAA,UACN,IAAG7H,MAAA,uCAAW,UAAX,gBAAAA,IAAkB;AAAA,UACrB,GAAG,6CAAc;AAAA,QACpB;AAAA,MACJ;AAAA,IACb,CAAS;AACD,WAAO,cAAc,YAAY,KAAK;AAAA,EAC9C;AAAA,EACI,OAAO,gBAAgB,aAAa;AAChC,WAAO,KAAK,YAAY,EAAE,mBAAmB,YAAW,CAAE;AAAA,EAClE;AAAA,EACI,OAAO,YAAY,SAAS,aAAa;;AACrC,UAAM,aAAa,SAAS,WAAW,OAAO,QAAQ,QAAQ,aACxD;AAAA,MACE,mBAAmB,QAAQ,IAAI,iBAAiB;AAAA,MAChD,SAAS,QAAQ,IAAI,SAAS;AAAA,IAC9C,IACc;AACN,UAAM,cAAc,WAAW,iBAAiB;AAChD,QAAI,CAAC,eAAe,OAAO,gBAAgB;AACvC,aAAO;AACX,UAAM,oBAAoB,YAAY,KAAM;AAC5C,UAAM,oBAAoB,kBAAkB,MAAM,GAAG,EAAE,IAAI,CAAC,SAAS;AACjE,YAAM,CAAC,SAASkD,KAAI,IAAI,KAAK,MAAM,GAAG;AACtC,aAAO,EAAE,SAAS,MAAM,KAAK,MAAM,UAAU,GAAG,GAAG,MAAAA,MAAM;AAAA,IACrE,CAAS;AACD,UAAM,UAAU,kBAAkB,CAAC,EAAE;AACrC,UAAMuD,UAAS;AAAA,MACX,GAAG;AAAA,MACH,OAAM,2CAAc,YAAW;AAAA,MAC/B,WAAU,2CAAc,gBAAe;AAAA,MACvC,aAAY,2CAAc,kBAAiB,KAAK,IAAK;AAAA,MACrD,KAAI7G,MAAA,kBAAkB,GAAG,EAAE,MAAvB,gBAAAA,IAA0B;AAAA,MAC9B,UAAU;AAAA,MACV,cAAc;AAAA,IACjB;AACD,QAAI,WAAW,SAAS,KAAK,OAAO,WAAW,SAAS,MAAM,UAAU;AACpE,YAAM,UAAU,QAAQ,WAAW,WAAW,SAAS,CAAC;AACxD,MAAA6G,QAAO,WAAW,QAAQ;AAC1B,MAAAA,QAAO,OAAO,QAAQ;AAAA,IAClC;AACQ,WAAO,IAAI,QAAQA,OAAM;AAAA,EACjC;AAAA,EACI,UAAU,SAAS;;AACf,UAAM,SAAS;AAAA,MACX,mBAAmB,KAAK;AAAA,MACxB,SAAS,IAAI,SAAQ7G,MAAA,KAAK,UAAL,gBAAAA,IAAY,UAAU,KAAK,IAAI,EAAE,SAAU;AAAA,IACnE;AACD,QAAI,SAAS;AACT,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC/C,gBAAQ,IAAI,KAAK,KAAK;AAAA,MACtC;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AACA;AACA,OAAO,eAAe,SAAS,gBAAgB;AAAA,EAC3C,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,UAAU;AAAA,EACV,OAAO;AACX,CAAC;AACM,SAAS,UAAUL,IAAG;AACzB,SAAQA,OAAM,UACV,OAAOA,GAAE,gBAAgB,cACzB,OAAOA,GAAE,YAAY;AAC7B;AACA,SAAS,sBAAsBA,IAAG;AAC9B,SAAQ,OAAOA,OAAM,YACjBA,MAAK,QACL,OAAOA,GAAE,SAAS,YAClBA,GAAE,SAAS;AACnB;AACA,SAAS,4BAA4BA,IAAG;AACpC,SAAQ,MAAM,QAAQA,EAAC,KAAKA,GAAE,KAAK,CAAC,aAAa,sBAAsB,QAAQ,CAAC;AACpF;AACA,SAAS,sBAAsBA,IAAG;AAC9B,SAAQ,OAAOA,OAAM,YACjBA,MAAK,QACL,MAAM,QAAQA,GAAE,QAAQ;AAChC;AACO,SAAS,qBAAqBA,IAAG;;AAIpC,SAAQA,OAAM,UACV,OAAOA,GAAE,cAAc;AAAA,GAEtB,6BAA4BK,MAAAL,GAAE,cAAF,gBAAAK,IAAa,QAAQ;AAAA,EAE9C,4BAA4BL,GAAE,SAAS;AACnD;ACphBA,IAAA,0BAAA,MAAM,sBAAsB;AAAA,EACxB,WAAW;AACP,WAAO;AAAA,EACf;AAAA,EACI,IAAIF,IAAG,UAAU;AACb,WAAO,SAAU;AAAA,EACzB;AACA;AACA,MAAM0I,oBAAkB,OAAO,IAAI,gCAAgC;AACnE,MAAMC,0BAAwB,IAAIC,wBAAuB;AACzD,IAAA,8BAAA,MAAM,0BAA0B;AAAA,EAC5B,cAAc;AAEV,WAAO,WAAWF,iBAAe,KAAKC;AAAAA,EAC9C;AAAA,EACI,yBAAyB,UAAU;AAE/B,QAAI,WAAWD,iBAAe,MAAM,QAAW;AAE3C,iBAAWA,iBAAe,IAAI;AAAA,IAC1C;AAAA,EACA;AACA;AACO,MAAMG,uCAAqC,IAAIC,4BAA2B;AAO1E,MAAM,oBAAoB,MAAM;AACnC,QAAM,UAAUD,qCAAmC,YAAW,EAAG,SAAU;AAC3E,MAAI,CAAC,UAAU,OAAO,GAAG;AACrB,UAAM,IAAI,MAAM;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,IACZ,EAAU,KAAK,IAAI,CAAC;AAAA,EACpB;AACI,SAAO;AACX;AASO,SAAS,oBAAoB3I,IAElC;AACE,SAAO,OAAOA,OAAM,cAAc,yBAAyBA;AAC/D;ACpDA;AAAA;AAAA;AAAA;AAAA;AAKA,MAAM,kBAAkB,OAAO,UAAU;AAClC,SAAS,eAAe,KAAK,KAAK;AACrC,SAAO,gBAAgB,KAAK,KAAK,GAAG;AACxC;AACO,SAAS,YAAY,KAAK;AAC7B,MAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,UAAM6I,QAAO,IAAI,MAAM,IAAI,MAAM;AACjC,aAAS9B,KAAI,GAAGA,KAAI8B,MAAK,QAAQ9B,MAAK;AAClC,MAAA8B,MAAK9B,EAAC,IAAI,KAAKA;AAAA,IAC3B;AACQ,WAAO8B;AAAA,EACf;AACI,MAAI,OAAO,MAAM;AACb,WAAO,OAAO,KAAK,GAAG;AAAA,EAC9B;AACI,MAAI,OAAO,CAAE;AACb,WAASjJ,MAAK,KAAK;AACf,QAAI,eAAe,KAAKA,EAAC,GAAG;AACxB,WAAK,KAAKA,EAAC;AAAA,IACvB;AAAA,EACA;AACI,SAAO;AACX;AAOO,SAAS,WAAW,KAAK;AAC5B,UAAQ,OAAO,KAAG;AAAA,IACd,KAAK;AACD,aAAO,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;AAAA;AAAA,IACzC,KAAK;AACD,aAAO;AAAA;AAAA,IACX;AACI,aAAO;AAAA,EACnB;AACA;AAEO,SAAS,UAAUC,MAAK;AAC3B,MAAID,KAAI;AACR,QAAM,MAAMC,KAAI;AAChB,MAAI;AACJ,SAAOD,KAAI,KAAK;AACZ,eAAWC,KAAI,WAAWD,EAAC;AAC3B,QAAI,YAAY,MAAM,YAAY,IAAI;AAClC,MAAAA;AACA;AAAA,IACZ;AACQ,WAAO;AAAA,EACf;AACI,SAAO;AACX;AAgBO,SAAS,sBAAsBO,OAAM;AACxC,SAAOA,MAAK,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AACtD;AA+BO,SAAS,aAAa,KAAK;AAC9B,MAAI,QAAQ,QAAW;AACnB,WAAO;AAAA,EACf;AACI,MAAI,KAAK;AACL,QAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,eAASP,KAAI,GAAG,MAAM,IAAI,QAAQA,KAAI,KAAKA,MAAK;AAC5C,YAAI,aAAa,IAAIA,EAAC,CAAC,GAAG;AACtB,iBAAO;AAAA,QAC3B;AAAA,MACA;AAAA,IACA,WACiB,OAAO,QAAQ,UAAU;AAC9B,YAAM,UAAU,YAAY,GAAG;AAC/B,YAAM,gBAAgB,QAAQ;AAC9B,eAASA,KAAI,GAAGA,KAAI,eAAeA,MAAK;AACpC,YAAI,aAAa,IAAI,QAAQA,EAAC,CAAC,CAAC,GAAG;AAC/B,iBAAO;AAAA,QAC3B;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACI,SAAO;AACX;AACA,SAAS,2BAA2B,SAAS,MAAM;AAC/C,QAAM,eAAe,CAAC,OAAO;AAC7B,aAAW,OAAO,MAAM;AACpB,UAAM,QAAQ,OAAO,KAAK,GAAG,MAAM,WAC7B,KAAK,UAAU,KAAK,GAAG,GAAG,MAAM,CAAC,IACjC,KAAK,GAAG;AACd,QAAI,OAAO,UAAU,aAAa;AAC9B,mBAAa,KAAK,GAAG,GAAG,KAAK,KAAK,EAAE;AAAA,IAChD;AAAA,EACA;AACI,SAAO,aAAa,KAAK,IAAI;AACjC;AACO,MAAM,mBAAmB,MAAM;AAAA,EAClC,YAAY,SAAS,MAAM,OAAO,WAAW,MAAM;AAC/C,UAAM,2BAA2B,SAAS,EAAE,MAAM,OAAO,WAAW,KAAI,CAAE,CAAC;AAC3E,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,WAAW,SAAS;AAChD,SAAK,UAAU,2BAA2B,SAAS;AAAA,MAC/C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,CAAS;AAAA,EACT;AACA;AClLO,MAAM,iBAAiB;AAS9B,MAAM,SAAS;AAAA,EACX,KAAK,SAAU,KAAK,KAAK,UAAU;AAC/B,QAAI,GAAG,IAAI,KAAK;AAChB,WAAO,EAAE,aAAa,SAAU;AAAA,EACnC;AAAA,EACD,QAAQ,SAAU,KAAK,KAAK,UAAU;AAClC,QAAI,UAAU,IAAI,GAAG;AACrB,WAAO,IAAI,GAAG;AACd,WAAO,EAAE,aAAa,UAAU,QAAS;AAAA,EAC5C;AAAA,EACD,SAAS,SAAU,KAAK,KAAK,UAAU;AACnC,QAAI,UAAU,IAAI,GAAG;AACrB,QAAI,GAAG,IAAI,KAAK;AAChB,WAAO,EAAE,aAAa,UAAU,QAAS;AAAA,EAC5C;AAAA,EACD,MAAM,SAAU,KAAK,KAAK,UAAU;AAIhC,QAAI,UAAU,kBAAkB,UAAU,KAAK,IAAI;AACnD,QAAI,SAAS;AACT,gBAAU,WAAW,OAAO;AAAA,IACxC;AACQ,UAAM,gBAAgB,eAAe,UAAU;AAAA,MAC3C,IAAI;AAAA,MACJ,MAAM,KAAK;AAAA,IACd,CAAA,EAAE;AACH,mBAAe,UAAU;AAAA,MACrB,IAAI;AAAA,MACJ,MAAM,KAAK;AAAA,MACX,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,EAAE,aAAa,UAAU,QAAS;AAAA,EAC5C;AAAA,EACD,MAAM,SAAU,KAAK,KAAK,UAAU;AAChC,UAAM,cAAc,kBAAkB,UAAU,KAAK,IAAI;AAEzD,mBAAe,UAAU;AAAA,MACrB,IAAI;AAAA,MACJ,MAAM,KAAK;AAAA,MACX,OAAO,WAAW,WAAW;AAAA,IACzC,CAAS;AACD,WAAO,EAAE,aAAa,SAAU;AAAA,EACnC;AAAA,EACD,MAAM,SAAU,KAAK,KAAK,UAAU;AAChC,WAAO,EAAE,aAAa,UAAU,MAAM,WAAW,IAAI,GAAG,GAAG,KAAK,KAAK,EAAG;AAAA,EAC3E;AAAA,EACD,MAAM,SAAU,KAAK,KAAK,UAAU;AAChC,SAAK,QAAQ,IAAI,GAAG;AACpB,WAAO,EAAE,aAAa,SAAU;AAAA,EACnC;AACL;AAEA,IAAI,SAAS;AAAA,EACT,KAAK,SAAUmE,MAAKnE,IAAG,UAAU;AAC7B,QAAI,UAAUA,EAAC,GAAG;AACd,MAAAmE,KAAI,OAAOnE,IAAG,GAAG,KAAK,KAAK;AAAA,IACvC,OACa;AAED,MAAAmE,KAAInE,EAAC,IAAI,KAAK;AAAA,IAC1B;AAEQ,WAAO,EAAE,aAAa,UAAU,OAAOA,GAAG;AAAA,EAC7C;AAAA,EACD,QAAQ,SAAUmE,MAAKnE,IAAG,UAAU;AAChC,QAAI,cAAcmE,KAAI,OAAOnE,IAAG,CAAC;AACjC,WAAO,EAAE,aAAa,UAAU,SAAS,YAAY,CAAC,EAAG;AAAA,EAC5D;AAAA,EACD,SAAS,SAAUmE,MAAKnE,IAAG,UAAU;AACjC,QAAI,UAAUmE,KAAInE,EAAC;AACnB,IAAAmE,KAAInE,EAAC,IAAI,KAAK;AACd,WAAO,EAAE,aAAa,UAAU,QAAS;AAAA,EAC5C;AAAA,EACD,MAAM,OAAO;AAAA,EACb,MAAM,OAAO;AAAA,EACb,MAAM,OAAO;AAAA,EACb,MAAM,OAAO;AACjB;AASO,SAAS,kBAAkB,UAAU,SAAS;AACjD,MAAI,WAAW,IAAI;AACf,WAAO;AAAA,EACf;AACI,MAAI,yBAAyB,EAAE,IAAI,QAAQ,MAAM,QAAS;AAC1D,iBAAe,UAAU,sBAAsB;AAC/C,SAAO,uBAAuB;AAClC;AAeO,SAAS,eAAe,UAAU,WAAW,oBAAoB,OAAO,iBAAiB,MAAM,4BAA4B,MAAM,QAAQ,GAAG;AAC/I,MAAI,mBAAmB;AACnB,QAAI,OAAO,qBAAqB,YAAY;AACxC,wBAAkB,WAAW,GAAG,UAAU,UAAU,IAAI;AAAA,IACpE,OACa;AACD,gBAAU,WAAW,CAAC;AAAA,IAClC;AAAA,EACA;AAEI,MAAI,UAAU,SAAS,IAAI;AACvB,QAAI,cAAc,EAAE,aAAa,SAAU;AAC3C,QAAI,UAAU,OAAO,OAAO;AACxB,kBAAY,cAAc,UAAU;AACpC,aAAO;AAAA,IACnB,WACiB,UAAU,OAAO,WAAW;AACjC,kBAAY,cAAc,UAAU;AACpC,kBAAY,UAAU;AACtB,aAAO;AAAA,IACnB,WACiB,UAAU,OAAO,UAAU,UAAU,OAAO,QAAQ;AAEzD,kBAAY,cAAc,kBAAkB,UAAU,UAAU,IAAI;AACpE,UAAI,UAAU,OAAO,QAAQ;AAEzB,oBAAY,UAAU;AAAA,MACtC;AACY,aAAO;AAAA,IACnB,WACiB,UAAU,OAAO,QAAQ;AAC9B,kBAAY,OAAO,WAAW,UAAU,UAAU,KAAK;AACvD,UAAI,YAAY,SAAS,OAAO;AAC5B,cAAM,IAAI,eAAe,yBAAyB,yBAAyB,OAAO,WAAW,QAAQ;AAAA,MACrH;AACY,kBAAY,cAAc;AAC1B,aAAO;AAAA,IACnB,WACiB,UAAU,OAAO,UAAU;AAEhC,kBAAY,UAAU;AACtB,kBAAY,cAAc;AAC1B,aAAO;AAAA,IACnB,WACiB,UAAU,OAAO,QAAQ;AAC9B,gBAAU,QAAQ;AAClB,aAAO;AAAA,IACnB,OACa;AAED,UAAI,mBAAmB;AACnB,cAAM,IAAI,eAAe,wEAAwE,wBAAwB,OAAO,WAAW,QAAQ;AAAA,MACnK,OACiB;AACD,eAAO;AAAA,MACvB;AAAA,IACA;AAAA,EACK,OACI;AACD,QAAI,CAAC,gBAAgB;AACjB,iBAAW,WAAW,QAAQ;AAAA,IAC1C;AACQ,UAAMO,QAAO,UAAU,QAAQ;AAC/B,UAAM,OAAOA,MAAK,MAAM,GAAG;AAC3B,QAAI,MAAM;AACV,QAAI2I,KAAI;AACR,QAAI,MAAM,KAAK;AACf,QAAI,uBAAuB;AAC3B,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,qBAAqB,YAAY;AACxC,yBAAmB;AAAA,IAC/B,OACa;AACD,yBAAmB;AAAA,IAC/B;AACQ,WAAO,MAAM;AACT,YAAM,KAAKA,EAAC;AACZ,UAAI,OAAO,IAAI,QAAQ,GAAG,KAAK,IAAI;AAC/B,cAAM,sBAAsB,GAAG;AAAA,MAC/C;AACY,UAAI,8BACC,OAAO,eACH,OAAO,eAAeA,KAAI,KAAK,KAAKA,KAAI,CAAC,KAAK,gBAAiB;AACpE,cAAM,IAAI,UAAU,+OAA+O;AAAA,MACnR;AACY,UAAI,mBAAmB;AACnB,YAAI,yBAAyB,QAAW;AACpC,cAAI,IAAI,GAAG,MAAM,QAAW;AACxB,mCAAuB,KAAK,MAAM,GAAGA,EAAC,EAAE,KAAK,GAAG;AAAA,UACxE,WAC6BA,MAAK,MAAM,GAAG;AACnB,mCAAuB,UAAU;AAAA,UACzD;AACoB,cAAI,yBAAyB,QAAW;AACpC,6BAAiB,WAAW,GAAG,UAAU,oBAAoB;AAAA,UACrF;AAAA,QACA;AAAA,MACA;AACY,MAAAA;AACA,UAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,YAAI,QAAQ,KAAK;AACb,gBAAM,IAAI;AAAA,QAC9B,OACqB;AACD,cAAI,qBAAqB,CAAC,UAAU,GAAG,GAAG;AACtC,kBAAM,IAAI,eAAe,2HAA2H,sCAAsC,OAAO,WAAW,QAAQ;AAAA,UACvN,WACQ,UAAU,GAAG,GAAG;AACrB,kBAAM,CAAC,CAAC;AAAA,UAChC;AAAA,QACA;AACgB,YAAIA,MAAK,KAAK;AACV,cAAI,qBAAqB,UAAU,OAAO,SAAS,MAAM,IAAI,QAAQ;AACjE,kBAAM,IAAI,eAAe,oFAAoF,iCAAiC,OAAO,WAAW,QAAQ;AAAA,UAChM;AACoB,gBAAM,cAAc,OAAO,UAAU,EAAE,EAAE,KAAK,WAAW,KAAK,KAAK,QAAQ;AAC3E,cAAI,YAAY,SAAS,OAAO;AAC5B,kBAAM,IAAI,eAAe,yBAAyB,yBAAyB,OAAO,WAAW,QAAQ;AAAA,UAC7H;AACoB,iBAAO;AAAA,QAC3B;AAAA,MACA,OACiB;AACD,YAAIA,MAAK,KAAK;AACV,gBAAM,cAAc,OAAO,UAAU,EAAE,EAAE,KAAK,WAAW,KAAK,KAAK,QAAQ;AAC3E,cAAI,YAAY,SAAS,OAAO;AAC5B,kBAAM,IAAI,eAAe,yBAAyB,yBAAyB,OAAO,WAAW,QAAQ;AAAA,UAC7H;AACoB,iBAAO;AAAA,QAC3B;AAAA,MACA;AACY,YAAM,IAAI,GAAG;AAGb,UAAI,qBAAqBA,KAAI,QAAQ,CAAC,OAAO,OAAO,QAAQ,WAAW;AACnE,cAAM,IAAI,eAAe,gDAAgD,+BAA+B,OAAO,WAAW,QAAQ;AAAA,MAClJ;AAAA,IACA;AAAA,EACA;AACA;AAeO,SAAS,WAAW,UAAU,OAAO,mBAAmB,iBAAiB,MAAM,4BAA4B,MAAM;AACpH,MAAI,mBAAmB;AACnB,QAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACvB,YAAM,IAAI,eAAe,mCAAmC,uBAAuB;AAAA,IAC/F;AAAA,EACA;AACI,MAAI,CAAC,gBAAgB;AACjB,eAAW,WAAW,QAAQ;AAAA,EACtC;AACI,QAAM,UAAU,IAAI,MAAM,MAAM,MAAM;AACtC,WAASlJ,KAAI,GAAG,SAAS,MAAM,QAAQA,KAAI,QAAQA,MAAK;AAEpD,YAAQA,EAAC,IAAI,eAAe,UAAU,MAAMA,EAAC,GAAG,mBAAmB,MAAM,2BAA2BA,EAAC;AACrG,eAAW,QAAQA,EAAC,EAAE;AAAA,EAC9B;AACI,UAAQ,cAAc;AACtB,SAAO;AACX;AAyBO,SAAS,UAAU,WAAW,OAAO,UAAU,sBAAsB;AACxE,MAAI,OAAO,cAAc,YACrB,cAAc,QACd,MAAM,QAAQ,SAAS,GAAG;AAC1B,UAAM,IAAI,eAAe,8BAA8B,2BAA2B,OAAO,WAAW,QAAQ;AAAA,EACpH,WACa,CAAC,OAAO,UAAU,EAAE,GAAG;AAC5B,UAAM,IAAI,eAAe,wEAAwE,wBAAwB,OAAO,WAAW,QAAQ;AAAA,EAC3J,WACa,OAAO,UAAU,SAAS,UAAU;AACzC,UAAM,IAAI,eAAe,6CAA6C,0BAA0B,OAAO,WAAW,QAAQ;AAAA,EAClI,WACa,UAAU,KAAK,QAAQ,GAAG,MAAM,KAAK,UAAU,KAAK,SAAS,GAAG;AAErE,UAAM,IAAI,eAAe,iDAAiD,0BAA0B,OAAO,WAAW,QAAQ;AAAA,EACtI,YACc,UAAU,OAAO,UAAU,UAAU,OAAO,WAClD,OAAO,UAAU,SAAS,UAAU;AACpC,UAAM,IAAI,eAAe,yFAAyF,2BAA2B,OAAO,WAAW,QAAQ;AAAA,EAC/K,YACc,UAAU,OAAO,SACvB,UAAU,OAAO,aACjB,UAAU,OAAO,WACjB,UAAU,UAAU,QAAW;AAC/B,UAAM,IAAI,eAAe,oGAAoG,4BAA4B,OAAO,WAAW,QAAQ;AAAA,EAC3L,YACc,UAAU,OAAO,SACvB,UAAU,OAAO,aACjB,UAAU,OAAO,WACjB,aAAa,UAAU,KAAK,GAAG;AAC/B,UAAM,IAAI,eAAe,oGAAoG,4CAA4C,OAAO,WAAW,QAAQ;AAAA,EAC3M,WACa,UAAU;AACf,QAAI,UAAU,MAAM,OAAO;AACvB,UAAI,UAAU,UAAU,KAAK,MAAM,GAAG,EAAE;AACxC,UAAI,kBAAkB,qBAAqB,MAAM,GAAG,EAAE;AACtD,UAAI,YAAY,kBAAkB,KAAK,YAAY,iBAAiB;AAChE,cAAM,IAAI,eAAe,yDAAyD,6BAA6B,OAAO,WAAW,QAAQ;AAAA,MACzJ;AAAA,IACA,WACiB,UAAU,OAAO,aACtB,UAAU,OAAO,YACjB,UAAU,OAAO,QAAQ;AACzB,UAAI,UAAU,SAAS,sBAAsB;AACzC,cAAM,IAAI,eAAe,8DAA8D,+BAA+B,OAAO,WAAW,QAAQ;AAAA,MAChK;AAAA,IACA,WACiB,UAAU,OAAO,UAAU,UAAU,OAAO,QAAQ;AACzD,UAAI,gBAAgB;AAAA,QAChB,IAAI;AAAA,QACJ,MAAM,UAAU;AAAA,QAChB,OAAO;AAAA,MACV;AACD,UAAI,QAAQ,SAAS,CAAC,aAAa,GAAG,QAAQ;AAC9C,UAAI,SAAS,MAAM,SAAS,+BAA+B;AACvD,cAAM,IAAI,eAAe,gEAAgE,+BAA+B,OAAO,WAAW,QAAQ;AAAA,MAClK;AAAA,IACA;AAAA,EACA;AACA;AAQO,SAAS,SAAS,UAAU,UAAU,mBAAmB;AAC5D,MAAI;AACA,QAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC1B,YAAM,IAAI,eAAe,mCAAmC,uBAAuB;AAAA,IAC/F;AACQ,QAAI,UAAU;AAEV,iBAAW,WAAW,QAAQ,GAAG,WAAW,QAAQ,GAAG,qBAAqB,IAAI;AAAA,IAC5F,OACa;AACD,0BAAoB,qBAAqB;AACzC,eAASA,KAAI,GAAGA,KAAI,SAAS,QAAQA,MAAK;AACtC,0BAAkB,SAASA,EAAC,GAAGA,IAAG,UAAU,MAAS;AAAA,MACrE;AAAA,IACA;AAAA,EACA,SACWW,IAAG;AACN,QAAIA,cAAa,gBAAgB;AAC7B,aAAOA;AAAA,IACnB,OACa;AACD,YAAMA;AAAA,IAClB;AAAA,EACA;AACA;AAmBO,SAAS,WAAW0C,IAAGC,IAAG;AAC7B,MAAID,OAAMC;AACN,WAAO;AACX,MAAID,MAAKC,MAAK,OAAOD,MAAK,YAAY,OAAOC,MAAK,UAAU;AACxD,QAAI,OAAO,MAAM,QAAQD,EAAC,GAAG,OAAO,MAAM,QAAQC,EAAC,GAAGtD,IAAG,QAAQ;AACjE,QAAI,QAAQ,MAAM;AACd,eAASqD,GAAE;AACX,UAAI,UAAUC,GAAE;AACZ,eAAO;AACX,WAAKtD,KAAI,QAAQA,SAAQ;AACrB,YAAI,CAAC,WAAWqD,GAAErD,EAAC,GAAGsD,GAAEtD,EAAC,CAAC;AACtB,iBAAO;AACf,aAAO;AAAA,IACnB;AACQ,QAAI,QAAQ;AACR,aAAO;AACX,QAAI,OAAO,OAAO,KAAKqD,EAAC;AACxB,aAAS,KAAK;AACd,QAAI,WAAW,OAAO,KAAKC,EAAC,EAAE;AAC1B,aAAO;AACX,SAAKtD,KAAI,QAAQA,SAAQ;AACrB,UAAI,CAACsD,GAAE,eAAe,KAAKtD,EAAC,CAAC;AACzB,eAAO;AACf,SAAKA,KAAI,QAAQA,SAAQ,KAAI;AACzB,YAAM,KAAKA,EAAC;AACZ,UAAI,CAAC,WAAWqD,GAAE,GAAG,GAAGC,GAAE,GAAG,CAAC;AAC1B,eAAO;AAAA,IACvB;AACQ,WAAO;AAAA,EACf;AACI,SAAOD,OAAMA,MAAKC,OAAMA;AAC5B;AC1cO,MAAM,YAAY,MAAM,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa;AAC9E,MAAA,cAAc,MAAM,OAAO,eAAe,YACnD,WAAW,eACX,WAAW,YAAY,SAAS;AAC7B,MAAM,UAAU,MAAO,OAAO,WAAW,eAAe,OAAO,SAAS,YAC1E,OAAO,cAAc,gBACjB,UAAU,UAAU,SAAS,SAAS,KACnC,UAAU,UAAU,SAAS,OAAO;AAGnC,MAAA,SAAS,MAAM,OAAO,SAAS;AAErC,MAAM,SAAS,MAAM,OAAO,YAAY,eAC3C,OAAO,QAAQ,aAAa,eAC5B,OAAO,QAAQ,SAAS,SAAS,eACjC,CAAC,OAAO;AACL,MAAM,SAAS,MAAM;AACpB,MAAA;AACJ,MAAI,aAAa;AACP,UAAA;AAAA,EAAA,WAED,UAAU;AACT,UAAA;AAAA,EAAA,WAED,eAAe;AACd,UAAA;AAAA,EAAA,WAED,WAAW;AACV,UAAA;AAAA,EAAA,WAED,UAAU;AACT,UAAA;AAAA,EAAA,OAEL;AACK,UAAA;AAAA,EAAA;AAEH,SAAA;AACX;AACA,IAAI;AACJ,eAAsB,wBAAwB;AAC1C,MAAI,uBAAuB,QAAW;AAClC,UAAM,MAAM,OAAO;AACE,yBAAA;AAAA,MACjB,SAAS;AAAA,MACT,SAAS;AAAA,IACb;AAAA,EAAA;AAEG,SAAA;AACX;AACO,SAAS,uBAAuB,MAAM;;AAGrC,MAAA;AACI,QAAA,OAAO,YAAY,aAAa;AAEhC,cAAO7C,MAAA,gBAAA,gBAAAA,IAAc;AAAA,IAAI,WAEpB,UAAU;AACR,aAAA,6BAAM,IAAI,IAAI;AAAA,IAAI,OAExB;AACM,aAAA;AAAA,IAAA;AAAA,WAGRE,IAAG;AACC,WAAA;AAAA,EAAA;AAEf;AC3DA,MAAM,gCAAgC;AACtC;AACO,SAAS,gCAAgCP,IAAG;AAC/C,SAAO,yBAAyBA,MAAKA,GAAE;AAC3C;AAOO,MAAM,4BAA4B,gCAAgC;AAAA,EACrE,IAAI,eAAe;AACf,WAAO,CAAC,kBAAkB,aAAa,KAAK,IAAI;AAAA,EACxD;AAAA,EACI,IAAI,aAAa;AACb,WAAO;AAAA,EACf;AAAA,EACI,IAAI,gBAAgB;AAChB,WAAO;AAAA,EACf;AAAA,EACI,IAAI,aAAa;AACb,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,OAAO,UAAU;AACb,WAAO,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,QAAQ;AACR,WAAO;AAAA,MACH,GAAG,KAAK;AAAA,MACR,mBAAmB,KAAK,WAAW;AAAA,IACtC;AAAA,EACT;AAAA,EACI,YAAY,OAAO;AACf,UAAO;AACP,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,uBAAuB,gCAAgC,MAAM;AAAA,IAChF,CAAS;AACD,SAAK,YAAY,SAAS,CAAE;AAC5B,QAAI,OAAO;AACP,WAAK,YAAY,MAAM,aAAa,KAAK;AACzC,WAAK,cAAc,MAAM,eAAe,KAAK;AAC7C,WAAK,cAAc,MAAM,eAAe,KAAK;AAC7C,WAAK,kBAAkB,MAAM,mBAAmB,KAAK;AACrD,WAAK,oBACD,MAAM,qBAAqB,KAAK;AACpC,WAAK,aAAa,MAAM,cAAc,KAAK;AAC3C,WAAK,gBACD,KAAK,eAAe,MAAM,iBAAiB,KAAK;AAAA,IAChE;AAAA,EACA;AAAA,EACI,OAAO;AACH,WAAO,IAAI,KAAK,YAAY,IAAI;AAAA,EACxC;AAAA,EACI,SAAS;AACL,WAAO,aAAa,UAAU,OAAO,KAAK,IAAI;AAAA,EACtD;AAAA,EACI,uBAAuB;AACnB,WAAO,aAAa,UAAU,qBAAqB,KAAK,IAAI;AAAA,EACpE;AAAA,EACI,OAAO,YAAY,SAAS;AAAA,IACxB,MAAM,gBAAgB,oBAAoB;AAAA,MACtC,cAAc;AACV,cAAO;AACP,eAAO,eAAe,MAAM,QAAQ;AAAA,UAChC,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,UAAU;AAAA,UACV,OAAOwH,GAAO;AAAA,QAClC,CAAiB;AACD,eAAO,OAAO,MAAM,OAAO;AAAA,MAC3C;AAAA,IACA;AACQ,WAAO,IAAI,QAAS;AAAA,EAC5B;AACA;AACO,MAAM,wBAAwB,CAACxH,OAAM;AACxC,QAAM,kBAAkBA;AACxB,SAAQ,oBAAoB,UACxB,OAAO,gBAAgB,SAAS,cAChC,OAAO,gBAAgB,SAAS,YAChC,OAAO,gBAAgB,kBAAkB;AACjD;ACpJA,SAAS+I,gBAAc,OAAO,YAAY;AACtC,SAAO,SAAS,CAAC,MAAM,QAAQ,KAAK,KAAK,OAAO,UAAU,WACpD,QACA,EAAE,CAAC,UAAU,GAAG,MAAO;AACjC;AACA,SAAS,qBAAqB,OAAO;AACjC,SAAO,MAAM,QAAQ,UAAU,EAAE;AACrC;AACA,SAAS,2BAA2B,OAAO,OAAO,gBAAgB;AAC9D,QAAM,cAAc,eAAe,QAAQ,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,SAAS,GAAG,GAAG;AACzE,SAAQ,qBAAqB,GAAG,IAAI,KAAK,KAAK,EAAE,YAAa,EAAC,MAAM,GAAG,EAAE,CAAC,GAAG,WAAW,GAAG,IAAI;AACnG;AACO,SAAS,aAAa/I,IAAG;AAC5B,SAAO,OAAOA,GAAE,oBAAoB;AACxC;AACO,MAAM,mBAAmB,oBAAoB;AAAA,EAChD,YAAY,SAAS;AACjB,UAAM,GAAG,SAAS;AAClB,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,oBAAI,IAAG;AAAA,IAC1B,CAAS;AAAA,EACT;AAAA,EACI,OAAO;AACH,WAAO;AAAA,EACf;AAAA,EACI,eAAe,OAAO;AAElB,QAAI,iBAAiB,OAAO;AACxB,aAAO,MAAM,YAAW,+BAAO,SAAQ;AAAA;AAAA,EAAO,MAAM,KAAK,KAAK;AAAA,IAC1E;AACQ,QAAI,OAAO,UAAU,UAAU;AAC3B,aAAO;AAAA,IACnB;AACQ,WAAO,GAAG,KAAK;AAAA,EACvB;AAAA,EACI,aAAa,WAAW,UAAU;AAC9B,cAAU,WAAW,KAAK,QAAQ;AAAA,EAC1C;AAAA,EACI,gBAAgB,KAAK;AACjB,UAAM,qBAAqB,2BAA2B,IAAI,YAAY,IAAI,IAAI,IAAI,eAAe;AACjG,UAAM,YAAY,EAAE,GAAG,IAAK;AAC5B,QAAI,UAAU,kBAAkB,QAAW;AACvC,YAAM,YAAY,KAAK,OAAO,IAAI,UAAU,aAAa;AACzD,UAAI,WAAW;AACX,aAAK,aAAa,WAAW,SAAS;AACtC,kBAAU,wBAAwB,KAAK,IAAI,UAAU,uBAAuB,UAAU,qBAAqB;AAC3G,kBAAU,WAAW,UAAU;AAC/B,YAAI,UAAU,iBAAiB,QAAW;AACtC,oBAAU,eAAe;AAAA,YACrB,UAAU;AAAA,YACV;AAAA,UACxB,EAAsB,KAAK,GAAG;AAAA,QAC9B;AAAA,MAKA;AAAA,IAOA,OACa;AACD,gBAAU,WAAW,UAAU;AAC/B,gBAAU,eAAe;AAAA,IACrC;AACQ,SAAK,OAAO,IAAI,UAAU,IAAI,SAAS;AACvC,WAAO;AAAA,EACf;AAAA,EACI,MAAM,UAAU,KAAK;;AACjB,UAAM,YAAY,IAAI,kBAAkB,UAAa,KAAK,OAAO,IAAI,IAAI,aAAa;AACtF,QAAI,WAAW;AACX,gBAAU,wBAAwB,KAAK,IAAI,UAAU,uBAAuB,IAAI,qBAAqB;AAAA,IACjH,OACa;AACD,YAAM,KAAK,WAAW,GAAG;AAAA,IACrC;AACQ,SAAK,OAAO,OAAO,IAAI,EAAE;AACzB,YAAMK,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AAAA,EACjC;AAAA,EACI,mBAAmB,aAAa;AAC5B,UAAM,YAAY,gBAAgB,UAAa,KAAK,OAAO,IAAI,WAAW;AAE1E,QAAI,CAAC,WAAW;AACZ,aAAO;AAAA,IACnB;AACQ,WAAO,UAAU,wBAAwB;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,sBAAsB,KAAK,SAAS,OAAO,aAAa,aAAa,MAAM,UAAU,MAAM;AACvF,UAAM,kBAAkB,KAAK,mBAAmB,WAAW;AAC3D,UAAM,aAAa,KAAK,IAAK;AAC7B,UAAM,mBAAmB,WACnB,EAAE,GAAG,aAAa,SAAQ,IAC1B;AACN,UAAM,MAAM;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC;AAAA,MACtC,eAAe;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM,IAAI,KAAK,UAAU,EAAE,YAAa;AAAA,QAC3C;AAAA,MACJ;AAAA,MACD,QAAQ,EAAE,QAAS;AAAA,MACnB;AAAA,MACA,YAAY,CAAE;AAAA,MACd,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,OAAO,oBAAoB,CAAE;AAAA,MAC7B,MAAM,QAAQ,CAAE;AAAA,IACnB;AACD,WAAO,KAAK,gBAAgB,GAAG;AAAA,EACvC;AAAA,EACI,MAAM,eAAe,KAAK,SAAS,OAAO,aAAa,aAAa,MAAM,UAAU,MAAM;;AACtF,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK,KAC7B,KAAK,sBAAsB,KAAK,SAAS,OAAO,aAAa,aAAa,MAAM,UAAU,IAAI;AAClG,YAAMA,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,YAAMG,MAAA,KAAK,eAAL,gBAAAA,IAAA,WAAkB;AACxB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,4BAA4B,KAAKuC,WAAU,OAAO,aAAa,aAAa,MAAM,UAAU,MAAM;AAC9F,UAAM,kBAAkB,KAAK,mBAAmB,WAAW;AAC3D,UAAM,aAAa,KAAK,IAAK;AAC7B,UAAM,mBAAmB,WACnB,EAAE,GAAG,aAAa,SAAQ,IAC1B;AACN,UAAM,MAAM;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC;AAAA,MACtC,eAAe;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM,IAAI,KAAK,UAAU,EAAE,YAAa;AAAA,QAC3C;AAAA,MACJ;AAAA,MACD,QAAQ,EAAE,UAAAA,UAAU;AAAA,MACpB;AAAA,MACA,YAAY,CAAE;AAAA,MACd,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,OAAO,oBAAoB,CAAE;AAAA,MAC7B,MAAM,QAAQ,CAAE;AAAA,IACnB;AACD,WAAO,KAAK,gBAAgB,GAAG;AAAA,EACvC;AAAA,EACI,MAAM,qBAAqB,KAAKA,WAAU,OAAO,aAAa,aAAa,MAAM,UAAU,MAAM;;AAC7F,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK,KAC7B,KAAK,4BAA4B,KAAKA,WAAU,OAAO,aAAa,aAAa,MAAM,UAAU,IAAI;AACzG,YAAM1C,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,YAAMG,MAAA,KAAK,eAAL,gBAAAA,IAAA,WAAkB;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,aAAa,QAAQ,OAAO;;AAC9B,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,OAAO;AACjC,YAAM,IAAI,MAAM,oBAAoB;AAAA,IAChD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,UAAU;AACd,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMH,MAAA,KAAK,aAAL,gBAAAA,IAAA,WAAgB;AACtB,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,OAAO,OAAO;;AAC/B,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,OAAO;AACjC,YAAM,IAAI,MAAM,oBAAoB;AAAA,IAChD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,QAAQ,KAAK,eAAe,KAAK;AACrC,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMA,MAAA,KAAK,eAAL,gBAAAA,IAAA,WAAkB;AACxB,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,wBAAwB,OAAO,QAAQ,OAAO,aAAa,MAAM,UAAU,SAAS,MAAM;AACtF,UAAM,kBAAkB,KAAK,mBAAmB,WAAW;AAC3D,UAAM,aAAa,KAAK,IAAK;AAC7B,UAAM,MAAM;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;AAAA,MAC1C,eAAe;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM,IAAI,KAAK,UAAU,EAAE,YAAa;AAAA,QAC3C;AAAA,MACJ;AAAA,MACD;AAAA,MACA;AAAA,MACA,uBAAuB;AAAA,MACvB,UAAU,WAAW;AAAA,MACrB,YAAY,CAAE;AAAA,MACd,OAAO,WAAW,EAAE,SAAQ,IAAK,CAAE;AAAA,MACnC,MAAM,QAAQ,CAAE;AAAA,IACnB;AACD,WAAO,KAAK,gBAAgB,GAAG;AAAA,EACvC;AAAA,EACI,MAAM,iBAAiB,OAAO,QAAQ,OAAO,aAAa,MAAM,UAAU,SAAS,MAAM;;AACrF,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK,KAC7B,KAAK,wBAAwB,OAAO,QAAQ,OAAO,aAAa,MAAM,UAAU,SAAS,IAAI;AACjG,YAAMA,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,YAAMG,MAAA,KAAK,iBAAL,gBAAAA,IAAA,WAAoB;AAC1B,WAAO;AAAA,EACf;AAAA,EACI,MAAM,eAAe,SAAS,OAAO,cAAc,OAAO,QAAQ;;AAC9D,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,KAAK;AACN,YAAM,IAAI,MAAM,sBAAsB;AAAA,IAClD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,UAAUuI,gBAAc,SAAS,QAAQ;AAC7C,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,SAAI,iCAAQ,YAAW,QAAW;AAC9B,UAAI,SAASA,gBAAc,OAAO,QAAQ,OAAO;AAAA,IAC7D;AACQ,YAAM1I,MAAA,KAAK,eAAL,gBAAAA,IAAA,WAAkB;AACxB,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,iBAAiB,OAAO,OAAO,cAAc,OAAO,QAAQ;;AAC9D,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,KAAK;AACN,YAAM,IAAI,MAAM,sBAAsB;AAAA,IAClD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,QAAQ,KAAK,eAAe,KAAK;AACrC,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,SAAI,iCAAQ,YAAW,QAAW;AAC9B,UAAI,SAAS0I,gBAAc,OAAO,QAAQ,OAAO;AAAA,IAC7D;AACQ,YAAM1I,MAAA,KAAK,iBAAL,gBAAAA,IAAA,WAAoB;AAC1B,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,uBAAuB,MAAM,OAAO,OAAO,aAAa,MAAM,UAAU,MAAM;AAC1E,UAAM,kBAAkB,KAAK,mBAAmB,WAAW;AAC3D,UAAM,aAAa,KAAK,IAAK;AAC7B,UAAM,MAAM;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;AAAA,MACxC,eAAe;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM,IAAI,KAAK,UAAU,EAAE,YAAa;AAAA,QAC3C;AAAA,MACJ;AAAA,MACD,QAAQ,EAAE,MAAO;AAAA,MACjB;AAAA,MACA,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,YAAY,CAAE;AAAA,MACd,OAAO,WAAW,EAAE,SAAQ,IAAK,CAAE;AAAA,MACnC,MAAM,QAAQ,CAAE;AAAA,IACnB;AACD,WAAO,KAAK,gBAAgB,GAAG;AAAA,EACvC;AAAA,EACI,MAAM,gBAAgB,MAAM,OAAO,OAAO,aAAa,MAAM,UAAU,MAAM;;AACzE,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK,KAC7B,KAAK,uBAAuB,MAAM,OAAO,OAAO,aAAa,MAAM,UAAU,IAAI;AACrF,YAAMA,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,YAAMG,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,WAAO;AAAA,EACf;AAAA;AAAA,EAEI,MAAM,cAAc,QAAQ,OAAO;;AAC/B,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,QAAQ;AAClC,YAAM,IAAI,MAAM,oBAAoB;AAAA,IAChD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,UAAU,EAAE,OAAQ;AACxB,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMH,MAAA,KAAK,cAAL,gBAAAA,IAAA,WAAiB;AACvB,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,gBAAgB,OAAO,OAAO;;AAChC,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,QAAQ;AAClC,YAAM,IAAI,MAAM,oBAAoB;AAAA,IAChD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,QAAQ,KAAK,eAAe,KAAK;AACrC,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMA,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,kBAAkB,QAAQ,OAAO;;AACnC,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,SAAS;AACnC;AAAA,IACZ;AACQ,UAAM,WAAW;AACjB,aAAS,UAAU,SAAS,WAAW,CAAE;AACzC,aAAS,QAAQ,KAAK,MAAM;AAC5B,aAAS,OAAO,KAAK;AAAA,MACjB,MAAM;AAAA,MACN,OAAM,oBAAI,KAAM,GAAC,YAAa;AAAA,MAC9B,QAAQ,EAAE,OAAQ;AAAA,IAC9B,CAAS;AACD,YAAMA,MAAA,KAAK,kBAAL,gBAAAA,IAAA,WAAqB;AAAA,EACnC;AAAA,EACI,MAAM,eAAe,QAAQ,OAAO;;AAChC,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,SAAS;AACnC;AAAA,IACZ;AACQ,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,OAAM,oBAAI,KAAM,GAAC,YAAa;AAAA,MAC9B,QAAQ,EAAE,OAAQ;AAAA,IAC9B,CAAS;AACD,YAAMA,MAAA,KAAK,eAAL,gBAAAA,IAAA,WAAkB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,4BAA4B,WAAW,OAAO,OAAO,aAAa,MAAM,UAAU,MAAM;AACpF,UAAM,kBAAkB,KAAK,mBAAmB,WAAW;AAC3D,UAAM,aAAa,KAAK,IAAK;AAC7B,UAAM,MAAM;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ,UAAU,GAAG,UAAU,GAAG,SAAS,CAAC;AAAA,MAClD,eAAe;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM,IAAI,KAAK,UAAU,EAAE,YAAa;AAAA,QAC3C;AAAA,MACJ;AAAA,MACD,QAAQ,EAAE,MAAO;AAAA,MACjB;AAAA,MACA,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,YAAY,CAAE;AAAA,MACd,OAAO,WAAW,EAAE,SAAQ,IAAK,CAAE;AAAA,MACnC,MAAM,QAAQ,CAAE;AAAA,IACnB;AACD,WAAO,KAAK,gBAAgB,GAAG;AAAA,EACvC;AAAA,EACI,MAAM,qBAAqB,WAAW,OAAO,OAAO,aAAa,MAAM,UAAU,MAAM;;AACnF,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK,KAC7B,KAAK,4BAA4B,WAAW,OAAO,OAAO,aAAa,MAAM,UAAU,IAAI;AAC/F,YAAMA,MAAA,KAAK,gBAAL,gBAAAA,IAAA,WAAmB;AACzB,YAAMG,MAAA,KAAK,qBAAL,gBAAAA,IAAA,WAAwB;AAC9B,WAAO;AAAA,EACf;AAAA,EACI,MAAM,mBAAmB,WAAW,OAAO;;AACvC,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,aAAa;AACvC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IACrD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,UAAU,EAAE,UAAW;AAC3B,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMH,MAAA,KAAK,mBAAL,gBAAAA,IAAA,WAAsB;AAC5B,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,qBAAqB,OAAO,OAAO;;AACrC,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,aAAa;AACvC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IACrD;AACQ,QAAI,WAAW,KAAK,IAAK;AACzB,QAAI,QAAQ,KAAK,eAAe,KAAK;AACrC,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,IACtD,CAAS;AACD,YAAMA,MAAA,KAAK,qBAAL,gBAAAA,IAAA,WAAwB;AAC9B,UAAM,KAAK,UAAU,GAAG;AACxB,WAAO;AAAA,EACf;AAAA,EACI,MAAM,WAAW2I,OAAM,OAAO;;AAC1B,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,SAAS;AACnC;AAAA,IACZ;AACQ,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,OAAM,oBAAI,KAAM,GAAC,YAAa;AAAA,MAC9B,QAAQ,EAAE,MAAAA,MAAM;AAAA,IAC5B,CAAS;AACD,YAAM3I,MAAA,KAAK,WAAL,gBAAAA,IAAA,WAAc;AAAA,EAC5B;AAAA,EACI,MAAM,kBAAkB,OAAO,KAAK,OAAO,cAAc,OAAO,QAAQ;;AACpE,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AACjC,QAAI,CAAC,QAAO,2BAAK,cAAa,OAAO;AACjC,YAAM,IAAI,MAAM,2DAA2D;AAAA,IACvF;AACQ,QAAI,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,OAAM,oBAAI,KAAM,GAAC,YAAa;AAAA,MAC9B,QAAQ,EAAE,OAAO,KAAK,OAAO,iCAAQ,MAAO;AAAA,IACxD,CAAS;AACD,YAAMA,MAAA,KAAK,kBAAL,gBAAAA,IAAA,WAAqB,KAAK,OAAO,EAAE,OAAO,iCAAQ;AACxD,WAAO;AAAA,EACf;AACA;;;;;;;;AChdA,UAAM,yBAAyB;AAE/B,UAAM,cAAc,CAAC,SAAS,MAAM,UAAQ,QAAU,KAAK,MAAM,MAAM,IAAI;AAE3E,UAAM,cAAc,CAAC,SAAS,MAAM,CAAC,KAAK,OAAO,SAAS,QAAU,KAAK,MAAM,MAAM,GAAG,IAAI,KAAK,IAAI,IAAI;AAEzG,aAAS,iBAAiB;AACzB,YAAM,QAAQ,oBAAI,IAAK;AACvB,YAAM4I,UAAS;AAAA,QACd,UAAU;AAAA,UACT,OAAO,CAAC,GAAG,CAAC;AAAA;AAAA,UAEZ,MAAM,CAAC,GAAG,EAAE;AAAA,UACZ,KAAK,CAAC,GAAG,EAAE;AAAA,UACX,QAAQ,CAAC,GAAG,EAAE;AAAA,UACd,WAAW,CAAC,GAAG,EAAE;AAAA,UACjB,UAAU,CAAC,IAAI,EAAE;AAAA,UACjB,SAAS,CAAC,GAAG,EAAE;AAAA,UACf,QAAQ,CAAC,GAAG,EAAE;AAAA,UACd,eAAe,CAAC,GAAG,EAAE;AAAA,QACrB;AAAA,QACD,OAAO;AAAA,UACN,OAAO,CAAC,IAAI,EAAE;AAAA,UACd,KAAK,CAAC,IAAI,EAAE;AAAA,UACZ,OAAO,CAAC,IAAI,EAAE;AAAA,UACd,QAAQ,CAAC,IAAI,EAAE;AAAA,UACf,MAAM,CAAC,IAAI,EAAE;AAAA,UACb,SAAS,CAAC,IAAI,EAAE;AAAA,UAChB,MAAM,CAAC,IAAI,EAAE;AAAA,UACb,OAAO,CAAC,IAAI,EAAE;AAAA;AAAA,UAGd,aAAa,CAAC,IAAI,EAAE;AAAA,UACpB,WAAW,CAAC,IAAI,EAAE;AAAA,UAClB,aAAa,CAAC,IAAI,EAAE;AAAA,UACpB,cAAc,CAAC,IAAI,EAAE;AAAA,UACrB,YAAY,CAAC,IAAI,EAAE;AAAA,UACnB,eAAe,CAAC,IAAI,EAAE;AAAA,UACtB,YAAY,CAAC,IAAI,EAAE;AAAA,UACnB,aAAa,CAAC,IAAI,EAAE;AAAA,QACpB;AAAA,QACD,SAAS;AAAA,UACR,SAAS,CAAC,IAAI,EAAE;AAAA,UAChB,OAAO,CAAC,IAAI,EAAE;AAAA,UACd,SAAS,CAAC,IAAI,EAAE;AAAA,UAChB,UAAU,CAAC,IAAI,EAAE;AAAA,UACjB,QAAQ,CAAC,IAAI,EAAE;AAAA,UACf,WAAW,CAAC,IAAI,EAAE;AAAA,UAClB,QAAQ,CAAC,IAAI,EAAE;AAAA,UACf,SAAS,CAAC,IAAI,EAAE;AAAA;AAAA,UAGhB,eAAe,CAAC,KAAK,EAAE;AAAA,UACvB,aAAa,CAAC,KAAK,EAAE;AAAA,UACrB,eAAe,CAAC,KAAK,EAAE;AAAA,UACvB,gBAAgB,CAAC,KAAK,EAAE;AAAA,UACxB,cAAc,CAAC,KAAK,EAAE;AAAA,UACtB,iBAAiB,CAAC,KAAK,EAAE;AAAA,UACzB,cAAc,CAAC,KAAK,EAAE;AAAA,UACtB,eAAe,CAAC,KAAK,EAAE;AAAA,QAC1B;AAAA,MACE;AAGD,MAAAA,QAAO,MAAM,OAAOA,QAAO,MAAM;AACjC,MAAAA,QAAO,QAAQ,SAASA,QAAO,QAAQ;AACvC,MAAAA,QAAO,MAAM,OAAOA,QAAO,MAAM;AACjC,MAAAA,QAAO,QAAQ,SAASA,QAAO,QAAQ;AAEvC,iBAAW,CAAC,WAAW,KAAK,KAAK,OAAO,QAAQA,OAAM,GAAG;AACxD,mBAAW,CAAC,WAAW,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AACvD,UAAAA,QAAO,SAAS,IAAI;AAAA,YACnB,MAAM,QAAU,MAAM,CAAC,CAAC;AAAA,YACxB,OAAO,QAAU,MAAM,CAAC,CAAC;AAAA,UACzB;AAED,gBAAM,SAAS,IAAIA,QAAO,SAAS;AAEnC,gBAAM,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,QAC/B;AAEE,eAAO,eAAeA,SAAQ,WAAW;AAAA,UACxC,OAAO;AAAA,UACP,YAAY;AAAA,QACf,CAAG;AAAA,MACH;AAEC,aAAO,eAAeA,SAAQ,SAAS;AAAA,QACtC,OAAO;AAAA,QACP,YAAY;AAAA,MACd,CAAE;AAED,MAAAA,QAAO,MAAM,QAAQ;AACrB,MAAAA,QAAO,QAAQ,QAAQ;AAEvB,MAAAA,QAAO,MAAM,UAAU,YAAa;AACpC,MAAAA,QAAO,MAAM,UAAU,YAAa;AACpC,MAAAA,QAAO,QAAQ,UAAU,YAAY,sBAAsB;AAC3D,MAAAA,QAAO,QAAQ,UAAU,YAAY,sBAAsB;AAG3D,aAAO,iBAAiBA,SAAQ;AAAA,QAC/B,cAAc;AAAA,UACb,OAAO,CAAC,KAAK,OAAO,SAAS;AAG5B,gBAAI,QAAQ,SAAS,UAAU,MAAM;AACpC,kBAAI,MAAM,GAAG;AACZ,uBAAO;AAAA,cACb;AAEK,kBAAI,MAAM,KAAK;AACd,uBAAO;AAAA,cACb;AAEK,qBAAO,KAAK,OAAQ,MAAM,KAAK,MAAO,EAAE,IAAI;AAAA,YACjD;AAEI,mBAAO,KACL,KAAK,KAAK,MAAM,MAAM,MAAM,CAAC,IAC7B,IAAI,KAAK,MAAM,QAAQ,MAAM,CAAC,IAC/B,KAAK,MAAM,OAAO,MAAM,CAAC;AAAA,UAC1B;AAAA,UACD,YAAY;AAAA,QACZ;AAAA,QACD,UAAU;AAAA,UACT,OAAO,SAAO;AACb,kBAAM,UAAU,yCAAyC,KAAK,IAAI,SAAS,EAAE,CAAC;AAC9E,gBAAI,CAAC,SAAS;AACb,qBAAO,CAAC,GAAG,GAAG,CAAC;AAAA,YACpB;AAEI,gBAAI,EAAC,YAAW,IAAI,QAAQ;AAE5B,gBAAI,YAAY,WAAW,GAAG;AAC7B,4BAAc,YAAY,MAAM,EAAE,EAAE,IAAI,eAAa,YAAY,SAAS,EAAE,KAAK,EAAE;AAAA,YACxF;AAEI,kBAAMC,WAAU,OAAO,SAAS,aAAa,EAAE;AAE/C,mBAAO;AAAA,cACLA,YAAW,KAAM;AAAA,cACjBA,YAAW,IAAK;AAAA,cACjBA,WAAU;AAAA,YACV;AAAA,UACD;AAAA,UACD,YAAY;AAAA,QACZ;AAAA,QACD,cAAc;AAAA,UACb,OAAO,SAAOD,QAAO,aAAa,GAAGA,QAAO,SAAS,GAAG,CAAC;AAAA,UACzD,YAAY;AAAA,QACf;AAAA,MACA,CAAE;AAED,aAAOA;AAAA,IACR;AAGA,WAAO,eAAe,QAAQ,WAAW;AAAA,MACxC,YAAY;AAAA,MACZ,KAAK;AAAA,IACN,CAAC;AAAA;;;;;ACjKD,SAAS,KAAK,OAAOD,OAAM;AACvB,SAAO,GAAG,MAAM,IAAI,GAAGA,KAAI,GAAG,MAAM,KAAK;AAC7C;AACA,SAAS,iBAAiB,KAAK,UAAU;AACrC,MAAI;AACA,WAAO,KAAK,UAAU,KAAK,MAAM,CAAC;AAAA,EAC1C,SACW,KAAK;AACR,WAAO;AAAA,EACf;AACA;AACA,SAAS,gBAAgB,OAAO;AAC5B,MAAI,OAAO,UAAU,UAAU;AAC3B,WAAO,MAAM,KAAM;AAAA,EAC3B;AACI,MAAI,UAAU,QAAQ,UAAU,QAAW;AACvC,WAAO;AAAA,EACf;AACI,SAAO,iBAAiB,OAAO,MAAM,SAAQ,CAAE;AACnD;AACA,SAAS,QAAQ,KAAK;AAClB,MAAI,CAAC,IAAI;AACL,WAAO;AACX,QAAMG,WAAU,IAAI,WAAW,IAAI;AACnC,MAAIA,WAAU,KAAM;AAChB,WAAO,GAAGA,QAAO;AAAA,EACzB;AACI,SAAO,IAAIA,WAAU,KAAM,QAAQ,CAAC,CAAC;AACzC;AACA,MAAM,EAAE,MAAO,IAAG;AAgBX,MAAM,+BAA+B,WAAW;AAAA,EACnD,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,WAAW,MAAM;AACb,WAAO,QAAQ,QAAS;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,WAAW,KAAK;AACZ,UAAM,UAAU,CAAE;AAClB,QAAI,aAAa;AACjB,WAAO,WAAW,eAAe;AAC7B,YAAM,SAAS,KAAK,OAAO,IAAI,WAAW,aAAa;AACvD,UAAI,QAAQ;AACR,gBAAQ,KAAK,MAAM;AACnB,qBAAa;AAAA,MAC7B,OACiB;AACD;AAAA,MAChB;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,eAAe,KAAK;AAChB,UAAM,UAAU,KAAK,WAAW,GAAG,EAAE,QAAS;AAC9C,UAAM,SAAS,CAAC,GAAG,SAAS,GAAG,EAC1B,IAAI,CAAC,QAAQvJ,IAAGmE,SAAQ;AACzB,YAAM,OAAO,GAAG,OAAO,eAAe,IAAI,OAAO,QAAQ,IAAI,OAAO,IAAI;AACxE,aAAOnE,OAAMmE,KAAI,SAAS,IAAI,KAAK,OAAO,MAAM,IAAI,IAAI;AAAA,IAC3D,CAAA,EACI,KAAK,KAAK;AACf,WAAO,KAAK,MAAM,MAAM,MAAM;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,aAAa,KAAK;AACd,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,OAAO,eAAe,CAAC,KAAK,MAAM,oCAAoC,iBAAiB,IAAI,QAAQ,UAAU,CAAC,EAAE;AAAA,EAClJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,WAAW,KAAK;AACZ,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,MAAM,aAAa,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,oCAAoC,iBAAiB,IAAI,SAAS,WAAW,CAAC,EAAE;AAAA,EACnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,aAAa,KAAK;AACd,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,KAAK,eAAe,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,mCAAmC,iBAAiB,IAAI,OAAO,SAAS,CAAC,EAAE;AAAA,EAC/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,WAAW,KAAK;AACZ,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,UAAM,SAAS,aAAa,IAAI,SAC1B,EAAE,SAAS,IAAI,OAAO,QAAQ,IAAI,CAACqF,OAAMA,GAAE,MAAM,EAAC,IAClD,IAAI;AACV,YAAQ,IAAI,GAAG,KAAK,MAAM,OAAO,aAAa,CAAC,KAAK,MAAM,kCAAkC,iBAAiB,QAAQ,UAAU,CAAC,EAAE;AAAA,EAC1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,SAAS,KAAK;AACV,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,MAAM,WAAW,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,kCAAkC,iBAAiB,IAAI,SAAS,YAAY,CAAC,EAAE;AAAA,EAChK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,WAAW,KAAK;AACZ,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,KAAK,aAAa,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,iCAAiC,iBAAiB,IAAI,OAAO,SAAS,CAAC,EAAE;AAAA,EAC3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,YAAY,KAAK;AACb,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,OAAO,cAAc,CAAC,KAAK,MAAM,oCAAoC,gBAAgB,IAAI,OAAO,KAAK,CAAC,GAAG;AAAA,EAC3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,UAAU,KAAK;;AACX,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,MAAM,YAAY,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,oCAAoC,iBAAgB/I,MAAA,IAAI,YAAJ,gBAAAA,IAAa,MAAM,CAAC,GAAG;AAAA,EAC7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,YAAY,KAAK;AACb,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,KAAK,cAAc,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,kCAAkC,iBAAiB,IAAI,OAAO,SAAS,CAAC,EAAE;AAAA,EAC7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,iBAAiB,KAAK;AAClB,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,OAAO,mBAAmB,CAAC,KAAK,MAAM,wCAAwC,iBAAiB,IAAI,QAAQ,UAAU,CAAC,EAAE;AAAA,EAC1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,eAAe,KAAK;AAChB,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,MAAM,iBAAiB,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,wCAAwC,iBAAiB,IAAI,SAAS,WAAW,CAAC,EAAE;AAAA,EAC3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,iBAAiB,KAAK;AAClB,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,KAAK,mBAAmB,CAAC,KAAK,MAAM,MAAM,QAAQ,GAAG,CAAC,uCAAuC,iBAAiB,IAAI,OAAO,SAAS,CAAC,EAAE;AAAA,EACvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,cAAc,KAAK;AACf,UAAM,WAAW;AACjB,UAAM,SAAS,KAAK,eAAe,GAAG;AACtC,YAAQ,IAAI,GAAG,KAAK,MAAM,MAAM,gBAAgB,CAAC,KAAK,MAAM,4BAA4B,iBAAiB,SAAS,QAAQ,SAAS,QAAQ,SAAS,CAAC,GAAG,UAAU,CAAC,EAAE;AAAA,EAC7K;AACA;AC/NA,IAAIiI;AACG,MAAM,qCAAqC,MAAM;AACpD,MAAIA,aAAW,QAAW;AACtB,UAAM,eAAe,uBAAuB,gCAAgC,MAAM,UAC5E;AAAA;AAAA,MAEE,4BAA4B;AAAA,IAC5C,IACc,CAAE;AACRA,eAAS,IAAIC,SAAO,YAAY;AAAA,EACxC;AACI,SAAOD;AACX;ACTO,MAAM,wBAAwB,WAAW;AAAA,EAC5C,YAAY,SAAS,IAAI;AACrB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,UAAM,EAAE,WAAW,aAAa,QAAAA,QAAQ,IAAG;AAC3C,SAAK,cACD,eACI,uBAAuB,mBAAmB,KAC1C,uBAAuB,mBAAmB;AAClD,SAAK,YAAY;AACjB,SAAK,SAASA,WAAU,mCAAoC;AAC5D,UAAM,gBAAgB,gBAAgB,oBAAqB;AAC3D,QAAI,eAAe;AACf,WAAK,kBAAkB,aAAa;AAAA,IAChD;AAAA,EACA;AAAA,EACI,MAAM,iBAAiB,KAAK,aAAa,QAAW;AAChD,WAAO;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,QACH,GAAG,IAAI;AAAA,QACP,SAAS,MAAM,sBAAuB;AAAA,MACzC;AAAA,MACD,YAAY;AAAA,MACZ,cAAc,KAAK;AAAA,MACnB,sBAAsB,IAAI,gBAAgB,SAAY;AAAA,IACzD;AAAA,EACT;AAAA,EACI,MAAM,WAAW,MAAM;AAAA,EAAA;AAAA,EACvB,MAAM,YAAY,KAAK;AACnB,UAAM,eAAe,MAAM,KAAK,iBAAiB,KAAK,KAAK,SAAS;AACpE,UAAM,KAAK,OAAO,UAAU,YAAY;AAAA,EAChD;AAAA,EACI,MAAM,YAAY,KAAK;AACnB,UAAM,YAAY;AAAA,MACd,UAAU,IAAI;AAAA,MACd,OAAO,IAAI;AAAA,MACX,SAAS,IAAI;AAAA,MACb,QAAQ,IAAI;AAAA,MACZ,QAAQ,IAAI;AAAA,MACZ,UAAU,IAAI;AAAA,MACd,cAAc,IAAI;AAAA,MAClB,eAAe,IAAI;AAAA,IACtB;AACD,UAAM,KAAK,OAAO,UAAU,IAAI,IAAI,SAAS;AAAA,EACrD;AAAA,EACI,OAAO,IAAI;AACP,WAAO,KAAK,OAAO,IAAI,EAAE;AAAA,EACjC;AAAA,EACI,kBAAkB,SAAS;AACvB,QAAI,UAAU;AACd,UAAM,UAAU,oBAAI,IAAK;AACzB,WAAO,QAAQ,YAAY;AACvB,UAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB;AACJ,cAAQ,IAAI,QAAQ,EAAE;AACtB,UAAI,CAAC,QAAQ;AACT;AACJ,gBAAU,QAAQ;AAAA,IAC9B;AACQ,YAAQ,MAAO;AACf,UAAMe,SAAQ,CAAC,OAAO;AACtB,WAAOA,OAAM,SAAS,GAAG;AACrB,YAAM,UAAUA,OAAM,MAAO;AAC7B,UAAI,CAAC,WAAW,QAAQ,IAAI,QAAQ,EAAE;AAClC;AACJ,cAAQ,IAAI,QAAQ,EAAE;AAEtB,WAAK,OAAO,IAAI,QAAQ,IAAI,OAAO;AACnC,UAAI,QAAQ,YAAY;AACpB,QAAAA,OAAM,KAAK,GAAG,QAAQ,UAAU;AAAA,MAChD;AAAA,IACA;AACQ,SAAK,SAAS,QAAQ,UAAU,KAAK;AACrC,SAAK,cAAc,QAAQ,gBAAgB,KAAK;AAChD,SAAK,YAAY,QAAQ,wBAAwB,KAAK;AAAA,EAC9D;AAAA,EACI,iBAAiB,IAAI;AACjB,UAAM,aAAa,CAAE;AACrB,UAAM,cAAc,CAAE;AACtB,eAAW,CAACC,KAAI,GAAG,KAAK,KAAK,QAAQ;AAKjC,YAAM,UAAU,IAAI,QAAQ;AAAA,QACxB,GAAG;AAAA,QACH,YAAY,CAAE;AAAA,QACd,YAAY;AAAA;AAAA,QAEZ,QAAQ,KAAK;AAAA,QACb,cAAc,KAAK;AAAA,QACnB,sBAAsB,KAAK;AAAA,QAC3B,gBAAgB;AAAA,MAChC,CAAa;AACD,iBAAWA,GAAE,IAAI;AACjB,kBAAY,KAAK,CAACA,KAAI,IAAI,YAAY,CAAC;AAAA,IACnD;AACQ,gBAAY,KAAK,CAACrG,IAAGC,OAAM;AACvB,UAAI,CAACD,GAAE,CAAC,KAAK,CAACC,GAAE,CAAC;AACb,eAAO;AACX,aAAOD,GAAE,CAAC,EAAE,cAAcC,GAAE,CAAC,CAAC;AAAA,IAC1C,CAAS;AACD,eAAW,CAACoG,GAAE,KAAK,aAAa;AAC5B,YAAM,MAAM,KAAK,OAAO,IAAIA,GAAE;AAC9B,YAAM,UAAU,WAAWA,GAAE;AAC7B,UAAI,CAAC,OAAO,CAAC;AACT;AACJ,UAAI,IAAI,eAAe;AACnB,cAAM,gBAAgB,WAAW,IAAI,aAAa;AAClD,YAAI,eAAe;AACf,wBAAc,WAAW,KAAK,OAAO;AACrC,kBAAQ,aAAa;AAAA,QACzC;AAAA,MACA;AAAA,IACA;AACQ,WAAO,WAAW,EAAE;AAAA,EAC5B;AAAA,EACI,OAAO,sBAAsB;AACzB,QAAI;AACA,aAAO,kBAAmB;AAAA,IACtC,QACc;AACF,aAAO;AAAA,IACnB;AAAA,EACA;AACA;AC1JO,MAAM,kBAAkB,OAAO,IAAI,gCAAgC;AACnE,MAAM,yBAAyB,OAAO,IAAI,sBAAsB;AAChE,MAAM,qCAAqC,CAAC,aAAa;AAC5D,aAAW,eAAe,IAAI;AAClC;AACO,MAAM,qCAAqC,MAAM;AACpD,SAAO,WAAW,eAAe;AACrC;ACJA,IAAI;AAMJ,SAAS,cAAc;AACnB,QAAM,SAAS,aAAa,YAAY,UAAU,UAAU;AAC5D,SAAO,IAAI,OAAO;AAAA,IACd,WAAW;AAAA,IACX,aAAa;AAAA,EACrB,CAAK;AACL;AACO,SAAS,WAAW;AACvB,MAAI,OAAO,UAAU,aAAa;AAC9B,YAAQ,YAAa;AAAA,EAC7B;AACI,SAAO;AACX;AAMO,eAAe,gBAAgB,WAAW,MAAM;AACnD,MAAI,SAAS,MAAM;AAGf,UAAM,4BAA4B,mCAAoC;AACtE,QAAI,8BAA8B,QAAW;AACzC,YAAM,0BAA0B,IAAI,QAAW,YAAY,UAAS,CAAE;AAAA,IAClF,OACa;AACD,YAAM,UAAW;AAAA,IAC7B;AAAA,EACA,OACS;AACD,YAAQ,SAAU;AAClB,SAAK,MAAM,IAAI,YAAY;AACvB,YAAM,4BAA4B,mCAAoC;AACtE,UAAI,8BAA8B,QAAW;AACzC,cAAM,0BAA0B,IAAI,QAAW,YAAY,UAAS,CAAE;AAAA,MACtF,OACiB;AACD,cAAM,UAAW;AAAA,MACjC;AAAA,IACA,CAAS;AAAA,EACT;AACA;AClDO,MAAM,mBAAmB,CAAC,mBAAmB;AAIhD,QAAM,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACH;AACD,SAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,WAAW,uBAAuB,MAAM,MAAM,MAAM;AAC/E;AC4GO,SAAS,mBAAmB,MAAM;;AAErC,QAAM,4BAA4B,mCAAmC;AACrE,MAAI,8BAA8B,QAAW;AAClC,WAAA;AAAA,EAAA;AAEL,QAAA,UAAU,0BAA0B,SAAS;AAC5C,UAAAjJ,MAAA,mCAAU,4BAAV,gBAAAA,IAAoC;AAC/C;AACA,MAAM,yBAAyB,OAAO,oBAAoB;AACnD,MAAM,qBAAqB,MAAM,mBAAmB,sBAAsB,KAAK,CAAC;AC1GhF,MAAM,oBAAoB;AAAA,EAC7B,WAAW,SAAS;AAChB,WAAO,KAAK,YAAY,CAAC,OAAO,CAAC;AAAA,EACzC;AACA;AAIO,MAAM,eAAe;AAAA,EACxB,YAAY,OAAO,UAAU,qBAAqB,MAAM,iBAAiB,UAAU,qBAAqB,cAAc;AAClH,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,IAAI,cAAc;AACd,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,MAAM,WAAW2I,OAAM;AACnB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI;AACA,gBAAM3I,MAAA,QAAQ,eAAR,gBAAAA,IAAA,cAAqB2I,OAAM,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,MACrF,SACmB,KAAK;AACR,cAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,oBAAY,oBAAoB,QAAQ,YAAY,IAAI,iBAAiB,GAAG,EAAE;AAC9E,YAAI,QAAQ,YAAY;AACpB,gBAAM;AAAA,QAC1B;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,kBAAkB,WAExB,MAAM,QAAQ,OAEd,WAAW;AACP,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI;AACA,gBAAM3I,MAAA,QAAQ,sBAAR,gBAAAA,IAAA,cAA4B,WAAW,MAAM,KAAK,OAAO,KAAK,MAAM,KAAK;AAAA,MAC/F,SACmB,KAAK;AACR,cAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,oBAAY,oBAAoB,QAAQ,YAAY,IAAI,wBAAwB,GAAG,EAAE;AACrF,YAAI,QAAQ,YAAY;AACpB,gBAAM;AAAA,QAC1B;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AACA;AAIO,MAAM,uCAAuC,eAAe;AAAA,EAC/D,SAAS,KAAK;AAEV,UAAM,UAAU,IAAI,gBAAgB,KAAK,KAAK;AAC9C,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,YAAQ,QAAQ,KAAK,eAAe;AACpC,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,QAAI,KAAK;AACL,cAAQ,QAAQ,CAAC,GAAG,GAAG,KAAK;AAAA,IACxC;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,mBAAmB,WAAW;AAChC,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,iBAAiB;AAC1B,YAAI;AACA,kBAAMA,MAAA,QAAQ,uBAAR,gBAAAA,IAAA,cAA6B,WAAW,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QACtG,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,mBAAmB;AAC3E,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,qBAAqB,KAAK;AAC5B,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,iBAAiB;AAC1B,YAAI;AACA,kBAAMA,MAAA,QAAQ,yBAAR,gBAAAA,IAAA,cAA+B,KAAK,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAClG,SACuB,OAAO;AACV,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,2BAA2B,KAAK,EAAE;AAC1F,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AACA;AACO,MAAM,iCAAiC,eAAe;AAAA,EACzD,MAAM,kBAAkB,OAAO,KAAK,QAAQ,cAAc,OAAO,QAAQ;AACrE,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,WAAW;AACpB,YAAI;AACA,kBAAMA,MAAA,QAAQ,sBAAR,gBAAAA,IAAA,cAA4B,OAAO,OAAO,EAAE,QAAQ,GAAG,YAAY,EAAC,GAAI,KAAK,OAAO,KAAK,cAAc,KAAK,MAAM;AAAA,QAC5I,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,wBAAwB,GAAG,EAAE;AACrF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,eAAe,KAAK;AACtB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,WAAW;AACpB,YAAI;AACA,kBAAMA,MAAA,QAAQ,mBAAR,gBAAAA,IAAA,cAAyB,KAAK,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAC5F,SACuBkJ,MAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,qBAAqBA,IAAG,EAAE;AAClF,cAAI,QAAQ,YAAY;AACpB,kBAAMA;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,aAAa,QAAQ;AACvB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,WAAW;AACpB,YAAI;AACA,kBAAMlJ,MAAA,QAAQ,iBAAR,gBAAAA,IAAA,cAAuB,QAAQ,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAC7F,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,mBAAmB,GAAG,EAAE;AAChF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AACA;AACO,MAAM,mCAAmC,eAAe;AAAA,EAC3D,SAAS,KAAK;AAEV,UAAM,UAAU,IAAI,gBAAgB,KAAK,KAAK;AAC9C,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,YAAQ,QAAQ,KAAK,eAAe;AACpC,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,QAAI,KAAK;AACL,cAAQ,QAAQ,CAAC,GAAG,GAAG,KAAK;AAAA,IACxC;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,iBAAiB,KAAK,QAAQ,cAAc,OAAO,QAAQ;AAC7D,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMA,MAAA,QAAQ,qBAAR,gBAAAA,IAAA,cAA2B,KAAK,KAAK,OAAO,KAAK,cAAc,KAAK,MAAM;AAAA,QACpG,SACuBkJ,MAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,uBAAuBA,IAAG,EAAE;AACpF,cAAI,QAAQ,YAAY;AACpB,kBAAMA;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,eAAe,QAAQ,QAAQ,cAAc,OAAO,QAAQ;AAC9D,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMlJ,MAAA,QAAQ,mBAAR,gBAAAA,IAAA,cAAyB,QAAQ,KAAK,OAAO,KAAK,cAAc,KAAK,MAAM;AAAA,QACrG,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,qBAAqB,GAAG,EAAE;AAClF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,kBAAkB,QAAQ;AAC5B,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMA,MAAA,QAAQ,sBAAR,gBAAAA,IAAA,cAA4B,QAAQ,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAClG,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,wBAAwB,GAAG,EAAE;AACrF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,MAAM,eAAe,QAAQ;AACzB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMA,MAAA,QAAQ,mBAAR,gBAAAA,IAAA,cAAyB,QAAQ,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAC/F,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,qBAAqB,GAAG,EAAE;AAClF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AACA;AACO,MAAM,kCAAkC,eAAe;AAAA,EAC1D,SAAS,KAAK;AAEV,UAAM,UAAU,IAAI,gBAAgB,KAAK,KAAK;AAC9C,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,YAAQ,QAAQ,KAAK,eAAe;AACpC,YAAQ,YAAY,KAAK,mBAAmB;AAC5C,QAAI,KAAK;AACL,cAAQ,QAAQ,CAAC,GAAG,GAAG,KAAK;AAAA,IACxC;AACQ,WAAO;AAAA,EACf;AAAA,EACI,MAAM,gBAAgB,KAAK;AACvB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMA,MAAA,QAAQ,oBAAR,gBAAAA,IAAA,cAA0B,KAAK,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAC7F,SACuBkJ,MAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,sBAAsBA,IAAG,EAAE;AACnF,cAAI,QAAQ,YAAY;AACpB,kBAAMA;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA;AAAA,EAEI,MAAM,cAAc,QAAQ;AACxB,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,aAAa;AACtB,YAAI;AACA,kBAAMlJ,MAAA,QAAQ,kBAAR,gBAAAA,IAAA,cAAwB,QAAQ,KAAK,OAAO,KAAK,cAAc,KAAK;AAAA,QAC9F,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,oBAAoB,GAAG,EAAE;AACjF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AACA;AAmBO,MAAM,wBAAwB,oBAAoB;AAAA,EACrD,YAAY,aAAa,SAAS;AAC9B,UAAO;AACP,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,YAAW,mCAAS,aAAY,KAAK;AAC1C,SAAK,uBACD,mCAAS,wBAAuB,KAAK;AACzC,SAAK,QAAO,mCAAS,SAAQ,KAAK;AAClC,SAAK,mBAAkB,mCAAS,oBAAmB,KAAK;AACxD,SAAK,YAAW,mCAAS,aAAY,KAAK;AAC1C,SAAK,uBACD,mCAAS,wBAAuB,KAAK;AACzC,SAAK,eAAe;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,iBAAiB;AACb,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,MAAM,eAAe,KAAK,SAAS,QAAQ,QAAW,eAAe,QAAW,cAAc,QAAW,QAAQ,QAAW,YAAY,QAAW,UAAU,QAAW;AACpK,WAAO,QAAQ,IAAI,QAAQ,IAAI,OAAO,QAAQ,QAAQ;AAElD,YAAM,SAAS,QAAQ,KAAK,QAAQ,QAAQmJ,GAAQ;AACpD,YAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY;AAC7C,YAAI,QAAQ,WAAW;AACnB;AAAA,QACpB;AACgB,YAAI,aAAa,OAAO,GAAG;AAIvB,kBAAQ,sBAAsB,KAAK,CAAC,MAAM,GAAG,QAAQ,KAAK,cAAc,aAAa,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,QAC1I;AACgB,eAAO,gBAAgB,YAAY;;AAC/B,cAAI;AACA,oBAAMnJ,MAAA,QAAQ,mBAAR,gBAAAA,IAAA,cAAyB,KAAK,CAAC,MAAM,GAAG,QAAQ,KAAK,cAAc,aAAa,KAAK,MAAM,KAAK,UAAU;AAAA,UACxI,SAC2B,KAAK;AACR,kBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,wBAAY,oBAAoB,QAAQ,YAAY,IAAI,qBAAqB,GAAG,EAAE;AAClF,gBAAI,QAAQ,YAAY;AACpB,oBAAM;AAAA,YAClC;AAAA,UACA;AAAA,QACA,GAAmB,QAAQ,aAAa;AAAA,MACxC,CAAa,CAAC;AACF,aAAO,IAAI,yBAAyB,QAAQ,KAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB,KAAK,UAAU,KAAK,qBAAqB,KAAK,YAAY;AAAA,IAC5L,CAAS,CAAC;AAAA,EACV;AAAA,EACI,MAAM,qBAAqB,KAAK0C,WAAU,QAAQ,QAAW,eAAe,QAAW,cAAc,QAAW,QAAQ,QAAW,YAAY,QAAW,UAAU,QAAW;AAC3K,WAAO,QAAQ,IAAIA,UAAS,IAAI,OAAO,cAAc,QAAQ;AAEzD,YAAM,SAAS,QAAQ,KAAK,QAAQ,QAAQyG,GAAQ;AACpD,YAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY;AAC7C,YAAI,QAAQ,WAAW;AACnB;AAAA,QACpB;AACgB,YAAI,aAAa,OAAO,GAAG;AAIvB,kBAAQ,4BAA4B,KAAK,CAAC,YAAY,GAAG,QAAQ,KAAK,cAAc,aAAa,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,QACtJ;AACgB,eAAO,gBAAgB,YAAY;;AAC/B,cAAI;AACA,gBAAI,QAAQ,sBAAsB;AAC9B,sBAAMnJ,MAAA,QAAQ,yBAAR,gBAAAA,IAAA,cAA+B,KAAK,CAAC,YAAY,GAAG,QAAQ,KAAK,cAAc,aAAa,KAAK,MAAM,KAAK,UAAU;AAAA,YACxJ,WACiC,QAAQ,gBAAgB;AAC7B,oBAAM,gBAAgB,gBAAgB,YAAY;AAClD,sBAAMG,MAAA,QAAQ,mBAAR,gBAAAA,IAAA,cAAyB,KAAK,CAAC,aAAa,GAAG,QAAQ,KAAK,cAAc,aAAa,KAAK,MAAM,KAAK,UAAU;AAAA,YACnJ;AAAA,UACA,SAC2B,KAAK;AACR,kBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,wBAAY,oBAAoB,QAAQ,YAAY,IAAI,qBAAqB,GAAG,EAAE;AAClF,gBAAI,QAAQ,YAAY;AACpB,oBAAM;AAAA,YAClC;AAAA,UACA;AAAA,QACA,GAAmB,QAAQ,aAAa;AAAA,MACxC,CAAa,CAAC;AACF,aAAO,IAAI,yBAAyB,QAAQ,KAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB,KAAK,UAAU,KAAK,qBAAqB,KAAK,YAAY;AAAA,IAC5L,CAAS,CAAC;AAAA,EACV;AAAA,EACI,MAAM,iBAAiB,OAAO,QAAQ,QAAQgJ,GAAM,GAAI,UAAU,QAAW,QAAQ,QAAW,YAAY,QAAW,UAAU,QAAW;AACxI,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY;AAC7C,UAAI,QAAQ,aAAa;AACrB;AAAA,MAChB;AACY,UAAI,aAAa,OAAO,GAAG;AAIvB,gBAAQ,wBAAwB,OAAO,QAAQ,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU,SAAS,OAAO;AAAA,MACnI;AACY,aAAO,gBAAgB,YAAY;;AAC/B,YAAI;AACA,kBAAMnJ,MAAA,QAAQ,qBAAR,gBAAAA,IAAA,cAA2B,OAAO,QAAQ,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU,SAAS;AAAA,QACjI,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,uBAAuB,GAAG,EAAE;AACpF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA,GAAe,QAAQ,aAAa;AAAA,IACpC,CAAS,CAAC;AACF,WAAO,IAAI,2BAA2B,OAAO,KAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB,KAAK,UAAU,KAAK,qBAAqB,KAAK,YAAY;AAAA,EACzL;AAAA,EACI,MAAM,gBAAgB,MAAM,OAAO,QAAQmJ,GAAM,GAAI,eAAe,QAAW,QAAQ,QAAW,YAAY,QAAW,UAAU,QAAW;AAC1I,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY;AAC7C,UAAI,QAAQ,aAAa;AACrB;AAAA,MAChB;AACY,UAAI,aAAa,OAAO,GAAG;AAIvB,gBAAQ,uBAAuB,MAAM,OAAO,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,MACvH;AACY,aAAO,gBAAgB,YAAY;;AAC/B,YAAI;AACA,kBAAMnJ,MAAA,QAAQ,oBAAR,gBAAAA,IAAA,cAA0B,MAAM,OAAO,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU;AAAA,QACrH,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,sBAAsB,GAAG,EAAE;AACnF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA,GAAe,QAAQ,aAAa;AAAA,IACpC,CAAS,CAAC;AACF,WAAO,IAAI,0BAA0B,OAAO,KAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB,KAAK,UAAU,KAAK,qBAAqB,KAAK,YAAY;AAAA,EACxL;AAAA,EACI,MAAM,qBAAqB,WAAW,OAAO,QAAQmJ,GAAM,GAAI,eAAe,QAAW,QAAQ,QAAW,YAAY,QAAW,UAAU,QAAW;AACpJ,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY;AAC7C,UAAI,QAAQ,iBAAiB;AACzB;AAAA,MAChB;AACY,UAAI,aAAa,OAAO,GAAG;AAIvB,gBAAQ,4BAA4B,WAAW,OAAO,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU,OAAO;AAAA,MACjI;AACY,aAAO,gBAAgB,YAAY;;AAC/B,YAAI;AACA,kBAAMnJ,MAAA,QAAQ,yBAAR,gBAAAA,IAAA,cAA+B,WAAW,OAAO,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,UAAU;AAAA,QAC/H,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,2BAA2B,GAAG,EAAE;AACxF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA,GAAe,QAAQ,aAAa;AAAA,IACpC,CAAS,CAAC;AACF,WAAO,IAAI,+BAA+B,OAAO,KAAK,UAAU,KAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB,KAAK,UAAU,KAAK,qBAAqB,KAAK,YAAY;AAAA,EAC7L;AAAA,EACI,MAAM,kBAAkB,WAExB,MAAM,OAAO,OAEb,WAAW;AACP,UAAM,QAAQ,IAAI,KAAK,SAAS,IAAI,CAAC,YAAY,gBAAgB,YAAY;;AACzE,UAAI,CAAC,QAAQ,mBAAmB;AAC5B,YAAI;AACA,kBAAMA,MAAA,QAAQ,sBAAR,gBAAAA,IAAA,cAA4B,WAAW,MAAM,OAAO,KAAK,MAAM,KAAK;AAAA,QAC9F,SACuB,KAAK;AACR,gBAAM,cAAc,QAAQ,aACtB,QAAQ,QACR,QAAQ;AACd,sBAAY,oBAAoB,QAAQ,YAAY,IAAI,wBAAwB,GAAG,EAAE;AACrF,cAAI,QAAQ,YAAY;AACpB,kBAAM;AAAA,UAC9B;AAAA,QACA;AAAA,MACA;AAAA,IACA,GAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,EAClC;AAAA,EACI,WAAW,SAAS,UAAU,MAAM;AAChC,SAAK,SAAS,KAAK,OAAO;AAC1B,QAAI,SAAS;AACT,WAAK,oBAAoB,KAAK,OAAO;AAAA,IACjD;AAAA,EACA;AAAA,EACI,cAAc,SAAS;AACnB,SAAK,WAAW,KAAK,SAAS,OAAO,CAAC,aAAa,aAAa,OAAO;AACvE,SAAK,sBAAsB,KAAK,oBAAoB,OAAO,CAAC,aAAa,aAAa,OAAO;AAAA,EACrG;AAAA,EACI,YAAY,UAAU,UAAU,MAAM;AAClC,SAAK,WAAW,CAAE;AAClB,SAAK,sBAAsB,CAAE;AAC7B,eAAW,WAAW,UAAU;AAC5B,WAAK,WAAW,SAAS,OAAO;AAAA,IAC5C;AAAA,EACA;AAAA,EACI,QAAQ,MAAM,UAAU,MAAM;AAC1B,SAAK,WAAW,IAAI;AACpB,SAAK,KAAK,KAAK,GAAG,IAAI;AACtB,QAAI,SAAS;AACT,WAAK,gBAAgB,KAAK,GAAG,IAAI;AAAA,IAC7C;AAAA,EACA;AAAA,EACI,WAAW,MAAM;AACb,SAAK,OAAO,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,GAAG,CAAC;AACzD,SAAK,kBAAkB,KAAK,gBAAgB,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,GAAG,CAAC;AAAA,EACvF;AAAA,EACI,YAAY,UAAU,UAAU,MAAM;AAClC,SAAK,WAAW,EAAE,GAAG,KAAK,UAAU,GAAG,SAAU;AACjD,QAAI,SAAS;AACT,WAAK,sBAAsB,EAAE,GAAG,KAAK,qBAAqB,GAAG,SAAU;AAAA,IACnF;AAAA,EACA;AAAA,EACI,eAAe,UAAU;AACrB,eAAW,OAAO,OAAO,KAAK,QAAQ,GAAG;AACrC,aAAO,KAAK,SAAS,GAAG;AACxB,aAAO,KAAK,oBAAoB,GAAG;AAAA,IAC/C;AAAA,EACA;AAAA,EACI,KAAK,qBAAqB,IAAI,UAAU,MAAM;AAC1C,UAAM,UAAU,IAAI,gBAAgB,KAAK,YAAY;AACrD,eAAW,WAAW,KAAK,UAAU;AACjC,YAAM,cAAc,KAAK,oBAAoB,SAAS,OAAO;AAC7D,cAAQ,WAAW,SAAS,WAAW;AAAA,IACnD;AACQ,eAAW,OAAO,KAAK,MAAM;AACzB,YAAM,cAAc,KAAK,gBAAgB,SAAS,GAAG;AACrD,cAAQ,QAAQ,CAAC,GAAG,GAAG,WAAW;AAAA,IAC9C;AACQ,eAAW,OAAO,OAAO,KAAK,KAAK,QAAQ,GAAG;AAC1C,YAAM,cAAc,OAAO,KAAK,KAAK,mBAAmB,EAAE,SAAS,GAAG;AACtE,cAAQ,YAAY,EAAE,CAAC,GAAG,GAAG,KAAK,SAAS,GAAG,EAAG,GAAE,WAAW;AAAA,IAC1E;AACQ,eAAW,WAAW,oBAAoB;AACtC;AAAA;AAAA,QAEA,QAAQ,SACH,OAAO,CAACoJ,OAAMA,GAAE,SAAS,0BAA0B,EACnD,KAAK,CAACA,OAAMA,GAAE,SAAS,QAAQ,IAAI;AAAA,QAAG;AACvC;AAAA,MAChB;AACY,cAAQ,WAAW,SAAS,OAAO;AAAA,IAC/C;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,aAAa,UAAU;AAAA,IAC1B,MAAM,gBAAgB,oBAAoB;AAAA,MACtC,cAAc;AACV,cAAO;AACP,eAAO,eAAe,MAAM,QAAQ;AAAA,UAChC,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,UAAU;AAAA,UACV,OAAOD,GAAM;AAAA,QACjC,CAAiB;AACD,eAAO,OAAO,MAAM,QAAQ;AAAA,MAC5C;AAAA,IACA;AACQ,UAAM,UAAU,IAAI,KAAM;AAC1B,YAAQ,WAAW,IAAI,SAAS;AAChC,WAAO;AAAA,EACf;AAAA,EACI,OAAO,UAAU,qBAAqB,eAAe,iBAAiB,WAAW,qBAAqB,eAAe,SAAS;AAC1H,WAAO,KAAK,eAAe,qBAAqB,eAAe,iBAAiB,WAAW,qBAAqB,eAAe,OAAO;AAAA,EAC9I;AAAA;AAAA,EAEI,OAAO,eAAe,qBAAqB,eAAe,iBAAiB,WAAW,qBAAqB,eAAe,SAAS;;AAC/H,QAAI;AACJ,QAAI,uBAAuB,eAAe;AACtC,UAAI,MAAM,QAAQ,mBAAmB,KAAK,CAAC,qBAAqB;AAC5D,0BAAkB,IAAI,gBAAiB;AACvC,wBAAgB,aAAY,2DAAqB,IAAI,mBAAkB,CAAE,GAAE,IAAI;AAAA,MAC/F,OACiB;AACD,0BAAkB;AAAA,MAClC;AACY,wBAAkB,gBAAgB,KAAK,MAAM,QAAQ,aAAa,IAC5D,cAAc,IAAI,aAAa,IAC/B,+CAAe,UAAU,KAAK;AAAA,IAChD;AACQ,UAAM,iBAAiB,uBAAuB,mBAAmB,MAAM,WACnE,mCAAS;AACb,UAAM,qBAAmBnJ,MAAA,gBAAgB,oBAAmB,MAAnC,gBAAAA,IAAuC,mBAC5D,iBAAkB;AACtB,UAAM,iBAAiB,qBAClB,uBAAuB,mBAAmB,KAAK;AACpD,QAAI,kBAAkB,gBAAgB;AAClC,UAAI,CAAC,iBAAiB;AAClB,0BAAkB,IAAI,gBAAiB;AAAA,MACvD;AACY,UAAI,kBACA,CAAC,gBAAgB,SAAS,KAAK,CAAC,YAAY,QAAQ,SAAS,uBAAuB,UAAU,IAAI,GAAG;AACrG,cAAM,iBAAiB,IAAI,uBAAwB;AACnD,wBAAgB,WAAW,gBAAgB,IAAI;AAAA,MAC/D;AACY,UAAI,kBACA,CAAC,gBAAgB,SAAS,KAAK,CAAC,YAAY,QAAQ,SAAS,kBAAkB,GAAG;AAClF,YAAI,kBAAkB;AAClB,gBAAM,WAAW,IAAI,gBAAiB;AACtC,0BAAgB,WAAW,UAAU,IAAI;AAGzC,0BAAgB,iBACZG,MAAA,gBAAgB,oBAAmB,MAAnC,gBAAAA,IAAuC,OACnC,gBAAgB;AAAA,QAC5C;AAAA,MACA;AAAA,IACA;AACQ,eAAW,EAAE,YAAY,cAAc,MAAM,cAAc,OAAM,KAAO,sBAAsB;AAC1F,YAAM,uBAAuB,UAAU,uBAAuB,MAAM,MAAM,UAAU;AACpF,UAAI;AACJ,YAAM,kBAAkB,eAAe,SAAY,mBAAmB,UAAU,IAAI;AACpF,UAAI,mBAAmB,sBAAsB,eAAe,GAAG;AAC3D,kBAAU;AAAA,MAC1B,WACqB,sBAAsB;AAE3B,kBAAU,IAAI,aAAa,EAAE;AAAA,MAC7C;AACY,UAAI,YAAY,QAAW;AACvB,YAAI,CAAC,iBAAiB;AAClB,4BAAkB,IAAI,gBAAiB;AAAA,QAC3D;AACgB,YAAI,CAAC,gBAAgB,SAAS,KAAK,CAACiJ,OAAMA,GAAE,SAAS,QAAQ,IAAI,GAAG;AAChE,0BAAgB,WAAW,SAAS,WAAW;AAAA,QACnE;AAAA,MACA;AAAA,IACA;AACQ,QAAI,mBAAmB,WAAW;AAC9B,UAAI,iBAAiB;AACjB,wBAAgB,QAAQ,mBAAmB,EAAE;AAC7C,wBAAgB,QAAQ,aAAa,CAAA,GAAI,KAAK;AAAA,MAC9D;AAAA,IACA;AACQ,QAAI,uBAAuB,eAAe;AACtC,UAAI,iBAAiB;AACjB,wBAAgB,YAAY,uBAAuB,EAAE;AACrD,wBAAgB,YAAY,iBAAiB,CAAA,GAAI,KAAK;AAAA,MACtE;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AACA;AACO,SAAS,cAAc,SAAS;AACnC,MAAI,UAAU,SAAS;AACnB,WAAO;AAAA,EACf;AACI,SAAO,oBAAoB,YAAY,OAAO;AAClD;AC1xBO,MAAMf,uBAAsB;AAAA,EAC/B,WAAW;AACP,WAAO;AAAA,EACf;AAAA,EACI,IAAI,QAAQ,UAAU;AAClB,WAAO,SAAU;AAAA,EACzB;AAAA,EACI,UAAU,QAAQ;AACd,WAAO;AAAA,EACf;AACA;AACA,MAAM,wBAAwB,IAAIA,uBAAuB;AACzD,MAAM,eAAe,OAAO,IAAI,iBAAiB;AACjD,MAAME,2BAA0B;AAAA,EAC5B,cAAc;AACV,WAAO,mCAAoC,KAAI;AAAA,EACvD;AAAA,EACI,oBAAoB;;AAChB,UAAM,UAAU,KAAK,YAAa;AAIlC,YAAOpI,OAAAH,MAAA,QAAQ,eAAR,gBAAAA,IAAoB,UAApB,gBAAAG,IAA4B;AAAA,EAC3C;AAAA,EACI,cAAc0G,SAAQ,UAAU,0BAA0B;;AACtD,UAAM,kBAAkB,gBAAgB,eAAeA,WAAA,gBAAAA,QAAQ,WAAW,QAAWA,WAAA,gBAAAA,QAAQ,MAAM,QAAWA,WAAA,gBAAAA,QAAQ,QAAQ;AAC9H,UAAM,UAAU,KAAK,YAAa;AAClC,UAAM,gBAAgB,QAAQ,SAAU;AACxC,UAAM,cAAc,mDAAiB;AACrC,UAAM,mBAAkB7G,MAAA,mDAAiB,aAAjB,gBAAAA,IAA2B,KAAK,CAAC,aAAY,mCAAS,UAAS;AACvF,QAAI;AACJ,QAAI,mBAAmB,aAAa;AAChC,gBAAU,gBAAgB,iBAAiB,WAAW;AAAA,IAClE,WACiB,CAAC,0BAA0B;AAChC,gBAAU,IAAI,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,gBAAgB;AAAA,MAChC,CAAa;AAAA,IACb;AACQ,QAAI,SAAS;AACT,cAAQ,QAAQ,EAAE,GAAG,QAAQ,OAAO,CAAC,YAAY,GAAG6G,QAAQ;AAAA,IACxE;AACQ,QAAI,kBAAkB,UAClB,cAAc,sBAAsB,MAAM,QAAW;AACrD,cAAQ,sBAAsB,IAC1B,cAAc,sBAAsB;AAAA,IACpD;AACQ,WAAO,QAAQ,IAAI,SAAS,QAAQ;AAAA,EAC5C;AAAA,EACI,yBAAyB,UAAU;AAC/B,QAAI,mCAAoC,MAAK,QAAW;AACpD,yCAAmC,QAAQ;AAAA,IACvD;AAAA,EACA;AACA;AACA,MAAM,qCAAqC,IAAI0B,2BAA2B;AC1DnE,MAAM,0BAA0B;AAChC,eAAe,4BAA4B1B,SAAQ;AACtD,SAAO,gBAAgB,eAAeA,WAAA,gBAAAA,QAAQ,WAAW,QAAWA,WAAA,gBAAAA,QAAQ,MAAM,QAAWA,WAAA,gBAAAA,QAAQ,QAAQ;AACjH;AACO,SAAS,gBAAgB,SAAS;AAGrC,QAAM,OAAO,CAAE;AACf,aAAW,WAAW,QAAQ,OAAO,CAACwC,OAAM,CAAC,CAACA,EAAC,GAAG;AAC9C,eAAW,OAAO,OAAO,KAAK,OAAO,GAAG;AACpC,UAAI,QAAQ,YAAY;AACpB,aAAK,GAAG,IAAI,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ,GAAG,EAAG;AAAA,MAC7D,WACqB,QAAQ,QAAQ;AACrB,cAAM,WAAW,KAAK,GAAG,KAAK,CAAE;AAChC,aAAK,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,OAAO,QAAQ,GAAG,KAAK,CAAA,CAAE,CAAC,CAAC;AAAA,MAC5E,WACqB,QAAQ,gBAAgB;AAC7B,aAAK,GAAG,IAAI,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ,GAAG,EAAG;AAAA,MAC7D,WACqB,QAAQ,WAAW;AACxB,YAAI,KAAK,YAAY,QAAW;AAC5B,eAAK,UAAU,QAAQ;AAAA,QAC3C,WACyB,QAAQ,YAAY,QAAW;AACpC,eAAK,UAAU,KAAK,IAAI,KAAK,SAAS,QAAQ,OAAO;AAAA,QACzE;AAAA,MACA,WACqB,QAAQ,UAAU;AACvB,YAAI,KAAK,WAAW,QAAW;AAC3B,eAAK,SAAS,QAAQ;AAAA,QAC1C,WACyB,QAAQ,WAAW,QAAW;AACnC,cAAI,SAAS,aAAa;AAEtB,iBAAK,SAAS,YAAY,IAAI;AAAA,cAC1B,KAAK;AAAA,cACL,QAAQ;AAAA,YACpC,CAAyB;AAAA,UACzB,OACyB;AACD,iBAAK,SAAS,QAAQ;AAAA,UAC9C;AAAA,QACA;AAAA,MACA,WACqB,QAAQ,aAAa;AAC1B,cAAM,gBAAgB,KAAK;AAC3B,cAAM,oBAAoB,QAAQ;AAGlC,YAAI,MAAM,QAAQ,iBAAiB,GAAG;AAClC,cAAI,CAAC,eAAe;AAChB,iBAAK,YAAY;AAAA,UACzC,WAC6B,MAAM,QAAQ,aAAa,GAAG;AACnC,iBAAK,YAAY,cAAc,OAAO,iBAAiB;AAAA,UAC/E,OACyB;AAED,kBAAM,UAAU,cAAc,KAAM;AACpC,uBAAW,YAAY,mBAAmB;AACtC,sBAAQ,WAAW,cAAc,QAAQ,GAAG,IAAI;AAAA,YAC5E;AACwB,iBAAK,YAAY;AAAA,UACzC;AAAA,QACA,WACyB,mBAAmB;AAExB,cAAI,CAAC,eAAe;AAChB,iBAAK,YAAY;AAAA,UACzC,WAC6B,MAAM,QAAQ,aAAa,GAAG;AACnC,kBAAM,UAAU,kBAAkB,KAAM;AACxC,uBAAW,YAAY,eAAe;AAClC,sBAAQ,WAAW,cAAc,QAAQ,GAAG,IAAI;AAAA,YAC5E;AACwB,iBAAK,YAAY;AAAA,UACzC,OACyB;AAED,iBAAK,YAAY,IAAI,gBAAgB,kBAAkB,cAAc;AAAA,cACjE,UAAU,cAAc,SAAS,OAAO,kBAAkB,QAAQ;AAAA,cAClE,qBAAqB,cAAc,oBAAoB,OAAO,kBAAkB,mBAAmB;AAAA,cACnG,MAAM,MAAM,KAAK,IAAI,IAAI,cAAc,KAAK,OAAO,kBAAkB,IAAI,CAAC,CAAC;AAAA,cAC3E,iBAAiB,MAAM,KAAK,IAAI,IAAI,cAAc,gBAAgB,OAAO,kBAAkB,eAAe,CAAC,CAAC;AAAA,cAC5G,UAAU;AAAA,gBACN,GAAG,cAAc;AAAA,gBACjB,GAAG,kBAAkB;AAAA,cACxB;AAAA,YAC7B,CAAyB;AAAA,UACzB;AAAA,QACA;AAAA,MACA,OACiB;AACD,cAAM,WAAW;AACjB,aAAK,QAAQ,IAAI,QAAQ,QAAQ,KAAK,KAAK,QAAQ;AAAA,MACnE;AAAA,IACA;AAAA,EACA;AACI,SAAO;AACX;AACA,MAAM,aAAa,oBAAI,IAAI,CAAC,UAAU,UAAU,SAAS,CAAC;AAInD,SAAS,aAAaxC,SAAQ;;AACjC,QAAM,iBAAiB,mCAAmC,kBAAmB;AAC7E,MAAI,QAAQ;AAAA,IACR,MAAM,CAAE;AAAA,IACR,UAAU,CAAE;AAAA,IACZ,gBAAgB;AAAA,IAChB,OAAO;AAAA,EACV;AACD,MAAI,gBAAgB;AAIhB,UAAM,EAAE,OAAO,SAAS,GAAG,KAAM,IAAG;AACpC,YAAQ,OAAO,QAAQ,IAAI,EAAE;AAAA;AAAA,MAE7B,CAAC,eAAe,CAAC,KAAK,KAAK,MAAM;AAC7B,YAAI,UAAU,QAAW;AAErB,wBAAc,GAAG,IAAI;AAAA,QACrC;AACY,eAAO;AAAA,MACV;AAAA,MAAE;AAAA,IAAK;AAAA,EAChB;AACI,MAAIA,SAAQ;AACR,YAAQ,OAAO,QAAQA,OAAM,EAAE;AAAA;AAAA,MAE/B,CAAC,eAAe,CAAC,KAAK,KAAK,MAAM;AAC7B,YAAI,UAAU,QAAW;AAErB,wBAAc,GAAG,IAAI;AAAA,QACrC;AACY,eAAO;AAAA,MACV;AAAA,MAAE;AAAA,IAAK;AAAA,EAChB;AACI,MAAI,+BAAO,cAAc;AACrB,eAAW,OAAO,OAAO,KAAK,MAAM,YAAY,GAAG;AAC/C,UAAI,WAAW,IAAI,OAAO,MAAM,aAAa,GAAG,CAAC,KAC7C,GAAC7G,MAAA,MAAM,aAAN,gBAAAA,IAAiB,OAAM;AACxB,YAAI,CAAC,MAAM,UAAU;AACjB,gBAAM,WAAW,CAAE;AAAA,QACvC;AACgB,cAAM,SAAS,GAAG,IAAI,MAAM,aAAa,GAAG;AAAA,MAC5D;AAAA,IACA;AAAA,EACA;AACI,MAAI,MAAM,YAAY,QAAW;AAC7B,QAAI,MAAM,WAAW,GAAG;AACpB,YAAM,IAAI,MAAM,mCAAmC;AAAA,IAC/D;AACQ,UAAM,gBAAgB,YAAY,QAAQ,MAAM,OAAO;AACvD,QAAI,MAAM,WAAW,QAAW;AAC5B,UAAI,SAAS,aAAa;AAEtB,cAAM,SAAS,YAAY,IAAI,CAAC,MAAM,QAAQ,aAAa,CAAC;AAAA,MAC5E;AAAA,IACA,OACa;AACD,YAAM,SAAS;AAAA,IAC3B;AACQ,WAAO,MAAM;AAAA,EACrB;AACI,SAAO;AACX;AAIO,SAAS,YAAY6G,UAAS,IAAI,EAAE,WAAW,gBAAgB,gBAAgB,SAAS,cAAc,MAAK,IAAM,CAAA,GAAI;AACxH,QAAM,YAAY,aAAaA,OAAM;AACrC,MAAI,cAAc,QAAW;AAKzB,WAAO,UAAU;AACjB,cAAU,YAAY;AAAA,EAC9B;AACI,MAAI,mBAAmB,QAAW;AAC9B,cAAU,iBAAiB;AAAA,EACnC;AACI,MAAI,mBAAmB,QAAW;AAC9B,cAAU,iBAAiB;AAAA,EACnC;AACI,MAAI,YAAY,QAAW;AACvB,cAAU,UAAU;AAAA,EAC5B;AACI,MAAI,iBAAiB,QAAW;AAC5B,cAAU,eAAe,EAAE,GAAG,UAAU,cAAc,GAAG,aAAc;AAAA,EAC/E;AACI,MAAI,UAAU,QAAW;AACrB,WAAO,UAAU;AAAA,EACzB;AACI,SAAO;AACX;AAEO,SAAS,uBAAuBA,SAAQ;AAC3C,SAAOA,UACD;AAAA,IACE,cAAcA,QAAO;AAAA,IACrB,gBAAgBA,QAAO;AAAA,IACvB,WAAWA,QAAO;AAAA,IAClB,MAAMA,QAAO;AAAA,IACb,UAAUA,QAAO;AAAA,IACjB,gBAAgBA,QAAO;AAAA,IACvB,SAASA,QAAO;AAAA,IAChB,QAAQA,QAAO;AAAA,EAC3B,IACU;AACV;ACtNO,eAAe,eAAe,SAAS,QAAQ;AAClD,MAAI,WAAW,QAAW;AACtB,WAAO;AAAA,EACf;AACI,MAAI;AACJ,SAAO,QAAQ,KAAK;AAAA,IAChB,QAAQ,MAAM,CAAC,QAAQ;AACnB,UAAI,EAAC,iCAAQ,UAAS;AAClB,cAAM;AAAA,MACtB,OACiB;AACD,eAAO;AAAA,MACvB;AAAA,IACA,CAAS;AAAA,IACD,IAAI,QAAQ,CAACpH,IAAG,WAAW;AACvB,iBAAW,MAAM;AACb,eAAO,IAAI,MAAM,SAAS,CAAC;AAAA,MAC9B;AACD,aAAO,iBAAiB,SAAS,QAAQ;AAEzC,UAAI,OAAO,SAAS;AAChB,eAAO,IAAI,MAAM,SAAS,CAAC;AAAA,MAC3C;AAAA,IACA,CAAS;AAAA,EACT,CAAK,EAAE,QAAQ,MAAM,OAAO,oBAAoB,SAAS,QAAQ,CAAC;AAClE;AClBO,MAAM,+BAA+B,eAAe;AAAA,EACvD,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,eAAe;AACX,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,KAAK,UAAW;AAAA,IAC1C;AAAA,EACA;AAAA,EACI,MAAM,OAAO;AACT,SAAK,aAAc;AACnB,QAAI;AACA,YAAM,SAAS,MAAM,KAAK,OAAO,KAAM;AACvC,UAAI,OAAO,MAAM;AACb,aAAK,OAAO;AACZ,eAAO;AAAA,UACH,MAAM;AAAA,UACN,OAAO;AAAA,QACV;AAAA,MACjB,OACiB;AACD,eAAO;AAAA,UACH,MAAM;AAAA,UACN,OAAO,OAAO;AAAA,QACjB;AAAA,MACjB;AAAA,IACA,SACeS,IAAG;AACN,WAAK,OAAO;AACZ,YAAMA;AAAA,IAClB;AAAA,EACA;AAAA,EACI,MAAM,SAAS;AACX,SAAK,aAAc;AAEnB,QAAI,KAAK,QAAQ;AACb,YAAM,gBAAgB,KAAK,OAAO,OAAM;AACxC,WAAK,OAAO;AACZ,YAAM;AAAA,IAClB;AACQ,WAAO,EAAE,MAAM,MAAM,OAAO,OAAW;AAAA,EAC/C;AAAA;AAAA,EAEI,MAAM,MAAMA,IAAG;AACX,SAAK,aAAc;AACnB,QAAI,KAAK,QAAQ;AACb,YAAM,gBAAgB,KAAK,OAAO,OAAM;AACxC,WAAK,OAAO;AACZ,YAAM;AAAA,IAClB;AACQ,UAAMA;AAAA,EACd;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA,EAGI,OAAO,OAAO,YAAY,IAAI;AAC1B,UAAM,KAAK,OAAQ;AAAA,EAC3B;AAAA,EACI,OAAO,mBAAmB,QAAQ;AAE9B,UAAM,SAAS,OAAO,UAAW;AACjC,WAAO,IAAI,uBAAuB;AAAA,MAC9B,MAAM,YAAY;AACd,eAAO,KAAM;AACb,iBAAS,OAAO;AACZ,iBAAO,OAAO,OAAO,KAAK,CAAC,EAAE,MAAM,YAAY;AAE3C,gBAAI,MAAM;AACN,yBAAW,MAAO;AAClB;AAAA,YAC5B;AAEwB,uBAAW,QAAQ,KAAK;AACxB,mBAAO,KAAM;AAAA,UACrC,CAAqB;AAAA,QACrB;AAAA,MACa;AAAA,MACD,SAAS;AACL,eAAO,YAAa;AAAA,MACvB;AAAA,IACb,CAAS;AAAA,EACT;AAAA,EACI,OAAO,mBAAmB,WAAW;AACjC,WAAO,IAAI,uBAAuB;AAAA,MAC9B,MAAM,KAAK,YAAY;AACnB,cAAM,EAAE,OAAO,KAAM,IAAG,MAAM,UAAU,KAAM;AAE9C,YAAI,MAAM;AACN,qBAAW,MAAO;AAAA,QACtC;AAEgB,mBAAW,QAAQ,KAAK;AAAA,MAC3B;AAAA,MACD,MAAM,OAAO,QAAQ;AACjB,cAAM,UAAU,OAAO,MAAM;AAAA,MAChC;AAAA,IACb,CAAS;AAAA,EACT;AACA;AACO,SAAS,KAAK,MAAM,SAAS,GAAG;AACnC,QAAM,UAAU,MAAM,KAAK,EAAE,OAAM,GAAI,MAAM,EAAE;AAC/C,SAAO,QAAQ,IAAI,gBAAgB,SAAS,QAAQ;AAChD,WAAO,MAAM;AACT,UAAI,OAAO,WAAW,GAAG;AACrB,cAAM,SAAS,MAAM,KAAK,KAAM;AAChC,mBAAWoJ,WAAU,SAAS;AAC1B,UAAAA,QAAO,KAAK,MAAM;AAAA,QACtC;AAAA,MACA,WACqB,OAAO,CAAC,EAAE,MAAM;AACrB;AAAA,MAChB,OACiB;AAED,cAAM,OAAO,MAAK,EAAG;AAAA,MACrC;AAAA,IACA;AAAA,EACA,CAAK;AACL;AACO,SAAS,OAAO,OAAO,QAAQ;AAClC,MAAI,MAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,MAAM,GAAG;AAC/C,WAAO,MAAM,OAAO,MAAM;AAAA,EAClC,WACa,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;AAC9D,WAAQ,QAAQ;AAAA,EACxB,WACa,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;AAC9D,WAAQ,QAAQ;AAAA,EACxB;AAAA;AAAA,IAGI,YAAY;AAAA,IAER,OAAO,MAAM,WAAW;AAAA,IAAY;AAEpC,WAAO,MAAM,OAAO,MAAM;AAAA,EAClC,WACa,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;AAE9D,UAAM,QAAQ,EAAE,GAAG,MAAO;AAE1B,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC/C,UAAI,OAAO,SAAS,CAAC,MAAM,QAAQ,MAAM,GAAG,CAAC,GAAG;AAC5C,cAAM,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,KAAK;AAAA,MACrD,OACiB;AACD,cAAM,GAAG,IAAI;AAAA,MAC7B;AAAA,IACA;AACQ,WAAO;AAAA,EACf,OACS;AACD,UAAM,IAAI,MAAM,iBAAiB,OAAO,KAAK,QAAQ,OAAO,MAAM,EAAE;AAAA,EAC5E;AACA;AACO,MAAM,wBAAwB;AAAA,EACjC,YAAY,QAAQ;;AAChB,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,YAAY,OAAO;AACxB,SAAK,SAAS,OAAO;AAErB,SAAK,SAAS,OAAO,YAAUtJ,MAAA,KAAK,WAAL,gBAAAA,IAAa;AAK5C,SAAK,QAAQ,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1C,WAAK,mCAAmC,cAAc,uBAAuB,OAAO,MAAM,GAAG,YAAY;AACrG,aAAK,cAAc,OAAO,UAAU,KAAM;AAC1C,YAAI,OAAO,YAAY;AACnB,eAAK,YAAY,KAAK,OAAO,UAAU,EAAE,KAAK,SAAS,MAAM;AAAA,QACjF,OACqB;AACD,eAAK,YAAY,KAAK,CAAC,YAAY,QAAQ,MAAS,GAAG,MAAM;AAAA,QACjF;AAAA,MACa,GAAE,IAAI;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,MAAM,QAAQ,MAAM;;AAChB,KAAAA,MAAA,KAAK,WAAL,gBAAAA,IAAa;AACb,QAAI,CAAC,KAAK,iBAAiB;AACvB,WAAK,kBAAkB;AACvB,aAAO,KAAK;AAAA,IACxB;AACQ,WAAO,mCAAmC,cAAc,uBAAuB,KAAK,MAAM,GAAG,KAAK,SAC5F,YAAY;AACV,aAAO,eAAe,KAAK,UAAU,KAAK,GAAG,IAAI,GAAG,KAAK,MAAM;AAAA,IAC/E,IACc,YAAY;AACV,aAAO,KAAK,UAAU,KAAK,GAAG,IAAI;AAAA,IACrC,GAAE,IAAI;AAAA,EACnB;AAAA,EACI,MAAM,OAAO,OAAO;AAChB,WAAO,KAAK,UAAU,OAAO,KAAK;AAAA,EAC1C;AAAA,EACI,MAAM,MAAME,IAAG;AACX,WAAO,KAAK,UAAU,MAAMA,EAAC;AAAA,EACrC;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO;AAAA,EACf;AAAA;AAAA;AAAA,EAGI,OAAO,OAAO,YAAY,IAAI;AAC1B,UAAM,KAAK,OAAQ;AAAA,EAC3B;AACA;AACO,eAAe,uBAAuB,IAAI,WAAW,YAAY,WAAW,MAAM;AACrF,QAAM,MAAM,IAAI,wBAAwB;AAAA,IACpC;AAAA,IACA;AAAA,IACA;AAAA,EACR,CAAK;AACD,QAAM,QAAQ,MAAM,IAAI;AACxB,SAAO,EAAE,QAAQ,GAAG,KAAK,OAAO,GAAG,IAAI,GAAG,MAAO;AACrD;AC9PO,MAAM,YAAY;AAAA,EACrB,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,OAAO;AAAA,MAC/B,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,MAAM,OAAO,OAAO,CAAE;AAAA,EACnC;AAAA,EACI,OAAO,OAAO;AACV,UAAM,MAAM,KAAK,IAAI,OAAO,MAAM,GAAG;AACrC,UAAM,SAAS,WAAW,CAAE,GAAE,GAAG;AAEjC,WAAO,IAAI,OAAO;AAAA,MACd;AAAA,MACA,OAAO,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,IAC7C,CAAS;AAAA,EACT;AACA;AACO,MAAM,eAAe,YAAY;AAAA,EACpC,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ,OAAO;AAAA,EAC5B;AAAA,EACI,OAAO,OAAO;AACV,UAAM,MAAM,KAAK,IAAI,OAAO,MAAM,GAAG;AACrC,UAAM,SAAS,WAAW,KAAK,OAAO,MAAM,GAAG;AAC/C,WAAO,IAAI,OAAO,EAAE,KAAK,OAAO,OAAO,OAAO,SAAS,CAAC,EAAE,aAAa;AAAA,EAC/E;AAAA,EACI,OAAO,gBAAgB,OAAO;AAC1B,UAAM,SAAS,WAAW,IAAI,MAAM,GAAG;AAEvC,WAAO,IAAI,OAAO;AAAA,MACd,KAAK,MAAM;AAAA,MACX,OAAO,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,IAC7C,CAAS;AAAA,EACT;AACA;AACO,MAAM,qBAAqB,CAAC,YAAY,QAAQ,SAAS;AAahE,eAAe,uBAAuB,KAAK,cAAc;AACrD,MAAI,iBAAiB,YAAY;AAC7B,UAAM,IAAI,MAAM,wKAE+B;AAAA,EACvD;AACI,QAAM,EAAE,OAAM,IAAK;AACnB,MAAI,CAAC,aAAa,OAAO,QAAQ,EAAE,SAAS,IAAI,QAAQ,GAAG;AACvD,WAAO;AAAA,EACf;AACI,MAAI,OAAO,KAAK,MAAM,EAAE,WAAW,MAAK,iCAAQ,WAAU,IAAI;AAC1D,WAAO;AAAA,EACf;AAOI,SAAO,OAAO;AAClB;AACA,eAAe,wBAAwB,KAAK,cAAc;AACtD,QAAM,EAAE,QAAO,IAAK;AACpB,MAAI,iBAAiB,YAAY;AAE7B,WAAO;AAAA,EACf;AACI,MAAI,CAAC,aAAa,OAAO,QAAQ,EAAE,SAAS,IAAI,QAAQ,GAAG;AACvD,WAAO;AAAA,EACf;AAEI,MAAI,YAAY,UACZ,OAAO,KAAK,OAAO,EAAE,WAAW,MAChC,mCAAS,YAAW,QAAW;AAC/B,WAAO,QAAQ;AAAA,EACvB;AACI,SAAO;AACX;AACA,SAAS,sBAAsBP,IAAG;AAC9B,SAAOA,OAAM,UAAaA,GAAE,YAAY;AAC5C;AAOO,MAAM,iCAAiC,WAAW;AAAA,EACrD,YAAY,QAAQ;AAChB,UAAM,EAAE,eAAe,MAAM,GAAG,OAAM,CAAE;AACxC,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,aAAY,iCAAQ,cAAa;AACtC,SAAK,eAAe,iCAAQ;AAC5B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,cAAc,iCAAQ;AAC3B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,cAAc,iCAAQ;AAC3B,SAAK,iBAAgB,iCAAQ,kBAAiB,KAAK;AACnD,SAAK,kBAAkB,IAAI,gBAAiB;AAC5C,SAAK,SAAS,KAAK,gBAAgB,SAAS,UAAW;AACvD,SAAK,gBAAgB,uBAAuB,mBAAmB,KAAK,gBAAgB,QAAQ;AAAA,EACpG;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,MAAM,WAAW,MAAM;AAAA,EAG3B;AAAA,EACI,YAAY,KAAK;AACb,QAAI,IAAI,OAAO,KAAK,QAAQ;AACxB,aAAO;AAAA,IACnB;AACQ,UAAM,UAAU,IAAI,QAAQ,CAAE;AAC9B,QAAI,UAAU,KAAK,iBAAiB,UAChC,KAAK,gBAAgB,UACrB,KAAK,iBAAiB;AAC1B,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,IAAI,IAAI;AAAA,IACpE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,IAAI,QAAQ;AAAA,IACxE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WACI,QAAQ,KAAK,CAAC,QAAQ;;AAAA,gBAAAK,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI,MAAM;AAAA,IAC/E;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,IAAI,IAAI;AAAA,IACrE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,IAAI,QAAQ;AAAA,IACzE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WAAW,QAAQ,MAAM,CAAC,QAAG;;AAAK,kBAACA,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI;AAAA,IAClF;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,kBAAkB,OAAO,QAAQ;AAEpC,qBAAiB,SAAS,QAAQ;AAE9B,UAAI,UAAU,KAAK,QAAQ;AAGvB,cAAM,MAAM,KAAK,cAAc,KAAK;AACpC,YAAI,KAAK;AACL,gBAAM,KAAK,OAAO,MAAM,IAAI,YAAY;AAAA,YACpC,KAAK;AAAA,cACD;AAAA,gBACI,IAAI;AAAA,gBACJ,MAAM,SAAS,GAAG;AAAA,gBAClB,OAAO;AAAA,cACV;AAAA,YACJ;AAAA,UACzB,CAAqB,CAAC;AAAA,QACtB;AAAA,MACA;AACY,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,MAAM,YAAY,KAAK;;AACnB,QAAI,KAAK,WAAW,QAAW;AAC3B,WAAK,SAAS,IAAI;AAClB,YAAM,KAAK,OAAO,MAAM,IAAI,YAAY;AAAA,QACpC,KAAK;AAAA,UACD;AAAA,YACI,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,cACH,IAAI,IAAI;AAAA,cACR,MAAM,IAAI;AAAA,cACV,MAAM,IAAI;AAAA,cACV,iBAAiB,CAAE;AAAA,cACnB,cAAc;AAAA,cACd,MAAM,CAAE;AAAA,YACX;AAAA,UACJ;AAAA,QACJ;AAAA,MACjB,CAAa,CAAC;AAAA,IACd;AACQ,QAAI,CAAC,KAAK,YAAY,GAAG,GAAG;AACxB;AAAA,IACZ;AACQ,QAAI,KAAK,oBAAoB,IAAI,IAAI,MAAM,QAAW;AAClD,WAAK,oBAAoB,IAAI,IAAI,IAAI;AAAA,IACjD;AACQ,SAAK,oBAAoB,IAAI,IAAI,KAAK;AACtC,UAAM,QAAQ,KAAK,oBAAoB,IAAI,IAAI;AAC/C,SAAK,cAAc,IAAI,EAAE,IACrB,UAAU,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,IAAI,KAAK;AACjD,UAAM,WAAW;AAAA,MACb,IAAI,IAAI;AAAA,MACR,MAAM,IAAI;AAAA,MACV,MAAM,IAAI;AAAA,MACV,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUA,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,MACnC,YAAY,IAAI,KAAK,IAAI,UAAU,EAAE,YAAa;AAAA,MAClD,iBAAiB,CAAE;AAAA,MACnB,qBAAqB,CAAE;AAAA,MACvB,cAAc;AAAA,MACd,UAAU;AAAA,IACb;AACD,QAAI,KAAK,kBAAkB,oBAAoB;AAC3C,eAAS,SAAS,MAAM,uBAAuB,KAAK,KAAK,aAAa;AAAA,IAClF;AACQ,UAAM,KAAK,OAAO,MAAM,IAAI,YAAY;AAAA,MACpC,KAAK;AAAA,QACD;AAAA,UACI,IAAI;AAAA,UACJ,MAAM,SAAS,KAAK,cAAc,IAAI,EAAE,CAAC;AAAA,UACzC,OAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACb,CAAS,CAAC;AAAA,EACV;AAAA,EACI,MAAM,YAAY,KAAK;AACnB,QAAI;AACA,YAAM,UAAU,KAAK,cAAc,IAAI,EAAE;AACzC,UAAI,YAAY,QAAW;AACvB;AAAA,MAChB;AACY,YAAM,MAAM,CAAE;AACd,UAAI,KAAK,kBAAkB,oBAAoB;AAC3C,YAAI,KAAK;AAAA,UACL,IAAI;AAAA,UACJ,MAAM,SAAS,OAAO;AAAA,UACtB,OAAO,MAAM,uBAAuB,KAAK,KAAK,aAAa;AAAA,QAC/E,CAAiB;AAAA,MACjB;AACY,UAAI,KAAK;AAAA,QACL,IAAI;AAAA,QACJ,MAAM,SAAS,OAAO;AAAA,QACtB,OAAO,MAAM,wBAAwB,KAAK,KAAK,aAAa;AAAA,MAC5E,CAAa;AACD,UAAI,IAAI,aAAa,QAAW;AAC5B,YAAI,KAAK;AAAA,UACL,IAAI;AAAA,UACJ,MAAM,SAAS,OAAO;AAAA,UACtB,OAAO,IAAI,KAAK,IAAI,QAAQ,EAAE,YAAa;AAAA,QAC/D,CAAiB;AAAA,MACjB;AACY,YAAM,QAAQ,IAAI,YAAY,EAAE,IAAG,CAAE;AACrC,YAAM,KAAK,OAAO,MAAM,KAAK;AAAA,IACzC,UACgB;AACJ,UAAI,IAAI,OAAO,KAAK,QAAQ;AACxB,cAAM,QAAQ,IAAI,YAAY;AAAA,UAC1B,KAAK;AAAA,YACD;AAAA,cACI,IAAI;AAAA,cACJ,MAAM;AAAA,cACN,OAAO,MAAM,wBAAwB,KAAK,KAAK,aAAa;AAAA,YAC/D;AAAA,UACJ;AAAA,QACrB,CAAiB;AACD,cAAM,KAAK,OAAO,MAAM,KAAK;AAC7B,YAAI,KAAK,WAAW;AAChB,gBAAM,KAAK,OAAO,MAAO;AAAA,QAC7C;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACI,MAAM,cAAc,KAAK,OAAO,QAAQ;AACpC,UAAM,UAAU,KAAK,cAAc,IAAI,EAAE;AACzC,QAAI,YAAY,QAAW;AACvB;AAAA,IACZ;AAEQ,UAAM,cAAc,IAAI,OAAO,aAAa;AAC5C,QAAI;AACJ,QAAI,aAAa;AACb,UAAI,sBAAsB,iCAAQ,KAAK,GAAG;AACtC,8BAAsB,iCAAQ;AAAA,MAC9C,OACiB;AACD,8BAAsB,IAAI,eAAe;AAAA,UACrC,IAAI,OAAO,IAAI,EAAE;AAAA,UACjB,SAAS;AAAA,QAC7B,CAAiB;AAAA,MACjB;AAAA,IACA,OACa;AACD,4BAAsB;AAAA,IAClC;AACQ,UAAM,QAAQ,IAAI,YAAY;AAAA,MAC1B,KAAK;AAAA,QACD;AAAA,UACI,IAAI;AAAA,UACJ,MAAM,SAAS,OAAO;AAAA,UACtB,OAAO;AAAA,QACV;AAAA,QACD;AAAA,UACI,IAAI;AAAA,UACJ,MAAM,SAAS,OAAO;AAAA,UACtB,OAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACb,CAAS;AACD,UAAM,KAAK,OAAO,MAAM,KAAK;AAAA,EACrC;AACA;AC5aO,MAAM,UAAU;AAIhB,MAAM,gBAAgB;AAAA,EACzB,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,OAAO,OAAO;AACnB,SAAK,iBAAiB,OAAO;AAAA,EACrC;AAAA,EACI,OAAO,OAAO;AACV,WAAO,IAAI,gBAAgB;AAAA,MACvB,MAAM,KAAK,OAAO,MAAM;AAAA,MACxB,gBAAgB;AAAA,QACZ,GAAG,KAAK;AAAA,QACR,GAAG,MAAM;AAAA,MACZ;AAAA,IACb,CAAS;AAAA,EACT;AACA;AC3BA,SAAS,WAAW,EAAE,MAAM,cAAe;AACvC,MAAI,SAAS,QAAW;AACpB,WAAO;AAAA,EACf;AACI,OAAI,yCAAY,UAAS,QAAW;AAChC,WAAO,WAAW;AAAA,EAC1B,YACa,yCAAY,QAAO,UAAa,MAAM,QAAQ,yCAAY,EAAE,GAAG;AACpE,WAAO,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;AAAA,EACrD;AACI,SAAO;AACX;AACO,MAAM,wBAAwB,CAAC,YAAY,QAAQ,SAAS;AAO5D,MAAM,mCAAmC,WAAW;AAAA,EACvD,YAAY,QAAQ;AAChB,UAAM,EAAE,eAAe,MAAM,GAAG,OAAM,CAAE;AACxC,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,oBAAI,IAAG;AAAA,IAC1B,CAAS;AACD,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,oBAAI,IAAG;AAAA,IAC1B,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,aAAY,iCAAQ,cAAa;AACtC,SAAK,eAAe,iCAAQ;AAC5B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,cAAc,iCAAQ;AAC3B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,eAAe,iCAAQ;AAC5B,SAAK,cAAc,iCAAQ;AAC3B,SAAK,kBAAkB,IAAI,gBAAiB;AAC5C,SAAK,SAAS,KAAK,gBAAgB,SAAS,UAAW;AACvD,SAAK,gBAAgB,uBAAuB,mBAAmB,KAAK,gBAAgB,QAAQ;AAAA,EACpG;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,MAAM,WAAW,MAAM;AAAA,EAG3B;AAAA,EACI,YAAY,KAAK;AACb,UAAM,UAAU,IAAI,QAAQ,CAAE;AAC9B,QAAI,UAAU,KAAK,iBAAiB,UAChC,KAAK,gBAAgB,UACrB,KAAK,iBAAiB;AAC1B,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,IAAI,IAAI;AAAA,IACpE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,IAAI,OAAO;AAAA,IACvE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WACI,QAAQ,KAAK,CAAC,QAAQ;;AAAA,gBAAAA,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI,MAAM;AAAA,IAC/E;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,IAAI,IAAI;AAAA,IACrE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,IAAI,OAAO;AAAA,IACxE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WAAW,QAAQ,MAAM,CAAC,QAAG;;AAAK,kBAACA,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI;AAAA,IAClF;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,kBAAkB,OAAO,cAAc;AAC1C,UAAM,aAAa,MAAM,aAAa,KAAM;AAC5C,QAAI,WAAW,MAAM;AACjB;AAAA,IACZ;AACQ,UAAM,UAAU,KAAK,WAAW,IAAI,KAAK;AAKzC,QAAI,YAAY,QAAW;AACvB,YAAM,WAAW;AACjB;AAAA,IACZ;AAEQ,aAAS,mBAAmB,WAAW,MAAM;AACzC,UAAI,cAAc,SAAS,OAAO,SAAS,UAAU;AACjD,eAAO,IAAI,gBAAgB,EAAE,MAAM,KAAI,CAAE;AAAA,MACzD;AACY,aAAO;AAAA,IACnB;AACQ,QAAI,gBAAgB,KAAK,eAAe,IAAI,KAAK;AAEjD,QAAI,kBAAkB,QAAW;AAC7B,UAAI;AACJ,sBAAgB,IAAI,QAAQ,CAAC,YAAY;AACrC,gCAAwB;AAAA,MACxC,CAAa;AACD,WAAK,eAAe,IAAI,OAAO,aAAa;AAC5C,UAAI;AACA,cAAM,QAAQ;AAAA,UACV,OAAO,MAAM,QAAQ,OAAO;AAAA,UAC5B,QAAQ;AAAA,UACR,MAAM,QAAQ;AAAA,UACd,MAAM,QAAQ;AAAA,UACd,UAAU,QAAQ;AAAA,UAClB,MAAM,CAAE;AAAA,QACX;AACD,cAAM,KAAK,KAAK;AAAA,UACZ,GAAG;AAAA,UACH,MAAM;AAAA,YACF,OAAO,mBAAmB,QAAQ,SAAS,WAAW,KAAK;AAAA,UAC9D;AAAA,QACJ,GAAE,OAAO;AACV,cAAM,WAAW;AACjB,yBAAiB,SAAS,cAAc;AAEpC,cAAI,QAAQ,YAAY,UAAU,QAAQ,YAAY,aAAa;AAC/D,kBAAM,KAAK,KAAK;AAAA,cACZ,GAAG;AAAA,cACH,MAAM;AAAA,gBACF,OAAO,mBAAmB,QAAQ,SAAS,KAAK;AAAA,cACnD;AAAA,YACJ,GAAE,OAAO;AAAA,UAClC;AACoB,gBAAM;AAAA,QAC1B;AAAA,MACA,UACoB;AAEJ,8BAAuB;AAAA,MAEvC;AAAA,IACA,OACa;AAED,YAAM,WAAW;AACjB,uBAAiB,SAAS,cAAc;AACpC,cAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACI,MAAM,KAAK,SAAS,KAAK;AACrB,QAAI,KAAK,YAAY,GAAG,GAAG;AACvB,YAAM,KAAK,OAAO,MAAM,OAAO;AAAA,IAC3C;AAAA,EACA;AAAA,EACI,MAAM,aAAa,SAAS,KAAK;AAC7B,UAAM,gBAAgB,KAAK,eAAe,IAAI,QAAQ,MAAM;AAC5D,QAAI,kBAAkB,QAAW;AAC7B,WAAK,cAAc,KAAK,MAAM;AAC1B,aAAK,KAAK,KAAK,SAAS,GAAG;AAAA,MAC3C,CAAa;AAAA,IACb,OACa;AACD,YAAM,KAAK,KAAK,SAAS,GAAG;AAAA,IACxC;AAAA,EACA;AAAA,EACI,MAAM,WAAW,KAAK;;AAClB,UAAM,UAAU,WAAW,GAAG;AAC9B,UAAM,UAAU,IAAI,OAAO,aAAa,SAAY,eAAe;AACnE,UAAM,UAAU;AAAA,MACZ,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUA,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,MACnC,MAAM;AAAA,MACN;AAAA,MACA,QAAQ,IAAI;AAAA,IACf;AACD,SAAK,WAAW,IAAI,IAAI,IAAI,OAAO;AACnC,UAAM,YAAY,MAAM,OAAO;AAC/B,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,QACF,OAAO,IAAI;AAAA,MACd;AAAA,MACD,MAAM;AAAA,MACN,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,QAAQ,IAAI;AAAA,MACZ,YAAUG,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,IACtC,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,cAAc,KAAK,OAEzB,QAAQ;AACJ,UAAM,UAAU,KAAK,WAAW,IAAI,IAAI,EAAE;AAC1C,QAAI;AACJ,QAAI;AACJ,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,yBAAyB,IAAI,EAAE,wBAAwB;AAAA,IACnF;AAEQ,QAAI,KAAK,WAAW,SAAS,GAAG;AAC5B;AAAA,IACZ;AACQ,QAAI,QAAQ,YAAY,cAAc;AAClC,kBAAY;AACZ,WAAI,iCAAQ,WAAU,QAAW;AAC7B,gBAAQ,IAAI,eAAe,EAAE,SAAS,OAAO,IAAI,OAAO,IAAI,EAAE,GAAE,CAAE;AAAA,MAClF,OACiB;AACD,gBAAQ,OAAO,MAAM;AAAA,MACrC;AAAA,IACA,WACiB,QAAQ,YAAY,OAAO;AAChC,kBAAY;AACZ,WAAI,iCAAQ,WAAU,QAAW;AAC7B,gBAAQ,IAAI,gBAAgB,EAAE,MAAM,MAAK,CAAE;AAAA,MAC3D,OACiB;AACD,gBAAQ,OAAO;AAAA,MAC/B;AAAA,IACA,OACa;AACD,YAAM,IAAI,MAAM,uBAAuB,QAAQ,OAAO,EAAE;AAAA,IACpE;AACQ,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,QACF;AAAA,MACH;AAAA,MACD,QAAQ,IAAI;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ;AAAA,IACrB,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,SAAS,KAAK;;AAChB,UAAM,UAAU,KAAK,WAAW,IAAI,IAAI,EAAE;AAC1C,SAAK,WAAW,OAAO,IAAI,EAAE;AAC7B,QAAI;AACJ,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,oBAAoB,IAAI,EAAE,wBAAwB;AAAA,IAC9E;AACQ,UAAM,eAAcH,MAAA,IAAI,YAAJ,gBAAAA,IAAa;AAEjC,QAAI;AACJ,QAAI,QAAQ,YAAY,cAAc;AAClC,iBAAW,cAAc,eAAe,IAAI;AACxC,YAAI,WAAW,QAAW;AACtB;AAAA,QACpB;AACgB,kBAASG,MAAA,WAAW,CAAC,MAAZ,gBAAAA,IAAe;AAAA,MACxC;AACY,kBAAY;AAAA,IACxB,WACiB,QAAQ,YAAY,OAAO;AAChC,eAAS;AAAA,QACL,aAAa,2CAAa,IAAI,CAAC,eAAe;AAC1C,iBAAO,WAAW,IAAI,CAAC,UAAU;AAC7B,mBAAO;AAAA,cACH,MAAM,MAAM;AAAA,cACZ,gBAAgB,MAAM;AAAA,YACzB;AAAA,UACzB,CAAqB;AAAA,QACrB;AAAA,QACgB,aAAWE,MAAA,IAAI,YAAJ,gBAAAA,IAAa,cAAa,CAAE;AAAA,MAC1C;AACD,kBAAY;AAAA,IACxB,OACa;AACD,YAAM,IAAI,MAAM,kCAAkC,QAAQ,OAAO,EAAE;AAAA,IAC/E;AACQ,UAAM,KAAK,aAAa;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,QACF;AAAA,QACA,OAAO,QAAQ;AAAA,MAClB;AAAA,MACD,QAAQ,IAAI;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ;AAAA,IACrB,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,aAAa,KAAK;;AACpB,UAAM,UAAU,WAAW,GAAG;AAC9B,UAAM,UAAU,IAAI,YAAY;AAChC,UAAM,UAAU;AAAA,MACZ,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUL,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,MACnC,MAAM;AAAA,MACN,SAAS,IAAI;AAAA,IAChB;AACD,QAAI,YAAY,CAAE;AAElB,QAAI,IAAI,OAAO,UAAU,MAAM,OAAO,KAAK,IAAI,MAAM,EAAE,WAAW,GAAG;AACjE,kBAAY,CAAE;AACd,cAAQ,SAAS,CAAE;AAAA,IAC/B,WACiB,IAAI,OAAO,UAAU,QAAW;AACrC,gBAAU,QAAQ,IAAI,OAAO;AAC7B,cAAQ,SAAS,IAAI,OAAO;AAAA,IACxC,OACa;AACD,gBAAU,QAAQ,IAAI;AACtB,cAAQ,SAAS,IAAI;AAAA,IACjC;AACQ,SAAK,WAAW,IAAI,IAAI,IAAI,OAAO;AACnC,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO,MAAM,OAAO;AAAA,MACpB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,QAAQ,IAAI;AAAA,MACZ,YAAUG,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,IACtC,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,WAAW,KAAK;;AAClB,UAAM,UAAU,KAAK,WAAW,IAAI,IAAI,EAAE;AAC1C,SAAK,WAAW,OAAO,IAAI,EAAE;AAC7B,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,sBAAsB,IAAI,EAAE,wBAAwB;AAAA,IAChF;AACQ,UAAM,YAAY,MAAM,IAAI,QAAQ;AACpC,UAAM,SAAS,IAAI,UAAU,QAAQ,UAAU,CAAE;AACjD,UAAM,YAAUH,MAAA,IAAI,YAAJ,gBAAAA,IAAa,WAAU,IAAI;AAC3C,UAAM,OAAO;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,IACV;AACD,QAAI,OAAO,SAAS,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AAClD,WAAK,QAAQ,OAAO;AACpB,cAAQ,SAAS,OAAO;AAAA,IACpC;AACQ,UAAM,KAAK,aAAa;AAAA,MACpB,OAAO;AAAA,MACP;AAAA,MACA,QAAQ,IAAI;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ,YAAY,CAAE;AAAA,IACnC,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,YAAY,KAAK;;AACnB,UAAM,UAAU,WAAW,GAAG;AAC9B,UAAM,UAAU;AAAA,MACZ,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUA,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,MACnC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ,IAAI,UAAU,CAAE;AAAA,IAC3B;AACD,SAAK,WAAW,IAAI,IAAI,IAAI,OAAO;AACnC,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,QACF,OAAO,IAAI,UAAU,CAAE;AAAA,MAC1B;AAAA,MACD,MAAM;AAAA,MACN,QAAQ,IAAI;AAAA,MACZ,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUG,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,IACtC,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,UAAU,KAAK;;AACjB,UAAM,UAAU,KAAK,WAAW,IAAI,IAAI,EAAE;AAC1C,SAAK,WAAW,OAAO,IAAI,EAAE;AAC7B,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,qBAAqB,IAAI,EAAE,wBAAwB;AAAA,IAC/E;AACQ,QAAI,QAAQ,WAAW,QAAW;AAC9B,YAAM,IAAI,MAAM,qBAAqB,IAAI,EAAE,yDAAyD;AAAA,IAChH;AACQ,UAAM,WAASH,MAAA,IAAI,YAAJ,gBAAAA,IAAa,YAAW,SAAY,IAAI,UAAU,IAAI,QAAQ;AAC7E,UAAM,KAAK,aAAa;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,QACF;AAAA,QACA,OAAO,QAAQ;AAAA,MAClB;AAAA,MACD,QAAQ,IAAI;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ;AAAA,IACrB,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,iBAAiB,KAAK;;AACxB,UAAM,UAAU,WAAW,GAAG;AAC9B,UAAM,UAAU;AAChB,UAAM,UAAU;AAAA,MACZ,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,YAAUA,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,MACnC,MAAM;AAAA,MACN;AAAA,MACA,QAAQ;AAAA,QACJ,OAAO,IAAI,OAAO;AAAA,MACrB;AAAA,IACJ;AACD,SAAK,WAAW,IAAI,IAAI,IAAI,OAAO;AACnC,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,QACF,OAAO;AAAA,UACH,OAAO,IAAI,OAAO;AAAA,QACrB;AAAA,MACJ;AAAA,MACD,MAAM;AAAA,MACN,MAAM,IAAI,QAAQ,CAAE;AAAA,MACpB,QAAQ,IAAI;AAAA,MACZ,YAAUG,MAAA,IAAI,UAAJ,gBAAAA,IAAW,aAAY,CAAE;AAAA,IACtC,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,eAAe,KAAK;;AACtB,UAAM,UAAU,KAAK,WAAW,IAAI,IAAI,EAAE;AAC1C,SAAK,WAAW,OAAO,IAAI,EAAE;AAC7B,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,0BAA0B,IAAI,EAAE,wBAAwB;AAAA,IACpF;AACQ,UAAM,KAAK,aAAa;AAAA,MACpB,OAAO;AAAA,MACP,MAAM;AAAA,QACF,UAAQH,MAAA,IAAI,YAAJ,gBAAAA,IAAa,cAAa,IAAI;AAAA,QACtC,OAAO,QAAQ;AAAA,MAClB;AAAA,MACD,QAAQ,IAAI;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ;AAAA,IACrB,GAAE,OAAO;AAAA,EAClB;AAAA;AAAA,EAEI,MAAM,kBAAkB,WAAW,MAAM,OAAO;AAC5C,UAAM,UAAU,KAAK,WAAW,IAAI,KAAK;AACzC,QAAI,YAAY,QAAW;AACvB,YAAM,IAAI,MAAM,6BAA6B,KAAK,wBAAwB;AAAA,IACtF;AACQ,UAAM,KAAK,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM,QAAQ;AAAA,MACd,UAAU,QAAQ;AAAA,MAClB;AAAA,IACH,GAAE,OAAO;AAAA,EAClB;AAAA,EACI,MAAM,SAAS;AACX,UAAM,kBAAkB,CAAC,GAAG,KAAK,eAAe,OAAM,CAAE;AACxD,SAAK,QAAQ,IAAI,eAAe,EAAE,QAAQ,MAAM;AAC5C,WAAK,KAAK,OAAO,MAAO;AAAA,IACpC,CAAS;AAAA,EACT;AACA;AC7gBA,MAAM,kBAAkB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AACJ;AAEA,MAAM,8BAA8B,CAAC,UAAU;;AAC3C,MAAI,MAAM,QAAQ,WAAW,QAAQ,KACjC,MAAM,QAAQ,WAAW,YAAY,KACrC,MAAM,SAAS,cAAc;AAC7B,UAAM;AAAA,EACd;AAEI,OAAI,+BAAO,UAAS,gBAAgB;AAChC,UAAM;AAAA,EACd;AACI,QAAM;AAAA;AAAA,MAENA,MAAA,+BAAO,aAAP,gBAAAA,IAAiB,YAAU,+BAAO;AAAA;AAClC,MAAI,UAAU,gBAAgB,SAAS,CAAC,MAAM,GAAG;AAC7C,UAAM;AAAA,EACd;AAEI,QAAIG,MAAA,+BAAO,UAAP,gBAAAA,IAAc,UAAS,sBAAsB;AAC7C,UAAM,MAAM,IAAI,MAAM,+BAAO,OAAO;AACpC,QAAI,OAAO;AACX,UAAM;AAAA,EACd;AACA;AAcO,MAAM4G,aAAY;AAAA,EACrB,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,iBAAiB,OAAO,kBAAkB;AAC/C,SAAK,aAAa,OAAO,cAAc;AACvC,SAAK,kBACD,OAAO,mBAAmB;AAC9B,UAAM,SAAS,aAAa,YAAY,UAAU,UAAU;AAC5D,SAAK,QAAQ,IAAI,OAAO,EAAE,aAAa,KAAK,gBAAgB;AAAA,EACpE;AAAA;AAAA,EAEI,KAAK,aAAa,MAAM;AACpB,WAAO,KAAK,MAAM,IAAI,MAAM,OAAO,MAAM,SAAS,GAAG,IAAI,EAAE,MAAM,CAAC,UAAU;AAExE,UAAI,iBAAiB,OAAO;AACxB,cAAM;AAAA,MACtB,OACiB;AACD,cAAM,IAAI,MAAM,KAAK;AAAA,MACrC;AAAA,IACA,CAAS,GAAG;AAAA,MACA,iBAAiB,KAAK;AAAA,MACtB,SAAS,KAAK;AAAA,MACd,WAAW;AAAA;AAAA;AAAA,IAGvB,CAAS,GAAG,EAAE,gBAAgB,MAAM;AAAA,EACpC;AAAA;AAAA,EAEI,gBAAgB,SAAS,aAAa,MAAM;AAGxC,QAAI,QAAQ,QAAQ;AAChB,aAAO,QAAQ,KAAK;AAAA,QAChB,KAAK,KAAK,UAAU,GAAG,IAAI;AAAA,QAC3B,IAAI,QAAQ,CAACtH,IAAG,WAAW;;AACvB,WAAAO,MAAA,QAAQ,WAAR,gBAAAA,IAAgB,iBAAiB,SAAS,MAAM;AAC5C,mBAAO,IAAI,MAAM,YAAY,CAAC;AAAA,UACtD;AAAA,QACA,CAAiB;AAAA,MACjB,CAAa;AAAA,IACb;AACQ,WAAO,KAAK,KAAK,UAAU,GAAG,IAAI;AAAA,EAC1C;AAAA,EACI,SAAS,MAAM;AACX,WAAO,KAAK,KAAK,MAAM,MAAM,GAAG,IAAI,EAAE,KAAK,CAAC,QAAS,IAAI,KAAK,MAAM,QAAQ,OAAO,GAAG,CAAE,CAAC;AAAA,EACjG;AACA;ACvHO,MAAM,4BAA4B,WAAW;AAAA,EAChD,YAAY,EAAE,QAAA6G,SAAQ,SAAS,OAAO,QAAO,GAAK;AAC9C,UAAM,EAAE,eAAe,MAAM;AAC7B,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,SAASA;AACd,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,aAAa;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,WAAWpH,IAAG;AACV,WAAO,QAAQ,QAAS;AAAA,EAChC;AAAA,EACI,MAAM,YAAY,KAAK;AACnB,QAAI,KAAK,QAAQ;AACb;AAAA,IACZ;AACQ,SAAK,SAAS,IAAI;AAClB,QAAI,KAAK,YAAY;AACjB,YAAM,KAAK,WAAW,KAAK,KAAK,MAAM;AAAA,IAClD;AAAA,EACA;AAAA,EACI,MAAM,YAAY,KAAK;AACnB,QAAI,IAAI,OAAO,KAAK,QAAQ;AACxB;AAAA,IACZ;AACQ,QAAI,CAAC,IAAI,OAAO;AACZ,UAAI,KAAK,UAAU;AACf,cAAM,KAAK,SAAS,KAAK,KAAK,MAAM;AAAA,MACpD;AAAA,IACA,WACiB,KAAK,YAAY;AACtB,YAAM,KAAK,WAAW,KAAK,KAAK,MAAM;AAAA,IAClD;AAAA,EACA;AACA;AC3EO,SAAS,oBAAoB,OAAO;AACvC,SAAO,QAAQ,MAAM,cAAc;AACvC;AAQO,MAAM,iBAAiB;AAAA,EAC1B,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,eAAe,OAAO;AAC3B,SAAK,eAAe,OAAO;AAC3B,SAAK,cAAc,OAAO;AAC1B,SAAK,eAAe,OAAO;AAC3B,SAAK,eAAe,OAAO;AAC3B,SAAK,cAAc,OAAO;AAAA,EAClC;AAAA,EACI,aAAa,OAAO,UAAU;AAC1B,QAAI,UAAU,KAAK,iBAAiB,UAChC,KAAK,iBAAiB,UACtB,KAAK,gBAAgB;AACzB,UAAM,YAAY,MAAM,QAAQ,CAAE;AAClC,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,MAAM,IAAI;AAAA,IACtE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,KAAK,aAAa,SAAS,QAAQ;AAAA,IACpE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WAAW,UAAU,KAAK,CAAC,QAAQ;;AAAA,gBAAAO,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI;AAAA,IAClF;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,MAAM,IAAI;AAAA,IACvE;AACQ,QAAI,KAAK,iBAAiB,QAAW;AACjC,gBAAU,WAAW,CAAC,KAAK,aAAa,SAAS,QAAQ;AAAA,IACrE;AACQ,QAAI,KAAK,gBAAgB,QAAW;AAChC,gBACI,WAAW,UAAU,MAAM,CAAC,QAAG;;AAAK,kBAACA,MAAA,KAAK,gBAAL,gBAAAA,IAAkB,SAAS;AAAA,OAAI;AAAA,IACpF;AACQ,WAAO;AAAA,EACf;AACA;ACnFO,MAAM,iBAAiB,OAAO,mDAAmD;AACjF,MAAMyG,mBAAiB;AAAA,EAC1B,MAAM;AAAA,EACN,cAAc;AAAA,EACd,UAAU,CAAC,GAAG;AAAA,EACd,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,aAAa;AAAA,EACb,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,aAAa,CAAE;AAAA,EACf,eAAe;AAAA,EACf,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,cAAc;AAClB;AACO,MAAM,oBAAoB,CAAC,aAK5B;AAAA,EACE,GAAGA;AAAAA,EACH,GAAG;AACX;AC7BO,MAAM,UAAU,CAAC,YAAY;AAChC,QAAM,WAAW,kBAAkB,OAAO;AAC1C,QAAM,cAAc,SAAS,SAAS,SAChC,CAAC,GAAG,SAAS,UAAU,SAAS,gBAAgB,SAAS,IAAI,IAC7D,SAAS;AACf,SAAO;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA,cAAc;AAAA,IACd,MAAM,IAAI,IAAI,OAAO,QAAQ,SAAS,WAAW,EAAE,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM;AAAA,MACpE,IAAI;AAAA,MACJ;AAAA,QACI,KAAK,IAAI;AAAA,QACT,MAAM,CAAC,GAAG,SAAS,UAAU,SAAS,gBAAgB,IAAI;AAAA;AAAA,QAE1D,YAAY;AAAA,MACf;AAAA,IACb,CAAS,CAAC;AAAA,EACL;AACL;ACpBO,SAAS,gBAAgB,KAAK,KAAK,cAAc,MAAM;AAC1D,MAAI,EAAC,6BAAM;AACP;AACJ,MAAI,cAAc;AACd,QAAI,eAAe;AAAA,MACf,GAAG,IAAI;AAAA,MACP,CAAC,GAAG,GAAG;AAAA,IACV;AAAA,EACT;AACA;AACO,SAAS,0BAA0B,KAAK,KAAK,OAAO,cAAc,MAAM;AAC3E,MAAI,GAAG,IAAI;AACX,kBAAgB,KAAK,KAAK,cAAc,IAAI;AAChD;ACbO,SAAS,cAAc;AAC1B,SAAO,CAAE;AACb;ACCO,SAAS,cAAc,KAAK,MAAM;;AACrC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,EACT;AACD,QAAIzG,MAAA,IAAI,SAAJ,gBAAAA,IAAU,WACVK,OAAAF,MAAA,IAAI,SAAJ,gBAAAA,IAAU,SAAV,gBAAAE,IAAgB,cAAa,sBAAsB,QAAQ;AAC3D,QAAI,QAAQ,SAAS,IAAI,KAAK,MAAM;AAAA,MAChC,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,OAAO;AAAA,IACtD,CAAS;AAAA,EACT;AACI,MAAI,IAAI,WAAW;AACf,8BAA0B,KAAK,YAAY,IAAI,UAAU,OAAO,IAAI,UAAU,SAAS,IAAI;AAAA,EACnG;AACI,MAAI,IAAI,WAAW;AACf,8BAA0B,KAAK,YAAY,IAAI,UAAU,OAAO,IAAI,UAAU,SAAS,IAAI;AAAA,EACnG;AACI,MAAI,IAAI,aAAa;AACjB,8BAA0B,KAAK,YAAY,IAAI,YAAY,OAAO,IAAI,YAAY,SAAS,IAAI;AAC/F,8BAA0B,KAAK,YAAY,IAAI,YAAY,OAAO,IAAI,YAAY,SAAS,IAAI;AAAA,EACvG;AACI,SAAO;AACX;ACxBO,SAAS,eAAe,KAAK,MAAM;AACtC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,EACX;AACD,MAAI,CAAC,IAAI;AACL,WAAO;AACX,aAAW,SAAS,IAAI,QAAQ;AAC5B,YAAQ,MAAM,MAAI;AAAA,MACd,KAAK;AACD,YAAI,KAAK,WAAW,eAAe;AAC/B,cAAI,MAAM,WAAW;AACjB,sCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAClG,OACyB;AACD,sCAA0B,KAAK,oBAAoB,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAC3G;AAAA,QACA,OACqB;AACD,cAAI,CAAC,MAAM,WAAW;AAClB,gBAAI,mBAAmB;AAAA,UAC/C;AACoB,oCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AACD,YAAI,KAAK,WAAW,eAAe;AAC/B,cAAI,MAAM,WAAW;AACjB,sCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAClG,OACyB;AACD,sCAA0B,KAAK,oBAAoB,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAC3G;AAAA,QACA,OACqB;AACD,cAAI,CAAC,MAAM,WAAW;AAClB,gBAAI,mBAAmB;AAAA,UAC/C;AACoB,oCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AACD,kCAA0B,KAAK,cAAc,MAAM,OAAO,MAAM,SAAS,IAAI;AAC7E;AAAA,IAChB;AAAA,EACA;AACI,SAAO;AACX;AChDO,SAAS,kBAAkB;AAC9B,SAAO;AAAA,IACH,MAAM;AAAA,EACT;AACL;ACHO,SAAS,gBAAgB,MAAM,MAAM;AACxC,SAAO,SAAS,KAAK,KAAK,MAAM,IAAI;AACxC;ACFO,MAAM,gBAAgB,CAAC,KAAK,SAAS;AACxC,SAAO,SAAS,IAAI,UAAU,MAAM,IAAI;AAC5C;ACFO,SAAS,aAAa,KAAK,MAAM,sBAAsB;AAC1D,QAAM,WAAW,wBAAwB,KAAK;AAC9C,MAAI,MAAM,QAAQ,QAAQ,GAAG;AACzB,WAAO;AAAA,MACH,OAAO,SAAS,IAAI,CAAC,MAAMd,OAAM,aAAa,KAAK,MAAM,IAAI,CAAC;AAAA,IACjE;AAAA,EACT;AACI,UAAQ,UAAQ;AAAA,IACZ,KAAK;AAAA,IACL,KAAK;AACD,aAAO;AAAA,QACH,MAAM;AAAA,QACN,QAAQ;AAAA,MACX;AAAA,IACL,KAAK;AACD,aAAO;AAAA,QACH,MAAM;AAAA,QACN,QAAQ;AAAA,MACX;AAAA,IACL,KAAK;AACD,aAAO,kBAAkB,KAAK,IAAI;AAAA,EAC9C;AACA;AACA,MAAM,oBAAoB,CAAC,KAAK,SAAS;AACrC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,EACX;AACD,MAAI,KAAK,WAAW,YAAY;AAC5B,WAAO;AAAA,EACf;AACI,aAAW,SAAS,IAAI,QAAQ;AAC5B,YAAQ,MAAM,MAAI;AAAA,MACd,KAAK;AACD;AAAA,UAA0B;AAAA,UAAK;AAAA,UAAW,MAAM;AAAA;AAAA,UAChD,MAAM;AAAA,UAAS;AAAA,QAAI;AACnB;AAAA,MACJ,KAAK;AACD;AAAA,UAA0B;AAAA,UAAK;AAAA,UAAW,MAAM;AAAA;AAAA,UAChD,MAAM;AAAA,UAAS;AAAA,QAAI;AACnB;AAAA,IAChB;AAAA,EACA;AACI,SAAO;AACX;AC5CO,SAAS,gBAAgB,MAAM,MAAM;AACxC,SAAO;AAAA,IACH,GAAG,SAAS,KAAK,UAAU,MAAM,IAAI;AAAA,IACrC,SAAS,KAAK,aAAc;AAAA,EAC/B;AACL;ACLO,SAAS,gBAAgB,MAAM,MAAM;AACxC,SAAO,KAAK,mBAAmB,UACzB,SAAS,KAAK,OAAO,MAAM,IAAI,IAC/B,CAAE;AACZ;ACLO,SAAS,aAAa,KAAK;AAC9B,SAAO;AAAA,IACH,MAAM;AAAA,IACN,MAAM,MAAM,KAAK,IAAI,MAAM;AAAA,EAC9B;AACL;ACJA,MAAM,yBAAyB,CAAC,SAAS;AACrC,MAAI,UAAU,QAAQ,KAAK,SAAS;AAChC,WAAO;AACX,SAAO,WAAW;AACtB;AACO,SAAS,qBAAqB,KAAK,MAAM;AAC5C,QAAM,QAAQ;AAAA,IACV,SAAS,IAAI,KAAK,MAAM;AAAA,MACpB,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAG;AAAA,IAC3D,CAAS;AAAA,IACD,SAAS,IAAI,MAAM,MAAM;AAAA,MACrB,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAG;AAAA,IAC3D,CAAS;AAAA,EACJ,EAAC,OAAO,CAACI,OAAM,CAAC,CAACA,EAAC;AACnB,MAAI,wBAAwB,KAAK,WAAW,sBACtC,EAAE,uBAAuB,MAAK,IAC9B;AACN,QAAM,cAAc,CAAE;AAEtB,QAAM,QAAQ,CAAC4J,YAAW;AACtB,QAAI,uBAAuBA,OAAM,GAAG;AAChC,kBAAY,KAAK,GAAGA,QAAO,KAAK;AAChC,UAAIA,QAAO,0BAA0B,QAAW;AAG5C,gCAAwB;AAAA,MACxC;AAAA,IACA,OACa;AACD,UAAI,eAAeA;AACnB,UAAI,0BAA0BA,WAC1BA,QAAO,yBAAyB,OAAO;AACvC,cAAM,EAAE,sBAAsB,GAAG,KAAI,IAAKA;AAC1C,uBAAe;AAAA,MAC/B,OACiB;AAED,gCAAwB;AAAA,MACxC;AACY,kBAAY,KAAK,YAAY;AAAA,IACzC;AAAA,EACA,CAAK;AACD,SAAO,YAAY,SACb;AAAA,IACE,OAAO;AAAA,IACP,GAAG;AAAA,EACf,IACU;AACV;ACnDO,SAAS,gBAAgB,KAAK,MAAM;AACvC,QAAM,aAAa,OAAO,IAAI;AAC9B,MAAI,eAAe,YACf,eAAe,YACf,eAAe,aACf,eAAe,UAAU;AACzB,WAAO;AAAA,MACH,MAAM,MAAM,QAAQ,IAAI,KAAK,IAAI,UAAU;AAAA,IAC9C;AAAA,EACT;AACI,MAAI,KAAK,WAAW,YAAY;AAC5B,WAAO;AAAA,MACH,MAAM,eAAe,WAAW,YAAY;AAAA,MAC5C,MAAM,CAAC,IAAI,KAAK;AAAA,IACnB;AAAA,EACT;AACI,SAAO;AAAA,IACH,MAAM,eAAe,WAAW,YAAY;AAAA,IAC5C,OAAO,IAAI;AAAA,EACd;AACL;ACnBA,IAAI,aAAa;AAOV,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA,EAIvB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYP,OAAO,MAAM;AACT,QAAI,eAAe,QAAW;AAC1B,mBAAa,OAAO,wDAAwD,GAAG;AAAA,IAC3F;AACQ,WAAO;AAAA,EACV;AAAA;AAAA;AAAA;AAAA,EAID,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN,MAAM;AAAA,EACN,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACT;AACO,SAAS,eAAe,KAAK,MAAM;AACtC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,EACT;AACD,MAAI,IAAI,QAAQ;AACZ,eAAW,SAAS,IAAI,QAAQ;AAC5B,cAAQ,MAAM,MAAI;AAAA,QACd,KAAK;AACD,oCAA0B,KAAK,aAAa,OAAO,IAAI,cAAc,WAC/D,KAAK,IAAI,IAAI,WAAW,MAAM,KAAK,IACnC,MAAM,OAAO,MAAM,SAAS,IAAI;AACtC;AAAA,QACJ,KAAK;AACD,oCAA0B,KAAK,aAAa,OAAO,IAAI,cAAc,WAC/D,KAAK,IAAI,IAAI,WAAW,MAAM,KAAK,IACnC,MAAM,OAAO,MAAM,SAAS,IAAI;AACtC;AAAA,QACJ,KAAK;AACD,kBAAQ,KAAK,eAAa;AAAA,YACtB,KAAK;AACD,wBAAU,KAAK,SAAS,MAAM,SAAS,IAAI;AAC3C;AAAA,YACJ,KAAK;AACD,wBAAU,KAAK,aAAa,MAAM,SAAS,IAAI;AAC/C;AAAA,YACJ,KAAK;AACD,yBAAW,KAAK,YAAY,OAAO,MAAM,SAAS,IAAI;AACtD;AAAA,UAC5B;AACoB;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,OAAO,MAAM,SAAS,IAAI;AACzC;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,QAAQ,MAAM,SAAS,IAAI;AAC1C;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,MAAM,OAAO,MAAM,SAAS,IAAI;AAChD;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,YAAY,MAAM,MAAM,SAAS,IAAI;AACrD;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,YAAY,OAAO,MAAM,SAAS,IAAI;AACtD;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,OAAO,IAAI,wBAAwB,MAAM,OAAO,IAAI,CAAC,EAAE,GAAG,MAAM,SAAS,IAAI;AAC7F;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,OAAO,GAAG,wBAAwB,MAAM,OAAO,IAAI,CAAC,GAAG,GAAG,MAAM,SAAS,IAAI;AAC7F;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,aAAa,MAAM,SAAS,IAAI;AAC/C;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,QAAQ,MAAM,SAAS,IAAI;AAC1C;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,QAAQ,MAAM,SAAS,IAAI;AAC1C;AAAA,QACJ,KAAK;AACD,oBAAU,KAAK,YAAY,MAAM,SAAS,IAAI;AAC9C;AAAA,QACJ,KAAK;AACD,oCAA0B,KAAK,aAAa,OAAO,IAAI,cAAc,WAC/D,KAAK,IAAI,IAAI,WAAW,MAAM,KAAK,IACnC,MAAM,OAAO,MAAM,SAAS,IAAI;AACtC,oCAA0B,KAAK,aAAa,OAAO,IAAI,cAAc,WAC/D,KAAK,IAAI,IAAI,WAAW,MAAM,KAAK,IACnC,MAAM,OAAO,MAAM,SAAS,IAAI;AACtC;AAAA,QACJ,KAAK,YAAY;AACb,qBAAW,KAAK,OAAO,wBAAwB,MAAM,OAAO,IAAI,CAAC,GAAG,MAAM,SAAS,IAAI;AACvF;AAAA,QACpB;AAAA,QACgB,KAAK,MAAM;AACP,cAAI,MAAM,YAAY,MAAM;AACxB,sBAAU,KAAK,QAAQ,MAAM,SAAS,IAAI;AAAA,UAClE;AACoB,cAAI,MAAM,YAAY,MAAM;AACxB,sBAAU,KAAK,QAAQ,MAAM,SAAS,IAAI;AAAA,UAClE;AACoB;AAAA,QACpB;AAAA,QACgB,KAAK;AACD,qBAAW,KAAK,YAAY,WAAW,MAAM,SAAS,IAAI;AAC1D;AAAA,QACJ,KAAK;AACD,qBAAW,KAAK,YAAY,KAAK,MAAM,SAAS,IAAI;AACpD;AAAA,QACJ,KAAK,QAAQ;AACT,cAAI,MAAM,YAAY,MAAM;AACxB,uBAAW,KAAK,YAAY,UAAU,MAAM,SAAS,IAAI;AAAA,UACjF;AACoB,cAAI,MAAM,YAAY,MAAM;AACxB,uBAAW,KAAK,YAAY,UAAU,MAAM,SAAS,IAAI;AAAA,UACjF;AACoB;AAAA,QACpB;AAAA,QACgB,KAAK;AACD,qBAAW,KAAK,YAAY,MAAO,GAAE,MAAM,SAAS,IAAI;AACxD;AAAA,QACJ,KAAK,QAAQ;AACT,qBAAW,KAAK,YAAY,MAAM,MAAM,SAAS,IAAI;AACrD;AAAA,QACpB;AAAA,QACgB,KAAK,UAAU;AACX,kBAAQ,KAAK,gBAAc;AAAA,YACvB,KAAK,iBAAiB;AAClB,wBAAU,KAAK,UAAU,MAAM,SAAS,IAAI;AAC5C;AAAA,YAC5B;AAAA,YACwB,KAAK,0BAA0B;AAC3B,wCAA0B,KAAK,mBAAmB,UAAU,MAAM,SAAS,IAAI;AAC/E;AAAA,YAC5B;AAAA,YACwB,KAAK,eAAe;AAChB,yBAAW,KAAK,YAAY,QAAQ,MAAM,SAAS,IAAI;AACvD;AAAA,YAC5B;AAAA,UACA;AACoB;AAAA,QACpB;AAAA,QACgB,KAAK,UAAU;AACX,qBAAW,KAAK,YAAY,QAAQ,MAAM,SAAS,IAAI;AAAA,QAC3E;AAAA,MAQA;AAAA,IACA;AAAA,EACA;AACI,SAAO;AACX;AACA,SAAS,wBAAwB,SAAS,MAAM;AAC5C,SAAO,KAAK,oBAAoB,WAC1B,sBAAsB,OAAO,IAC7B;AACV;AACA,MAAM,gBAAgB,IAAI,IAAI,8DAA8D;AAC5F,SAAS,sBAAsB,QAAQ;AACnC,MAAI,SAAS;AACb,WAAShK,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACpC,QAAI,CAAC,cAAc,IAAI,OAAOA,EAAC,CAAC,GAAG;AAC/B,gBAAU;AAAA,IACtB;AACQ,cAAU,OAAOA,EAAC;AAAA,EAC1B;AACI,SAAO;AACX;AAEA,SAAS,UAAUgK,SAAQ,OAAO,SAAS,MAAM;;AAC7C,MAAIA,QAAO,YAAUvJ,MAAAuJ,QAAO,UAAP,gBAAAvJ,IAAc,KAAK,CAACL,OAAMA,GAAE,UAAS;AACtD,QAAI,CAAC4J,QAAO,OAAO;AACf,MAAAA,QAAO,QAAQ,CAAE;AAAA,IAC7B;AACQ,QAAIA,QAAO,QAAQ;AACf,MAAAA,QAAO,MAAM,KAAK;AAAA,QACd,QAAQA,QAAO;AAAA,QACf,GAAIA,QAAO,gBACP,KAAK,iBAAiB;AAAA,UACtB,cAAc,EAAE,QAAQA,QAAO,aAAa,OAAQ;AAAA,QACxE;AAAA,MACA,CAAa;AACD,aAAOA,QAAO;AACd,UAAIA,QAAO,cAAc;AACrB,eAAOA,QAAO,aAAa;AAC3B,YAAI,OAAO,KAAKA,QAAO,YAAY,EAAE,WAAW,GAAG;AAC/C,iBAAOA,QAAO;AAAA,QAClC;AAAA,MACA;AAAA,IACA;AACQ,IAAAA,QAAO,MAAM,KAAK;AAAA,MACd,QAAQ;AAAA,MACR,GAAI,WACA,KAAK,iBAAiB,EAAE,cAAc,EAAE,QAAQ,QAAO;IACvE,CAAS;AAAA,EACT,OACS;AACD,8BAA0BA,SAAQ,UAAU,OAAO,SAAS,IAAI;AAAA,EACxE;AACA;AAEA,SAAS,WAAWA,SAAQC,QAAO,SAAS,MAAM;;AAC9C,MAAID,QAAO,aAAWvJ,MAAAuJ,QAAO,UAAP,gBAAAvJ,IAAc,KAAK,CAACL,OAAMA,GAAE,WAAU;AACxD,QAAI,CAAC4J,QAAO,OAAO;AACf,MAAAA,QAAO,QAAQ,CAAE;AAAA,IAC7B;AACQ,QAAIA,QAAO,SAAS;AAChB,MAAAA,QAAO,MAAM,KAAK;AAAA,QACd,SAASA,QAAO;AAAA,QAChB,GAAIA,QAAO,gBACP,KAAK,iBAAiB;AAAA,UACtB,cAAc,EAAE,SAASA,QAAO,aAAa,QAAS;AAAA,QAC1E;AAAA,MACA,CAAa;AACD,aAAOA,QAAO;AACd,UAAIA,QAAO,cAAc;AACrB,eAAOA,QAAO,aAAa;AAC3B,YAAI,OAAO,KAAKA,QAAO,YAAY,EAAE,WAAW,GAAG;AAC/C,iBAAOA,QAAO;AAAA,QAClC;AAAA,MACA;AAAA,IACA;AACQ,IAAAA,QAAO,MAAM,KAAK;AAAA,MACd,SAAS,yBAAyBC,QAAO,IAAI;AAAA,MAC7C,GAAI,WACA,KAAK,iBAAiB,EAAE,cAAc,EAAE,SAAS,QAAO;IACxE,CAAS;AAAA,EACT,OACS;AACD,8BAA0BD,SAAQ,WAAW,yBAAyBC,QAAO,IAAI,GAAG,SAAS,IAAI;AAAA,EACzG;AACA;AAEA,SAAS,yBAAyBA,QAAO,MAAM;;AAC3C,MAAI,CAAC,KAAK,mBAAmB,CAACA,OAAM,OAAO;AACvC,WAAOA,OAAM;AAAA,EACrB;AAEI,QAAM,QAAQ;AAAA,IACV,GAAGA,OAAM,MAAM,SAAS,GAAG;AAAA,IAC3B,GAAGA,OAAM,MAAM,SAAS,GAAG;AAAA,IAC3B,GAAGA,OAAM,MAAM,SAAS,GAAG;AAAA;AAAA,EAC9B;AAED,QAAM,SAAS,MAAM,IAAIA,OAAM,OAAO,YAAW,IAAKA,OAAM;AAC5D,MAAI,UAAU;AACd,MAAI,YAAY;AAChB,MAAI,cAAc;AAClB,MAAI,cAAc;AAClB,WAASjK,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACpC,QAAI,WAAW;AACX,iBAAW,OAAOA,EAAC;AACnB,kBAAY;AACZ;AAAA,IACZ;AACQ,QAAI,MAAM,GAAG;AACT,UAAI,aAAa;AACb,YAAI,OAAOA,EAAC,EAAE,MAAM,OAAO,GAAG;AAC1B,cAAI,aAAa;AACb,uBAAW,OAAOA,EAAC;AACnB,uBAAW,GAAG,OAAOA,KAAI,CAAC,CAAC,IAAI,OAAOA,EAAC,CAAC,GAAG,YAAa;AACxD,0BAAc;AAAA,UACtC,WAC6B,OAAOA,KAAI,CAAC,MAAM,SAAOS,MAAA,OAAOT,KAAI,CAAC,MAAZ,gBAAAS,IAAe,MAAM,WAAU;AAC7D,uBAAW,OAAOT,EAAC;AACnB,0BAAc;AAAA,UACtC,OACyB;AACD,uBAAW,GAAG,OAAOA,EAAC,CAAC,GAAG,OAAOA,EAAC,EAAE,YAAW,CAAE;AAAA,UACzE;AACoB;AAAA,QACpB;AAAA,MACA,WACqB,OAAOA,EAAC,EAAE,MAAM,OAAO,GAAG;AAC/B,mBAAW,IAAI,OAAOA,EAAC,CAAC,GAAG,OAAOA,EAAC,EAAE,YAAa,CAAA;AAClD;AAAA,MAChB;AAAA,IACA;AACQ,QAAI,MAAM,GAAG;AACT,UAAI,OAAOA,EAAC,MAAM,KAAK;AACnB,mBAAW;AAAA;AACX;AAAA,MAChB,WACqB,OAAOA,EAAC,MAAM,KAAK;AACxB,mBAAW;AAAA;AACX;AAAA,MAChB;AAAA,IACA;AACQ,QAAI,MAAM,KAAK,OAAOA,EAAC,MAAM,KAAK;AAC9B,iBAAW,cAAc,GAAG,OAAOA,EAAC,CAAC;AAAA,IAAS,IAAI,OAAOA,EAAC,CAAC;AAAA;AAC3D;AAAA,IACZ;AACQ,eAAW,OAAOA,EAAC;AACnB,QAAI,OAAOA,EAAC,MAAM,MAAM;AACpB,kBAAY;AAAA,IACxB,WACiB,eAAe,OAAOA,EAAC,MAAM,KAAK;AACvC,oBAAc;AAAA,IAC1B,WACiB,CAAC,eAAe,OAAOA,EAAC,MAAM,KAAK;AACxC,oBAAc;AAAA,IAC1B;AAAA,EACA;AACI,MAAI;AACA,QAAI,OAAO,OAAO;AAAA,EAC1B,QACU;AACF,YAAQ,KAAK,sCAAsC,KAAK,YAAY,KAAK,GAAG,CAAC,uEAAuE;AACpJ,WAAOiK,OAAM;AAAA,EACrB;AACI,SAAO;AACX;AC5VO,SAAS,eAAe,KAAK,MAAM;;AACtC,MAAI,KAAK,WAAW,UAAU;AAC1B,YAAQ,KAAK,8FAA8F;AAAA,EACnH;AACI,MAAI,KAAK,WAAW,gBAChBxJ,MAAA,IAAI,YAAJ,gBAAAA,IAAa,KAAK,cAAa,sBAAsB,SAAS;AAC9D,WAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU,IAAI,QAAQ,KAAK;AAAA,MAC3B,YAAY,IAAI,QAAQ,KAAK,OAAO,OAAO,CAAC,KAAK,SAAS;AAAA,QACtD,GAAG;AAAA,QACH,CAAC,GAAG,GAAG,SAAS,IAAI,UAAU,MAAM;AAAA,UAChC,GAAG;AAAA,UACH,aAAa,CAAC,GAAG,KAAK,aAAa,cAAc,GAAG;AAAA,QACvD,CAAA,KAAK,CAAE;AAAA,MACX,IAAG,CAAA,CAAE;AAAA,MACN,sBAAsB;AAAA,IACzB;AAAA,EACT;AACI,QAAMuJ,UAAS;AAAA,IACX,MAAM;AAAA,IACN,sBAAsB,SAAS,IAAI,UAAU,MAAM;AAAA,MAC/C,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,sBAAsB;AAAA,IAC5D,CAAA,KAAK,CAAE;AAAA,EACX;AACD,MAAI,KAAK,WAAW,YAAY;AAC5B,WAAOA;AAAA,EACf;AACI,QAAIpJ,MAAA,IAAI,YAAJ,gBAAAA,IAAa,KAAK,cAAa,sBAAsB,eACrDE,MAAA,IAAI,QAAQ,KAAK,WAAjB,gBAAAA,IAAyB,SAAQ;AACjC,UAAM,EAAE,MAAM,GAAG,QAAS,IAAG,eAAe,IAAI,QAAQ,MAAM,IAAI;AAClE,WAAO;AAAA,MACH,GAAGkJ;AAAA,MACH,eAAe;AAAA,IAClB;AAAA,EACT,aACanJ,MAAA,IAAI,YAAJ,gBAAAA,IAAa,KAAK,cAAa,sBAAsB,SAAS;AACnE,WAAO;AAAA,MACH,GAAGmJ;AAAA,MACH,eAAe;AAAA,QACX,MAAM,IAAI,QAAQ,KAAK;AAAA,MAC1B;AAAA,IACJ;AAAA,EACT,aACahJ,MAAA,IAAI,YAAJ,gBAAAA,IAAa,KAAK,cAAa,sBAAsB,cAC1D,IAAI,QAAQ,KAAK,KAAK,KAAK,aAAa,sBAAsB,eAC9DD,MAAA,IAAI,QAAQ,KAAK,KAAK,KAAK,WAA3B,gBAAAA,IAAmC,SAAQ;AAC3C,UAAM,EAAE,MAAM,GAAG,QAAS,IAAG,gBAAgB,IAAI,QAAQ,MAAM,IAAI;AACnE,WAAO;AAAA,MACH,GAAGiJ;AAAA,MACH,eAAe;AAAA,IAClB;AAAA,EACT;AACI,SAAOA;AACX;ACzDO,SAAS,YAAY,KAAK,MAAM;AACnC,MAAI,KAAK,gBAAgB,UAAU;AAC/B,WAAO,eAAe,KAAK,IAAI;AAAA,EACvC;AACI,QAAM,OAAO,SAAS,IAAI,QAAQ,MAAM;AAAA,IACpC,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG;AAAA,EAC3D,CAAA,KAAK,CAAE;AACR,QAAM,SAAS,SAAS,IAAI,UAAU,MAAM;AAAA,IACxC,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,SAAS,GAAG;AAAA,EAC3D,CAAA,KAAK,CAAE;AACR,SAAO;AAAA,IACH,MAAM;AAAA,IACN,UAAU;AAAA,IACV,OAAO;AAAA,MACH,MAAM;AAAA,MACN,OAAO,CAAC,MAAM,MAAM;AAAA,MACpB,UAAU;AAAA,MACV,UAAU;AAAA,IACb;AAAA,EACJ;AACL;ACxBO,SAAS,mBAAmB,KAAK;AACpC,QAAM,SAAS,IAAI;AACnB,QAAM,aAAa,OAAO,KAAK,IAAI,MAAM,EAAE,OAAO,CAAC,QAAQ;AACvD,WAAO,OAAO,OAAO,OAAO,GAAG,CAAC,MAAM;AAAA,EAC9C,CAAK;AACD,QAAM,eAAe,WAAW,IAAI,CAAC,QAAQ,OAAO,GAAG,CAAC;AACxD,QAAM,cAAc,MAAM,KAAK,IAAI,IAAI,aAAa,IAAI,CAAC,WAAW,OAAO,MAAM,CAAC,CAAC;AACnF,SAAO;AAAA,IACH,MAAM,YAAY,WAAW,IACvB,YAAY,CAAC,MAAM,WACf,WACA,WACJ,CAAC,UAAU,QAAQ;AAAA,IACzB,MAAM;AAAA,EACT;AACL;ACfO,SAAS,gBAAgB;AAC5B,SAAO;AAAA,IACH,KAAK,CAAE;AAAA,EACV;AACL;ACJO,SAAS,aAAa,MAAM;AAC/B,SAAO,KAAK,WAAW,aACjB;AAAA,IACE,MAAM,CAAC,MAAM;AAAA,IACb,UAAU;AAAA,EACtB,IACU;AAAA,IACE,MAAM;AAAA,EACT;AACT;ACRO,MAAM,oBAAoB;AAAA,EAC7B,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,SAAS;AACb;AACO,SAAS,cAAc,KAAK,MAAM;AACrC,MAAI,KAAK,WAAW;AAChB,WAAO,QAAQ,KAAK,IAAI;AAC5B,QAAM,UAAU,IAAI,mBAAmB,MAAM,MAAM,KAAK,IAAI,QAAQ,QAAQ,IAAI,IAAI;AAEpF,MAAI,QAAQ,MAAM,CAAC5J,OAAMA,GAAE,KAAK,YAAY,sBACvC,CAACA,GAAE,KAAK,UAAU,CAACA,GAAE,KAAK,OAAO,OAAO,GAAG;AAE5C,UAAM,QAAQ,QAAQ,OAAO,CAAC8J,QAAO9J,OAAM;AACvC,YAAM,OAAO,kBAAkBA,GAAE,KAAK,QAAQ;AAC9C,aAAO,QAAQ,CAAC8J,OAAM,SAAS,IAAI,IAAI,CAAC,GAAGA,QAAO,IAAI,IAAIA;AAAA,IAC7D,GAAE,EAAE;AACL,WAAO;AAAA,MACH,MAAM,MAAM,SAAS,IAAI,QAAQ,MAAM,CAAC;AAAA,IAC3C;AAAA,EACT,WACa,QAAQ,MAAM,CAAC9J,OAAMA,GAAE,KAAK,aAAa,gBAAgB,CAACA,GAAE,WAAW,GAAG;AAE/E,UAAM,QAAQ,QAAQ,OAAO,CAAC,KAAKA,OAAM;AACrC,YAAM,OAAO,OAAOA,GAAE,KAAK;AAC3B,cAAQ,MAAI;AAAA,QACR,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,iBAAO,CAAC,GAAG,KAAK,IAAI;AAAA,QACxB,KAAK;AACD,iBAAO,CAAC,GAAG,KAAK,SAAS;AAAA,QAC7B,KAAK;AACD,cAAIA,GAAE,KAAK,UAAU;AACjB,mBAAO,CAAC,GAAG,KAAK,MAAM;AAAA,QAC9B,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AACI,iBAAO;AAAA,MAC3B;AAAA,IACS,GAAE,EAAE;AACL,QAAI,MAAM,WAAW,QAAQ,QAAQ;AAEjC,YAAM,cAAc,MAAM,OAAO,CAACA,IAAGJ,IAAGqD,OAAMA,GAAE,QAAQjD,EAAC,MAAMJ,EAAC;AAChE,aAAO;AAAA,QACH,MAAM,YAAY,SAAS,IAAI,cAAc,YAAY,CAAC;AAAA,QAC1D,MAAM,QAAQ,OAAO,CAAC,KAAKI,OAAM;AAC7B,iBAAO,IAAI,SAASA,GAAE,KAAK,KAAK,IAAI,MAAM,CAAC,GAAG,KAAKA,GAAE,KAAK,KAAK;AAAA,QAClE,GAAE,EAAE;AAAA,MACR;AAAA,IACb;AAAA,EACA,WACa,QAAQ,MAAM,CAACA,OAAMA,GAAE,KAAK,aAAa,SAAS,GAAG;AAC1D,WAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM,QAAQ,OAAO,CAAC,KAAKA,OAAM;AAAA,QAC7B,GAAG;AAAA,QACH,GAAGA,GAAE,KAAK,OAAO,OAAO,CAACA,OAAM,CAAC,IAAI,SAASA,EAAC,CAAC;AAAA,MAClD,GAAE,EAAE;AAAA,IACR;AAAA,EACT;AACI,SAAO,QAAQ,KAAK,IAAI;AAC5B;AACA,MAAM,UAAU,CAAC,KAAK,SAAS;AAC3B,QAAM,SAAS,IAAI,mBAAmB,MAChC,MAAM,KAAK,IAAI,QAAQ,OAAQ,CAAA,IAC/B,IAAI,SACL,IAAI,CAACA,IAAGJ,OAAM,SAASI,GAAE,MAAM;AAAA,IAChC,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAGJ,EAAC,EAAE;AAAA,EAC1D,CAAK,CAAC,EACG,OAAO,CAACI,OAAM,CAAC,CAACA,OAChB,CAAC,KAAK,gBACF,OAAOA,OAAM,YAAY,OAAO,KAAKA,EAAC,EAAE,SAAS,EAAG;AAC7D,SAAO,MAAM,SAAS,EAAE,MAAO,IAAG;AACtC;AC7EO,SAAS,iBAAiB,KAAK,MAAM;AACxC,MAAI,CAAC,aAAa,aAAa,aAAa,cAAc,SAAS,EAAE,SAAS,IAAI,UAAU,KAAK,QAAQ,MACpG,CAAC,IAAI,UAAU,KAAK,UAAU,CAAC,IAAI,UAAU,KAAK,OAAO,SAAS;AACnE,QAAI,KAAK,WAAW,YAAY;AAC5B,aAAO;AAAA,QACH,MAAM,kBAAkB,IAAI,UAAU,KAAK,QAAQ;AAAA,QACnD,UAAU;AAAA,MACb;AAAA,IACb;AACQ,WAAO;AAAA,MACH,MAAM;AAAA,QACF,kBAAkB,IAAI,UAAU,KAAK,QAAQ;AAAA,QAC7C;AAAA,MACH;AAAA,IACJ;AAAA,EACT;AACI,MAAI,KAAK,WAAW,YAAY;AAC5B,UAAM+J,QAAO,SAAS,IAAI,UAAU,MAAM;AAAA,MACtC,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,WAAW;AAAA,IAC7C,CAAS;AACD,QAAIA,SAAQ,UAAUA;AAClB,aAAO,EAAE,OAAO,CAACA,KAAI,GAAG,UAAU,KAAM;AAC5C,WAAOA,SAAQ,EAAE,GAAGA,OAAM,UAAU,KAAM;AAAA,EAClD;AACI,QAAM,OAAO,SAAS,IAAI,UAAU,MAAM;AAAA,IACtC,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAG;AAAA,EACvD,CAAK;AACD,SAAO,QAAQ,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,OAAM,CAAE,EAAG;AACtD;AC/BO,SAAS,eAAe,KAAK,MAAM;AACtC,QAAM,MAAM;AAAA,IACR,MAAM;AAAA,EACT;AACD,MAAI,CAAC,IAAI;AACL,WAAO;AACX,aAAW,SAAS,IAAI,QAAQ;AAC5B,YAAQ,MAAM,MAAI;AAAA,MACd,KAAK;AACD,YAAI,OAAO;AACX,wBAAgB,KAAK,QAAQ,MAAM,SAAS,IAAI;AAChD;AAAA,MACJ,KAAK;AACD,YAAI,KAAK,WAAW,eAAe;AAC/B,cAAI,MAAM,WAAW;AACjB,sCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAClG,OACyB;AACD,sCAA0B,KAAK,oBAAoB,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAC3G;AAAA,QACA,OACqB;AACD,cAAI,CAAC,MAAM,WAAW;AAClB,gBAAI,mBAAmB;AAAA,UAC/C;AACoB,oCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AACD,YAAI,KAAK,WAAW,eAAe;AAC/B,cAAI,MAAM,WAAW;AACjB,sCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAClG,OACyB;AACD,sCAA0B,KAAK,oBAAoB,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,UAC3G;AAAA,QACA,OACqB;AACD,cAAI,CAAC,MAAM,WAAW;AAClB,gBAAI,mBAAmB;AAAA,UAC/C;AACoB,oCAA0B,KAAK,WAAW,MAAM,OAAO,MAAM,SAAS,IAAI;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AACD,kCAA0B,KAAK,cAAc,MAAM,OAAO,MAAM,SAAS,IAAI;AAC7E;AAAA,IAChB;AAAA,EACA;AACI,SAAO;AACX;ACjDA,SAAS,2BAA2B,KAAK,MAAM;AAC3C,MAAI,KAAK,6BAA6B,UAAU;AAC5C,WAAO,IAAI,SAAS,KAAK,aAAa,aAChC,IAAI,gBAAgB,WACpB,SAAS,IAAI,SAAS,MAAM;AAAA,MAC1B,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,sBAAsB;AAAA,IAC5D,CAAA,KAAK;AAAA,EAClB,OACS;AACD,WAAO,IAAI,SAAS,KAAK,aAAa,aAChC,IAAI,gBAAgB,gBACpB,SAAS,IAAI,SAAS,MAAM;AAAA,MAC1B,GAAG;AAAA,MACH,aAAa,CAAC,GAAG,KAAK,aAAa,sBAAsB;AAAA,IAC5D,CAAA,KAAK;AAAA,EAClB;AACA;AACO,SAAS,eAAe,KAAK,MAAM;AACtC,QAAM,4BAA4B,KAAK,WAAW;AAClD,QAAM,SAAS;AAAA,IACX,MAAM;AAAA,IACN,GAAG,OAAO,QAAQ,IAAI,MAAO,CAAA,EAAE,OAAO,CAAC,KAAK,CAAC,UAAU,OAAO,MAAM;AAChE,UAAI,YAAY,UAAa,QAAQ,SAAS;AAC1C,eAAO;AACX,UAAI,eAAe,QAAQ,WAAY;AACvC,UAAI,gBAAgB,2BAA2B;AAC3C,YAAI,mBAAmB,aAAa;AAChC,oBAAU,QAAQ,KAAK;AAAA,QAC3C;AACgB,YAAI,CAAC,QAAQ,cAAc;AACvB,oBAAU,QAAQ,SAAU;AAAA,QAChD;AACgB,uBAAe;AAAA,MAC/B;AACY,YAAM,YAAY,SAAS,QAAQ,MAAM;AAAA,QACrC,GAAG;AAAA,QACH,aAAa,CAAC,GAAG,KAAK,aAAa,cAAc,QAAQ;AAAA,QACzD,cAAc,CAAC,GAAG,KAAK,aAAa,cAAc,QAAQ;AAAA,MAC1E,CAAa;AACD,UAAI,cAAc;AACd,eAAO;AACX,aAAO;AAAA,QACH,YAAY,EAAE,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,UAAW;AAAA,QACxD,UAAU,eAAe,IAAI,WAAW,CAAC,GAAG,IAAI,UAAU,QAAQ;AAAA,MACrE;AAAA,IACJ,GAAE,EAAE,YAAY,CAAA,GAAI,UAAU,CAAE,EAAA,CAAE;AAAA,IACnC,sBAAsB,2BAA2B,KAAK,IAAI;AAAA,EAC7D;AACD,MAAI,CAAC,OAAO,SAAS;AACjB,WAAO,OAAO;AAClB,SAAO;AACX;ACrDO,MAAM,mBAAmB,CAAC,KAAK,SAAS;;AAC3C,MAAI,KAAK,YAAY,SAAQ,QAAO1J,MAAA,KAAK,iBAAL,gBAAAA,IAAmB,aAAY;AAC/D,WAAO,SAAS,IAAI,UAAU,MAAM,IAAI;AAAA,EAChD;AACI,QAAM,cAAc,SAAS,IAAI,UAAU,MAAM;AAAA,IAC7C,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAG;AAAA,EACvD,CAAK;AACD,SAAO,cACD;AAAA,IACE,OAAO;AAAA,MACH;AAAA,QACI,KAAK,CAAE;AAAA,MACV;AAAA,MACD;AAAA,IACH;AAAA,EACb,IACU,CAAE;AACZ;AClBO,MAAM,mBAAmB,CAAC,KAAK,SAAS;AAC3C,MAAI,KAAK,iBAAiB,SAAS;AAC/B,WAAO,SAAS,IAAI,GAAG,MAAM,IAAI;AAAA,EACzC,WACa,KAAK,iBAAiB,UAAU;AACrC,WAAO,SAAS,IAAI,IAAI,MAAM,IAAI;AAAA,EAC1C;AACI,QAAM4C,KAAI,SAAS,IAAI,GAAG,MAAM;AAAA,IAC5B,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAG;AAAA,EACvD,CAAK;AACD,QAAMC,KAAI,SAAS,IAAI,IAAI,MAAM;AAAA,IAC7B,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAASD,KAAI,MAAM,GAAG;AAAA,EACjE,CAAK;AACD,SAAO;AAAA,IACH,OAAO,CAACA,IAAGC,EAAC,EAAE,OAAO,CAAClD,OAAMA,OAAM,MAAS;AAAA,EAC9C;AACL;AClBO,SAAS,gBAAgB,KAAK,MAAM;AACvC,SAAO,SAAS,IAAI,KAAK,MAAM,IAAI;AACvC;ACDO,SAAS,YAAY,KAAK,MAAM;AACnC,QAAM,QAAQ,SAAS,IAAI,UAAU,MAAM;AAAA,IACvC,GAAG;AAAA,IACH,aAAa,CAAC,GAAG,KAAK,aAAa,OAAO;AAAA,EAClD,CAAK;AACD,QAAM4J,UAAS;AAAA,IACX,MAAM;AAAA,IACN,aAAa;AAAA,IACb;AAAA,EACH;AACD,MAAI,IAAI,SAAS;AACb,8BAA0BA,SAAQ,YAAY,IAAI,QAAQ,OAAO,IAAI,QAAQ,SAAS,IAAI;AAAA,EAClG;AACI,MAAI,IAAI,SAAS;AACb,8BAA0BA,SAAQ,YAAY,IAAI,QAAQ,OAAO,IAAI,QAAQ,SAAS,IAAI;AAAA,EAClG;AACI,SAAOA;AACX;AClBO,SAAS,cAAc,KAAK,MAAM;AACrC,MAAI,IAAI,MAAM;AACV,WAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU,IAAI,MAAM;AAAA,MACpB,OAAO,IAAI,MACN,IAAI,CAAC5J,IAAGJ,OAAM,SAASI,GAAE,MAAM;AAAA,QAChC,GAAG;AAAA,QACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAGJ,EAAC,EAAE;AAAA,MAClE,CAAa,CAAC,EACG,OAAO,CAAC,KAAKI,OAAOA,OAAM,SAAY,MAAM,CAAC,GAAG,KAAKA,EAAC,GAAI,CAAA,CAAE;AAAA,MACjE,iBAAiB,SAAS,IAAI,KAAK,MAAM;AAAA,QACrC,GAAG;AAAA,QACH,aAAa,CAAC,GAAG,KAAK,aAAa,iBAAiB;AAAA,MACpE,CAAa;AAAA,IACJ;AAAA,EACT,OACS;AACD,WAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU,IAAI,MAAM;AAAA,MACpB,UAAU,IAAI,MAAM;AAAA,MACpB,OAAO,IAAI,MACN,IAAI,CAACA,IAAGJ,OAAM,SAASI,GAAE,MAAM;AAAA,QAChC,GAAG;AAAA,QACH,aAAa,CAAC,GAAG,KAAK,aAAa,SAAS,GAAGJ,EAAC,EAAE;AAAA,MAClE,CAAa,CAAC,EACG,OAAO,CAAC,KAAKI,OAAOA,OAAM,SAAY,MAAM,CAAC,GAAG,KAAKA,EAAC,GAAI,CAAA,CAAE;AAAA,IACpE;AAAA,EACT;AACA;AC/BO,SAAS,oBAAoB;AAChC,SAAO;AAAA,IACH,KAAK,CAAE;AAAA,EACV;AACL;ACJO,SAAS,kBAAkB;AAC9B,SAAO,CAAE;AACb;ACDO,MAAM,mBAAmB,CAAC,KAAK,SAAS;AAC3C,SAAO,SAAS,IAAI,UAAU,MAAM,IAAI;AAC5C;AC6BO,SAAS,SAAS,KAAK,MAAM,kBAAkB,OAAO;;AACzD,QAAM,WAAW,KAAK,KAAK,IAAI,GAAG;AAClC,MAAI,KAAK,UAAU;AACf,UAAM,kBAAiBK,MAAA,KAAK,aAAL,gBAAAA,IAAA,WAAgB,KAAK,MAAM,UAAU;AAC5D,QAAI,mBAAmB,gBAAgB;AACnC,aAAO;AAAA,IACnB;AAAA,EACA;AACI,MAAI,YAAY,CAAC,iBAAiB;AAC9B,UAAM,aAAa,QAAQ,UAAU,IAAI;AACzC,QAAI,eAAe,QAAW;AAC1B,aAAO;AAAA,IACnB;AAAA,EACA;AACI,QAAM,UAAU,EAAE,KAAK,MAAM,KAAK,aAAa,YAAY,OAAW;AACtE,OAAK,KAAK,IAAI,KAAK,OAAO;AAC1B,QAAM,aAAa,aAAa,KAAK,IAAI,UAAU,IAAI;AACvD,MAAI,YAAY;AACZ,YAAQ,KAAK,MAAM,UAAU;AAAA,EACrC;AACI,UAAQ,aAAa;AACrB,SAAO;AACX;AACA,MAAM,UAAU,CAAC,MAAM,SAAS;AAC5B,UAAQ,KAAK,cAAY;AAAA,IACrB,KAAK;AACD,aAAO,EAAE,MAAM,KAAK,KAAK,KAAK,GAAG,EAAG;AAAA,IACxC,KAAK;AACD,aAAO,EAAE,MAAM,gBAAgB,KAAK,aAAa,KAAK,IAAI,EAAG;AAAA,IACjE,KAAK;AAAA,IACL,KAAK,QAAQ;AACT,UAAI,KAAK,KAAK,SAAS,KAAK,YAAY,UACpC,KAAK,KAAK,MAAM,CAAC,OAAO,UAAU,KAAK,YAAY,KAAK,MAAM,KAAK,GAAG;AACtE,gBAAQ,KAAK,mCAAmC,KAAK,YAAY,KAAK,GAAG,CAAC,qBAAqB;AAC/F,eAAO,CAAE;AAAA,MACzB;AACY,aAAO,KAAK,iBAAiB,SAAS,CAAE,IAAG;AAAA,IACvD;AAAA,EACA;AACA;AACA,MAAM,kBAAkB,CAAC,OAAO,UAAU;AACtC,MAAIT,KAAI;AACR,SAAOA,KAAI,MAAM,UAAUA,KAAI,MAAM,QAAQA,MAAK;AAC9C,QAAI,MAAMA,EAAC,MAAM,MAAMA,EAAC;AACpB;AAAA,EACZ;AACI,SAAO,EAAE,MAAM,SAASA,IAAG,SAAU,GAAE,GAAG,MAAM,MAAMA,EAAC,CAAC,EAAE,KAAK,GAAG;AACtE;AACA,MAAM,eAAe,CAAC,KAAK,UAAU,SAAS;AAC1C,UAAQ,UAAQ;AAAA,IACZ,KAAK,sBAAsB;AACvB,aAAO,eAAe,KAAK,IAAI;AAAA,IACnC,KAAK,sBAAsB;AACvB,aAAO,eAAe,KAAK,IAAI;AAAA,IACnC,KAAK,sBAAsB;AACvB,aAAO,eAAe,KAAK,IAAI;AAAA,IACnC,KAAK,sBAAsB;AACvB,aAAO,eAAe,KAAK,IAAI;AAAA,IACnC,KAAK,sBAAsB;AACvB,aAAO,gBAAiB;AAAA,IAC5B,KAAK,sBAAsB;AACvB,aAAO,aAAa,KAAK,IAAI;AAAA,IACjC,KAAK,sBAAsB;AACvB,aAAO,kBAAmB;AAAA,IAC9B,KAAK,sBAAsB;AACvB,aAAO,aAAa,IAAI;AAAA,IAC5B,KAAK,sBAAsB;AACvB,aAAO,cAAc,KAAK,IAAI;AAAA,IAClC,KAAK,sBAAsB;AAAA,IAC3B,KAAK,sBAAsB;AACvB,aAAO,cAAc,KAAK,IAAI;AAAA,IAClC,KAAK,sBAAsB;AACvB,aAAO,qBAAqB,KAAK,IAAI;AAAA,IACzC,KAAK,sBAAsB;AACvB,aAAO,cAAc,KAAK,IAAI;AAAA,IAClC,KAAK,sBAAsB;AACvB,aAAO,eAAe,KAAK,IAAI;AAAA,IACnC,KAAK,sBAAsB;AACvB,aAAO,gBAAgB,KAAK,IAAI;AAAA,IACpC,KAAK,sBAAsB;AACvB,aAAO,aAAa,GAAG;AAAA,IAC3B,KAAK,sBAAsB;AACvB,aAAO,mBAAmB,GAAG;AAAA,IACjC,KAAK,sBAAsB;AACvB,aAAO,iBAAiB,KAAK,IAAI;AAAA,IACrC,KAAK,sBAAsB;AACvB,aAAO,iBAAiB,KAAK,IAAI;AAAA,IACrC,KAAK,sBAAsB;AACvB,aAAO,YAAY,KAAK,IAAI;AAAA,IAChC,KAAK,sBAAsB;AACvB,aAAO,YAAY,KAAK,IAAI;AAAA,IAChC,KAAK,sBAAsB;AACvB,aAAO,SAAS,IAAI,OAAM,EAAG,MAAM,IAAI;AAAA,IAC3C,KAAK,sBAAsB;AACvB,aAAO,gBAAgB,KAAK,IAAI;AAAA,IACpC,KAAK,sBAAsB;AAAA,IAC3B,KAAK,sBAAsB;AACvB,aAAO,cAAe;AAAA,IAC1B,KAAK,sBAAsB;AACvB,aAAO,gBAAgB,KAAK,IAAI;AAAA,IACpC,KAAK,sBAAsB;AACvB,aAAO,YAAa;AAAA,IACxB,KAAK,sBAAsB;AACvB,aAAO,gBAAiB;AAAA,IAC5B,KAAK,sBAAsB;AACvB,aAAO,gBAAgB,KAAK,IAAI;AAAA,IACpC,KAAK,sBAAsB;AACvB,aAAO,gBAAgB,KAAK,IAAI;AAAA,IACpC,KAAK,sBAAsB;AACvB,aAAO,iBAAiB,KAAK,IAAI;AAAA,IACrC,KAAK,sBAAsB;AACvB,aAAO,cAAc,KAAK,IAAI;AAAA,IAClC,KAAK,sBAAsB;AACvB,aAAO,iBAAiB,KAAK,IAAI;AAAA,IACrC,KAAK,sBAAsB;AAAA,IAC3B,KAAK,sBAAsB;AAAA,IAC3B,KAAK,sBAAsB;AACvB,aAAO;AAAA,IACX;AAEI,aAAQ,kBAACE,OAAM,QAAmB;AAAA,EAC9C;AACA;AACA,MAAM,UAAU,CAAC,KAAK,MAAM,eAAe;AACvC,MAAI,IAAI,aAAa;AACjB,eAAW,cAAc,IAAI;AAC7B,QAAI,KAAK,qBAAqB;AAC1B,iBAAW,sBAAsB,IAAI;AAAA,IACjD;AAAA,EACA;AACI,SAAO;AACX;ACjKA,MAAM,kBAAkB,CAAC8J,SAAQ,YAAY;AACzC,QAAM,OAAO,QAAQ,OAAO;AAC5B,QAAM,cAQA;AACN,QAAM,OAII,mCAAS;AACnB,QAAM,OAAO;AAAA,IAASA,QAAO;AAAA,IACvB;AAAA,IAIC;AAAA,EAAK,KAAK,CAAE;AASnB,QAAM,WAAW,SAAS,SACpB,cACI;AAAA,IACE,GAAG;AAAA,IACH,CAAC,KAAK,cAAc,GAAG;AAAA,EACvC,IACc,OACJ;AAAA,IACE,MAAM;AAAA,MACF,GAAI,KAAK,iBAAiB,aAAa,CAAA,IAAK,KAAK;AAAA,MACjD,KAAK;AAAA,MACL;AAAA,IAChB,EAAc,KAAK,GAAG;AAAA,IACV,CAAC,KAAK,cAAc,GAAG;AAAA,MACnB,GAAG;AAAA,MACH,CAAC,IAAI,GAAG;AAAA,IACX;AAAA,EACJ;AACL,MAAI,KAAK,WAAW,eAAe;AAC/B,aAAS,UAAU;AAAA,EAC3B,WACa,KAAK,WAAW,uBAAuB,KAAK,WAAW,UAAU;AACtE,aAAS,UAAU;AAAA,EAC3B;AACI,MAAI,KAAK,WAAW,aACf,WAAW,YACR,WAAW,YACX,WAAW,YACV,UAAU,YAAY,MAAM,QAAQ,SAAS,IAAI,IAAK;AAC3D,YAAQ,KAAK,sGAAsG;AAAA,EAC3H;AACI,SAAO;AACX;AChEA,SAAS,iBAAiB,WAAW;AAEjC,SAAO,UAAU,QAAQ,mBAAmB,GAAG;AACnD;AACA,MAAM,yBAAyB,CAAC,KAAK,KAAK,GAAG;AAC7C,SAAS,4BAA4B,YAAY;AAC7C,MAAIX,UAAS;AACb,aAAW,CAAC,WAAWe,MAAK,KAAK,OAAO,QAAQ,UAAU,GAAG;AACzD,IAAAf,WAAU,aAAc,SAAS,IAAIe,MAAK;AAAA;AAAA,EAClD;AACI,SAAOf;AACX;AAIO,SAAS,YAAY,OAAO,OAAO/B,SAAQ;AAC9C,QAAM,EAAE,WAAW,UAAU,YAAY,aAAa,MAAM,aAAa,UAAU,kBAAkB,EAAI,IAAGA,WAAU,CAAE;AAExH,MAAI,eAAe,aACb,qCAAqC,UAAU;AAAA;AAAA,IAC/C;AACN,MAAI,YAAY;AAEZ,UAAM,oBAAoB;AAC1B,UAAM,aAAa;AAAA,MACf,CAAC,iBAAiB,GAAG;AAAA,IACxB;AACD,QAAI,cAAc,QAAW;AACzB,iBAAW,SAAS,IAAI;AAAA,IACpC;AACQ,QAAI,aAAa,QAAW;AACxB,iBAAW,QAAQ,IAAI;AAAA,IACnC;AAEQ,eAAW,CAAC,KAAK,IAAI,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC7C,YAAM,WAAW,KAAK,KAAK,MAAM,GAAG,EAAE,IAAG,KAAM;AAC/C,YAAM,QAAQ,uBAAuB,KAAK,CAAC,SAAS,SAAS,WAAW,IAAI,KAAK,SAAS,SAAS,IAAI,CAAC,IAClG,MAAM,QAAQ,SACd;AACN,UAAI,aAAa;AACjB,UAAI,OAAO,KAAK,KAAK,YAAY,CAAA,CAAE,EAAE,QAAQ;AACzC,sBAAc,mBAAmB,OAAO,QAAQ,KAAK,YAAY,CAAE,CAAA,EAC9D,IAAI,CAAC,CAACH,IAAGjD,EAAC,MAAM,GAAGiD,EAAC,MAAMjD,EAAC,EAAE,EAC7B,KAAK,IAAI,CAAC;AAAA,MAC/B;AACY,YAAM,aAAa,WAAW,GAAG,KAAK,WAAW,iBAAiB,GAC7D,QAAQ,OAAO,iBAAiB,GAAG,CAAC,EACpC,QAAQ,OAAO,UAAU;AAC9B,sBAAgB,IAAK,SAAS;AAAA;AAAA,IAC1C;AAAA,EACA;AAEI,QAAM,aAAa,CAAE;AACrB,aAAW,QAAQ,OAAO;AACtB,UAAM,WAAW,KAAK,OAAO,MAAM,GAAG;AACtC,UAAM,WAAW,KAAK,OAAO,MAAM,GAAG;AACtC,UAAM,eAAe,SAChB,OAAO,CAAC,KAAKlE,OAAM,QAAQ,SAASA,EAAC,CAAC,EACtC,KAAK,GAAG;AACb,QAAI,CAAC,WAAW,YAAY,GAAG;AAC3B,iBAAW,YAAY,IAAI,CAAE;AAAA,IACzC;AACQ,eAAW,YAAY,EAAE,KAAK,IAAI;AAAA,EAC1C;AACI,QAAM,gBAAgB,oBAAI,IAAK;AAC/B,WAAS,YAAYqK,QAAO,QAAQ;AAChC,UAAM,WAAWA,OAAM,WAAW,KAAKA,OAAM,CAAC,EAAE,WAAWA,OAAM,CAAC,EAAE;AACpE,QAAI,UAAU,CAAC,UAAU;AACrB,YAAM,WAAW,OAAO,MAAM,GAAG,EAAE,IAAK;AACxC,UAAI,cAAc,IAAI,QAAQ,GAAG;AAC7B,cAAM,IAAI,MAAM,6BAA6B,QAAQ,mJAEmB;AAAA,MACxF;AACY,oBAAc,IAAI,QAAQ;AAC1B,sBAAgB,aAAc,QAAQ;AAAA;AAAA,IAClD;AACQ,eAAW,QAAQA,QAAO;AACtB,YAAM,EAAE,QAAQ,QAAQ,MAAM,YAAa,IAAG;AAC9C,UAAI,YAAY;AAChB,UAAI,SAAS,QAAW;AACpB,YAAI,WAAW;AACf,cAAM,QAAQ,SAAS,MAAM,GAAG;AAChC,YAAI,MAAM,SAAS,iBAAiB;AAChC,qBAAW,MAAM,KAAK,EAAE,QAAQ,KAAK,KAAK,MAAM,SAAS,eAAe,EAAG,GAAE,CAACnK,IAAGF,OAAM,MAClF,MAAMA,KAAI,kBAAkBA,KAAI,KAAK,eAAe,EACpD,KAAK,GAAG,CAAC,EAAE,KAAK,kBAAkB;AAAA,QAC3D;AACgB,oBAAY,cACN,aAAa,QAAQ,gBACrB,aAAa,QAAQ;AAAA,MAC3C,OACiB;AACD,oBAAY,cAAc,WAAW;AAAA,MACrD;AACY,sBAAgB,IAAK,iBAAiB,MAAM,CAAC,GAAG,SAAS,GAAG,iBAAiB,MAAM,CAAC;AAAA;AAAA,IAChG;AAEQ,eAAW,gBAAgB,YAAY;AACnC,UAAI,aAAa,WAAW,GAAG,MAAM,GAAG,KAAK,iBAAiB,QAAQ;AAClE,oBAAY,WAAW,YAAY,GAAG,YAAY;AAAA,MAClE;AAAA,IACA;AACQ,QAAI,UAAU,CAAC,UAAU;AACrB,sBAAgB;AAAA,IAC5B;AAAA,EACA;AAEI,cAAY,WAAW,EAAE,KAAK,CAAA,GAAI,EAAE;AAEpC,aAAW,UAAU,YAAY;AAC7B,QAAI,CAAC,OAAO,SAAS,GAAG,KAAK,WAAW,IAAI;AACxC,kBAAY,WAAW,MAAM,GAAG,MAAM;AAAA,IAClD;AAAA,EACA;AAEI,MAAI,YAAY;AACZ,oBAAgB,4BAA4B,cAAc,EAAE;AAAA,EACpE;AACI,SAAO;AACX;AAIO,eAAe,eAAe,eAAesH,SAAQ;AACxD,MAAI,EAAE,kBAAkB,QAAS,IAAGA,WAAU,CAAE;AAEhD,QAAM,uBAAuB,KAAK,aAAa;AAE/C,MAAI,oBAAoB,QAAW;AAC/B,UAAM,kBAAkB;AACxB,QAAI,CAAC,gBAAgB,KAAK,eAAe,GAAG;AACxC,wBAAkB,IAAI,eAAe;AAAA,IACjD;AAAA,EACA;AACI,QAAM,WAAW,2BAA2B,oBAAoB,YAAY,eAAe;AAC3F,QAAM,MAAM,MAAM,MAAM,QAAQ;AAChC,MAAI,CAAC,IAAI,IAAI;AACT,UAAM,IAAI,MAAM;AAAA,MACZ;AAAA,MACA,gBAAgB,IAAI,MAAM;AAAA,MAC1B,gBAAgB,IAAI,UAAU;AAAA,IAC1C,EAAU,KAAK,IAAI,CAAC;AAAA,EACpB;AACI,QAAM,UAAU,MAAM,IAAI,KAAM;AAChC,SAAO;AACX;AC9IA,SAAS,YAAY,IAAI,MAAM;AAC3B,MAAI,OAAO,UAAa,CAACgD,WAAO,EAAE,GAAG;AACjC,WAAO;AAAA,EACf,WACa,oBAAoB,IAAI,GAAG;AAChC,QAAI;AACA,UAAI,UAAU,KAAK,QAAS;AAC5B,gBAAU,QAAQ,WAAW,UAAU,IACjC,QAAQ,MAAM,WAAW,MAAM,IAC/B;AACN,aAAO;AAAA,IACnB,SACe,OAAO;AACV,aAAO,KAAK,QAAS;AAAA,IACjC;AAAA,EACA,OACS;AACD,WAAO,KAAK,QAAQ;AAAA,EAC5B;AACA;AACA,SAAS,aAAa,MAAM;AAExB,MAAI,oBAAoB,KAAK,IAAI,GAAG;AAChC,WAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM;AAAA,QACF,IAAI,KAAK,KAAK;AAAA,QACd,MAAM,KAAK,KAAK,QAAS;AAAA,MAC5B;AAAA,IACJ;AAAA,EACT,OACS;AACD,WAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM,EAAE,GAAG,gBAAgB,KAAK,KAAK,MAAM,GAAG,OAAO,KAAK,KAAK,KAAM;AAAA,IACxE;AAAA,EACT;AACA;AACO,MAAM,MAAM;AAAA,EACf,YAAY,QAAQ;AAChB,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AACD,SAAK,SAAQ,iCAAQ,UAAS,KAAK;AACnC,SAAK,SAAQ,iCAAQ,UAAS,KAAK;AAAA,EAC3C;AAAA;AAAA;AAAA,EAGI,SAAS;AACL,UAAM,gBAAgB,CAAE;AACxB,WAAO,OAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,MAAMtK,OAAM;AAC3C,oBAAc,KAAK,EAAE,IAAIsK,WAAO,KAAK,EAAE,IAAItK,KAAI,KAAK;AAAA,IAChE,CAAS;AACD,WAAO;AAAA,MACH,OAAO,OAAO,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,UAAU;AAAA,QAC5C,IAAI,cAAc,KAAK,EAAE;AAAA,QACzB,GAAG,aAAa,IAAI;AAAA,MACpC,EAAc;AAAA,MACF,OAAO,KAAK,MAAM,IAAI,CAAC,SAAS;AAC5B,cAAM,OAAO;AAAA,UACT,QAAQ,cAAc,KAAK,MAAM;AAAA,UACjC,QAAQ,cAAc,KAAK,MAAM;AAAA,QACpC;AACD,YAAI,OAAO,KAAK,SAAS,aAAa;AAClC,eAAK,OAAO,KAAK;AAAA,QACrC;AACgB,YAAI,OAAO,KAAK,gBAAgB,aAAa;AACzC,eAAK,cAAc,KAAK;AAAA,QAC5C;AACgB,eAAO;AAAA,MACvB,CAAa;AAAA,IACJ;AAAA,EACT;AAAA,EACI,QAAQ,MAAM,IAEd,UAAU;AACN,QAAI,OAAO,UAAa,KAAK,MAAM,EAAE,MAAM,QAAW;AAClD,YAAM,IAAI,MAAM,gBAAgB,EAAE,iBAAiB;AAAA,IAC/D;AACQ,UAAM,SAAS,MAAM4J,GAAQ;AAC7B,UAAM,OAAO;AAAA,MACT,IAAI;AAAA,MACJ;AAAA,MACA,MAAM,YAAY,IAAI,IAAI;AAAA,MAC1B;AAAA,IACH;AACD,SAAK,MAAM,MAAM,IAAI;AACrB,WAAO;AAAA,EACf;AAAA,EACI,WAAW,MAAM;AAEb,WAAO,KAAK,MAAM,KAAK,EAAE;AAEzB,SAAK,QAAQ,KAAK,MAAM,OAAO,CAAC,SAAS,KAAK,WAAW,KAAK,MAAM,KAAK,WAAW,KAAK,EAAE;AAAA,EACnG;AAAA,EACI,QAAQ,QAAQ,QAAQ,MAAM,aAAa;AACvC,QAAI,KAAK,MAAM,OAAO,EAAE,MAAM,QAAW;AACrC,YAAM,IAAI,MAAM,eAAe,OAAO,EAAE,eAAe;AAAA,IACnE;AACQ,QAAI,KAAK,MAAM,OAAO,EAAE,MAAM,QAAW;AACrC,YAAM,IAAI,MAAM,eAAe,OAAO,EAAE,eAAe;AAAA,IACnE;AACQ,UAAM,OAAO;AAAA,MACT,QAAQ,OAAO;AAAA,MACf,QAAQ,OAAO;AAAA,MACf;AAAA,MACA;AAAA,IACH;AACD,SAAK,MAAM,KAAK,IAAI;AACpB,WAAO;AAAA,EACf;AAAA,EACI,YAAY;AACR,WAAO,WAAW,IAAI;AAAA,EAC9B;AAAA,EACI,WAAW;AACP,WAAO,UAAU,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,OAAO,OAAO,SAAS,IAAI;AACvB,QAAI,cAAc;AAClB,UAAM,UAAU,OAAO,OAAO,MAAM,KAAK,EAAE,IAAI,CAAC,SAAS,KAAK,EAAE;AAChE,QAAI,QAAQ,MAAMU,UAAM,GAAG;AACvB,oBAAc;AAAA,IAC1B;AACQ,UAAM,WAAW,CAAC,OAAO;AACrB,aAAO,cAAc,GAAG,WAAW,IAAI,EAAE,KAAK;AAAA,IACjD;AACD,WAAO,QAAQ,MAAM,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAClD,WAAK,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,GAAG,OAAO,IAAI,SAAS,GAAG,EAAG;AAAA,IACvE,CAAS;AACD,UAAM,WAAW,MAAM,MAAM,IAAI,CAAC,SAAS;AACvC,aAAO;AAAA,QACH,GAAG;AAAA,QACH,QAAQ,SAAS,KAAK,MAAM;AAAA,QAC5B,QAAQ,SAAS,KAAK,MAAM;AAAA,MAC/B;AAAA,IACb,CAAS;AAED,SAAK,QAAQ,CAAC,GAAG,KAAK,OAAO,GAAG,QAAQ;AACxC,UAAM,QAAQ,MAAM,UAAW;AAC/B,UAAM,OAAO,MAAM,SAAU;AAC7B,WAAO;AAAA,MACH,QAAQ,EAAE,IAAI,SAAS,MAAM,EAAE,GAAG,MAAM,MAAM,KAAI,IAAK;AAAA,MACvD,OAAO,EAAE,IAAI,SAAS,KAAK,EAAE,GAAG,MAAM,KAAK,KAAI,IAAK;AAAA,IACvD;AAAA,EACT;AAAA,EACI,gBAAgB;AACZ,UAAM,YAAY,KAAK,UAAW;AAClC,QAAI,aAAa,WAAW,MAAM,CAAC,UAAU,EAAE,CAAC,GAAG;AAC/C,WAAK,WAAW,SAAS;AAAA,IACrC;AAAA,EACA;AAAA,EACI,eAAe;AACX,UAAM,WAAW,KAAK,SAAU;AAChC,QAAI,YAAY,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG;AAC5C,WAAK,WAAW,QAAQ;AAAA,IACpC;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,OAAO;AACH,UAAM,aAAa,OAAO,YAAY,OAAO,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC;AACnG,UAAM,kBAAkB,oBAAI,IAAK;AACjC,WAAO,OAAO,UAAU,EAAE,QAAQ,CAAC,UAAU;AACzC,sBAAgB,IAAI,QAAQ,gBAAgB,IAAI,KAAK,KAAK,KAAK,CAAC;AAAA,IAC5E,CAAS;AACD,UAAM,YAAY,CAAC,WAAW;AAC1B,YAAM,QAAQ,WAAW,MAAM;AAC/B,UAAIA,WAAO,MAAM,KAAK,gBAAgB,IAAI,KAAK,MAAM,GAAG;AACpD,eAAO;AAAA,MACvB,OACiB;AACD,eAAO;AAAA,MACvB;AAAA,IACS;AACD,WAAO,IAAI,MAAM;AAAA,MACb,OAAO,OAAO,YAAY,OAAO,QAAQ,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,MAAM;AAAA,QACrE,UAAU,EAAE;AAAA,QACZ,EAAE,GAAG,MAAM,IAAI,UAAU,EAAE,EAAG;AAAA,MAC9C,CAAa,CAAC;AAAA,MACF,OAAO,KAAK,MAAM,IAAI,CAAC,UAAU;AAAA,QAC7B,GAAG;AAAA,QACH,QAAQ,UAAU,KAAK,MAAM;AAAA,QAC7B,QAAQ,UAAU,KAAK,MAAM;AAAA,MAC7C,EAAc;AAAA,IACd,CAAS;AAAA,EACT;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,EAAE,YAAY,YAAY,aAAa;AAAA,MACzC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IAClB,GAAW,gBAAe,IAAM,UAAU,CAAE;AACpC,UAAM,QAAQ,KAAK,KAAM;AACzB,UAAM,YAAY,MAAM,UAAW;AACnC,UAAM,WAAW,MAAM,SAAU;AACjC,WAAO,YAAY,MAAM,OAAO,MAAM,OAAO;AAAA,MACzC,WAAW,uCAAW;AAAA,MACtB,UAAU,qCAAU;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,CAAS;AAAA,EACT;AAAA,EACI,MAAM,eAAe,QAAQ;AACzB,UAAM,gBAAgB,KAAK,YAAY,MAAM;AAC7C,WAAO,eAAe,eAAe;AAAA,MACjC,iBAAiB,iCAAQ;AAAA,IACrC,CAAS;AAAA,EACT;AACA;AAOA,SAAS,WAAW,OAAO,UAAU,IAAI;AACrC,QAAM,UAAU,IAAI,IAAI,MAAM,MACzB,OAAO,CAAC,SAAS,CAAC,QAAQ,SAAS,KAAK,MAAM,CAAC,EAC/C,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC;AAC/B,QAAM,QAAQ,CAAE;AAChB,aAAW,QAAQ,OAAO,OAAO,MAAM,KAAK,GAAG;AAC3C,QAAI,CAAC,QAAQ,SAAS,KAAK,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,EAAE,GAAG;AACrD,YAAM,KAAK,IAAI;AAAA,IAC3B;AAAA,EACA;AACI,SAAO,MAAM,WAAW,IAAI,MAAM,CAAC,IAAI;AAC3C;AAOA,SAAS,UAAU,OAAO,UAAU,IAAI;AACpC,QAAM,UAAU,IAAI,IAAI,MAAM,MACzB,OAAO,CAAC,SAAS,CAAC,QAAQ,SAAS,KAAK,MAAM,CAAC,EAC/C,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC;AAC/B,QAAM,QAAQ,CAAE;AAChB,aAAW,QAAQ,OAAO,OAAO,MAAM,KAAK,GAAG;AAC3C,QAAI,CAAC,QAAQ,SAAS,KAAK,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,EAAE,GAAG;AACrD,YAAM,KAAK,IAAI;AAAA,IAC3B;AAAA,EACA;AACI,SAAO,MAAM,WAAW,IAAI,MAAM,CAAC,IAAI;AAC3C;ACxQO,SAAS,yBAAyB,QAAQ;AAC7C,QAAM,UAAU,IAAI,YAAa;AACjC,QAAM,cAAc,IAAI,eAAe;AAAA,IACnC,MAAM,MAAM,YAAY;AACpB,uBAAiB,SAAS,QAAQ;AAC9B,mBAAW,QAAQ,QAAQ,OAAO;AAAA,QAAsB,KAAK,UAAU,KAAK,CAAC;AAAA;AAAA,CAAM,CAAC;AAAA,MACpG;AACY,iBAAW,QAAQ,QAAQ,OAAO,gBAAgB,CAAC;AACnD,iBAAW,MAAO;AAAA,IACrB;AAAA,EACT,CAAK;AACD,SAAO,uBAAuB,mBAAmB,WAAW;AAChE;ACXO,SAAS,mBAAmB,OAAO;AACtC,SAAQ,OAAO,UAAU,YACrB,UAAU,QACV,OAAO,MAAM,OAAO,QAAQ,MAAM;AAAA,EAElC,OAAO,MAAM,SAAS;AAC9B;AACO,MAAM,aAAa,CAAClK,OAAMA,MAAK,QAClC,OAAOA,OAAM,YACb,UAAUA,MACV,OAAOA,GAAE,SAAS;AACf,SAAS,gBAAgB,OAAO;AACnC,SAAQ,OAAO,UAAU,YACrB,UAAU,QACV,OAAO,MAAM,OAAO,aAAa,MAC7B;AACZ;AACO,UAAU,yBAAyB,SAAS,MAAM;AACrD,SAAO,MAAM;AACT,UAAM,EAAE,OAAO,KAAM,IAAG,mCAAmC,cAAc,uBAAuB,OAAO,GAAG,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI;AACpI,QAAI,MAAM;AACN;AAAA,IACZ,OACa;AACD,YAAM;AAAA,IAClB;AAAA,EACA;AACA;AACO,gBAAgB,8BAA8B,SAAS,MAAM;AAChE,QAAM,WAAW,KAAK,OAAO,aAAa,EAAG;AAC7C,SAAO,MAAM;AACT,UAAM,EAAE,OAAO,KAAM,IAAG,MAAM,mCAAmC,cAAc,uBAAuB,OAAO,GAAG,SAAS,KAAK,KAAK,IAAI,GAAG,IAAI;AAC9I,QAAI,MAAM;AACN;AAAA,IACZ,OACa;AACD,YAAM;AAAA,IAClB;AAAA,EACA;AACA;ACtBO,SAAS,cAAc,OAAO,YAAY;AAC7C,SAAO,SACH,CAAC,MAAM,QAAQ,KAAK;AAAA,EAEpB,EAAE,iBAAiB,SACnB,OAAO,UAAU,WACf,QACA,EAAE,CAAC,UAAU,GAAG,MAAO;AACjC;AAKO,MAAM,iBAAiB,aAAa;AAAA,EACvC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,QAAQ,QAAQ;AACZ,UAAM;AAAA;AAAA,MAEN,KAAK,QAAQ,KAAK,YAAY,aAAa,KAAK,YAAY;AAAA;AAC5D,WAAO,SAAS,GAAG,IAAI,GAAG,MAAM,KAAK;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,KAAK,QAAQ;AAET,WAAO,IAAI,gBAAgB,EAAE,OAAO,MAAM,QAAQ,QAAQ,CAAA,GAAI;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM;AAEF,WAAO,IAAI,aAAa,EAAE,OAAO,KAAI,CAAE;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,UAAU,QAAQ;AAEd,WAAO,IAAI,cAAc;AAAA,MACrB,OAAO;AAAA,MACP,QAAQ,CAAE;AAAA,MACV,QAAQ,CAAE;AAAA,MACV,kBAAkB,iCAAQ;AAAA,MAC1B,GAAG;AAAA,IACf,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,WAAWkH,SAAQ;AAEf,WAAO,IAAI,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,QAAAA;AAAA,MACA,QAAQ,CAAE;AAAA,IACtB,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,cAAc,QAAQ;AAClB,UAAM,YAAY,MAAM,QAAQ,MAAM,IAAI,SAAS,OAAO;AAE1D,WAAO,IAAI,sBAAsB;AAAA,MAC7B,UAAU;AAAA,MACV;AAAA,IACZ,CAAS;AAAA,EACT;AAAA,EACI,gBAAgB,SAAS,SAAS,GAAG;AACjC,QAAI,MAAM,QAAQ,OAAO,KAAK,QAAQ,WAAW,QAAQ;AACrD,YAAM,IAAI,MAAM,iFAAiF,QAAQ,MAAM,gBAAgB,MAAM,SAAS;AAAA,IAC1J;AACQ,QAAI,MAAM,QAAQ,OAAO,GAAG;AACxB,aAAO,QAAQ,IAAI,YAAY;AAAA,IAC3C;AACQ,QAAI,SAAS,KAAK,CAAC,MAAM,QAAQ,OAAO,KAAK,QAAQ,OAAO;AACxD,cAAQ,KAAK,sEAAsE;AACnF,YAAM,aAAa,OAAO,YAAY,OAAO,QAAQ,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,MAAM,QAAQ,OAAO,CAAC;AAChG,aAAO,MAAM,KAAK,EAAE,OAAM,GAAI,CAACpH,IAAGF,OAAM,aAAaA,OAAM,IAAI,UAAU,UAAU,CAAC;AAAA,IAChG;AACQ,WAAO,MAAM,KAAK,EAAE,OAAQ,GAAE,MAAM,aAAa,OAAO,CAAC;AAAA,EACjE;AAAA,EACI,MAAM,MAAM,QAAQ,SAAS,cAAc;;AACvC,UAAM,aAAa,KAAK,gBAAgB,WAAW,CAAE,GAAE,OAAO,MAAM;AACpE,UAAM,mBAAiBS,MAAA,WAAW,CAAC,MAAZ,gBAAAA,IAAe,oBAAkB,6CAAc;AACtE,UAAM8J,UAAS,IAAI/C,aAAY;AAAA,MAC3B;AAAA,MACA,iBAAiB,CAAC7G,OAAM;AACpB,cAAMA;AAAA,MACT;AAAA,IACb,CAAS;AACD,UAAM,aAAa,OAAO,IAAI,CAAC,OAAOX,OAAMuK,QAAO,KAAK,YAAY;AAChE,UAAI;AACA,cAAM,SAAS,MAAM,KAAK,OAAO,OAAO,WAAWvK,EAAC,CAAC;AACrD,eAAO;AAAA,MACvB,SACmBW,IAAG;AACN,YAAI,6CAAc,kBAAkB;AAChC,iBAAOA;AAAA,QAC3B;AACgB,cAAMA;AAAA,MACtB;AAAA,IACA,CAAS,CAAC;AACF,WAAO,QAAQ,IAAI,UAAU;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,OAAO,gBAAgB,OAAO,SAAS;AACnC,UAAM,KAAK,OAAO,OAAO,OAAO;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,OAAO,OAAO,SAAS;AAGzB,UAAM2G,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,KAAK,gBAAgB,OAAOA,OAAM;AAAA,MAC7C,QAAAA;AAAA,IACZ,CAAS;AACD,UAAM,iBAAiB;AACvB,WAAO,uBAAuB,mBAAmB,gBAAgB;AAAA,EACzE;AAAA,EACI,uCAAuC,SAAS;AAC5C,QAAI;AACJ,QAAI,YAAY,QAAW;AACvB,uBAAiB,aAAa,OAAO;AAAA,IACjD,OACa;AACD,uBAAiB,aAAa;AAAA,QAC1B,WAAW,QAAQ;AAAA,QACnB,MAAM,QAAQ;AAAA,QACd,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ;AAAA,QACtB,gBAAgB,QAAQ;AAAA,QACxB,gBAAgB,QAAQ;AAAA,QACxB,OAAO,QAAQ;AAAA,QACf,SAAS,QAAQ;AAAA,QACjB,QAAQ,QAAQ;AAAA,MAChC,CAAa;AAAA,IACb;AACQ,UAAM,cAAc,EAAE,GAAG,QAAS;AAClC,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,CAAC,gBAAgB,WAAW;AAAA,EAC3C;AAAA,EACI,MAAM,gBAAgB,MAAM,OAAO,SAAS;AACxC,UAAMA,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,UAAU,cAAc,OAAO,OAAO,GAAGA,QAAO,OAAOA,WAAA,gBAAAA,QAAQ,SAAS,QAAW,SAAWA,WAAA,gBAAAA,QAAQ,YAAW,KAAK;AACvL,WAAOA,QAAO;AACd,QAAI;AACJ,QAAI;AACA,YAAM,UAAU,KAAK,KAAK,MAAM,OAAOA,SAAQ,UAAU;AACzD,eAAS,MAAM,eAAe,SAAS,mCAAS,MAAM;AAAA,IAClE,SACe3G,IAAG;AACN,aAAM,yCAAY,iBAAiBA;AACnC,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe,cAAc,QAAQ,QAAQ;AAC/D,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,MAAM,iBAAiB,MAAM,QAAQ,SAAS,cAAc;;AACxD,UAAM,cAAc,KAAK,gBAAgB,WAAW,CAAE,GAAE,OAAO,MAAM;AACrE,UAAM,mBAAmB,MAAM,QAAQ,IAAI,YAAY,IAAI,2BAA2B,CAAC;AACvF,UAAM,cAAc,MAAM,QAAQ,IAAI,iBAAiB,IAAI,OAAO,iBAAiBX,OAAM;AACrF,YAAM,iBAAiB,OAAM,mDAAiB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAOA,EAAC,GAAG,OAAO,GAAG,YAAYA,EAAC,EAAE,OAAO,YAAYA,EAAC,EAAE,SAAS,QAAW,QAAW,YAAYA,EAAC,EAAE,WAAW,KAAK,QAAO;AAC3N,aAAO,YAAYA,EAAC,EAAE;AACtB,aAAO;AAAA,IACnB,CAAS,CAAC;AACF,QAAI;AACJ,QAAI;AACA,YAAM,UAAU,KAAK,KAAK,MAAM,QAAQ,aAAa,aAAa,YAAY;AAC9E,gBAAU,MAAM,eAAe,UAASS,MAAA,2CAAc,OAAd,gBAAAA,IAAkB,MAAM;AAAA,IAC5E,SACeE,IAAG;AACN,YAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,eAAe,yCAAY,iBAAiBA,GAAE,CAAC;AAClF,YAAMA;AAAA,IAClB;AACQ,UAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,eAAe,yCAAY,eAAe,cAAc,SAAS,QAAQ,EAAE,CAAC;AAC/G,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,OAAO,2BAA2B,gBAAgB,aAAa,SAAS;AACpE,QAAI;AACJ,QAAI,sBAAsB;AAC1B,QAAI;AACJ,QAAI,uBAAuB;AAC3B,UAAM2G,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,oBAAgB,sBAAsB;AAClC,uBAAiB,SAAS,gBAAgB;AACtC,YAAI,qBAAqB;AACrB,cAAI,eAAe,QAAW;AAC1B,yBAAa;AAAA,UACrC,OACyB;AACD,gBAAI;AAEA,2BAAa,OAAO,YAAY,KAAK;AAAA,YACjE,QAC8B;AACF,2BAAa;AACb,oCAAsB;AAAA,YAClD;AAAA,UACA;AAAA,QACA;AACgB,cAAM;AAAA,MACtB;AAAA,IACA;AACQ,QAAI;AACJ,QAAI;AACA,YAAM,OAAO,MAAM,uBAAuB,YAAY,KAAK,IAAI,GAAG,oBAAmB,GAAI,YAAY,qDAAkB,iBAAiB,KAAK,OAAM,GAAI,EAAE,OAAO,GAAE,GAAIA,QAAO,OAAOA,QAAO,SAAS,QAAW,QAAWA,QAAO,WAAW,KAAK,QAAS,IAAG,mCAAS,QAAQA,OAAM;AACpR,aAAOA,QAAO;AACd,mBAAa,KAAK;AAClB,YAAM,sBAAsB,yCAAY,SAAS,KAAK;AACtD,UAAI,WAAW,KAAK;AACpB,UAAI,wBAAwB,UAAa,eAAe,QAAW;AAC/D,mBAAW,oBAAoB,kBAAkB,WAAW,OAAO,QAAQ;AAAA,MAC3F;AACY,YAAM,mBAAmB,yCAAY,SAAS,KAAK;AACnD,UAAI,qBAAqB,UAAa,eAAe,QAAW;AAC5D,mBAAW,iBAAiB,kBAAkB,WAAW,OAAO,QAAQ;AAAA,MACxF;AACY,uBAAiB,SAAS,UAAU;AAChC,cAAM;AACN,YAAI,sBAAsB;AACtB,cAAI,gBAAgB,QAAW;AAC3B,0BAAc;AAAA,UACtC,OACyB;AACD,gBAAI;AAEA,4BAAc,OAAO,aAAa,KAAK;AAAA,YACnE,QAC8B;AACF,4BAAc;AACd,qCAAuB;AAAA,YACnD;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,IACA,SACe3G,IAAG;AACN,aAAM,yCAAY,iBAAiBA,IAAG,QAAW,QAAW,QAAW;AAAA,QACnE,QAAQ,cAAc,YAAY,OAAO;AAAA,MACzD;AACY,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe,eAAe,CAAA,GAAI,QAAW,QAAW,QAAW,EAAE,QAAQ,cAAc,YAAY,OAAO,EAAC;AAAA,EACzI;AAAA,EACI,SAAST,IAAG;AACR,UAAM,QAAQ,IAAI,MAAO;AAEzB,UAAM,YAAY,MAAM,QAAQ;AAAA,MAC5B,MAAM,GAAG,KAAK,QAAO,CAAE;AAAA,MACvB,QAAQsK,IAAE,IAAK;AAAA,IAC3B,CAAS;AACD,UAAM,eAAe,MAAM,QAAQ,IAAI;AAEvC,UAAM,aAAa,MAAM,QAAQ;AAAA,MAC7B,MAAM,GAAG,KAAK,QAAO,CAAE;AAAA,MACvB,QAAQA,IAAE,IAAK;AAAA,IAC3B,CAAS;AACD,UAAM,QAAQ,WAAW,YAAY;AACrC,UAAM,QAAQ,cAAc,UAAU;AACtC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,KAAK,YAAY;AAEb,WAAO,IAAI,iBAAiB;AAAA,MACxB,OAAO;AAAA,MACP,MAAM,kBAAkB,UAAU;AAAA,IAC9C,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,KAAK,MAAM;AAEP,WAAO,KAAK,KAAK,IAAI,aAAa,IAAI,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,SAAS;AACZ,WAAO,KAAK;AAAA;AAAA,MAEZ,IAAI;AAAA;AAAA,QAEJ,IAAI,YAAY,EAAE,OAAO,QAAO,CAAE;AAAA,MAAC;AAAA,IAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,OAAO,UAAU,WAAW,SAAS;AACjC,QAAI;AACJ,qBAAiB,SAAS,WAAW;AACjC,UAAI,eAAe,QAAW;AAC1B,qBAAa;AAAA,MAC7B,OACiB;AAID,qBAAa,OAAO,YAAY,KAAK;AAAA,MACrD;AAAA,IACA;AACQ,WAAO,KAAK,gBAAgB,YAAY,aAAa,OAAO,CAAC;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,OAAO,UAAU,OAAO,SAAS,eAAe;AAC5C,UAAM,2BAA2B,IAAI,yBAAyB;AAAA,MAC1D,GAAG;AAAA,MACH,WAAW;AAAA,MACX,eAAe;AAAA,IAC3B,CAAS;AACD,UAAMlD,UAAS,aAAa,OAAO;AACnC,WAAO,KAAK,WAAW,OAAO,0BAA0BA,OAAM;AAAA,EACtE;AAAA,EACI,OAAO,WAAW,OAAO,0BAA0BA,SAAQ;AACvD,UAAM,EAAE,UAAS,IAAKA;AACtB,QAAI,cAAc,QAAW;AAEzB,MAAAA,QAAO,YAAY,CAAC,wBAAwB;AAAA,IACxD,WACiB,MAAM,QAAQ,SAAS,GAAG;AAE/B,MAAAA,QAAO,YAAY,UAAU,OAAO,CAAC,wBAAwB,CAAC;AAAA,IAC1E,OACa;AACD,YAAM,kBAAkB,UAAU,KAAM;AACxC,sBAAgB,WAAW,0BAA0B,IAAI;AAEzD,MAAAA,QAAO,YAAY;AAAA,IAC/B;AACQ,UAAM,wBAAwB,KAAK,OAAO,OAAOA,OAAM;AACvD,mBAAe,wBAAwB;AACnC,UAAI;AACA,cAAM,iBAAiB,MAAM;AAC7B,yBAAiB,SAAS,gBAAgB;AACtC,gBAAM,QAAQ,IAAI,YAAY;AAAA,YAC1B,KAAK;AAAA,cACD;AAAA,gBACI,IAAI;AAAA,gBACJ,MAAM;AAAA,gBACN,OAAO;AAAA,cACV;AAAA,YACJ;AAAA,UACzB,CAAqB;AACD,gBAAM,yBAAyB,OAAO,MAAM,KAAK;AAAA,QACrE;AAAA,MACA,UACoB;AACJ,cAAM,yBAAyB,OAAO,MAAO;AAAA,MAC7D;AAAA,IACA;AACQ,UAAM,+BAA+B,sBAAuB;AAC5D,QAAI;AACA,uBAAiB,OAAO,0BAA0B;AAC9C,cAAM;AAAA,MACtB;AAAA,IACA,UACgB;AACJ,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,aAAa,OAAO,SAAS,eAAe;AACxC,QAAI;AACJ,QAAI,QAAQ,YAAY,MAAM;AAC1B,eAAS,KAAK,gBAAgB,OAAO,SAAS,aAAa;AAAA,IACvE,WACiB,QAAQ,YAAY,MAAM;AAC/B,eAAS,KAAK,gBAAgB,OAAO,SAAS,aAAa;AAAA,IACvE,OACa;AACD,YAAM,IAAI,MAAM,oEAAoE;AAAA,IAChG;AACQ,QAAI,QAAQ,aAAa,qBAAqB;AAC1C,aAAO,yBAAyB,MAAM;AAAA,IAClD,OACa;AACD,aAAO,uBAAuB,mBAAmB,MAAM;AAAA,IACnE;AAAA,EACA;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS,eAAe;;AAClD,UAAM,gBAAgB,IAAI,2BAA2B;AAAA,MACjD,GAAG;AAAA,MACH,WAAW;AAAA,IACvB,CAAS;AACD,UAAMA,UAAS,aAAa,OAAO;AACnC,UAAM,QAAQA,QAAO,SAASsC,GAAQ;AACtC,IAAAtC,QAAO,QAAQ;AACf,UAAM,YAAYA,QAAO;AACzB,QAAI,cAAc,QAAW;AACzB,MAAAA,QAAO,YAAY,CAAC,aAAa;AAAA,IAC7C,WACiB,MAAM,QAAQ,SAAS,GAAG;AAC/B,MAAAA,QAAO,YAAY,UAAU,OAAO,aAAa;AAAA,IAC7D,OACa;AACD,YAAM,kBAAkB,UAAU,KAAM;AACxC,sBAAgB,WAAW,eAAe,IAAI;AAE9C,MAAAA,QAAO,YAAY;AAAA,IAC/B;AAGQ,UAAM,YAAY;AAClB,mBAAe,wBAAwB;AACnC,UAAI;AACA,cAAM,iBAAiB,MAAM,UAAU,OAAO,OAAOA,OAAM;AAC3D,cAAM,eAAe,cAAc,kBAAkB,OAAO,cAAc;AAE1E,yBAAiBpH,MAAK,cAAc;AAAA,QAEpD;AAAA,MACA,UACoB;AACJ,cAAM,cAAc,OAAQ;AAAA,MAC5C;AAAA,IACA;AACQ,UAAM,+BAA+B,sBAAuB;AAC5D,QAAI,iBAAiB;AACrB,QAAI;AACJ,QAAI;AACA,uBAAiB,SAAS,eAAe;AAKrC,YAAI,CAAC,gBAAgB;AACjB,gBAAM,KAAK,QAAQ;AACnB,2BAAiB;AACjB,4BAAkB,MAAM;AACxB,gBAAM;AACN;AAAA,QACpB;AACgB,YAAI,MAAM,WAAW,mBAAmB,MAAM,MAAM,SAAS,MAAM,GAAG;AAIlE,eAAIO,MAAA,MAAM,SAAN,gBAAAA,IAAY,OAAO;AACnB,mBAAO,MAAM,KAAK;AAAA,UAC1C;AAAA,QACA;AACgB,cAAM;AAAA,MACtB;AAAA,IACA,UACgB;AACJ,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS,eAAe;AAClD,QAAI;AACJ,QAAI,2BAA2B;AAC/B,UAAM6G,UAAS,aAAa,OAAO;AACnC,UAAM,WAAWA,QAAO,QAAQ,CAAE;AAClC,UAAM,eAAeA,QAAO,YAAY,CAAE;AAC1C,UAAM,WAAWA,QAAO,WAAW,KAAK,QAAS;AACjD,UAAM,2BAA2B,IAAI,yBAAyB;AAAA,MAC1D,GAAG;AAAA,MACH,WAAW;AAAA,MACX,eAAe;AAAA,IAC3B,CAAS;AACD,UAAM,kBAAkB,IAAI,iBAAiB;AAAA,MACzC,GAAG;AAAA,IACf,CAAS;AACD,UAAM,YAAY,KAAK,WAAW,OAAO,0BAA0BA,OAAM;AACzE,qBAAiB,OAAO,WAAW;AAC/B,UAAI,CAAC,QAAQ;AACT,iBAAS,OAAO,gBAAgB,GAAG;AAAA,MACnD,OACiB;AACD,iBAAS,OAAO,OAAO,GAAG;AAAA,MAC1C;AACY,UAAI,OAAO,UAAU,QAAW;AAC5B,cAAM,IAAI,MAAM,4EAA4E;AAAA,MAC5G;AAGY,UAAI,CAAC,0BAA0B;AAC3B,mCAA2B;AAC3B,cAAMmD,SAAQ,EAAE,GAAG,OAAO,MAAO;AACjC,cAAM,QAAQ;AAAA,UACV,QAAQA,OAAM;AAAA,UACd,OAAO,MAAMA,OAAM,IAAI;AAAA,UACvB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,UACV,MAAM;AAAA,YACF;AAAA,UACH;AAAA,QACJ;AACD,YAAI,gBAAgB,aAAa,OAAOA,OAAM,IAAI,GAAG;AACjD,gBAAM;AAAA,QAC1B;AAAA,MACA;AACY,YAAM,QAAQ,IAAI,IACb,OAAO,CAAC,OAAO,GAAG,KAAK,WAAW,QAAQ,CAAC,EAC3C,IAAI,CAAC,OAAO,GAAG,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC;AACtC,YAAM,eAAe,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;AACvC,iBAAWlK,SAAQ,cAAc;AAC7B,YAAI;AACJ,YAAI,OAAO,CAAE;AACb,cAAM,WAAW,OAAO,MAAM,KAAKA,KAAI;AACvC,YAAI,SAAS,aAAa,QAAW;AACjC,cAAI,SAAS,gBAAgB,SAAS,GAAG;AACrC,wBAAY;AAAA,UACpC,OACyB;AACD,wBAAY;AAAA,UACpC;AAAA,QACA,OACqB;AACD,sBAAY;AAAA,QAChC;AACgB,YAAI,cAAc,SAAS;AAKvB,cAAI,SAAS,WAAW,QAAW;AAC/B,iBAAK,QAAQ,SAAS;AAAA,UAC9C;AAAA,QACA,WACyB,cAAc,OAAO;AAC1B,cAAI,SAAS,WAAW,QAAW;AAC/B,iBAAK,QAAQ,SAAS;AAAA,UAC9C;AACoB,eAAK,SAAS,SAAS;AAAA,QAC3C,WACyB,cAAc,UAAU;AAC7B,gBAAM,aAAa,SAAS,gBAAgB;AAC5C,cAAI,eAAe,GAAG;AAClB,kBAAM,IAAI,MAAM,sDAAsD,UAAU,8BAA8B,SAAS,IAAI,GAAG;AAAA,UACtJ;AACoB,iBAAO,EAAE,OAAO,SAAS,gBAAgB,CAAC,EAAG;AAG7C,mBAAS,kBAAkB,CAAE;AAAA,QACjD;AACgB,cAAM;AAAA,UACF,OAAO,MAAM,SAAS,IAAI,IAAI,SAAS;AAAA,UACvC,MAAM,SAAS;AAAA,UACf,QAAQ,SAAS;AAAA,UACjB,MAAM,SAAS;AAAA,UACf,UAAU,SAAS;AAAA,UACnB;AAAA,QACH;AAAA,MACjB;AAGY,YAAM,EAAE,OAAAkK,OAAK,IAAK;AAClB,UAAIA,OAAM,gBAAgB,SAAS,GAAG;AAClC,cAAM,aAAaA,OAAM,gBAAgB;AACzC,YAAI,eAAe,GAAG;AAClB,gBAAM,IAAI,MAAM,sDAAsD,UAAU,8BAA8BA,OAAM,IAAI,GAAG;AAAA,QAC/I;AACgB,cAAM,OAAO,EAAE,OAAOA,OAAM,gBAAgB,CAAC,EAAG;AAEhD,QAAAA,OAAM,kBAAkB,CAAE;AAC1B,cAAM,QAAQ;AAAA,UACV,OAAO,MAAMA,OAAM,IAAI;AAAA,UACvB,QAAQA,OAAM;AAAA,UACd,MAAM;AAAA,UACN,UAAU;AAAA,UACV,MAAM;AAAA,UACN;AAAA,QACH;AACD,YAAI,gBAAgB,aAAa,OAAOA,OAAM,IAAI,GAAG;AACjD,gBAAM;AAAA,QAC1B;AAAA,MACA;AAAA,IACA;AACQ,UAAM,QAAQ,iCAAQ;AACtB,QAAI,UAAU,QAAW;AAErB,YAAM,QAAQ;AAAA,QACV,OAAO,MAAM,MAAM,IAAI;AAAA,QACvB,MAAM;AAAA,QACN,QAAQ,MAAM;AAAA,QACd,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,UACF,QAAQ,MAAM;AAAA,QACjB;AAAA,MACJ;AACD,UAAI,gBAAgB,aAAa,OAAO,MAAM,IAAI;AAC9C,cAAM;AAAA,IACtB;AAAA,EACA;AAAA;AAAA,EAEI,OAAO,WAAW,OAAO;AACrB,WAAO,oBAAoB,KAAK;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,cAAc,EAAE,SAAS,OAAO,QAAO,GAAK;AAExC,WAAO,IAAI,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,QAAQ,CAAE;AAAA,MACV,iBAAiB;AAAA,QACb,CAACnD,aAAY;AAAA,UACT,WAAW;AAAA,YACP,IAAI,oBAAoB;AAAA,cACpB,QAAAA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAC5B,CAAyB;AAAA,UACJ;AAAA,QACrB;AAAA,MACa;AAAA,IACb,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaI,OAAO,QAAQ;AACX,WAAO,sBAAsB,MAAM,MAAM;AAAA,EACjD;AACA;AAyCO,MAAM,wBAAwB,SAAS;AAAA,EAC1C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ,OAAO;AACpB,SAAK,SAAS,OAAO;AACrB,SAAK,SAAS,OAAO;AACrB,SAAK,kBAAkB,OAAO;AAAA,EACtC;AAAA,EACI,QAAQ,QAAQ;AACZ,WAAO,KAAK,MAAM,QAAQ,MAAM;AAAA,EACxC;AAAA,EACI,MAAM,gBAAgB,SAAS;AAC3B,UAAMA,UAAS,aAAa,KAAK,QAAQ,GAAG,OAAO;AACnD,WAAO,aAAaA,SAAQ,GAAI,KAAK,kBAC/B,MAAM,QAAQ,IAAI,KAAK,gBAAgB,IAAI,OAAO,kBAAkB,MAAM,cAAcA,OAAM,CAAC,CAAC,IAChG,CAAA,CAAG;AAAA,EACjB;AAAA,EACI,KAAK,QAAQ;AAET,WAAO,IAAI,KAAK,YAAY;AAAA,MACxB,OAAO,KAAK;AAAA,MACZ,QAAQ,EAAE,GAAG,KAAK,QAAQ,GAAG,OAAQ;AAAA,MACrC,QAAQ,KAAK;AAAA,IACzB,CAAS;AAAA,EACT;AAAA,EACI,WAAWA,SAAQ;AAEf,WAAO,IAAI,KAAK,YAAY;AAAA,MACxB,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,QAAQ,EAAE,GAAG,KAAK,QAAQ,GAAGA,QAAQ;AAAA,IACjD,CAAS;AAAA,EACT;AAAA,EACI,UAAU,QAAQ;AAEd,WAAO,IAAI,KAAK,YAAY;AAAA,MACxB,OAAO,KAAK,MAAM,UAAU,MAAM;AAAA,MAClC,QAAQ,KAAK;AAAA,MACb,QAAQ,KAAK;AAAA,IACzB,CAAS;AAAA,EACT;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,WAAO,KAAK,MAAM,OAAO,OAAO,MAAM,KAAK,aAAa,aAAa,OAAO,GAAG,KAAK,MAAM,CAAC;AAAA,EACnG;AAAA,EACI,MAAM,MAAM,QAAQ,SAAS,cAAc;AACvC,UAAM,gBAAgB,MAAM,QAAQ,OAAO,IACrC,MAAM,QAAQ,IAAI,QAAQ,IAAI,OAAO,qBAAqB,KAAK,aAAa,aAAa,gBAAgB,GAAG,KAAK,MAAM,CAAC,CAAC,IACzH,MAAM,KAAK,aAAa,aAAa,OAAO,GAAG,KAAK,MAAM;AAChE,WAAO,KAAK,MAAM,MAAM,QAAQ,eAAe,YAAY;AAAA,EACnE;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS;AACnC,WAAO,KAAK,MAAM,gBAAgB,OAAO,MAAM,KAAK,aAAa,aAAa,OAAO,GAAG,KAAK,MAAM,CAAC;AAAA,EAC5G;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,WAAO,KAAK,MAAM,OAAO,OAAO,MAAM,KAAK,aAAa,aAAa,OAAO,GAAG,KAAK,MAAM,CAAC;AAAA,EACnG;AAAA,EACI,OAAO,UAAU,WAAW,SAAS;AACjC,WAAO,KAAK,MAAM,UAAU,WAAW,MAAM,KAAK,aAAa,aAAa,OAAO,GAAG,KAAK,MAAM,CAAC;AAAA,EAC1G;AAAA,EACI,aAAa,OAAO,SAAS,eAAe;AAExC,UAAM,YAAY;AAClB,UAAM,YAAY,mBAAmB;AACjC,aAAO,UAAU,MAAM,aAAa,OAAO;AAAA,QACvC,GAAI,MAAM,UAAU,aAAa,aAAa,OAAO,GAAG,UAAU,MAAM;AAAA,QACxE,SAAS,QAAQ;AAAA,MACpB,GAAE,aAAa;AAAA,IACnB;AACD,WAAO,uBAAuB,mBAAmB,WAAW;AAAA,EACpE;AAAA,EACI,OAAO,kBAEP,OAEE;AACE,WAAO,MAAM,SAAS,SAAS,WAAW,MAAM,KAAK;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,cAAc,EAAE,SAAS,OAAO,QAAO,GAAK;AACxC,WAAO,IAAI,gBAAgB;AAAA,MACvB,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,QAAQ,KAAK;AAAA,MACb,iBAAiB;AAAA,QACb,CAACA,aAAY;AAAA,UACT,WAAW;AAAA,YACP,IAAI,oBAAoB;AAAA,cACpB,QAAAA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAC5B,CAAyB;AAAA,UACJ;AAAA,QACrB;AAAA,MACa;AAAA,IACb,CAAS;AAAA,EACT;AACA;AAuBO,MAAM,qBAAqB,SAAS;AAAA,EACvC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ,OAAO;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,KAAK,QAAQ;AACT,WAAO,IAAI,aAAa;AAAA,MACpB,OAAO,KAAK,MAAM,KAAK,MAAM;AAAA,IACzC,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,OAAO,QAAQA,SAAQ;AACzB,WAAO,KAAK,gBAAgB,KAAK,QAAQ,KAAK,IAAI,GAAG,QAAQA,OAAM;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,QAAQ,QAAQA,SAAQ,YAAY;AACtC,WAAO,KAAK,MAAM,MAAM,QAAQ,YAAYA,SAAQ,EAAE,WAAW,yCAAY,WAAY,CAAA,CAAC;AAAA,EAClG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,cAAc,EAAE,SAAS,OAAO,QAAO,GAAK;AACxC,WAAO,IAAI,aAAa;AAAA,MACpB,OAAO,KAAK,MAAM,cAAc,EAAE,SAAS,OAAO,SAAS;AAAA,IACvE,CAAS;AAAA,EACT;AACA;AA4CO,MAAM,sBAAsB,gBAAgB;AAAA,EAC/C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,MAAM;AAAA,MAAA;AAAA,IACzB,CAAS;AACD,SAAK,mBAAmB,OAAO,oBAAoB,KAAK;AACxD,SAAK,kBAAkB,OAAO,mBAAmB,KAAK;AAAA,EAC9D;AAAA,EACI,qBAAqB,SAASA,SAAQ,YAAY;AAC9C,UAAM,MAAM,UAAU,IAAI,iBAAiB,OAAO,KAAK;AACvD,WAAO,YAAYA,SAAQ,EAAE,WAAW,yCAAY,SAAS,MAAM;AAAA,EAC3E;AAAA,EACI,MAAM,QAAQ,OAAOA,SAAQ,YAAY;AACrC,WAAO,OAAO,CAAC,kBAAkB,MAAM,OAAO,OAAO,KAAK,qBAAqB,eAAeA,SAAQ,UAAU,CAAC,GAAG;AAAA;AAAA,MAEhH,iBAAiB,CAAC,UAAU,KAAK,gBAAgB,OAAO,KAAK;AAAA,MAC7D,SAAS,KAAK,IAAI,KAAK,mBAAmB,GAAG,CAAC;AAAA,MAC9C,WAAW;AAAA,IACvB,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWI,MAAM,OAAO,OAAOA,SAAQ;AACxB,WAAO,KAAK,gBAAgB,KAAK,QAAQ,KAAK,IAAI,GAAG,OAAOA,OAAM;AAAA,EAC1E;AAAA,EACI,MAAM,OAAO,QAAQ,SAAS,aAAa,cAAc;AACrD,UAAM,aAAa,CAAE;AACrB,QAAI;AACA,YAAM,OAAO,OAAO,kBAAkB;AAClC,cAAM,mBAAmB,OACpB,IAAI,CAACpH,IAAGF,OAAMA,EAAC,EACf,OAAO,CAACA,OAAM,WAAWA,GAAE,SAAU,CAAA,MAAM;AAAA,QAE5C,WAAWA,GAAE,SAAU,CAAA,aAAa,KAAK;AAC7C,cAAM,kBAAkB,iBAAiB,IAAI,CAACA,OAAM,OAAOA,EAAC,CAAC;AAC7D,cAAM,iBAAiB,iBAAiB,IAAI,CAACA,OAAM,KAAK,qBAAqB,eAAe,mCAAUA,KAAI,2CAAcA,GAAE,CAAC;AAC3H,cAAM,UAAU,MAAM,MAAM,MAAM,iBAAiB,gBAAgB;AAAA,UAC/D,GAAG;AAAA,UACH,kBAAkB;AAAA,QACtC,CAAiB;AACD,YAAI;AACJ,iBAASA,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK,GAAG;AACxC,gBAAM,SAAS,QAAQA,EAAC;AACxB,gBAAM,iBAAiB,iBAAiBA,EAAC;AAEzC,cAAI,kBAAkB,OAAO;AACzB,gBAAI,mBAAmB,QAAW;AAC9B,+BAAiB;AAEjB,6BAAe,QAAQ,gBAAgBA,EAAC;AAAA,YACpE;AAAA,UACA;AACoB,qBAAW,eAAe,SAAU,CAAA,IAAI;AAAA,QAC5D;AACgB,YAAI,gBAAgB;AAChB,gBAAM;AAAA,QAC1B;AACgB,eAAO;AAAA,MACvB,GAAe;AAAA;AAAA,QAEC,iBAAiB,CAAC,UAAU,KAAK,gBAAgB,OAAO,MAAM,KAAK;AAAA,QACnE,SAAS,KAAK,IAAI,KAAK,mBAAmB,GAAG,CAAC;AAAA,QAC9C,WAAW;AAAA,MAC3B,CAAa;AAAA,IACb,SACeW,IAAG;AACN,WAAI,6CAAc,sBAAqB,MAAM;AACzC,cAAMA;AAAA,MACtB;AAAA,IACA;AACQ,WAAO,OAAO,KAAK,UAAU,EACxB,KAAK,CAAC0C,IAAGC,OAAM,SAASD,IAAG,EAAE,IAAI,SAASC,IAAG,EAAE,CAAC,EAChD,IAAI,CAAC,QAAQ,WAAW,SAAS,KAAK,EAAE,CAAC,CAAC;AAAA,EACvD;AAAA,EACI,MAAM,MAAM,QAAQ,SAAS,cAAc;AACvC,WAAO,KAAK,iBAAiB,KAAK,OAAO,KAAK,IAAI,GAAG,QAAQ,SAAS,YAAY;AAAA,EAC1F;AACA;AAYO,MAAM,yBAAyB,SAAS;AAAA,EAC3C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IACnB,CAAS;AAED,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,SAAK,QAAQ,OAAO;AACpB,SAAK,SAAS,OAAO,UAAU,KAAK;AACpC,SAAK,OAAO,OAAO;AACnB,SAAK,OAAO,OAAO;AACnB,SAAK,mBAAmB,OAAO,oBAAoB,KAAK;AAAA,EAChE;AAAA,EACI,IAAI,QAAQ;AACR,WAAO,CAAC,KAAK,OAAO,GAAG,KAAK,QAAQ,KAAK,IAAI;AAAA,EACrD;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;;AACzB,UAAMgE,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,OAAQ,GAAE,cAAc,OAAO,OAAO,GAAGA,QAAO,OAAO,QAAW,QAAW,QAAWA,WAAA,gBAAAA,QAAQ;AACjK,WAAOA,QAAO;AACd,QAAI,gBAAgB;AACpB,QAAI;AACJ,QAAI;AACA,YAAM,eAAe,CAAC,KAAK,OAAO,GAAG,KAAK,MAAM;AAChD,eAAStH,KAAI,GAAGA,KAAI,aAAa,QAAQA,MAAK,GAAG;AAC7C,cAAM,OAAO,aAAaA,EAAC;AAC3B,cAAM,UAAU,KAAK,OAAO,eAAe,YAAYsH,SAAQ;AAAA,UAC3D,WAAW,yCAAY,SAAS,KAAK,mBAAmB,SAAY,YAAYtH,KAAI,CAAC;AAAA,QACzG,CAAiB,CAAC;AACF,wBAAgB,MAAM,eAAe,SAAS,mCAAS,MAAM;AAAA,MAC7E;AAEY,WAAIS,MAAA,mCAAS,WAAT,gBAAAA,IAAiB,SAAS;AAC1B,cAAM,IAAI,MAAM,SAAS;AAAA,MACzC;AACY,oBAAc,MAAM,KAAK,KAAK,OAAO,eAAe,YAAY6G,SAAQ;AAAA,QACpE,WAAW,yCAAY,SAAS,KAAK,mBAAmB,SAAY,YAAY,KAAK,MAAM,MAAM;AAAA,MACjH,CAAa,CAAC;AAAA,IACd,SACe3G,IAAG;AACN,aAAM,yCAAY,iBAAiBA;AACnC,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe,cAAc,aAAa,QAAQ;AACpE,WAAO;AAAA,EACf;AAAA,EACI,MAAM,MAAM,QAAQ,SAAS,cAAc;;AACvC,UAAM,aAAa,KAAK,gBAAgB,WAAW,CAAE,GAAE,OAAO,MAAM;AACpE,UAAM,mBAAmB,MAAM,QAAQ,IAAI,WAAW,IAAI,2BAA2B,CAAC;AACtF,UAAM,cAAc,MAAM,QAAQ,IAAI,iBAAiB,IAAI,OAAO,iBAAiBX,OAAM;AACrF,YAAM,iBAAiB,OAAM,mDAAiB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAOA,EAAC,GAAG,OAAO,GAAG,WAAWA,EAAC,EAAE,OAAO,QAAW,QAAW,QAAW,WAAWA,EAAC,EAAE;AACrL,aAAO,WAAWA,EAAC,EAAE;AACrB,aAAO;AAAA,IACnB,CAAS,CAAC;AAEF,QAAI,iBAAiB;AACrB,QAAI;AACA,eAASA,KAAI,GAAGA,KAAI,KAAK,MAAM,QAAQA,MAAK,GAAG;AAC3C,cAAM,OAAO,KAAK,MAAMA,EAAC;AACzB,cAAM,UAAU,KAAK,MAAM,gBAAgB,YAAY,IAAI,CAAC,YAAYyG,OAAM;AAC1E,gBAAM,kBAAkB,yCAAY,SAAS,KAAK,mBAAmB,SAAY,YAAYzG,KAAI,CAAC;AAClG,iBAAO,YAAY,WAAWyG,EAAC,GAAG,EAAE,WAAW,iBAAiB;AAAA,QACnE,CAAA,GAAG,YAAY;AAChB,yBAAiB,MAAM,eAAe,UAAShG,MAAA,WAAW,CAAC,MAAZ,gBAAAA,IAAe,MAAM;AAAA,MACpF;AAAA,IACA,SACeE,IAAG;AACN,YAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,eAAe,yCAAY,iBAAiBA,GAAE,CAAC;AAClF,YAAMA;AAAA,IAClB;AACQ,UAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,eAAe,yCAAY,eAAe,cAAc,gBAAgB,QAAQ,EAAE,CAAC;AACtH,WAAO;AAAA,EACf;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS;;AACnC,UAAM,mBAAmB,MAAM,4BAA4B,OAAO;AAClE,UAAM,EAAE,OAAO,GAAG,aAAc,IAAG,WAAW,CAAE;AAChD,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAO,OAAO,GAAG,OAAO,QAAW,QAAW,QAAW,6CAAc;AAChK,UAAM,QAAQ,CAAC,KAAK,OAAO,GAAG,KAAK,QAAQ,KAAK,IAAI;AACpD,QAAI,kBAAkB;AACtB,QAAI;AACJ,oBAAgB,iBAAiB;AAC7B,YAAM;AAAA,IAClB;AACQ,QAAI;AACA,UAAI,iBAAiB,MAAM,CAAC,EAAE,UAAU,eAAgB,GAAE,YAAY,cAAc;AAAA,QAChF,WAAW,yCAAY,SAAS,KAAK,mBAAmB,SAAY;AAAA,MACpF,CAAa,CAAC;AACF,eAASX,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK,GAAG;AACtC,cAAM,OAAO,MAAMA,EAAC;AACpB,yBAAiB,MAAM,KAAK,UAAU,gBAAgB,YAAY,cAAc;AAAA,UAC5E,WAAW,yCAAY,SAAS,KAAK,mBAAmB,SAAY,YAAYA,KAAI,CAAC;AAAA,QACzG,CAAiB,CAAC;AAAA,MAClB;AACY,uBAAiB,SAAS,gBAAgB;AACtC,SAAAS,MAAA,mCAAS,WAAT,gBAAAA,IAAiB;AACjB,cAAM;AACN,YAAI,iBAAiB;AACjB,cAAI,gBAAgB,QAAW;AAC3B,0BAAc;AAAA,UACtC,OACyB;AACD,gBAAI;AAEA,4BAAc,OAAO,aAAa,KAAK;AAAA,YACnE,SAC+BE,IAAG;AACN,4BAAc;AACd,gCAAkB;AAAA,YAC9C;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,IACA,SACeA,IAAG;AACN,aAAM,yCAAY,iBAAiBA;AACnC,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe,cAAc,aAAa,QAAQ;AAAA,EAC5E;AAAA,EACI,SAAS2G,SAAQ;AACb,UAAM,QAAQ,IAAI,MAAO;AAEzB,QAAI,kBAAkB;AACtB,SAAK,MAAM,QAAQ,CAAC,MAAM,UAAU;AAChC,YAAM,YAAY,KAAK,SAASA,OAAM;AACtC,UAAI,UAAU,GAAG;AACb,kBAAU,cAAe;AAAA,MACzC;AACY,UAAI,UAAU,KAAK,MAAM,SAAS,GAAG;AACjC,kBAAU,aAAc;AAAA,MACxC;AACY,YAAM,OAAO,SAAS;AACtB,YAAM,gBAAgB,UAAU,UAAW;AAC3C,UAAI,CAAC,eAAe;AAChB,cAAM,IAAI,MAAM,YAAY,IAAI,oBAAoB;AAAA,MACpE;AACY,UAAI,iBAAiB;AACjB,cAAM,QAAQ,iBAAiB,aAAa;AAAA,MAC5D;AACY,wBAAkB,UAAU,SAAU;AAAA,IAClD,CAAS;AACD,WAAO;AAAA,EACf;AAAA,EACI,KAAK,YAAY;AACb,QAAI,iBAAiB,mBAAmB,UAAU,GAAG;AACjD,aAAO,IAAI,iBAAiB;AAAA,QACxB,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK,OAAO,OAAO;AAAA,UACvB,KAAK;AAAA,UACL,WAAW;AAAA,UACX,GAAG,WAAW;AAAA,QAClC,CAAiB;AAAA,QACD,MAAM,WAAW;AAAA,QACjB,MAAM,KAAK,QAAQ,WAAW;AAAA,MAC9C,CAAa;AAAA,IACb,OACa;AACD,aAAO,IAAI,iBAAiB;AAAA,QACxB,OAAO,KAAK;AAAA,QACZ,QAAQ,CAAC,GAAG,KAAK,QAAQ,KAAK,IAAI;AAAA,QAClC,MAAM,kBAAkB,UAAU;AAAA,QAClC,MAAM,KAAK;AAAA,MAC3B,CAAa;AAAA,IACb;AAAA,EACA;AAAA;AAAA,EAEI,OAAO,mBAAmB,OAAO;AAC7B,WAAO,MAAM,QAAQ,MAAM,MAAM,KAAK,SAAS,WAAW,KAAK;AAAA,EACvE;AAAA;AAAA,EAEI,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,GAAG,cAAc;AAC7C,QAAI,QAAQ,CAAE;AACd,QAAI,OAAO,iBAAiB,UAAU;AAClC,YAAM,OAAO;AAAA,IACzB,WACiB,iBAAiB,QAAW;AACjC,cAAQ;AAAA,IACpB;AACQ,WAAO,IAAI,iBAAiB;AAAA,MACxB,GAAG;AAAA,MACH,OAAO,kBAAkB,KAAK;AAAA,MAC9B,QAAQ,UAAU,MAAM,GAAG,EAAE,EAAE,IAAI,iBAAiB;AAAA,MACpD,MAAM,kBAAkB,UAAU,UAAU,SAAS,CAAC,CAAC;AAAA,IACnE,CAAS;AAAA,EACT;AACA;AAiBO,MAAM,oBAAoB,SAAS;AAAA,EACtC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,eAAe;AACX,WAAO,OAAO,KAAK,KAAK,KAAK;AAAA,EACrC;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ,CAAE;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,KAAK,GAAG;AACrD,WAAK,MAAM,GAAG,IAAI,kBAAkB,KAAK;AAAA,IACrD;AAAA,EACA;AAAA,EACI,OAAO,KAAK,OAAO;AACf,WAAO,IAAI,YAAY,EAAE,OAAO;AAAA,EACxC;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAMA,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,OAAM,GAAI;AAAA,MACvE;AAAA,IACZ,GAAWA,QAAO,OAAO,QAAW,QAAW,QAAWA,WAAA,gBAAAA,QAAQ;AAC1D,WAAOA,QAAO;AAEd,UAAM,SAAS,CAAE;AACjB,QAAI;AACA,YAAM,WAAW,OAAO,QAAQ,KAAK,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,MAAM;AACvE,eAAO,GAAG,IAAI,MAAM,SAAS,OAAO,OAAO,YAAYA,SAAQ;AAAA,UAC3D,WAAW,yCAAY,SAAS,WAAW,GAAG;AAAA,QAClE,CAAiB,CAAC;AAAA,MAClB,CAAa;AACD,YAAM,eAAe,QAAQ,IAAI,QAAQ,GAAG,mCAAS,MAAM;AAAA,IACvE,SACe3G,IAAG;AACN,aAAM,yCAAY,iBAAiBA;AACnC,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe;AACjC,WAAO;AAAA,EACf;AAAA,EACI,OAAO,WAAW,WAAW,YAAY,SAAS;AAE9C,UAAM,QAAQ,EAAE,GAAG,KAAK,MAAO;AAE/B,UAAM,cAAc,KAAK,WAAW,OAAO,KAAK,KAAK,EAAE,MAAM;AAE7D,UAAM,QAAQ,IAAI,IAAI,OAAO,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,QAAQ,GAAGX,OAAM;AACpE,YAAM,MAAM,SAAS,UAAU,YAAYA,EAAC,GAAG,YAAY,SAAS;AAAA,QAChE,WAAW,yCAAY,SAAS,WAAW,GAAG;AAAA,MAC9D,CAAa,CAAC;AACF,aAAO,CAAC,KAAK,IAAI,KAAM,EAAC,KAAK,CAAC,YAAY,EAAE,KAAK,KAAK,OAAM,EAAG,CAAC;AAAA,IAC5E,CAAS,CAAC;AAIF,WAAO,MAAM,MAAM;AACf,YAAM,UAAU,QAAQ,KAAK,MAAM,OAAM,CAAE;AAC3C,YAAM,EAAE,KAAK,QAAQ,IAAG,IAAK,MAAM,eAAe,SAAS,mCAAS,MAAM;AAC1E,YAAM,OAAO,GAAG;AAChB,UAAI,CAAC,OAAO,MAAM;AACd,cAAM,EAAE,CAAC,GAAG,GAAG,OAAO,MAAO;AAC7B,cAAM,IAAI,KAAK,IAAI,KAAI,EAAG,KAAK,CAAC0K,aAAY,EAAE,KAAK,KAAK,QAAAA,QAAM,EAAG,CAAC;AAAA,MAClF;AAAA,IACA;AAAA,EACA;AAAA,EACI,UAAU,WAAW,SAAS;AAC1B,WAAO,KAAK,2BAA2B,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,OAAO;AAAA,EAC7F;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,oBAAgB,YAAY;AACxB,YAAM;AAAA,IAClB;AACQ,UAAMpD,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,KAAK,UAAU,UAAS,GAAIA,OAAM;AAAA,MAC7C,QAAAA;AAAA,IACZ,CAAS;AACD,UAAM,iBAAiB;AACvB,WAAO,uBAAuB,mBAAmB,gBAAgB;AAAA,EACzE;AACA;AAIO,MAAM,0BAA0B,SAAS;AAAA,EAC5C,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,QAAI,CAAC,oBAAoB,OAAO,IAAI,GAAG;AACnC,YAAM,IAAI,MAAM,0FAA0F;AAAA,IACtH;AACQ,SAAK,OAAO,OAAO;AAAA,EAC3B;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAM,CAACA,OAAM,IAAI,KAAK,gBAAgB,WAAW,CAAE,GAAE,CAAC;AACtD,UAAM,YAAY,MAAM,4BAA4BA,OAAM;AAC1D,UAAM,UAAU,KAAK,KAAK,YAAYA,SAAQ,EAAE,WAAW,GAAG,KAAK;AACnE,WAAO,eAAe,SAASA,WAAA,gBAAAA,QAAQ,MAAM;AAAA,EACrD;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS;;AACnC,UAAM,CAACA,OAAM,IAAI,KAAK,gBAAgB,WAAW,CAAE,GAAE,CAAC;AACtD,UAAM,SAAS,MAAM,KAAK,OAAO,OAAO,OAAO;AAC/C,QAAI,gBAAgB,MAAM,GAAG;AACzB,uBAAiB,QAAQ,QAAQ;AAC7B,SAAA7G,MAAA6G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA7G,IAAgB;AAChB,cAAM;AAAA,MACtB;AACY;AAAA,IACZ;AACQ,QAAI,WAAW,MAAM,GAAG;AACpB,aAAO,MAAM;AACT,SAAAG,MAAA0G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA1G,IAAgB;AAChB,cAAM,QAAQ,OAAO,KAAM;AAC3B,YAAI,MAAM;AACN;AACJ,cAAM,MAAM;AAAA,MAC5B;AACY;AAAA,IACZ;AACQ,UAAM;AAAA,EACd;AAAA,EACI,OAAO,KAAK,MAAM;AACd,WAAO,IAAI,kBAAkB,EAAE,MAAM;AAAA,EAC7C;AACA;AACA,SAAS,2BAA2B,MAAM;AACtC,MAAI,oBAAoB,IAAI,GAAG;AAC3B,UAAM,IAAI,MAAM,mHAAmH;AAAA,EAC3I;AACA;AA2BO,MAAM,uBAAuB,SAAS;AAAA,EACzC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,QAAI,oBAAoB,OAAO,IAAI,GAAG;AAElC,aAAO,kBAAkB,KAAK,OAAO,IAAI;AAAA,IACrD;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,+BAA2B,OAAO,IAAI;AACtC,SAAK,OAAO,OAAO;AAAA,EAC3B;AAAA,EACI,OAAO,KAAK,MAAM;AACd,WAAO,IAAI,eAAe;AAAA,MACtB;AAAA,IACZ,CAAS;AAAA,EACT;AAAA,EACI,MAAM,QAAQ,OAAO0G,SAAQ,YAAY;AACrC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAM,cAAc,YAAYA,SAAQ;AAAA,QACpC,WAAW,yCAAY;AAAA,QACvB,kBAAiBA,WAAA,gBAAAA,QAAQ,mBAAkB,2BAA2B;AAAA,MACtF,CAAa;AACD,WAAK,mCAAmC,cAAc,uBAAuB,WAAW,GAAG,YAAY;;AACnG,YAAI;AACA,cAAI,SAAS,MAAM,KAAK,KAAK,OAAO;AAAA,YAChC,GAAG;AAAA,UAC3B,CAAqB;AACD,cAAI,UAAU,SAAS,WAAW,MAAM,GAAG;AACvC,iBAAIA,WAAA,gBAAAA,QAAQ,oBAAmB,GAAG;AAC9B,oBAAM,IAAI,MAAM,0BAA0B;AAAA,YACtE;AACwB,qBAAS,MAAM,OAAO,OAAO,OAAO;AAAA,cAChC,GAAG;AAAA,cACH,iBAAiB,YAAY,kBAAkB,2BAA2B;AAAA,YACtG,CAAyB;AAAA,UACzB,WAC6B,gBAAgB,MAAM,GAAG;AAC9B,gBAAI;AACJ,6BAAiB,SAAS,8BAA8B,aAAa,MAAM,GAAG;AAC1E,eAAA7G,MAAA6G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA7G,IAAgB;AAChB,kBAAI,gBAAgB,QAAW;AAC3B,8BAAc;AAAA,cAC9C,OACiC;AAED,oBAAI;AAEA,gCAAc,OAAO,aAAa,KAAK;AAAA,gBAC3E,SACuCE,IAAG;AACN,gCAAc;AAAA,gBAClD;AAAA,cACA;AAAA,YACA;AACwB,qBAAS;AAAA,UACjC,WAC6B,mBAAmB,MAAM,GAAG;AACjC,gBAAI;AACJ,uBAAW,SAAS,yBAAyB,aAAa,MAAM,GAAG;AAC/D,eAAAC,MAAA0G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA1G,IAAgB;AAChB,kBAAI,gBAAgB,QAAW;AAC3B,8BAAc;AAAA,cAC9C,OACiC;AAED,oBAAI;AAEA,gCAAc,OAAO,aAAa,KAAK;AAAA,gBAC3E,SACuCD,IAAG;AACN,gCAAc;AAAA,gBAClD;AAAA,cACA;AAAA,YACA;AACwB,qBAAS;AAAA,UACjC;AACoB,kBAAQ,MAAM;AAAA,QAClC,SACuBA,IAAG;AACN,iBAAOA,EAAC;AAAA,QAC5B;AAAA,MACA,CAAa;AAAA,IACb,CAAS;AAAA,EACT;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,WAAO,KAAK,gBAAgB,KAAK,QAAQ,KAAK,IAAI,GAAG,OAAO,OAAO;AAAA,EAC3E;AAAA,EACI,OAAO,WAAW,WAAW,YAAY2G,SAAQ;;AAC7C,QAAI;AACJ,qBAAiB,SAAS,WAAW;AACjC,UAAI,eAAe,QAAW;AAC1B,qBAAa;AAAA,MAC7B,OACiB;AAED,YAAI;AAEA,uBAAa,OAAO,YAAY,KAAK;AAAA,QACzD,SACuB3G,IAAG;AACN,uBAAa;AAAA,QACjC;AAAA,MACA;AAAA,IACA;AACQ,UAAM,cAAc,YAAY2G,SAAQ;AAAA,MACpC,WAAW,yCAAY;AAAA,MACvB,kBAAiBA,WAAA,gBAAAA,QAAQ,mBAAkB,2BAA2B;AAAA,IAClF,CAAS;AACD,UAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAClD,WAAK,mCAAmC,cAAc,uBAAuB,WAAW,GAAG,YAAY;AACnG,YAAI;AACA,gBAAM,MAAM,MAAM,KAAK,KAAK,YAAY;AAAA,YACpC,GAAG;AAAA,YACH,QAAQ;AAAA,UAChC,CAAqB;AACD,kBAAQ,GAAG;AAAA,QAC/B,SACuB3G,IAAG;AACN,iBAAOA,EAAC;AAAA,QAC5B;AAAA,MACA,CAAa;AAAA,IACb,CAAS;AACD,QAAI,UAAU,SAAS,WAAW,MAAM,GAAG;AACvC,WAAI2G,WAAA,gBAAAA,QAAQ,oBAAmB,GAAG;AAC9B,cAAM,IAAI,MAAM,0BAA0B;AAAA,MAC1D;AACY,YAAM,SAAS,MAAM,OAAO,OAAO,YAAY,WAAW;AAC1D,uBAAiB,SAAS,QAAQ;AAC9B,cAAM;AAAA,MACtB;AAAA,IACA,WACiB,gBAAgB,MAAM,GAAG;AAC9B,uBAAiB,SAAS,8BAA8B,aAAa,MAAM,GAAG;AAC1E,SAAA7G,MAAA6G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA7G,IAAgB;AAChB,cAAM;AAAA,MACtB;AAAA,IACA,WACiB,mBAAmB,MAAM,GAAG;AACjC,iBAAW,SAAS,yBAAyB,aAAa,MAAM,GAAG;AAC/D,SAAAG,MAAA0G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA1G,IAAgB;AAChB,cAAM;AAAA,MACtB;AAAA,IACA,OACa;AACD,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,UAAU,WAAW,SAAS;AAC1B,WAAO,KAAK,2BAA2B,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,OAAO;AAAA,EAC7F;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,oBAAgB,YAAY;AACxB,YAAM;AAAA,IAClB;AACQ,UAAM0G,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,KAAK,UAAU,UAAS,GAAIA,OAAM;AAAA,MAC7C,QAAAA;AAAA,IACZ,CAAS;AACD,UAAM,iBAAiB;AACvB,WAAO,uBAAuB,mBAAmB,gBAAgB;AAAA,EACzE;AACA;AAwGO,MAAM,8BAA8B,SAAS;AAAA,EAChD,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,WAAW,OAAO;AACvB,SAAK,YAAY,OAAO;AAAA,EAChC;AAAA,EACI,CAAC,YAAY;AACT,UAAM,KAAK;AACX,eAAW,YAAY,KAAK,WAAW;AACnC,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAMA,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,UAAM,EAAE,OAAO,GAAG,kBAAiB,IAAKA;AACxC,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAO,OAAO,GAAG,OAAO,QAAW,QAAW,QAAW,uDAAmB;AACrK,UAAM,cAAc,YAAY,mBAAmB;AAAA,MAC/C,WAAW,yCAAY;AAAA,IACnC,CAAS;AACD,UAAM,MAAM,MAAM,mCAAmC,cAAc,aAAa,YAAY;;AACxF,UAAI;AACJ,iBAAW,YAAY,KAAK,aAAa;AACrC,SAAA7G,MAAA6G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA7G,IAAgB;AAChB,YAAI;AACA,gBAAM,SAAS,MAAM,SAAS,OAAO,OAAO,WAAW;AACvD,iBAAM,yCAAY,eAAe,cAAc,QAAQ,QAAQ;AAC/D,iBAAO;AAAA,QAC3B,SACuBE,IAAG;AACN,cAAI,eAAe,QAAW;AAC1B,yBAAaA;AAAA,UACrC;AAAA,QACA;AAAA,MACA;AACY,UAAI,eAAe,QAAW;AAC1B,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACrE;AACY,aAAM,yCAAY,iBAAiB;AACnC,YAAM;AAAA,IAClB,CAAS;AACD,WAAO;AAAA,EACf;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS;;AACnC,UAAM2G,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,MAAM,4BAA4BA,OAAM;AACjE,UAAM,EAAE,OAAO,GAAG,kBAAiB,IAAKA;AACxC,UAAM,aAAa,OAAM,qDAAkB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAO,OAAO,GAAG,OAAO,QAAW,QAAW,QAAW,uDAAmB;AACrK,QAAI;AACJ,QAAI;AACJ,eAAW,YAAY,KAAK,aAAa;AACrC,OAAA7G,MAAA6G,WAAA,gBAAAA,QAAQ,WAAR,gBAAA7G,IAAgB;AAChB,YAAM,cAAc,YAAY,mBAAmB;AAAA,QAC/C,WAAW,yCAAY;AAAA,MACvC,CAAa;AACD,UAAI;AACA,cAAM,iBAAiB,MAAM,SAAS,OAAO,OAAO,WAAW;AAC/D,iBAAS,8BAA8B,aAAa,cAAc;AAClE;AAAA,MAChB,SACmBE,IAAG;AACN,YAAI,eAAe,QAAW;AAC1B,uBAAaA;AAAA,QACjC;AAAA,MACA;AAAA,IACA;AACQ,QAAI,WAAW,QAAW;AACtB,YAAM,QAAQ,cAAc,IAAI,MAAM,qCAAqC;AAC3E,aAAM,yCAAY,iBAAiB;AACnC,YAAM;AAAA,IAClB;AACQ,QAAI;AACJ,QAAI;AACA,uBAAiB,SAAS,QAAQ;AAC9B,cAAM;AACN,YAAI;AACA,mBAAS,WAAW,SAAY,SAAS,OAAO,QAAQ,KAAK;AAAA,QACjF,SACuBA,IAAG;AACN,mBAAS;AAAA,QAC7B;AAAA,MACA;AAAA,IACA,SACeA,IAAG;AACN,aAAM,yCAAY,iBAAiBA;AACnC,YAAMA;AAAA,IAClB;AACQ,WAAM,yCAAY,eAAe,cAAc,QAAQ,QAAQ;AAAA,EACvE;AAAA,EACI,MAAM,MAAM,QAAQ,SAAS,cAAc;;AACvC,QAAI,6CAAc,kBAAkB;AAChC,YAAM,IAAI,MAAM,kBAAkB;AAAA,IAC9C;AACQ,UAAM,aAAa,KAAK,gBAAgB,WAAW,CAAE,GAAE,OAAO,MAAM;AACpE,UAAM,mBAAmB,MAAM,QAAQ,IAAI,WAAW,IAAI,CAAC2G,YAAW,4BAA4BA,OAAM,CAAC,CAAC;AAC1G,UAAM,cAAc,MAAM,QAAQ,IAAI,iBAAiB,IAAI,OAAO,iBAAiBtH,OAAM;AACrF,YAAM,iBAAiB,OAAM,mDAAiB,iBAAiB,KAAK,OAAM,GAAI,cAAc,OAAOA,EAAC,GAAG,OAAO,GAAG,WAAWA,EAAC,EAAE,OAAO,QAAW,QAAW,QAAW,WAAWA,EAAC,EAAE;AACrL,aAAO,WAAWA,EAAC,EAAE;AACrB,aAAO;AAAA,IACnB,CAAS,CAAC;AAEF,QAAI;AACJ,eAAW,YAAY,KAAK,aAAa;AACrC,OAAAS,MAAA,WAAW,CAAC,EAAE,WAAd,gBAAAA,IAAsB;AACtB,UAAI;AACA,cAAM,UAAU,MAAM,SAAS,MAAM,QAAQ,YAAY,IAAI,CAAC,YAAYgG,OAAM,YAAY,WAAWA,EAAC,GAAG;AAAA,UACvG,WAAW,yCAAY;AAAA,QAC3C,CAAiB,CAAC,GAAG,YAAY;AACjB,cAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,YAAYzG,OAAM,yCAAY,eAAe,cAAc,QAAQA,EAAC,GAAG,QAAQ,EAAE,CAAC;AACrH,eAAO;AAAA,MACvB,SACmBW,IAAG;AACN,YAAI,eAAe,QAAW;AAC1B,uBAAaA;AAAA,QACjC;AAAA,MACA;AAAA,IACA;AACQ,QAAI,CAAC,YAAY;AACb,YAAM,IAAI,MAAM,sCAAsC;AAAA,IAClE;AACQ,UAAM,QAAQ,IAAI,YAAY,IAAI,CAAC,eAAe,yCAAY,iBAAiB,WAAW,CAAC;AAC3F,UAAM;AAAA,EACd;AACA;AAEO,SAAS,kBAAkB,YAAY;AAC1C,MAAI,OAAO,eAAe,YAAY;AAClC,WAAO,IAAI,eAAe,EAAE,MAAM,WAAU,CAAE;AAAA,EACtD,WACa,SAAS,WAAW,UAAU,GAAG;AACtC,WAAO;AAAA,EACf,WACa,CAAC,MAAM,QAAQ,UAAU,KAAK,OAAO,eAAe,UAAU;AACnE,UAAM,YAAY,CAAE;AACpB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU,GAAG;AACnD,gBAAU,GAAG,IAAI,kBAAkB,KAAK;AAAA,IACpD;AACQ,WAAO,IAAI,YAAY;AAAA,MACnB,OAAO;AAAA,IACnB,CAAS;AAAA,EACT,OACS;AACD,UAAM,IAAI,MAAM;AAAA,iCAA4E;AAAA,EACpG;AACA;AAgCO,MAAM,uBAAuB,SAAS;AAAA,EACzC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAEhB,QAAI,kBAAkB,aAAa;AAE/B,eAAS,EAAE,QAAQ,OAAQ;AAAA,IACvC;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,SAAS,OAAO;AAAA,EAC7B;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAM,eAAe,MAAM,KAAK,OAAO,OAAO,OAAO,OAAO;AAC5D,WAAO;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACN;AAAA,EACT;AAAA,EACI,OAAO,WAAW,WAAW,YAAY,SAAS;AAE9C,UAAM,aAAa,KAAK,OAAO,aAAc;AAE7C,UAAM,CAAC,gBAAgB,SAAS,IAAI,KAAK,SAAS;AAElD,UAAM,eAAe,KAAK,OAAO,UAAU,WAAW,YAAY,SAAS,EAAE,WAAW,yCAAY,WAAY,CAAA,CAAC;AAEjH,UAAM,0BAA0B,aAAa,KAAM;AAEnD,qBAAiB,SAAS,gBAAgB;AACtC,UAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,GAAG;AACnD,cAAM,IAAI,MAAM,8DAA8D,OAAO,KAAK,EAAE;AAAA,MAC5G;AACY,YAAM,WAAW,OAAO,YAAY,OAAO,QAAQ,KAAK,EAAE,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,SAAS,GAAG,CAAC,CAAC;AACtG,UAAI,OAAO,KAAK,QAAQ,EAAE,SAAS,GAAG;AAClC,cAAM;AAAA,MACtB;AAAA,IACA;AAEQ,WAAO,MAAM,yBAAyB;AACtC,qBAAiB,SAAS,cAAc;AACpC,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,UAAU,WAAW,SAAS;AAC1B,WAAO,KAAK,2BAA2B,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,OAAO;AAAA,EAC7F;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,oBAAgB,YAAY;AACxB,YAAM;AAAA,IAClB;AACQ,UAAM2G,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,KAAK,UAAU,UAAS,GAAIA,OAAM;AAAA,MAC7C,QAAAA;AAAA,IACZ,CAAS;AACD,UAAM,iBAAiB;AACvB,WAAO,uBAAuB,mBAAmB,gBAAgB;AAAA,EACzE;AACA;AAyBO,MAAM,qBAAqB,SAAS;AAAA,EACvC,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,QAAI,OAAO,WAAW,YAAY,MAAM,QAAQ,MAAM,GAAG;AAErD,eAAS,EAAE,MAAM,OAAQ;AAAA,IACrC;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,OAAO,OAAO;AAAA,EAC3B;AAAA,EACI,MAAM,MAAM,OAAO;AACf,QAAI,OAAO,KAAK,SAAS,UAAU;AAC/B,aAAO,MAAM,KAAK,IAAI;AAAA,IAClC,OACa;AACD,YAAM,SAAS,KAAK,KACf,IAAI,CAAC,QAAQ,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,EAC9B,OAAO,CAACpD,OAAMA,GAAE,CAAC,MAAM,MAAS;AACrC,aAAO,OAAO,WAAW,IAAI,SAAY,OAAO,YAAY,MAAM;AAAA,IAC9E;AAAA,EACA;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,WAAO,KAAK,gBAAgB,KAAK,MAAM,KAAK,IAAI,GAAG,OAAO,OAAO;AAAA,EACzE;AAAA,EACI,OAAO,WAAW,WAAW;AACzB,qBAAiB,SAAS,WAAW;AACjC,YAAM,SAAS,MAAM,KAAK,MAAM,KAAK;AACrC,UAAI,WAAW,QAAW;AACtB,cAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACI,UAAU,WAAW,SAAS;AAC1B,WAAO,KAAK,2BAA2B,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,OAAO;AAAA,EAC7F;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,oBAAgB,YAAY;AACxB,YAAM;AAAA,IAClB;AACQ,UAAMoD,UAAS,aAAa,OAAO;AACnC,UAAM,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,KAAK,UAAU,UAAS,GAAIA,OAAM;AAAA,MAC7C,QAAAA;AAAA,IACZ,CAAS;AACD,UAAM,iBAAiB;AACvB,WAAO,uBAAuB,mBAAmB,gBAAgB;AAAA,EACzE;AACA;AACO,MAAM,yBAAyB,gBAAgB;AAAA,EAClD,YAAY,QAAQ;AAChB,UAAM,WAAW,iBAAiB,KAAK;AAAA,MACnC,eAAe,KAAK,OAAO,UAAU;AACjC,YAAI;AACJ,YAAI,YAAY,KAAK,GAAG;AACpB,cAAI;AACA,wBAAY,MAAM,KAAK,OAAO,WAAW,MAAM,IAAI;AAAA,UAC3E,SAC2B3G,IAAG;AACN,kBAAM,IAAI,0BAA0B,qDAAqD,KAAK,UAAU,MAAM,IAAI,CAAC;AAAA,UAC3I;AAAA,QACA,OACqB;AACD,sBAAY;AAAA,QAChC;AACgB,eAAO;AAAA,MACvB,CAAa,EAAE,WAAW,EAAE,SAAS,GAAG,OAAO,IAAI,gBAAgB;AAAA,MACvD,OAAO;AAAA,IACV,CAAA,EAAE,WAAW,EAAE,SAAS,OAAO,KAAI,CAAE;AACtC,UAAM;AAAA,MACF,OAAO;AAAA,MACP,QAAQ,OAAO,UAAU,CAAE;AAAA,IACvC,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,OAAO,OAAO;AACnB,SAAK,cAAc,OAAO;AAC1B,SAAK,SAAS,OAAO;AAAA,EAC7B;AAAA,EACI,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AACA;AAcO,SAAS,sBAAsB,UAAU,QAAQ;;AACpD,QAAM,OAAO,OAAO,QAAQ,SAAS,QAAS;AAC9C,QAAM,cAAc,OAAO,iBAAeF,MAAA,OAAO,WAAP,gBAAAA,IAAe;AACzD,MAAI,OAAO,OAAO,gBAAgB+J,IAAE,WAAW;AAC3C,WAAO,IAAI,iBAAiB;AAAA,MACxB;AAAA,MACA;AAAA,MACA,QAAQA,IACH,OAAO;AAAA,QACR,OAAOA,IAAE,OAAQ;AAAA,MACpB,CAAA,EACI,UAAU,CAAC,UAAU,MAAM,KAAK;AAAA,MACrC,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AACI,SAAO,IAAI,iBAAiB;AAAA,IACxB;AAAA,IACA;AAAA,IACA,QAAQ,OAAO;AAAA,IACf,OAAO;AAAA,EACf,CAAK;AACL;AC3yEA,MAAM,aAAa,OAAO,IAAI,oBAAoB;AAElD,SAAS,GAAG,OAAO,MAAM;AACvB,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,WAAO;AAAA,EACX;AACE,MAAI,iBAAiB,MAAM;AACzB,WAAO;AAAA,EACX;AACE,MAAI,CAAC,OAAO,UAAU,eAAe,KAAK,MAAM,UAAU,GAAG;AAC3D,UAAM,IAAI;AAAA,MACR,UAAU,KAAK,QAAQ,WAAW;AAAA,IACnC;AAAA,EACL;AACE,MAAI,MAAM,OAAO,eAAe,KAAK,EAAE;AACvC,MAAI,KAAK;AACP,WAAO,KAAK;AACV,UAAI,cAAc,OAAO,IAAI,UAAU,MAAM,KAAK,UAAU,GAAG;AAC7D,eAAO;AAAA,MACf;AACM,YAAM,OAAO,eAAe,GAAG;AAAA,IACrC;AAAA,EACA;AACE,SAAO;AACT;ACtBU/J,MAAA;AADV,MAAM,iBAAiB;AAAA,EAErB,MAAM,SAAS;AACb,YAAQ,IAAI,OAAO;AAAA,EACvB;AACA;AAJE,cADI,kBACIA,KAAc;AAMd;AADV,MAAM,cAAc;AAAA,EAGlB,YAAY6G,SAAQ;AADpB;AAEE,SAAK,UAASA,WAAA,gBAAAA,QAAQ,WAAU,IAAI,iBAAkB;AAAA,EAC1D;AAAA,EACE,SAAS,OAAO,QAAQ;AACtB,UAAM,oBAAoB,OAAO,IAAI,CAACkC,OAAM;AAC1C,UAAI;AACF,eAAO,KAAK,UAAUA,EAAC;AAAA,MAC/B,QAAc;AACN,eAAO,OAAOA,EAAC;AAAA,MACvB;AAAA,IACA,CAAK;AACD,UAAM,YAAY,kBAAkB,SAAS,gBAAgB,kBAAkB,KAAK,IAAI,CAAC,MAAM;AAC/F,SAAK,OAAO,MAAM,UAAU,KAAK,GAAG,SAAS,EAAE;AAAA,EACnD;AACA;AAhBE,cADI,eACI,IAAc;AAkBd;AADV,MAAM,WAAW;AAAA,EAEf,WAAW;AAAA,EACb;AACA;AAHE,cADI,YACI,IAAc;AC1BxB,MAAM,YAAY,OAAO,IAAI,cAAc;ACE3C,MAAM,SAAS,OAAO,IAAI,gBAAgB;AAC1C,MAAM,UAAU,OAAO,IAAI,iBAAiB;AAC5C,MAAM,qBAAqB,OAAO,IAAI,4BAA4B;AAClE,MAAM,eAAe,OAAO,IAAI,sBAAsB;AACtD,MAAM,WAAW,OAAO,IAAI,kBAAkB;AAC9C,MAAM,UAAU,OAAO,IAAI,iBAAiB;AAC5C,MAAM,qBAAqB,OAAO,IAAI,4BAA4B;AAClE,MAAM,iBAAiB,OAAO,IAAI,wBAAwB;AAEhD,iBAgBP,gBAKA,mBAEA,aAEA,cAEA,yBAKA,eAEA,cAEAxI,MAAA,gBAEA;AAvCH,MAAM,MAAM;AAAA,EAwCV,YAAY,MAAMgJ,SAAQ,UAAU;AAvBpC;AAAA;AAAA;AAAA;AAAA,wBAAC;AAKD;AAAA;AAAA;AAAA;AAAA,wBAAC;AAED;AAAA,wBAAC;AAED;AAAA,wBAAC;AAED;AAAA,wBAAC;AAKD;AAAA;AAAA;AAAA;AAAA,wBAAC;AAED;AAAA,wBAAC,IAAW;AAEZ;AAAA,wBAAChJ,KAAkB;AAEnB;AAAA,wBAAC;AAEC,SAAK,SAAS,IAAI,KAAK,YAAY,IAAI;AACvC,SAAK,MAAM,IAAIgJ;AACf,SAAK,QAAQ,IAAI;AAAA,EACrB;AACA;AA5CE,cADI,OACI,IAAc;AAAA;AAEtB,cAHI,OAGG,UAAS;AAAA,EACd,MAAM;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD;AAqCH,SAAS,aAAa,OAAO;AAC3B,SAAO,MAAM,SAAS;AACxB;AACA,SAAS,mBAAmB,OAAO;AACjC,SAAO,GAAG,MAAM,MAAM,KAAK,QAAQ,IAAI,MAAM,SAAS,CAAC;AACzD;AC3CU;AApBV,MAAM,OAAO;AAAA,EACX,YAAY,OAAO1C,SAAQ;AAoB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCE,SAAK,QAAQ;AACb,SAAK,SAASA;AACd,SAAK,OAAOA,QAAO;AACnB,SAAK,YAAYA,QAAO;AACxB,SAAK,UAAUA,QAAO;AACtB,SAAK,UAAUA,QAAO;AACtB,SAAK,YAAYA,QAAO;AACxB,SAAK,aAAaA,QAAO;AACzB,SAAK,aAAaA,QAAO;AACzB,SAAK,UAAUA,QAAO;AACtB,SAAK,WAAWA,QAAO;AACvB,SAAK,aAAaA,QAAO;AACzB,SAAK,aAAaA,QAAO;AACzB,SAAK,WAAWA,QAAO;AACvB,SAAK,aAAaA,QAAO;AACzB,SAAK,YAAYA,QAAO;AACxB,SAAK,oBAAoBA,QAAO;AAAA,EACpC;AAAA,EAmBE,mBAAmB,OAAO;AACxB,WAAO;AAAA,EACX;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,sBAAsB;AACpB,WAAO,KAAK,OAAO,cAAc,UAAU,KAAK,OAAO,UAAU,SAAS;AAAA,EAC9E;AACA;AA5BE,cApBI,QAoBI,IAAc;ACnBd;AADV,MAAM,cAAc;AAAA,EAGlB,YAAY,MAAM,UAAU,YAAY;AADxC;AAkEA;AAAA;AAAA;AAAA,oCAAW,KAAK;AAgBhB;AAAA;AAAA;AAAA,qCAAY,KAAK;AAhFf,SAAK,SAAS;AAAA,MACZ;AAAA,MACA,WAAW,SAAS;AAAA,MACpB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,QAAQ;AACN,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,UAAU;AACR,SAAK,OAAO,UAAU;AACtB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,QAAQ,OAAO;AACb,SAAK,OAAO,UAAU;AACtB,SAAK,OAAO,aAAa;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,IAAI;AACb,SAAK,OAAO,YAAY;AACxB,SAAK,OAAO,aAAa;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,YAAY,IAAI;AACd,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,aAAa;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,aAAa;AACX,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,UAAU;AACtB,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,QAAQ,MAAM;AACZ,QAAI,KAAK,OAAO,SAAS;AACvB;AACF,SAAK,OAAO,OAAO;AAAA,EACvB;AACA;AApGE,cADI,eACI,IAAc;ACAxB,MAAM,cAAc,OAAO,IAAI,kBAAkB;AACjD,SAAS,SAAS,KAAK;AACrB,SAAO,CAAC,CAAC,OAAO,OAAO,QAAQ,cAAc,eAAe,OAAO,IAAI,WAAW,MAAM;AAC1F;ACHU;AADV,MAAM,SAAS;AAAA,EAEb,YAAYqD,MAAK,WAAW,OAAO,SAAS,OAAO;AACjD,SAAK,IAAI;AAAA,MACP,OAAO;AAAA,MACP,KAAAA;AAAA,MACA,gBAAgB;AAAA,MAChB;AAAA,MACA;AAAA,IACD;AAAA,EACL;AAAA;AAAA;AAAA;AAIA;AAbE,cADI,UACI,IAAc;AAcxB,MAAM,sBAAqBhJ,MAAA,UACjB,iBADiBA,KAAS;AAEpC;AADE,cADI,cACI,IAAc;ACbxB,MAAM,SAAS;AAAA,EACb,gBAAgB,MAAM,IAAI;AACb;AACT,aAAO,GAAI;AAAA,IACjB;AAAA,EAyBA;AACA;AClCA,MAAM,iBAAiB,OAAO,IAAI,wBAAwB;ACU1D,SAAS,aAAa,OAAO;AAC3B,SAAO,UAAU,QAAQ,UAAU,UAAU,OAAO,MAAM,WAAW;AACvE;AACA,SAAS,aAAa,SAAS;;AAC7B,QAAM,SAAS,EAAE,KAAK,IAAI,QAAQ,CAAA,EAAI;AACtC,aAAW,SAAS,SAAS;AAC3B,WAAO,OAAO,MAAM;AACpB,WAAO,OAAO,KAAK,GAAG,MAAM,MAAM;AAClC,SAAIlB,MAAA,MAAM,YAAN,gBAAAA,IAAe,QAAQ;AACzB,UAAI,CAAC,OAAO,SAAS;AACnB,eAAO,UAAU,CAAE;AAAA,MAC3B;AACM,aAAO,QAAQ,KAAK,GAAG,MAAM,OAAO;AAAA,IAC1C;AAAA,EACA;AACE,SAAO;AACT;AAEU;AADV,MAAM,YAAY;AAAA,EAGhB,YAAY,OAAO;AADnB;AAEE,SAAK,QAAQ,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAAA,EACtD;AAAA,EACE,SAAS;AACP,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AAAA,EACzB;AACA;AARE,cADI,aACI,IAAc;AAadoB,MAAA;AAJV,MAAM,OAAN,MAAM,KAAI;AAAA,EACR,YAAY,aAAa;AAKzB;AAAA,mCAAU;AACV,8CAAqB;AALnB,SAAK,cAAc;AAAA,EACvB;AAAA,EAKE,OAAO,OAAO;AACZ,SAAK,YAAY,KAAK,GAAG,MAAM,WAAW;AAC1C,WAAO;AAAA,EACX;AAAA,EACE,QAAQyF,SAAQ;AACd,WAAO,OAAO,gBAAgB,oBAAoB,CAAC,SAAS;AAC1D,YAAM,QAAQ,KAAK,2BAA2B,KAAK,aAAaA,OAAM;AACtE,mCAAM,cAAc;AAAA,QAClB,sBAAsB,MAAM;AAAA,QAC5B,wBAAwB,KAAK,UAAU,MAAM,MAAM;AAAA,MAC3D;AACM,aAAO;AAAA,IACb,CAAK;AAAA,EACL;AAAA,EACE,2BAA2B,QAAQ,SAAS;AAC1C,UAAMA,UAAS,OAAO,OAAO,CAAA,GAAI,SAAS;AAAA,MACxC,cAAc,QAAQ,gBAAgB,KAAK;AAAA,MAC3C,iBAAiB,QAAQ,mBAAmB,EAAE,OAAO,EAAC;AAAA,IAC5D,CAAK;AACD,UAAM;AAAA,MACJ;AAAA,MACA,YAAAsD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN,IAAQtD;AACJ,WAAO,aAAa,OAAO,IAAI,CAAC,UAAU;;AACxC,UAAI,GAAG,OAAO,WAAW,GAAG;AAC1B,eAAO,EAAE,KAAK,MAAM,MAAM,KAAK,EAAE,GAAG,QAAQ,GAAI;AAAA,MACxD;AACM,UAAI,GAAG,OAAO,IAAI,GAAG;AACnB,eAAO,EAAE,KAAKsD,YAAW,MAAM,KAAK,GAAG,QAAQ,GAAI;AAAA,MAC3D;AACM,UAAI,UAAU,QAAQ;AACpB,eAAO,EAAE,KAAK,IAAI,QAAQ,CAAA,EAAI;AAAA,MACtC;AACM,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAM,SAAS,CAAC,IAAI,YAAY,GAAG,CAAC;AACpC,mBAAW,CAAC5K,IAAGwJ,EAAC,KAAK,MAAM,QAAO,GAAI;AACpC,iBAAO,KAAKA,EAAC;AACb,cAAIxJ,KAAI,MAAM,SAAS,GAAG;AACxB,mBAAO,KAAK,IAAI,YAAY,IAAI,CAAC;AAAA,UAC7C;AAAA,QACA;AACQ,eAAO,KAAK,IAAI,YAAY,GAAG,CAAC;AAChC,eAAO,KAAK,2BAA2B,QAAQsH,OAAM;AAAA,MAC7D;AACM,UAAI,GAAG,OAAO,IAAG,GAAG;AAClB,eAAO,KAAK,2BAA2B,MAAM,aAAa;AAAA,UACxD,GAAGA;AAAA,UACH,cAAc,gBAAgB,MAAM;AAAA,QAC9C,CAAS;AAAA,MACT;AACM,UAAI,GAAG,OAAO,KAAK,GAAG;AACpB,cAAM,aAAa,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM,YAAY,MAAM,MAAM,OAAO,IAAI;AACzC,eAAO;AAAA,UACL,KAAK,eAAe,SAASsD,YAAW,SAAS,IAAIA,YAAW,UAAU,IAAI,MAAMA,YAAW,SAAS;AAAA,UACxG,QAAQ,CAAA;AAAA,QACT;AAAA,MACT;AACM,UAAI,GAAG,OAAO,MAAM,GAAG;AACrB,cAAM,aAAa,OAAO,gBAAgB,KAAK;AAC/C,YAAI,QAAQ,iBAAiB,WAAW;AACtC,iBAAO,EAAE,KAAKA,YAAW,UAAU,GAAG,QAAQ,CAAA,EAAI;AAAA,QAC5D;AACQ,cAAM,aAAa,MAAM,MAAM,MAAM,OAAO,MAAM;AAClD,eAAO;AAAA,UACL,KAAK,MAAM,MAAM,OAAO,KAAK,eAAe,SAASA,YAAW,MAAM,MAAM,MAAM,OAAO,IAAI,CAAC,IAAI,MAAMA,YAAW,UAAU,IAAIA,YAAW,UAAU,IAAI,MAAMA,YAAW,MAAM,MAAM,MAAM,OAAO,IAAI,CAAC,IAAI,MAAMA,YAAW,UAAU;AAAA,UACxO,QAAQ,CAAA;AAAA,QACT;AAAA,MACT;AACM,UAAI,GAAG,OAAO,IAAI,GAAG;AACnB,cAAM,aAAa,MAAM,cAAc,EAAE;AACzC,cAAM,WAAW,MAAM,cAAc,EAAE;AACvC,eAAO;AAAA,UACL,KAAK,eAAe,SAASA,YAAW,QAAQ,IAAIA,YAAW,UAAU,IAAI,MAAMA,YAAW,QAAQ;AAAA,UACtG,QAAQ,CAAA;AAAA,QACT;AAAA,MACT;AACM,UAAI,GAAG,OAAO,KAAK,GAAG;AACpB,YAAI,GAAG,MAAM,OAAO,WAAW,GAAG;AAChC,iBAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAG;AAAA,QACzG;AACQ,cAAM,cAAc,MAAM,UAAU,OAAO,OAAO,MAAM,QAAQ,iBAAiB,MAAM,KAAK;AAC5F,YAAI,GAAG,aAAa,IAAG,GAAG;AACxB,iBAAO,KAAK,2BAA2B,CAAC,WAAW,GAAGtD,OAAM;AAAA,QACtE;AACQ,YAAI,cAAc;AAChB,iBAAO,EAAE,KAAK,KAAK,eAAe,aAAaA,OAAM,GAAG,QAAQ,GAAI;AAAA,QAC9E;AACQ,YAAI,UAAU,CAAC,MAAM;AACrB,YAAI,eAAe;AACjB,oBAAU,CAAC,cAAc,MAAM,OAAO,CAAC;AAAA,QACjD;AACQ,eAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,WAAW,GAAG,QAAQ,CAAC,WAAW,GAAG,QAAS;AAAA,MACzG;AACM,UAAI,GAAG,OAAO,WAAW,GAAG;AAC1B,eAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAG;AAAA,MACvG;AACM,UAAI,GAAG,OAAO,KAAI,OAAO,KAAK,MAAM,eAAe,QAAQ;AACzD,eAAO,EAAE,KAAKsD,YAAW,MAAM,UAAU,GAAG,QAAQ,GAAI;AAAA,MAChE;AACM,UAAI,GAAG,OAAO,QAAQ,GAAG;AACvB,YAAI,MAAM,EAAE,QAAQ;AAClB,iBAAO,EAAE,KAAKA,YAAW,MAAM,EAAE,KAAK,GAAG,QAAQ,GAAI;AAAA,QAC/D;AACQ,eAAO,KAAK,2BAA2B;AAAA,UACrC,IAAI,YAAY,GAAG;AAAA,UACnB,MAAM,EAAE;AAAA,UACR,IAAI,YAAY,IAAI;AAAA,UACpB,IAAI,KAAK,MAAM,EAAE,KAAK;AAAA,QACvB,GAAEtD,OAAM;AAAA,MACjB;AACM,UAAI,SAAS,KAAK,GAAG;AACnB,YAAI,MAAM,QAAQ;AAChB,iBAAO,EAAE,KAAKsD,YAAW,MAAM,MAAM,IAAI,MAAMA,YAAW,MAAM,QAAQ,GAAG,QAAQ,CAAA,EAAI;AAAA,QACjG;AACQ,eAAO,EAAE,KAAKA,YAAW,MAAM,QAAQ,GAAG,QAAQ,GAAI;AAAA,MAC9D;AACM,UAAI,aAAa,KAAK,GAAG;AACvB,aAAInK,MAAA,MAAM,wBAAN,gBAAAA,IAAA,aAA+B;AACjC,iBAAO,KAAK,2BAA2B,CAAC,MAAM,OAAM,CAAE,GAAG6G,OAAM;AAAA,QACzE;AACQ,eAAO,KAAK,2BAA2B;AAAA,UACrC,IAAI,YAAY,GAAG;AAAA,UACnB,MAAM,OAAQ;AAAA,UACd,IAAI,YAAY,GAAG;AAAA,QACpB,GAAEA,OAAM;AAAA,MACjB;AACM,UAAI,cAAc;AAChB,eAAO,EAAE,KAAK,KAAK,eAAe,OAAOA,OAAM,GAAG,QAAQ,GAAI;AAAA,MACtE;AACM,aAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAG;AAAA,IACrG,CAAK,CAAC;AAAA,EACN;AAAA,EACE,eAAe,OAAO,EAAE,gBAAgB;AACtC,QAAI,UAAU,MAAM;AAClB,aAAO;AAAA,IACb;AACI,QAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AAC3D,aAAO,MAAM,SAAU;AAAA,IAC7B;AACI,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO,aAAa,KAAK;AAAA,IAC/B;AACI,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,sBAAsB,MAAM,SAAU;AAC5C,UAAI,wBAAwB,mBAAmB;AAC7C,eAAO,aAAa,KAAK,UAAU,KAAK,CAAC;AAAA,MACjD;AACM,aAAO,aAAa,mBAAmB;AAAA,IAC7C;AACI,UAAM,IAAI,MAAM,6BAA6B,KAAK;AAAA,EACtD;AAAA,EACE,SAAS;AACP,WAAO;AAAA,EACX;AAAA,EACE,GAAG,OAAO;AACR,QAAI,UAAU,QAAQ;AACpB,aAAO;AAAA,IACb;AACI,WAAO,IAAI,KAAI,QAAQ,MAAM,KAAK;AAAA,EACtC;AAAA,EACE,QAAQ,SAAS;AACf,SAAK,UAAU,OAAO,YAAY,aAAa,EAAE,oBAAoB,QAAO,IAAK;AACjF,WAAO;AAAA,EACX;AAAA,EACE,eAAe;AACb,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,GAAG,WAAW;AACZ,WAAO,YAAY,OAAO;AAAA,EAC9B;AACA;AA1LE,cAJI,MAIIzF,KAAc;AAJxB,IAAM,MAAN;AAmMU;AAJV,MAAM,KAAK;AAAA,EACT,YAAY,OAAO;AAInB;AAHE,SAAK,QAAQ;AAAA,EACjB;AAAA,EAGE,SAAS;AACP,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AAAA,EACzB;AACA;AALE,cAJI,MAII,IAAc;AASxB,SAAS,qBAAqB,OAAO;AACnC,SAAO,OAAO,UAAU,YAAY,UAAU,QAAQ,sBAAsB,SAAS,OAAO,MAAM,qBAAqB;AACzH;AACA,MAAM,cAAc;AAAA,EAClB,oBAAoB,CAAC,UAAU;AACjC;AACA,MAAM,cAAc;AAAA,EAClB,kBAAkB,CAAC,UAAU;AAC/B;AAAA,CACmB;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AACL;AAUU;AATV,MAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKV,YAAY,OAAO,UAAU,aAAa;AAK1C;AAJE,SAAK,QAAQ;AACb,SAAK,UAAU;AAAA,EACnB;AAAA,EAGE,SAAS;AACP,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AAAA,EACzB;AACA;AALE,cATI,OASI,IAAc;AASxB,SAAS,IAAI,YAAY,QAAQ;AAC/B,QAAM,cAAc,CAAE;AACtB,MAAI,OAAO,SAAS,KAAK,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAAM,IAAI;AAChE,gBAAY,KAAK,IAAI,YAAY,QAAQ,CAAC,CAAC,CAAC;AAAA,EAChD;AACE,aAAW,CAAC,YAAY,MAAM,KAAK,OAAO,QAAO,GAAI;AACnD,gBAAY,KAAK,QAAQ,IAAI,YAAY,QAAQ,aAAa,CAAC,CAAC,CAAC;AAAA,EACrE;AACE,SAAO,IAAI,IAAI,WAAW;AAC5B;AAAA,CACC,CAAC,SAAS;AACT,WAAS,QAAQ;AACf,WAAO,IAAI,IAAI,EAAE;AAAA,EACrB;AACE,OAAK,QAAQ;AACb,WAAS,SAAS,MAAM;AACtB,WAAO,IAAI,IAAI,IAAI;AAAA,EACvB;AACE,OAAK,WAAW;AAChB,WAAS,IAAI5B,MAAK;AAChB,WAAO,IAAI,IAAI,CAAC,IAAI,YAAYA,IAAG,CAAC,CAAC;AAAA,EACzC;AACE,OAAK,MAAM;AACX,WAAS,KAAK,QAAQ,WAAW;AAC/B,UAAM,SAAS,CAAE;AACjB,eAAW,CAACD,IAAG,KAAK,KAAK,OAAO,QAAO,GAAI;AACzC,UAAIA,KAAI,KAAK,cAAc,QAAQ;AACjC,eAAO,KAAK,SAAS;AAAA,MAC7B;AACM,aAAO,KAAK,KAAK;AAAA,IACvB;AACI,WAAO,IAAI,IAAI,MAAM;AAAA,EACzB;AACE,OAAK,OAAO;AACZ,WAAS,WAAW,OAAO;AACzB,WAAO,IAAI,KAAK,KAAK;AAAA,EACzB;AACE,OAAK,aAAa;AAClB,WAAS,aAAa,OAAO;AAC3B,WAAO,IAAI,YAAY,KAAK;AAAA,EAChC;AACE,OAAK,cAAc;AACnB,WAAS,OAAO,OAAO,SAAS;AAC9B,WAAO,IAAI,MAAM,OAAO,OAAO;AAAA,EACnC;AACE,OAAK,QAAQ;AACf,GAAG,QAAQ,MAAM,CAAA,EAAG;AAAA,CACnB,CAAC,SAAS;;AAMC,EAAAS,MAAA;AALV,QAAM,WAAN,MAAM,SAAQ;AAAA,IACZ,YAAY,MAAM,YAAY;AAM9B;AAAA,8CAAmB;AALjB,WAAK,MAAM;AACX,WAAK,aAAa;AAAA,IACxB;AAAA,IAII,SAAS;AACP,aAAO,KAAK;AAAA,IAClB;AAAA;AAAA,IAEI,QAAQ;AACN,aAAO,IAAI,SAAQ,KAAK,KAAK,KAAK,UAAU;AAAA,IAClD;AAAA,EACA;AAVI,gBALI,UAKIA,KAAc;AALxB,MAAM,UAAN;AAgBA,OAAK,UAAU;AACjB,GAAG,QAAQ,MAAM,CAAA,EAAG;AAKV;AAJV,MAAM,YAAY;AAAA,EAChB,YAAY,OAAO;AACjB,SAAK,OAAO;AAAA,EAChB;AAAA,EAEE,SAAS;AACP,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AAAA,EACzB;AACA;AAJE,cAJI,aAII,IAAc;AAQxB,SAAS,iBAAiB,QAAQ,QAAQ;AACxC,SAAO,OAAO,IAAI,CAAC+I,OAAM;AACvB,QAAI,GAAGA,IAAG,WAAW,GAAG;AACtB,UAAI,EAAEA,GAAE,QAAQ,SAAS;AACvB,cAAM,IAAI,MAAM,6BAA6BA,GAAE,IAAI,gBAAgB;AAAA,MAC3E;AACM,aAAO,OAAOA,GAAE,IAAI;AAAA,IAC1B;AACI,QAAI,GAAGA,IAAG,KAAK,KAAK,GAAGA,GAAE,OAAO,WAAW,GAAG;AAC5C,UAAI,EAAEA,GAAE,MAAM,QAAQ,SAAS;AAC7B,cAAM,IAAI,MAAM,6BAA6BA,GAAE,MAAM,IAAI,gBAAgB;AAAA,MACjF;AACM,aAAOA,GAAE,QAAQ,iBAAiB,OAAOA,GAAE,MAAM,IAAI,CAAC;AAAA,IAC5D;AACI,WAAOA;AAAA,EACX,CAAG;AACH;AACA,MAAM,gBAAgB,OAAO,IAAI,uBAAuB;AAE9C,iBAEP,qBAEA;AALH,MAAM,KAAK;AAAA,EAMT,YAAY,EAAE,MAAM,OAAO,QAAAQ,SAAQ,gBAAgB,SAAS;AAH5D;AAAA,wBAAC;AAED;AAAA,wBAAC,IAAiB;AAEhB,SAAK,cAAc,IAAI;AAAA,MACrB,MAAM;AAAA,MACN,cAAc;AAAA,MACd,QAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,CAAC;AAAA,MACb,SAAS;AAAA,IACV;AAAA,EACL;AAAA,EACE,SAAS;AACP,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AAAA,EACzB;AACA;AAnBE,cADI,MACI,IAAc;AAuBxB,OAAO,UAAU,SAAS,WAAW;AACnC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACvB;AACA,MAAM,UAAU,SAAS,WAAW;AAClC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACvB;AACA,SAAS,UAAU,SAAS,WAAW;AACrC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACvB;AC1YA,SAAS,aAAa,SAAS,KAAK,qBAAqB;AACvD,QAAM,aAAa,CAAE;AACrB,QAAM,SAAS,QAAQ;AAAA,IACrB,CAAC,SAAS,EAAE,MAAAzJ,OAAM,MAAK,GAAI,gBAAgB;AACzC,UAAI;AACJ,UAAI,GAAG,OAAO,MAAM,GAAG;AACrB,kBAAU;AAAA,MACX,WAAU,GAAG,OAAO,GAAG,GAAG;AACzB,kBAAU,MAAM;AAAA,MACxB,OAAa;AACL,kBAAU,MAAM,IAAI;AAAA,MAC5B;AACM,UAAI,OAAO;AACX,iBAAW,CAAC,gBAAgB,SAAS,KAAKA,MAAK,QAAO,GAAI;AACxD,YAAI,iBAAiBA,MAAK,SAAS,GAAG;AACpC,cAAI,EAAE,aAAa,OAAO;AACxB,iBAAK,SAAS,IAAI,CAAE;AAAA,UAChC;AACU,iBAAO,KAAK,SAAS;AAAA,QAC/B,OAAe;AACL,gBAAM,WAAW,IAAI,WAAW;AAChC,gBAAM,QAAQ,KAAK,SAAS,IAAI,aAAa,OAAO,OAAO,QAAQ,mBAAmB,QAAQ;AAC9F,cAAI,uBAAuB,GAAG,OAAO,MAAM,KAAKA,MAAK,WAAW,GAAG;AACjE,kBAAM,aAAaA,MAAK,CAAC;AACzB,gBAAI,EAAE,cAAc,aAAa;AAC/B,yBAAW,UAAU,IAAI,UAAU,OAAO,aAAa,MAAM,KAAK,IAAI;AAAA,YACvE,WAAU,OAAO,WAAW,UAAU,MAAM,YAAY,WAAW,UAAU,MAAM,aAAa,MAAM,KAAK,GAAG;AAC7G,yBAAW,UAAU,IAAI;AAAA,YACvC;AAAA,UACA;AAAA,QACA;AAAA,MACA;AACM,aAAO;AAAA,IACR;AAAA,IACD,CAAA;AAAA,EACD;AACD,MAAI,uBAAuB,OAAO,KAAK,UAAU,EAAE,SAAS,GAAG;AAC7D,eAAW,CAAC,YAAY,SAAS,KAAK,OAAO,QAAQ,UAAU,GAAG;AAChE,UAAI,OAAO,cAAc,YAAY,CAAC,oBAAoB,SAAS,GAAG;AACpE,eAAO,UAAU,IAAI;AAAA,MAC7B;AAAA,IACA;AAAA,EACA;AACE,SAAO;AACT;AACA,SAAS,oBAAoB,QAAQ,YAAY;AAC/C,SAAO,OAAO,QAAQ,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM;AAC9D,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO;AAAA,IACb;AACI,UAAM,UAAU,aAAa,CAAC,GAAG,YAAY,IAAI,IAAI,CAAC,IAAI;AAC1D,QAAI,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,IAAI,OAAO,GAAG;AACjE,aAAO,KAAK,EAAE,MAAM,SAAS,MAAK,CAAE;AAAA,IACrC,WAAU,GAAG,OAAO,KAAK,GAAG;AAC3B,aAAO,KAAK,GAAG,oBAAoB,MAAM,MAAM,OAAO,OAAO,GAAG,OAAO,CAAC;AAAA,IAC9E,OAAW;AACL,aAAO,KAAK,GAAG,oBAAoB,OAAO,OAAO,CAAC;AAAA,IACxD;AACI,WAAO;AAAA,EACR,GAAE,EAAE;AACP;AACA,SAAS,aAAa,MAAM,OAAO;AACjC,QAAM,WAAW,OAAO,KAAK,IAAI;AACjC,QAAM,YAAY,OAAO,KAAK,KAAK;AACnC,MAAI,SAAS,WAAW,UAAU,QAAQ;AACxC,WAAO;AAAA,EACX;AACE,aAAW,CAAC,OAAO,GAAG,KAAK,SAAS,QAAO,GAAI;AAC7C,QAAI,QAAQ,UAAU,KAAK,GAAG;AAC5B,aAAO;AAAA,IACb;AAAA,EACA;AACE,SAAO;AACT;AACA,SAAS,aAAa,OAAO,QAAQ;AACnC,QAAM,UAAU,OAAO,QAAQ,MAAM,EAAE,OAAO,CAAC,CAAG,EAAA,KAAK,MAAM,UAAU,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AACnG,QAAI,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,MAAM,GAAG;AACvC,aAAO,CAAC,KAAK,KAAK;AAAA,IACxB,OAAW;AACL,aAAO,CAAC,KAAK,IAAI,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,EAAE,GAAG,CAAC,CAAC;AAAA,IACrE;AAAA,EACA,CAAG;AACD,MAAI,QAAQ,WAAW,GAAG;AACxB,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACtC;AACE,SAAO,OAAO,YAAY,OAAO;AACnC;AACA,SAAS,YAAY,WAAW,iBAAiB;AAC/C,aAAW,iBAAiB,iBAAiB;AAC3C,eAAW,QAAQ,OAAO,oBAAoB,cAAc,SAAS,GAAG;AACtE,UAAI,SAAS;AACX;AACF,aAAO;AAAA,QACL,UAAU;AAAA,QACV;AAAA,QACA,OAAO,yBAAyB,cAAc,WAAW,IAAI,KAAqB,uBAAO,OAAO,IAAI;AAAA,MACrG;AAAA,IACP;AAAA,EACA;AACA;AACA,SAAS,gBAAgB,OAAO;AAC9B,SAAO,MAAM,MAAM,OAAO,OAAO;AACnC;AAIA,SAAS,iBAAiB,OAAO;AAC/B,SAAO,GAAG,OAAO,QAAQ,IAAI,MAAM,EAAE,QAAQ,GAAG,OAAO,IAAI,IAAI,MAAM,cAAc,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,SAAS,MAAM,MAAM,OAAO,OAAO,IAAI,MAAM,MAAM,OAAO,IAAI,IAAI,MAAM,MAAM,OAAO,QAAQ;AAC5M;AACA,SAAS,uBAAuB8C,IAAGC,IAAG;AACpC,SAAO;AAAA,IACL,MAAM,OAAOD,OAAM,YAAYA,GAAE,SAAS,IAAIA,KAAI;AAAA,IAClD,QAAQ,OAAOA,OAAM,WAAWA,KAAIC;AAAA,EACrC;AACH;AAGA,SAAS,SAAS,MAAM;AACtB,MAAI,OAAO,SAAS,YAAY,SAAS;AACvC,WAAO;AACT,MAAI,KAAK,YAAY,SAAS;AAC5B,WAAO;AACT,MAAI,YAAY,MAAM;AACpB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,cAAc,SAAS,YAAY,OAAO,KAAK,QAAQ,EAAE,UAAU,MAAM,eAAe,SAAS;AAC5G,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,YAAY,MAAM;AACpB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS;AAChC,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,YAAY,MAAM;AACpB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS;AAChC,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,UAAU,MAAM;AAClB,QAAI,KAAK,MAAM,MAAM,aAAa,KAAK,MAAM,MAAM,iBAAiB,KAAK,MAAM,MAAM;AACnF,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,gBAAgB,MAAM;AACxB,UAAM,OAAO,OAAO,KAAK,YAAY;AACrC,QAAI,SAAS,YAAY,SAAS,YAAY,SAAS;AACrD,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,YAAY,MAAM;AACpB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS,cAAc,SAAS;AACvD,aAAO;AACT,WAAO;AAAA,EACX;AACE,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW;AAC/B,WAAO;AACT,SAAO;AACT;ACnKA,MAAMuH,sBAAoB,OAAO,IAAI,6BAA6B;AAClE,MAAM,YAAY,OAAO,IAAI,mBAAmB;AAChD,MAAM,iBAAgB,YACZ,iBAOPA,0BAEA,gBAEA,WAAM,OAAO,oBAZM,IAAM;AAAA,EAA5B;AAAA;AAQE;AAAA,wBAACA,IAAqB,CAAE;AAExB;AAAA,wBAAC,IAAa;AAEd;AAAA,wBAAC;AAAA;AACH;AAZE,cADI,SACI,IAAc;AAAA;AAEtB,cAHI,SAGG,UAAS,OAAO,OAAO,CAAA,GAAI,MAAM,QAAQ;AAAA,EAClD,mBAAIA;AAAAA,EACA;AACJ,CAAG;ACFO;AADV,MAAM,kBAAkB;AAAA,EAMtB,YAAY,SAAS,MAAM;AAH3B;AAAA;AAEA;AAAA;AAEE,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EAChB;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI,WAAW,OAAO,KAAK,SAAS,KAAK,IAAI;AAAA,EACxD;AACA;AAbE,cADI,mBACI,IAAc;AAoBd;AANV,MAAM,WAAW;AAAA,EACf,YAAY,OAAO,SAAS,MAAM;AAMlC;AACA;AANE,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EAChB;AAAA,EAIE,UAAU;AACR,WAAO,KAAK,QAAQ,GAAG,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,EAAE,KAAK,GAAG,CAAC;AAAA,EACjH;AACA;AANE,cANI,YAMI,IAAc;AChBxB,SAAS,YAAY,OAAO,QAAQ;AAClC,MAAI,qBAAqB,MAAM,KAAK,CAAC,aAAa,KAAK,KAAK,CAAC,GAAG,OAAO,KAAK,KAAK,CAAC,GAAG,OAAO,WAAW,KAAK,CAAC,GAAG,OAAO,MAAM,KAAK,CAAC,GAAG,OAAO,KAAK,KAAK,CAAC,GAAG,OAAO,IAAI,GAAG;AACvK,WAAO,IAAI,MAAM,OAAO,MAAM;AAAA,EAClC;AACE,SAAO;AACT;AACA,MAAM,KAAK,CAAC,MAAM,UAAU;AAC1B,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AACjD;AACA,MAAMC,OAAK,CAAC,MAAM,UAAU;AAC1B,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AAClD;AACA,SAAS,OAAO,sBAAsB;AACpC,QAAM,aAAa,qBAAqB;AAAA,IACtC,CAAChB,OAAMA,OAAM;AAAA,EACd;AACD,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO;AAAA,EACX;AACE,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO,IAAI,IAAI,UAAU;AAAA,EAC7B;AACE,SAAO,IAAI,IAAI;AAAA,IACb,IAAI,YAAY,GAAG;AAAA,IACnB,IAAI,KAAK,YAAY,IAAI,YAAY,OAAO,CAAC;AAAA,IAC7C,IAAI,YAAY,GAAG;AAAA,EACvB,CAAG;AACH;AACA,SAASiB,QAAM,sBAAsB;AACnC,QAAM,aAAa,qBAAqB;AAAA,IACtC,CAACjB,OAAMA,OAAM;AAAA,EACd;AACD,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO;AAAA,EACX;AACE,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO,IAAI,IAAI,UAAU;AAAA,EAC7B;AACE,SAAO,IAAI,IAAI;AAAA,IACb,IAAI,YAAY,GAAG;AAAA,IACnB,IAAI,KAAK,YAAY,IAAI,YAAY,MAAM,CAAC;AAAA,IAC5C,IAAI,YAAY,GAAG;AAAA,EACvB,CAAG;AACH;AACA,SAAS,IAAI,WAAW;AACtB,SAAO,UAAU,SAAS;AAC5B;AACA,MAAMkB,OAAK,CAAC,MAAM,UAAU;AAC1B,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AACjD;AACA,MAAM,MAAM,CAAC,MAAM,UAAU;AAC3B,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AAClD;AACA,MAAMC,OAAK,CAAC,MAAM,UAAU;AAC1B,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AACjD;AACA,MAAM,MAAM,CAAC,MAAM,UAAU;AAC3B,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AAClD;AACA,SAAS,QAAQ,QAAQ,QAAQ;AAC/B,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;AAAA,IACb;AACI,WAAO,MAAM,MAAM,OAAO,OAAO,IAAI,CAAC/G,OAAM,YAAYA,IAAG,MAAM,CAAC,CAAC;AAAA,EACvE;AACE,SAAO,MAAM,MAAM,OAAO,YAAY,QAAQ,MAAM,CAAC;AACvD;AACA,SAAS,WAAW,QAAQ,QAAQ;AAClC,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;AAAA,IACb;AACI,WAAO,MAAM,MAAM,WAAW,OAAO,IAAI,CAACA,OAAM,YAAYA,IAAG,MAAM,CAAC,CAAC;AAAA,EAC3E;AACE,SAAO,MAAM,MAAM,WAAW,YAAY,QAAQ,MAAM,CAAC;AAC3D;AACA,SAAS,OAAO,OAAO;AACrB,SAAO,MAAM,KAAK;AACpB;AACA,SAAS,UAAU,OAAO;AACxB,SAAO,MAAM,KAAK;AACpB;AACA,SAAS,OAAO,UAAU;AACxB,SAAO,aAAa,QAAQ;AAC9B;AACA,SAAS,UAAU,UAAU;AAC3B,SAAO,iBAAiB,QAAQ;AAClC;AACA,SAAS,QAAQ,QAAQ,KAAKgH,MAAK;AACjC,SAAO,MAAM,MAAM,YAAY,YAAY,KAAK,MAAM,CAAC,QAAQ;AAAA,IAC7DA;AAAA,IACA;AAAA,EACJ,CAAG;AACH;AACA,SAAS,WAAW,QAAQ,KAAKA,MAAK;AACpC,SAAO,MAAM,MAAM,gBAAgB;AAAA,IACjC;AAAA,IACA;AAAA,EACD,CAAA,QAAQ,YAAYA,MAAK,MAAM,CAAC;AACnC;AACA,SAAS,KAAK,QAAQ,OAAO;AAC3B,SAAO,MAAM,MAAM,SAAS,KAAK;AACnC;AACA,SAAS,QAAQ,QAAQ,OAAO;AAC9B,SAAO,MAAM,MAAM,aAAa,KAAK;AACvC;AACA,SAAS,MAAM,QAAQ,OAAO;AAC5B,SAAO,MAAM,MAAM,UAAU,KAAK;AACpC;AACA,SAAS,SAAS,QAAQ,OAAO;AAC/B,SAAO,MAAM,MAAM,cAAc,KAAK;AACxC;AC5HA,SAAS,IAAI,QAAQ;AACnB,SAAO,MAAM,MAAM;AACrB;AACA,SAAS,KAAK,QAAQ;AACpB,SAAO,MAAM,MAAM;AACrB;AC+BU;AAPV,MAAM,SAAS;AAAA,EACb,YAAY,aAAa,iBAAiB,cAAc;AAOxD;AACA;AAPE,SAAK,cAAc;AACnB,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,sBAAsB,gBAAgB,MAAM,OAAO,IAAI;AAAA,EAChE;AAIA;AAHE,cAPI,UAOI,IAAc;AASd;AALV,MAAM,UAAU;AAAA,EACd,YAAY,OAAO5D,SAAQ;AACzB,SAAK,QAAQ;AACb,SAAK,SAASA;AAAA,EAClB;AAEA;AADE,cALI,WAKI,IAAc;AAExB,MAAM,OAAN,MAAM,cAAY,eAMR,iBANQ,IAAS;AAAA,EACzB,YAAY,aAAa,iBAAiBA,SAAQ,YAAY;AAC5D,UAAM,aAAa,iBAAiBA,WAAA,gBAAAA,QAAQ,YAAY;AACxD,SAAK,SAASA;AACd,SAAK,aAAa;AAAA,EACtB;AAAA,EAEE,cAAc,WAAW;AACvB,UAAM,WAAW,IAAI;AAAA,MACnB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AACD,aAAS,YAAY;AACrB,WAAO;AAAA,EACX;AACA;AAXE,cANI,MAMI,IAAc;AANxB,IAAM,MAAN;AAkBA,MAAM,QAAN,MAAM,eAAa,eAKT,iBALS,IAAS;AAAA,EAC1B,YAAY,aAAa,iBAAiBA,SAAQ;AAChD,UAAM,aAAa,iBAAiBA,WAAA,gBAAAA,QAAQ,YAAY;AACxD,SAAK,SAASA;AAAA,EAClB;AAAA,EAEE,cAAc,WAAW;AACvB,UAAM,WAAW,IAAI;AAAA,MACnB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AACD,aAAS,YAAY;AACrB,WAAO;AAAA,EACX;AACA;AAVE,cALI,OAKI,IAAc;AALxB,IAAM,OAAN;AAgBA,SAAS,eAAe;AACtB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACJ,IAAI0D;AAAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACJ,IAAIC;AAAAA,IACA;AAAA,IACJ,IAAIH;AAAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACJ,IAAIC;AAAAA,IACA;AAAA,EACD;AACH;AACA,SAAS,sBAAsB;AAC7B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH;AACA,SAAS,8BAA8Bf,SAAQ,eAAe;;AAC5D,MAAI,OAAO,KAAKA,OAAM,EAAE,WAAW,KAAK,aAAaA,WAAU,CAAC,GAAGA,QAAO,SAAS,GAAG,KAAK,GAAG;AAC5F,IAAAA,UAASA,QAAO,SAAS;AAAA,EAC7B;AACE,QAAM,gBAAgB,CAAE;AACxB,QAAM,kBAAkB,CAAE;AAC1B,QAAM,eAAe,CAAE;AACvB,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQA,OAAM,GAAG;AACjD,QAAI,GAAG,OAAO,KAAK,GAAG;AACpB,YAAM,SAAS,mBAAmB,KAAK;AACvC,YAAM,oBAAoB,gBAAgB,MAAM;AAChD,oBAAc,MAAM,IAAI;AACxB,mBAAa,GAAG,IAAI;AAAA,QAClB,QAAQ;AAAA,QACR,QAAQ,MAAM,MAAM,OAAO,IAAI;AAAA,QAC/B,QAAQ,MAAM,MAAM,OAAO,MAAM;AAAA,QACjC,SAAS,MAAM,MAAM,OAAO,OAAO;AAAA,QACnC,YAAW,uDAAmB,cAAa,CAAE;AAAA,QAC7C,aAAY,uDAAmB,eAAc,CAAA;AAAA,MAC9C;AACD,iBAAW,UAAU,OAAO;AAAA,QAC1B,MAAM,MAAM,OAAO,OAAO;AAAA,MAClC,GAAS;AACD,YAAI,OAAO,SAAS;AAClB,uBAAa,GAAG,EAAE,WAAW,KAAK,MAAM;AAAA,QAClD;AAAA,MACA;AACM,YAAM,eAAcvJ,MAAA,MAAM,MAAM,OAAO,wBAAnB,gBAAAA,IAAA,YAAyC,MAAM,MAAM,OAAO,kBAAkB;AAClG,UAAI,aAAa;AACf,mBAAW,eAAe,OAAO,OAAO,WAAW,GAAG;AACpD,cAAI,GAAG,aAAa,iBAAiB,GAAG;AACtC,yBAAa,GAAG,EAAE,WAAW,KAAK,GAAG,YAAY,OAAO;AAAA,UACpE;AAAA,QACA;AAAA,MACA;AAAA,IACK,WAAU,GAAG,OAAO,SAAS,GAAG;AAC/B,YAAM,SAAS,mBAAmB,MAAM,KAAK;AAC7C,YAAM,YAAY,cAAc,MAAM;AACtC,YAAM,aAAa,MAAM;AAAA,QACvB,cAAc,MAAM,KAAK;AAAA,MAC1B;AACD,UAAI;AACJ,iBAAW,CAAC,cAAc,QAAQ,KAAK,OAAO,QAAQ,UAAU,GAAG;AACjE,YAAI,WAAW;AACb,gBAAM,cAAc,aAAa,SAAS;AAC1C,sBAAY,UAAU,YAAY,IAAI;AAAA,QAIhD,OAAe;AACL,cAAI,EAAE,UAAU,kBAAkB;AAChC,4BAAgB,MAAM,IAAI;AAAA,cACxB,WAAW,CAAE;AAAA,cACb;AAAA,YACD;AAAA,UACb;AACU,0BAAgB,MAAM,EAAE,UAAU,YAAY,IAAI;AAAA,QAC5D;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACE,SAAO,EAAE,QAAQ,cAAc,cAAe;AAChD;AAYA,SAAS,UAAU,aAAa;AAC9B,SAAO,SAAS,IAAI,OAAO6G,SAAQ;AACjC,WAAO,IAAI;AAAA,MACT;AAAA,MACA;AAAA,MACAA;AAAA,OACAA,WAAA,gBAAAA,QAAQ,OAAO,OAAO,CAAC,KAAK6D,OAAM,OAAOA,GAAE,SAAS,UAAS;AAAA,IAC9D;AAAA,EACF;AACH;AACA,SAAS,WAAW,aAAa;AAC/B,SAAO,SAAS,KAAK,iBAAiB7D,SAAQ;AAC5C,WAAO,IAAI,KAAK,aAAa,iBAAiBA,OAAM;AAAA,EACrD;AACH;AACA,SAAS,kBAAkB0C,SAAQ,eAAe,UAAU;AAC1D,MAAI,GAAG,UAAU,GAAG,KAAK,SAAS,QAAQ;AACxC,WAAO;AAAA,MACL,QAAQ,SAAS,OAAO;AAAA,MACxB,YAAY,SAAS,OAAO;AAAA,IAC7B;AAAA,EACL;AACE,QAAM,wBAAwB,cAAc,mBAAmB,SAAS,eAAe,CAAC;AACxF,MAAI,CAAC,uBAAuB;AAC1B,UAAM,IAAI;AAAA,MACR,UAAU,SAAS,gBAAgB,MAAM,OAAO,IAAI,CAAC;AAAA,IACtD;AAAA,EACL;AACE,QAAM,wBAAwBA,QAAO,qBAAqB;AAC1D,MAAI,CAAC,uBAAuB;AAC1B,UAAM,IAAI,MAAM,UAAU,qBAAqB,uBAAuB;AAAA,EAC1E;AACE,QAAM,cAAc,SAAS;AAC7B,QAAM,oBAAoB,cAAc,mBAAmB,WAAW,CAAC;AACvE,MAAI,CAAC,mBAAmB;AACtB,UAAM,IAAI;AAAA,MACR,UAAU,YAAY,MAAM,OAAO,IAAI,CAAC;AAAA,IACzC;AAAA,EACL;AACE,QAAM,mBAAmB,CAAE;AAC3B,aAAW,2BAA2B,OAAO;AAAA,IAC3C,sBAAsB;AAAA,EAC1B,GAAK;AACD,QAAI,SAAS,gBAAgB,aAAa,2BAA2B,wBAAwB,iBAAiB,SAAS,gBAAgB,CAAC,SAAS,gBAAgB,wBAAwB,oBAAoB,SAAS,aAAa;AACjO,uBAAiB,KAAK,uBAAuB;AAAA,IACnD;AAAA,EACA;AACE,MAAI,iBAAiB,SAAS,GAAG;AAC/B,UAAM,SAAS,eAAe,IAAI;AAAA,MAChC,2CAA2C,SAAS,YAAY,eAAe,qBAAqB;AAAA,IACrG,IAAG,IAAI;AAAA,MACN,yCAAyC,qBAAqB,UAAU,SAAS,YAAY,MAAM,OAAO,IAAI,CAAC;AAAA,IAChH;AAAA,EACL;AACE,MAAI,iBAAiB,CAAC,KAAK,GAAG,iBAAiB,CAAC,GAAG,GAAG,KAAK,iBAAiB,CAAC,EAAE,QAAQ;AACrF,WAAO;AAAA,MACL,QAAQ,iBAAiB,CAAC,EAAE,OAAO;AAAA,MACnC,YAAY,iBAAiB,CAAC,EAAE,OAAO;AAAA,IACxC;AAAA,EACL;AACE,QAAM,IAAI;AAAA,IACR,sDAAsD,iBAAiB,IAAI,SAAS,SAAS;AAAA,EAC9F;AACH;AACA,SAAS,4BAA4B,aAAa;AAChD,SAAO;AAAA,IACL,KAAK,UAAU,WAAW;AAAA,IAC1B,MAAM,WAAW,WAAW;AAAA,EAC7B;AACH;AACA,SAAS,iBAAiB,cAAc,aAAa,KAAK,2BAA2B,iBAAiB,CAAC,UAAU,OAAO;AACtH,QAAM,SAAS,CAAE;AACjB,aAAW;AAAA,IACT;AAAA,IACA;AAAA,EACJ,KAAO,0BAA0B,WAAW;AACxC,QAAI,cAAc,QAAQ;AACxB,YAAM,WAAW,YAAY,UAAU,cAAc,KAAK;AAC1D,YAAM,aAAa,IAAI,kBAAkB;AACzC,YAAM,UAAU,OAAO,eAAe,WAAW,KAAK,MAAM,UAAU,IAAI;AAC1E,aAAO,cAAc,KAAK,IAAI,GAAG,UAAU,GAAG,IAAI,WAAW;AAAA,QAC3D;AAAA,QACA,aAAa,cAAc,kBAAkB;AAAA,QAC7C;AAAA,QACA,cAAc;AAAA,QACd;AAAA,MACD,IAAG,QAAQ;AAAA,QACV,CAAC,WAAW;AAAA,UACV;AAAA,UACA,aAAa,cAAc,kBAAkB;AAAA,UAC7C;AAAA,UACA,cAAc;AAAA,UACd;AAAA,QACV;AAAA,MACO;AAAA,IACP,OAAW;AACL,YAAM,QAAQ,eAAe,IAAI,kBAAkB,CAAC;AACpD,YAAM,QAAQ,cAAc;AAC5B,UAAI;AACJ,UAAI,GAAG,OAAO,MAAM,GAAG;AACrB,kBAAU;AAAA,MACX,WAAU,GAAG,OAAO,GAAG,GAAG;AACzB,kBAAU,MAAM;AAAA,MACxB,OAAa;AACL,kBAAU,MAAM,IAAI;AAAA,MAC5B;AACM,aAAO,cAAc,KAAK,IAAI,UAAU,OAAO,OAAO,QAAQ,mBAAmB,KAAK;AAAA,IAC5F;AAAA,EACA;AACE,SAAO;AACT;AClSU;AAJV,MAAM,wBAAwB;AAAA,EAC5B,YAAY,OAAO;AACjB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEE,IAAI,WAAW,MAAM;AACnB,QAAI,SAAS,SAAS;AACpB,aAAO,KAAK;AAAA,IAClB;AACI,WAAO,UAAU,IAAI;AAAA,EACzB;AACA;AAPE,cAJI,yBAII,IAAc;AAad;AALV,MAAM,uBAAuB;AAAA,EAC3B,YAAY,OAAO,qBAAqB;AACtC,SAAK,QAAQ;AACb,SAAK,sBAAsB;AAAA,EAC/B;AAAA,EAEE,IAAI,QAAQ,MAAM;AAChB,QAAI,SAAS,MAAM,OAAO,SAAS;AACjC,aAAO;AAAA,IACb;AACI,QAAI,SAAS,MAAM,OAAO,MAAM;AAC9B,aAAO,KAAK;AAAA,IAClB;AACI,QAAI,KAAK,uBAAuB,SAAS,MAAM,OAAO,cAAc;AAClE,aAAO,KAAK;AAAA,IAClB;AACI,QAAI,SAAS,gBAAgB;AAC3B,aAAO;AAAA,QACL,GAAG,OAAO,cAAc;AAAA,QACxB,MAAM,KAAK;AAAA,QACX,SAAS;AAAA,MACV;AAAA,IACP;AACI,QAAI,SAAS,MAAM,OAAO,SAAS;AACjC,YAAM,UAAU,OAAO,MAAM,OAAO,OAAO;AAC3C,UAAI,CAAC,SAAS;AACZ,eAAO;AAAA,MACf;AACM,YAAM,iBAAiB,CAAE;AACzB,aAAO,KAAK,OAAO,EAAE,IAAI,CAAC,QAAQ;AAChC,uBAAe,GAAG,IAAI,IAAI;AAAA,UACxB,QAAQ,GAAG;AAAA,UACX,IAAI,wBAAwB,IAAI,MAAM,QAAQ,IAAI,CAAC;AAAA,QACpD;AAAA,MACT,CAAO;AACD,aAAO;AAAA,IACb;AACI,UAAM,QAAQ,OAAO,IAAI;AACzB,QAAI,GAAG,OAAO,MAAM,GAAG;AACrB,aAAO,IAAI,MAAM,OAAO,IAAI,wBAAwB,IAAI,MAAM,QAAQ,IAAI,CAAC,CAAC;AAAA,IAClF;AACI,WAAO;AAAA,EACX;AACA;AAtCE,cALI,wBAKI,IAAc;AAmDxB,SAAS,aAAa,OAAO,YAAY;AACvC,SAAO,IAAI,MAAM,OAAO,IAAI,uBAAuB,YAAY,KAAK,CAAC;AACvE;AAIA,SAAS,mBAAmB,QAAQ,YAAY;AAC9C,SAAO,IAAI;AAAA,IACT;AAAA,IACA,IAAI,wBAAwB,IAAI,MAAM,OAAO,OAAO,IAAI,uBAAuB,YAAY,KAAK,CAAC,CAAC;AAAA,EACnG;AACH;AACA,SAAS,8BAA8B,OAAO,OAAO;AACnD,SAAO,IAAI,IAAI,QAAQ,uBAAuB,MAAM,KAAK,KAAK,GAAG,MAAM,UAAU;AACnF;AACA,SAAS,uBAAuB,OAAO,OAAO;AAC5C,SAAO,IAAI,KAAK,MAAM,YAAY,IAAI,CAACF,OAAM;AAC3C,QAAI,GAAGA,IAAG,MAAM,GAAG;AACjB,aAAO,mBAAmBA,IAAG,KAAK;AAAA,IACxC;AACI,QAAI,GAAGA,IAAG,GAAG,GAAG;AACd,aAAO,uBAAuBA,IAAG,KAAK;AAAA,IAC5C;AACI,QAAI,GAAGA,IAAG,IAAI,OAAO,GAAG;AACtB,aAAO,8BAA8BA,IAAG,KAAK;AAAA,IACnD;AACI,WAAOA;AAAA,EACX,CAAG,CAAC;AACJ;AC9FU;AADV,MAAM,yBAAN,MAAM,uBAAsB;AAAA,EAG1B,YAAYxC,SAAQ;AADpB;AAEE,SAAK,SAAS,EAAE,GAAGA,QAAQ;AAAA,EAC/B;AAAA,EACE,IAAI,UAAU,MAAM;AAClB,QAAI,SAAS,KAAK;AAChB,aAAO;AAAA,QACL,GAAG,SAAS,GAAG;AAAA,QACf,gBAAgB,IAAI;AAAA,UAClB,SAAS,EAAE;AAAA,UACX;AAAA,QACV;AAAA,MACO;AAAA,IACP;AACI,QAAI,SAAS,gBAAgB;AAC3B,aAAO;AAAA,QACL,GAAG,SAAS,cAAc;AAAA,QAC1B,gBAAgB,IAAI;AAAA,UAClB,SAAS,cAAc,EAAE;AAAA,UACzB;AAAA,QACV;AAAA,MACO;AAAA,IACP;AACI,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,SAAS,IAAI;AAAA,IAC1B;AACI,UAAM,UAAU,GAAG,UAAU,QAAQ,IAAI,SAAS,EAAE,iBAAiB,GAAG,UAAU,IAAI,IAAI,SAAS,cAAc,EAAE,iBAAiB;AACpI,UAAM,QAAQ,QAAQ,IAAI;AAC1B,QAAI,GAAG,OAAO,IAAI,OAAO,GAAG;AAC1B,UAAI,KAAK,OAAO,uBAAuB,SAAS,CAAC,MAAM,kBAAkB;AACvE,eAAO,MAAM;AAAA,MACrB;AACM,YAAM,WAAW,MAAM,MAAO;AAC9B,eAAS,mBAAmB;AAC5B,aAAO;AAAA,IACb;AACI,QAAI,GAAG,OAAO,GAAG,GAAG;AAClB,UAAI,KAAK,OAAO,gBAAgB,OAAO;AACrC,eAAO;AAAA,MACf;AACM,YAAM,IAAI;AAAA,QACR,2BAA2B,IAAI;AAAA,MAChC;AAAA,IACP;AACI,QAAI,GAAG,OAAO,MAAM,GAAG;AACrB,UAAI,KAAK,OAAO,OAAO;AACrB,eAAO,IAAI;AAAA,UACT;AAAA,UACA,IAAI;AAAA,YACF,IAAI;AAAA,cACF,MAAM;AAAA,cACN,IAAI,uBAAuB,KAAK,OAAO,OAAO,KAAK,OAAO,uBAAuB,KAAK;AAAA,YACpG;AAAA,UACA;AAAA,QACS;AAAA,MACT;AACM,aAAO;AAAA,IACb;AACI,QAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,aAAO;AAAA,IACb;AACI,WAAO,IAAI,MAAM,OAAO,IAAI,uBAAsB,KAAK,MAAM,CAAC;AAAA,EAClE;AACA;AAhEE,cADI,wBACI,IAAc;AADxB,IAAM,wBAAN;ACJU,iBACP,YAAO;AAFV,MAAM,aAAa;AAAA,EAAnB;AAEE,wBAAC,IAAsB;AAAA;AAAA,EACvB,MAAM,YAAY;AAChB,WAAO,KAAK,KAAK,QAAQ,UAAU;AAAA,EACvC;AAAA,EACE,QAAQ,WAAW;AACjB,WAAO,KAAK;AAAA,MACV,CAAC,UAAU;AACT;AACA,eAAO;AAAA,MACR;AAAA,MACD,CAAC,WAAW;AACV;AACA,cAAM;AAAA,MACd;AAAA,IACK;AAAA,EACL;AAAA,EACE,KAAK,aAAa,YAAY;AAC5B,WAAO,KAAK,QAAO,EAAG,KAAK,aAAa,UAAU;AAAA,EACtD;AACA;AApBE,cADI,cACI,IAAc;ACCd;AADV,MAAM,kBAAkB;AAAA,EAQtB,YAAYA,SAAQ,SAAS;AAL7B;AAAA;AAEA;AAAA;AAEA;AAAA;AAEE,SAAK,YAAY,MAAM;AACrB,YAAM,EAAE,MAAM,SAAS,eAAc,IAAKA,QAAQ;AAClD,aAAO,EAAE,MAAM,SAAS,cAAc,eAAe,CAAC,EAAE,OAAO,eAAgB;AAAA,IAChF;AACD,QAAI,SAAS;AACX,WAAK,YAAY,QAAQ;AACzB,WAAK,YAAY,QAAQ;AAAA,IAC/B;AAAA,EACA;AAAA,EACE,SAAS,QAAQ;AACf,SAAK,YAAY;AACjB,WAAO;AAAA,EACX;AAAA,EACE,SAAS,QAAQ;AACf,SAAK,YAAY;AACjB,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI,WAAW,OAAO,IAAI;AAAA,EACrC;AACA;AA7BE,cADI,mBACI,IAAc;AAqCd;AAPV,MAAM,WAAW;AAAA,EACf,YAAY,OAAO,SAAS;AAO5B;AACA;AACA;AARE,SAAK,QAAQ;AACb,SAAK,YAAY,QAAQ;AACzB,SAAK,WAAW,QAAQ;AACxB,SAAK,WAAW,QAAQ;AAAA,EAC5B;AAAA,EAKE,UAAU;AACR,UAAM,EAAE,MAAM,SAAS,eAAc,IAAK,KAAK,UAAW;AAC1D,UAAM,cAAc,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI;AACvD,UAAM,qBAAqB,eAAe,IAAI,CAAC,WAAW,OAAO,IAAI;AACrE,UAAM,SAAS;AAAA,MACb,KAAK,MAAM,SAAS;AAAA,MACpB,GAAG;AAAA,MACH,eAAe,CAAC,EAAE,MAAM,SAAS;AAAA,MACjC,GAAG;AAAA,IACJ;AACD,WAAO,QAAQ,GAAG,OAAO,KAAK,GAAG,CAAC;AAAA,EACtC;AACA;AAhBE,cAPI,YAOI,IAAc;ACtCxB,SAAS,cAAc,OAAO,SAAS;AACrC,SAAO,GAAG,MAAM,SAAS,CAAC,IAAI,QAAQ,KAAK,GAAG,CAAC;AACjD;ACCA,MAAM,6BAA4B,oBACxB,iBADwB,IAAc;AAAA,EAAhD;AAAA;AAEE,6CAAoB,CAAE;AAAA;AAAA,EACtB,WAAW,KAAK,UAAU,IAAI;AAC5B,SAAK,kBAAkB,KAAK,EAAE,KAAK,QAAO,CAAE;AAC5C,WAAO;AAAA,EACX;AAAA,EACE,OAAO,MAAM;AACX,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,aAAa;AACzB,WAAO;AAAA,EACX;AAAA,EACE,kBAAkB,IAAIA,SAAQ;AAC5B,SAAK,OAAO,YAAY;AAAA,MACtB;AAAA,MACA,MAAM;AAAA,MACN,OAAMA,WAAA,gBAAAA,QAAQ,SAAQ;AAAA,IACvB;AACD,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,iBAAiB,QAAQ,OAAO;AAC9B,WAAO,KAAK,kBAAkB,IAAI,CAAC,EAAE,KAAK,cAAc;AACtD,cAAQ,CAAC,MAAM,aAAa;AAC1B,cAAM,UAAU,IAAI,kBAAkB,MAAM;AAC1C,gBAAM,gBAAgB,KAAM;AAC5B,iBAAO,EAAE,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC,aAAa,EAAG;AAAA,QACvE,CAAS;AACD,YAAI,SAAS,UAAU;AACrB,kBAAQ,SAAS,SAAS,QAAQ;AAAA,QAC5C;AACQ,YAAI,SAAS,UAAU;AACrB,kBAAQ,SAAS,SAAS,QAAQ;AAAA,QAC5C;AACQ,eAAO,QAAQ,MAAM,KAAK;AAAA,MAClC,GAAS,KAAK,OAAO;AAAA,IACrB,CAAK;AAAA,EACL;AACA;AArCE,cADI,qBACI,IAAc;AAsCxB,MAAM,sBAAqB,aAQjB,iBARiB,IAAO;AAAA,EAChC,YAAY,OAAOA,SAAQ;AACzB,QAAI,CAACA,QAAO,YAAY;AACtB,MAAAA,QAAO,aAAa,cAAc,OAAO,CAACA,QAAO,IAAI,CAAC;AAAA,IAC5D;AACI,UAAM,OAAOA,OAAM;AACnB,SAAK,QAAQ;AAAA,EACjB;AAEA;AADE,cARI,cAQI,IAAc;ACjDxB,MAAM,6BAA4B,0BACxB,iBADwB,IAAoB;AAAA,EAEpD,YAAY,MAAM;AAChB,UAAM,MAAM,UAAU,cAAc;AAAA,EACxC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI,aAAa,OAAO,KAAK,MAAM;AAAA,EAC9C;AACA;AARE,cADI,qBACI,IAAc;AASxB,MAAM,sBAAqB,mBACjB,iBADiB,IAAa;AAAA,EAEtC,aAAa;AACX,WAAO;AAAA,EACX;AAAA,EACE,mBAAmB,OAAO;AACxB,QAAI,OAAO,SAAS,KAAK,GAAG;AAC1B,aAAO,OAAO,MAAM,UAAU;AAAA,IACpC;AACI,QAAI,iBAAiB,aAAa;AAChC,YAAM,UAAU,IAAI,YAAa;AACjC,aAAO,OAAO,QAAQ,OAAO,KAAK,CAAC;AAAA,IACzC;AACI,WAAO,OAAO,OAAO,cAAc,GAAG,KAAK,CAAC;AAAA,EAChD;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO,OAAO,KAAK,MAAM,SAAQ,CAAE;AAAA,EACvC;AACA;AAjBE,cADI,cACI,IAAc;AAkBxB,MAAM,+BAA8B,2BAC1B,kBAD0B,KAAoB;AAAA,EAEtD,YAAY,MAAM;AAChB,UAAM,MAAM,QAAQ,gBAAgB;AAAA,EACxC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAXE,cADI,uBACI,KAAc;AAYxB,MAAM,wBAAuB,oBACnB,kBADmB,KAAa;AAAA,EAExC,aAAa;AACX,WAAO;AAAA,EACX;AAAA,EACE,mBAAmB,OAAO;AACxB,QAAI,OAAO,SAAS,KAAK,GAAG;AAC1B,aAAO,KAAK,MAAM,MAAM,SAAQ,CAAE;AAAA,IACxC;AACI,QAAI,iBAAiB,aAAa;AAChC,YAAM,UAAU,IAAI,YAAa;AACjC,aAAO,KAAK,MAAM,QAAQ,OAAO,KAAK,CAAC;AAAA,IAC7C;AACI,WAAO,KAAK,MAAM,OAAO,cAAc,GAAG,KAAK,CAAC;AAAA,EACpD;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO,OAAO,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,EAC5C;AACA;AAjBE,cADI,gBACI,KAAc;AAkBxB,MAAM,iCAAgC,2BAC5B,kBAD4B,KAAoB;AAAA,EAExD,YAAY,MAAM;AAChB,UAAM,MAAM,UAAU,kBAAkB;AAAA,EAC5C;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI,iBAAiB,OAAO,KAAK,MAAM;AAAA,EAClD;AACA;AARE,cADI,yBACI,KAAc;AASxB,MAAM,0BAAyB,oBACrB,kBADqB,KAAa;AAAA,EAE1C,aAAa;AACX,WAAO;AAAA,EACX;AACA;AAJE,cADI,kBACI,KAAc;AAKxB,SAAS,KAAKjE,IAAGC,IAAG;AAClB,QAAM,EAAE,MAAM,QAAAgE,QAAM,IAAK,uBAAuBjE,IAAGC,EAAC;AACpD,OAAIgE,WAAA,gBAAAA,QAAQ,UAAS,QAAQ;AAC3B,WAAO,IAAI,sBAAsB,IAAI;AAAA,EACzC;AACE,OAAIA,WAAA,gBAAAA,QAAQ,UAAS,UAAU;AAC7B,WAAO,IAAI,oBAAoB,IAAI;AAAA,EACvC;AACE,SAAO,IAAI,wBAAwB,IAAI;AACzC;ACtFA,MAAM,mCAAkC,2BAC9B,kBAD8B,KAAoB;AAAA,EAE1D,YAAY,MAAM,aAAa,kBAAkB;AAC/C,UAAM,MAAM,UAAU,oBAAoB;AAC1C,SAAK,OAAO,cAAc;AAC1B,SAAK,OAAO,mBAAmB;AAAA,EACnC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAbE,cADI,2BACI,KAAc;AAcxB,MAAM,4BAA2B,oBACvB,kBADuB,KAAa;AAAA,EAK5C,YAAY,OAAOA,SAAQ;AACzB,UAAM,OAAOA,OAAM;AAJrB;AACA;AACA;AAGE,SAAK,UAAUA,QAAO,iBAAiB,SAASA,QAAO,WAAW;AAClE,SAAK,QAAQA,QAAO,iBAAiB;AACrC,SAAK,UAAUA,QAAO,iBAAiB;AAAA,EAC3C;AAAA,EACE,aAAa;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EACE,mBAAmB,OAAO;AACxB,WAAO,OAAO,KAAK,YAAY,aAAa,KAAK,QAAQ,KAAK,IAAI;AAAA,EACtE;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO,OAAO,KAAK,UAAU,aAAa,KAAK,MAAM,KAAK,IAAI;AAAA,EAClE;AACA;AAnBE,cADI,oBACI,KAAc;AAoBxB,SAAS,WAAW,kBAAkB;AACpC,SAAO,CAACjE,IAAGC,OAAM;AACf,UAAM,EAAE,MAAM,QAAAgE,QAAM,IAAK,uBAAuBjE,IAAGC,EAAC;AACpD,WAAO,IAAI;AAAA,MACT;AAAA,MACAgE;AAAA,MACA;AAAA,IACD;AAAA,EACF;AACH;AC5CA,MAAM,kCAAiC,2BAC7B,kBAD6B,KAAoB;AAAA,EAEzD,YAAY,MAAM,UAAU,YAAY;AACtC,UAAM,MAAM,UAAU,UAAU;AAChC,SAAK,OAAO,gBAAgB;AAAA,EAChC;AAAA,EACE,WAAWA,SAAQ;AACjB,QAAIA,WAAA,gBAAAA,QAAQ,eAAe;AACzB,WAAK,OAAO,gBAAgB;AAAA,IAClC;AACI,SAAK,OAAO,aAAa;AACzB,WAAO,MAAM,WAAY;AAAA,EAC7B;AACA;AAZE,cADI,0BACI,KAAc;AAaxB,MAAM,2BAA0B,oBACtB,kBADsB,KAAa;AAAA,EAA7C;AAAA;AAEE,yCAAgB,KAAK,OAAO;AAAA;AAAA,EAC5B,aAAa;AACX,WAAO;AAAA,EACX;AACA;AALE,cADI,mBACI,KAAc;AAMxB,MAAM,8BAA6B,gCACzB,kBADyB,KAAyB;AAAA,EAE1D,YAAY,MAAM;AAChB,UAAM,MAAM,UAAU,eAAe;AAAA,EACzC;AAAA,EACE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAVE,cADI,sBACI,KAAc;AAWxB,MAAM,uBAAsB,yBAClB,kBADkB,KAAkB;AAE9C;AADE,cADI,eACI,KAAc;AAExB,MAAM,gCAA+B,gCAC3B,kBAD2B,KAAyB;AAAA,EAE5D,YAAY,MAAM,MAAM;AACtB,UAAM,MAAM,QAAQ,iBAAiB;AACrC,SAAK,OAAO,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,aAAa;AACX,WAAO,KAAK,QAAQ,+DAA+D;AAAA,EACvF;AAAA,EACE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAnBE,cADI,wBACI,KAAc;AAoBxB,MAAM,yBAAwB,yBACpB,kBADoB,KAAkB;AAAA,EAAhD;AAAA;AAEE,gCAAO,KAAK,OAAO;AAAA;AAAA,EACnB,mBAAmB,OAAO;AACxB,QAAI,KAAK,OAAO,SAAS,aAAa;AACpC,aAAO,IAAI,KAAK,QAAQ,GAAG;AAAA,IACjC;AACI,WAAO,IAAI,KAAK,KAAK;AAAA,EACzB;AAAA,EACE,iBAAiB,OAAO;AACtB,UAAM,OAAO,MAAM,QAAS;AAC5B,QAAI,KAAK,OAAO,SAAS,aAAa;AACpC,aAAO,KAAK,MAAM,OAAO,GAAG;AAAA,IAClC;AACI,WAAO;AAAA,EACX;AACA;AAfE,cADI,iBACI,KAAc;AAgBxB,MAAM,8BAA6B,gCACzB,kBADyB,KAAyB;AAAA,EAE1D,YAAY,MAAM,MAAM;AACtB,UAAM,MAAM,WAAW,eAAe;AACtC,SAAK,OAAO,OAAO;AAAA,EACvB;AAAA,EACE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAXE,cADI,sBACI,KAAc;AAYxB,MAAM,uBAAsB,yBAClB,kBADkB,KAAkB;AAAA,EAA9C;AAAA;AAEE,gCAAO,KAAK,OAAO;AAAA;AAAA,EACnB,mBAAmB,OAAO;AACxB,WAAO,OAAO,KAAK,MAAM;AAAA,EAC7B;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO,QAAQ,IAAI;AAAA,EACvB;AACA;AARE,cADI,eACI,KAAc;AASxB,SAAS,QAAQjE,IAAGC,IAAG;AACrB,QAAM,EAAE,MAAM,QAAAgE,QAAM,IAAK,uBAAuBjE,IAAGC,EAAC;AACpD,OAAIgE,WAAA,gBAAAA,QAAQ,UAAS,gBAAeA,WAAA,gBAAAA,QAAQ,UAAS,gBAAgB;AACnE,WAAO,IAAI,uBAAuB,MAAMA,QAAO,IAAI;AAAA,EACvD;AACE,OAAIA,WAAA,gBAAAA,QAAQ,UAAS,WAAW;AAC9B,WAAO,IAAI,qBAAqB,MAAMA,QAAO,IAAI;AAAA,EACrD;AACE,SAAO,IAAI,qBAAqB,IAAI;AACtC;AC5GA,MAAM,8BAA6B,2BACzB,kBADyB,KAAoB;AAAA,EAErD,YAAY,MAAM;AAChB,UAAM,MAAM,UAAU,eAAe;AAAA,EACzC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAXE,cADI,sBACI,KAAc;AAYxB,MAAM,uBAAsB,oBAClB,kBADkB,KAAa;AAAA,EAEvC,aAAa;AACX,WAAO;AAAA,EACX;AACA;AAJE,cADI,eACI,KAAc;AAKxB,SAAS,QAAQ,MAAM;AACrB,SAAO,IAAI,qBAAqB,QAAQ,EAAE;AAC5C;ACrBA,MAAM,2BAA0B,2BACtB,kBADsB,KAAoB;AAAA,EAElD,YAAY,MAAM;AAChB,UAAM,MAAM,UAAU,YAAY;AAAA,EACtC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI,WAAW,OAAO,KAAK,MAAM;AAAA,EAC5C;AACA;AARE,cADI,mBACI,KAAc;AASxB,MAAM,oBAAmB,oBACf,kBADe,KAAa;AAAA,EAEpC,aAAa;AACX,WAAO;AAAA,EACX;AACA;AAJE,cADI,YACI,KAAc;AAKxB,SAAS,KAAK,MAAM;AAClB,SAAO,IAAI,kBAAkB,QAAQ,EAAE;AACzC;ACjBA,MAAM,2BAA0B,2BACtB,kBADsB,KAAoB;AAAA,EAElD,YAAY,MAAMA,SAAQ;AACxB,UAAM,MAAM,UAAU,YAAY;AAClC,SAAK,OAAO,aAAaA,QAAO;AAChC,SAAK,OAAO,SAASA,QAAO;AAAA,EAChC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAbE,cADI,mBACI,KAAc;AAcxB,MAAM,oBAAmB,oBACf,kBADe,KAAa;AAAA,EAIpC,YAAY,OAAOA,SAAQ;AACzB,UAAM,OAAOA,OAAM;AAHrB,sCAAa,KAAK,OAAO;AACzB,kCAAS,KAAK,OAAO;AAAA,EAGvB;AAAA,EACE,aAAa;AACX,WAAO,OAAO,KAAK,OAAO,SAAS,IAAI,KAAK,OAAO,MAAM,MAAM,EAAE;AAAA,EACrE;AACA;AATE,cADI,YACI,KAAc;AAUxB,MAAM,+BAA8B,2BAC1B,kBAD0B,KAAoB;AAAA,EAEtD,YAAY,MAAM;AAChB,UAAM,MAAM,QAAQ,gBAAgB;AAAA,EACxC;AAAA;AAAA,EAEE,MAAM,OAAO;AACX,WAAO,IAAI;AAAA,MACT;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAXE,cADI,uBACI,KAAc;AAYxB,MAAM,wBAAuB,oBACnB,kBADmB,KAAa;AAAA,EAExC,aAAa;AACX,WAAO;AAAA,EACX;AAAA,EACE,mBAAmB,OAAO;AACxB,WAAO,KAAK,MAAM,KAAK;AAAA,EAC3B;AAAA,EACE,iBAAiB,OAAO;AACtB,WAAO,KAAK,UAAU,KAAK;AAAA,EAC/B;AACA;AAVE,cADI,gBACI,KAAc;AAWxB,SAAS,KAAKjE,IAAGC,KAAI,IAAI;AACvB,QAAM,EAAE,MAAM,QAAAgE,QAAM,IAAK,uBAAuBjE,IAAGC,EAAC;AACpD,MAAIgE,QAAO,SAAS,QAAQ;AAC1B,WAAO,IAAI,sBAAsB,IAAI;AAAA,EACzC;AACE,SAAO,IAAI,kBAAkB,MAAMA,OAAM;AAC3C;ACtDA,SAAS,0BAA0B;AACjC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH;ACZA,MAAM,oBAAoB,OAAO,IAAI,iCAAiC;AACtE,MAAM,qBAAoB,aAChB,kBAMP,YAAM,OAAO,SAEb,yBAEA,YAAM,OAAO,oBAXU,KAAM;AAAA,EAAhC;AAAA;AAOE;AAAA,wBAAC;AAED;AAAA,wBAAC,KAAqB,CAAE;AAExB;AAAA,wBAAC;AAAA;AACH;AAXE,cADI,aACI,KAAc;AAAA;AAEtB,cAHI,aAGG,UAAS,OAAO,OAAO,CAAA,GAAI,MAAM,QAAQ;AAAA,EAC9C;AACJ,CAAG;AAQH,SAAS,gBAAgB,MAAM,SAAS,aAAa0C,SAAQ,WAAW,MAAM;AAC5E,QAAM,WAAW,IAAI,YAAY,MAAMA,SAAQ,QAAQ;AACvD,QAAM,gBAAgB,OAAO,YAAY,aAAa,QAAQ,wBAAyB,CAAA,IAAI;AAC3F,QAAM,eAAe,OAAO;AAAA,IAC1B,OAAO,QAAQ,aAAa,EAAE,IAAI,CAAC,CAAC,OAAO,cAAc,MAAM;AAC7D,YAAM,aAAa;AACnB,iBAAW,QAAQ,KAAK;AACxB,YAAM,SAAS,WAAW,MAAM,QAAQ;AACxC,eAAS,iBAAiB,EAAE,KAAK,GAAG,WAAW,iBAAiB,QAAQ,QAAQ,CAAC;AACjF,aAAO,CAAC,OAAO,MAAM;AAAA,IACtB,CAAA;AAAA,EACF;AACD,QAAM,QAAQ,OAAO,OAAO,UAAU,YAAY;AAClD,QAAM,MAAM,OAAO,OAAO,IAAI;AAC9B,QAAM,MAAM,OAAO,kBAAkB,IAAI;AAIzC,SAAO;AACT;AACA,MAAM,cAAc,CAAC,MAAM,SAAS,gBAAgB;AAClD,SAAO,gBAAgB,MAAM,OAAoB;AACnD;ACjCA,MAAM,0BAAyB,oBAQrB,kBARqB,KAAa;AAAA,EAC1C,YAAY,OAAO,SAAS,SAAS,UAAU;AAC7C,UAAO;AAQT;AAAA;AA8EA,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,kCAAS,CAAC,sBAAsB;AAC9B,aAAO,KAAK,WAAW,OAAO,iBAAiB;AAAA,IAChD;AAhGC,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS,EAAE,OAAO,SAAU;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCE,MAAM,OAAO;AACX,SAAK,OAAO,QAAQ;AACpB,WAAO;AAAA,EACX;AAAA,EACE,WAAW,SAAS;AAClB,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACpC,YAAM,UAAU,QAAQ,CAAC;AAAA,QACvB,IAAI;AAAA,UACF,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;AAAA,UACtC,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAO,CAAA;AAAA,QACvF;AAAA,MACO;AACD,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,WAAK,OAAO,UAAU;AAAA,IAC5B,OAAW;AACL,YAAM,eAAe;AACrB,WAAK,OAAO,UAAU;AAAA,IAC5B;AACI,WAAO;AAAA,EACX;AAAA,EACE,MAAMvC,QAAO;AACX,SAAK,OAAO,QAAQA;AACpB,WAAO;AAAA,EACX;AAAA,EACE,UAAU,SAAS,KAAK,MAAM,YAAY,OAAO,OAAO,GAAG;AACzD,SAAK,OAAO,YAAY,oBAAoB,MAAM;AAClD,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS;AACP,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;AAAA,EACpD;AAAA,EACE,QAAQ;AACN,UAAM,EAAE,SAAS,UAAU,GAAG,KAAM,IAAG,KAAK,QAAQ,WAAW,KAAK,QAAQ;AAC5E,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS,iBAAiB,MAAM;AAC9B,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;AAAA,MACzE,KAAK,QAAQ,WAAW,KAAK,OAAM,CAAE;AAAA,MACrC,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO,YAAY,QAAQ;AAAA,MAChC;AAAA,IACD;AAAA,EACL;AAAA,EACE,UAAU;AACR,WAAO,KAAK,SAAS,KAAK;AAAA,EAC9B;AAAA,EAaE,MAAM,QAAQ,mBAAmB;AAC/B,WAAO,KAAK,WAAW,QAAQ,iBAAiB;AAAA,EACpD;AAAA,EACE,WAAW;AACT,WAAO;AAAA,EACX;AACA;AAlGE,cARI,kBAQI,KAAc;ACZxB,SAAS,YAAY,OAAO;AAC1B,QAAM,QAAQ,MAAM,QAAQ,cAAc,EAAE,EAAE,MAAM,yCAAyC,KAAK,CAAE;AACpG,SAAO,MAAM,IAAI,CAAC,SAAS,KAAK,YAAa,CAAA,EAAE,KAAK,GAAG;AACzD;AACA,SAAS,YAAY,OAAO;AAC1B,QAAM,QAAQ,MAAM,QAAQ,cAAc,EAAE,EAAE,MAAM,yCAAyC,KAAK,CAAE;AACpG,SAAO,MAAM,OAAO,CAAC,KAAK,MAAMzH,OAAM;AACpC,UAAM,gBAAgBA,OAAM,IAAI,KAAK,YAAa,IAAG,GAAG,KAAK,CAAC,EAAE,YAAW,CAAE,GAAG,KAAK,MAAM,CAAC,CAAC;AAC7F,WAAO,MAAM;AAAA,EACd,GAAE,EAAE;AACP;AACA,SAAS,SAAS,OAAO;AACvB,SAAO;AACT;AAEU;AADV,MAAM,YAAY;AAAA,EAMhB,YAAY,QAAQ;AAHpB;AAAA,iCAAQ,CAAE;AACV,wCAAe,CAAE;AACjB;AAEE,SAAK,UAAU,WAAW,eAAe,cAAc,WAAW,cAAc,cAAc;AAAA,EAClG;AAAA,EACE,gBAAgB,QAAQ;AACtB,QAAI,CAAC,OAAO;AACV,aAAO,OAAO;AAChB,UAAMgK,UAAS,OAAO,MAAM,MAAM,OAAO,MAAM,KAAK;AACpD,UAAM,YAAY,OAAO,MAAM,MAAM,OAAO,YAAY;AACxD,UAAM,MAAM,GAAGA,OAAM,IAAI,SAAS,IAAI,OAAO,IAAI;AACjD,QAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AACpB,WAAK,WAAW,OAAO,KAAK;AAAA,IAClC;AACI,WAAO,KAAK,MAAM,GAAG;AAAA,EACzB;AAAA,EACE,WAAW,OAAO;AAChB,UAAMA,UAAS,MAAM,MAAM,OAAO,MAAM,KAAK;AAC7C,UAAM,YAAY,MAAM,MAAM,OAAO,YAAY;AACjD,UAAM,WAAW,GAAGA,OAAM,IAAI,SAAS;AACvC,QAAI,CAAC,KAAK,aAAa,QAAQ,GAAG;AAChC,iBAAW,UAAU,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,CAAC,GAAG;AAC/D,cAAM,YAAY,GAAG,QAAQ,IAAI,OAAO,IAAI;AAC5C,aAAK,MAAM,SAAS,IAAI,KAAK,QAAQ,OAAO,IAAI;AAAA,MACxD;AACM,WAAK,aAAa,QAAQ,IAAI;AAAA,IACpC;AAAA,EACA;AAAA,EACE,aAAa;AACX,SAAK,QAAQ,CAAE;AACf,SAAK,eAAe,CAAE;AAAA,EAC1B;AACA;AAnCE,cADI,aACI,KAAc;AChBxB,MAAM,sBAAqB,aACjB,kBADiB,KAAM;AAAA,EAE/B,YAAY,EAAE,SAAS,SAAS;AAC9B,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA,EACjB;AACA;AANE,cADI,cACI,KAAc;AAOxB,MAAM,kCAAiC,oBAC7B,kBAD6B,KAAa;AAAA,EAElD,cAAc;AACZ,UAAM,EAAE,SAAS,YAAY;AAAA,EACjC;AACA;AAJE,cADI,0BACI,KAAc;ACRxB,MAAM,wBAAuB,YACnB,kBADmB,KAAK;AAElC;AADE,cADI,gBACI,KAAc;ACmBd;AADV,MAAM,cAAc;AAAA,EAIlB,YAAY1C,SAAQ;AADpB;AAAA;AAEE,SAAK,SAAS,IAAI,YAAYA,WAAA,gBAAAA,QAAQ,MAAM;AAAA,EAChD;AAAA,EACE,WAAW,MAAM;AACf,WAAO,IAAI,IAAI;AAAA,EACnB;AAAA,EACE,YAAY,MAAM;AAChB,WAAO;AAAA,EACX;AAAA,EACE,aAAarH,MAAK;AAChB,WAAO,IAAIA,KAAI,QAAQ,MAAM,IAAI,CAAC;AAAA,EACtC;AAAA,EACE,aAAa,SAAS;AACpB,QAAI,EAAC,mCAAS;AACZ,aAAO;AACT,UAAM,gBAAgB,CAAC,UAAU;AACjC,eAAW,CAACD,IAAGoL,EAAC,KAAK,QAAQ,QAAO,GAAI;AACtC,oBAAc,KAAK,MAAM,IAAI,WAAWA,GAAE,EAAE,KAAK,CAAC,QAAQA,GAAE,EAAE,GAAG,GAAG;AACpE,UAAIpL,KAAI,QAAQ,SAAS,GAAG;AAC1B,sBAAc,KAAK,OAAO;AAAA,MAClC;AAAA,IACA;AACI,kBAAc,KAAK,MAAM;AACzB,WAAO,IAAI,KAAK,aAAa;AAAA,EACjC;AAAA,EACE,iBAAiB,EAAE,OAAO,OAAO,WAAW,UAAU,OAAAyH,QAAO,WAAW;AACtE,UAAM,UAAU,KAAK,aAAa,QAAQ;AAC1C,UAAM,eAAe,YAAY,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,MAAM,CAAC,KAAK;AAC9G,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAChD,UAAM,aAAa,KAAK,aAAa,OAAO;AAC5C,UAAM,WAAW,KAAK,WAAWA,MAAK;AACtC,WAAO,MAAM,OAAO,eAAe,KAAK,GAAG,QAAQ,GAAG,YAAY,GAAG,UAAU,GAAG,QAAQ;AAAA,EAC9F;AAAA,EACE,eAAe,OAAO,KAAK;AACzB,UAAM,eAAe,MAAM,MAAM,OAAO,OAAO;AAC/C,UAAM,cAAc,OAAO,KAAK,YAAY,EAAE;AAAA,MAC5C,CAAC,YAAO;;AAAK,mBAAI,OAAO,MAAM,YAAUhH,MAAA,aAAa,OAAO,MAApB,gBAAAA,IAAuB,gBAAe;AAAA;AAAA,IAC/E;AACD,UAAM,UAAU,YAAY;AAC5B,WAAO,IAAI,KAAK,YAAY,QAAQ,CAAC,SAAST,OAAM;AAClD,YAAM,MAAM,aAAa,OAAO;AAChC,YAAM,QAAQ,IAAI,OAAO,KAAK,IAAI,MAAM,IAAI,WAAY,GAAE,GAAG;AAC7D,YAAM,MAAM,MAAM,IAAI,WAAW,KAAK,OAAO,gBAAgB,GAAG,CAAC,CAAC,MAAM,KAAK;AAC7E,UAAIA,KAAI,UAAU,GAAG;AACnB,eAAO,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC;AAAA,MAClC;AACM,aAAO,CAAC,GAAG;AAAA,IACjB,CAAK,CAAC;AAAA,EACN;AAAA,EACE,iBAAiB,EAAE,OAAO,KAAK,OAAO,WAAW,UAAU,OAAO,MAAM,OAAAyH,QAAO,QAAO,GAAI;AACxF,UAAM,UAAU,KAAK,aAAa,QAAQ;AAC1C,UAAM,SAAS,KAAK,eAAe,OAAO,GAAG;AAC7C,UAAM,UAAU,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,GAAG,KAAK,eAAe,IAAI,CAAC,CAAC;AAC/E,UAAM,WAAW,KAAK,WAAW,KAAK;AACtC,UAAM,eAAe,YAAY,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,MAAM,CAAC,KAAK;AAC9G,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAChD,UAAM,aAAa,KAAK,aAAa,OAAO;AAC5C,UAAM,WAAW,KAAK,WAAWA,MAAK;AACtC,WAAO,MAAM,OAAO,UAAU,KAAK,QAAQ,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,GAAG,YAAY,GAAG,UAAU,GAAG,QAAQ;AAAA,EAC5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,eAAe,QAAQ,EAAE,gBAAgB,MAAK,IAAK,CAAA,GAAI;AACrD,UAAM,aAAa,OAAO;AAC1B,UAAM,SAAS,OAAO,QAAQ,CAAC,EAAE,MAAO,GAAEzH,OAAM;AAC9C,YAAM,QAAQ,CAAE;AAChB,UAAI,GAAG,OAAO,IAAI,OAAO,KAAK,MAAM,kBAAkB;AACpD,cAAM,KAAK,IAAI,WAAW,MAAM,UAAU,CAAC;AAAA,MACnD,WAAiB,GAAG,OAAO,IAAI,OAAO,KAAK,GAAG,OAAO,GAAG,GAAG;AACnD,cAAM,QAAQ,GAAG,OAAO,IAAI,OAAO,IAAI,MAAM,MAAM;AACnD,YAAI,eAAe;AACjB,gBAAM;AAAA,YACJ,IAAI;AAAA,cACF,MAAM,YAAY,IAAI,CAAC8J,OAAM;AAC3B,oBAAI,GAAGA,IAAG,MAAM,GAAG;AACjB,yBAAO,IAAI,WAAW,KAAK,OAAO,gBAAgBA,EAAC,CAAC;AAAA,gBACtE;AACgB,uBAAOA;AAAA,cACR,CAAA;AAAA,YACf;AAAA,UACW;AAAA,QACX,OAAe;AACL,gBAAM,KAAK,KAAK;AAAA,QAC1B;AACQ,YAAI,GAAG,OAAO,IAAI,OAAO,GAAG;AAC1B,gBAAM,KAAK,UAAU,IAAI,WAAW,MAAM,UAAU,CAAC,EAAE;AAAA,QACjE;AAAA,MACO,WAAU,GAAG,OAAO,MAAM,GAAG;AAC5B,cAAM,YAAY,MAAM,MAAM,MAAM,OAAO,IAAI;AAC/C,YAAI,eAAe;AACjB,gBAAM,KAAK,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC;AAAA,QACvE,OAAe;AACL,gBAAM,KAAK,MAAM,IAAI,WAAW,SAAS,CAAC,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC,EAAE;AAAA,QAC5G;AAAA,MACA;AACM,UAAI9J,KAAI,aAAa,GAAG;AACtB,cAAM,KAAK,OAAO;AAAA,MAC1B;AACM,aAAO;AAAA,IACb,CAAK;AACD,WAAO,IAAI,KAAK,MAAM;AAAA,EAC1B;AAAA,EACE,WAAW,OAAO;AAChB,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,aAAO;AAAA,IACb;AACI,UAAM,aAAa,CAAE;AACrB,QAAI,OAAO;AACT,iBAAW,CAAC,OAAO,QAAQ,KAAK,MAAM,QAAO,GAAI;AAC/C,YAAI,UAAU,GAAG;AACf,qBAAW,KAAK,MAAM;AAAA,QAChC;AACQ,cAAM,QAAQ,SAAS;AACvB,YAAI,GAAG,OAAO,WAAW,GAAG;AAC1B,gBAAM,YAAY,MAAM,YAAY,OAAO,IAAI;AAC/C,gBAAM,cAAc,MAAM,YAAY,OAAO,MAAM;AACnD,gBAAM,gBAAgB,MAAM,YAAY,OAAO,YAAY;AAC3D,gBAAM,QAAQ,cAAc,gBAAgB,SAAS,SAAS;AAC9D,qBAAW;AAAA,YACT,MAAM,IAAI,IAAI,SAAS,QAAQ,CAAC,SAAS,cAAc,MAAM,IAAI,WAAW,WAAW,CAAC,MAAM,MAAM,GAAG,IAAI,WAAW,aAAa,CAAC,GAAG,SAAS,OAAO,IAAI,WAAW,KAAK,CAAC,EAAE,OAAO,SAAS,EAAE;AAAA,UACjM;AAAA,QACX,OAAe;AACL,qBAAW;AAAA,YACT,MAAM,IAAI,IAAI,SAAS,QAAQ,CAAC,SAAS,KAAK,OAAO,SAAS,EAAE;AAAA,UACjE;AAAA,QACX;AACQ,YAAI,QAAQ,MAAM,SAAS,GAAG;AAC5B,qBAAW,KAAK,MAAM;AAAA,QAChC;AAAA,MACA;AAAA,IACA;AACI,WAAO,IAAI,KAAK,UAAU;AAAA,EAC9B;AAAA,EACE,WAAWyH,QAAO;AAChB,WAAO,OAAOA,WAAU,YAAY,OAAOA,WAAU,YAAYA,UAAS,IAAI,aAAaA,MAAK,KAAK;AAAA,EACzG;AAAA,EACE,aAAa,SAAS;AACpB,UAAM,cAAc,CAAE;AACtB,QAAI,SAAS;AACX,iBAAW,CAAC,OAAO,YAAY,KAAK,QAAQ,QAAO,GAAI;AACrD,oBAAY,KAAK,YAAY;AAC7B,YAAI,QAAQ,QAAQ,SAAS,GAAG;AAC9B,sBAAY,KAAK,OAAO;AAAA,QAClC;AAAA,MACA;AAAA,IACA;AACI,WAAO,YAAY,SAAS,IAAI,gBAAgB,IAAI,KAAK,WAAW,CAAC,KAAK;AAAA,EAC9E;AAAA,EACE,eAAe,OAAO;AACpB,QAAI,GAAG,OAAO,KAAK,KAAK,MAAM,MAAM,OAAO,YAAY,MAAM,MAAM,MAAM,OAAO,IAAI,GAAG;AACrF,aAAO,MAAM,IAAI,WAAW,MAAM,MAAM,OAAO,YAAY,CAAC,CAAC,IAAI,IAAI,WAAW,MAAM,MAAM,OAAO,IAAI,CAAC,CAAC;AAAA,IAC/G;AACI,WAAO;AAAA,EACX;AAAA,EACE,iBAAiB;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAAK;AACD,UAAM,aAAa,cAAc,oBAAoB,MAAM;AAC3D,eAAW0D,MAAK,YAAY;AAC1B,UAAI,GAAGA,GAAE,OAAO,MAAM,KAAK,aAAaA,GAAE,MAAM,KAAK,OAAO,GAAG,OAAO,QAAQ,IAAI,MAAM,EAAE,QAAQ,GAAG,OAAO,cAAc,IAAI,MAAM,cAAc,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,SAAS,aAAa,KAAK,MAAM,EAAE,CAAC,WAAW,+BAAO;AAAA,QAChO,CAAC,EAAE,MAAK,MAAO,WAAW,OAAO,MAAM,OAAO,OAAO,IAAI,aAAa,MAAM,IAAI,OAAO,MAAM,OAAO,QAAQ;AAAA,SAC3GA,GAAE,MAAM,KAAK,GAAG;AACjB,cAAM,YAAY,aAAaA,GAAE,MAAM,KAAK;AAC5C,cAAM,IAAI;AAAA,UACR,SAASA,GAAE,KAAK,KAAK,IAAI,CAAC,gCAAgC,SAAS,MAAMA,GAAE,MAAM,IAAI,qBAAqB,SAAS;AAAA,QACpH;AAAA,MACT;AAAA,IACA;AACI,UAAM,gBAAgB,CAAC,SAAS,MAAM,WAAW;AACjD,UAAM,UAAU,KAAK,aAAa,QAAQ;AAC1C,UAAM,cAAc,WAAW,iBAAiB;AAChD,UAAM,YAAY,KAAK,eAAe,YAAY,EAAE,cAAa,CAAE;AACnE,UAAM,WAAW,KAAK,eAAe,KAAK;AAC1C,UAAM,WAAW,KAAK,WAAW,KAAK;AACtC,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAChD,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AACpD,UAAM,cAAc,CAAE;AACtB,QAAI,SAAS;AACX,iBAAW,CAAC,OAAO,YAAY,KAAK,QAAQ,QAAO,GAAI;AACrD,oBAAY,KAAK,YAAY;AAC7B,YAAI,QAAQ,QAAQ,SAAS,GAAG;AAC9B,sBAAY,KAAK,OAAO;AAAA,QAClC;AAAA,MACA;AAAA,IACA;AACI,UAAM,aAAa,YAAY,SAAS,IAAI,gBAAgB,IAAI,KAAK,WAAW,CAAC,KAAK;AACtF,UAAM,aAAa,KAAK,aAAa,OAAO;AAC5C,UAAM,WAAW,KAAK,WAAW1D,MAAK;AACtC,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AACpD,UAAM,aAAa,MAAM,OAAO,SAAS,WAAW,IAAI,SAAS,SAAS,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAG,UAAU,GAAG,QAAQ,GAAG,SAAS;AACrK,QAAI,aAAa,SAAS,GAAG;AAC3B,aAAO,KAAK,mBAAmB,YAAY,YAAY;AAAA,IAC7D;AACI,WAAO;AAAA,EACX;AAAA,EACE,mBAAmB,YAAY,cAAc;AAC3C,UAAM,CAAC,aAAa,GAAG,IAAI,IAAI;AAC/B,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,kDAAkD;AAAA,IACxE;AACI,QAAI,KAAK,WAAW,GAAG;AACrB,aAAO,KAAK,uBAAuB,EAAE,YAAY,YAAW,CAAE;AAAA,IACpE;AACI,WAAO,KAAK;AAAA,MACV,KAAK,uBAAuB,EAAE,YAAY,YAAW,CAAE;AAAA,MACvD;AAAA,IACD;AAAA,EACL;AAAA,EACE,uBAAuB;AAAA,IACrB;AAAA,IACA,aAAa,EAAE,MAAM,OAAO,aAAa,OAAAA,QAAO,SAAS,OAAM;AAAA,EACnE,GAAK;AACD,UAAM,YAAY,MAAM,WAAW,OAAM,CAAE;AAC3C,UAAM,aAAa,MAAM,YAAY,OAAQ,CAAA;AAC7C,QAAI;AACJ,QAAI,WAAW,QAAQ,SAAS,GAAG;AACjC,YAAM,gBAAgB,CAAE;AACxB,iBAAW,iBAAiB,SAAS;AACnC,YAAI,GAAG,eAAe,YAAY,GAAG;AACnC,wBAAc,KAAK,IAAI,WAAW,cAAc,IAAI,CAAC;AAAA,QACtD,WAAU,GAAG,eAAe,GAAG,GAAG;AACjC,mBAASzH,KAAI,GAAGA,KAAI,cAAc,YAAY,QAAQA,MAAK;AACzD,kBAAM,QAAQ,cAAc,YAAYA,EAAC;AACzC,gBAAI,GAAG,OAAO,YAAY,GAAG;AAC3B,4BAAc,YAAYA,EAAC,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC;AAAA,YAC9F;AAAA,UACA;AACU,wBAAc,KAAK,MAAM,aAAa,EAAE;AAAA,QAClD,OAAe;AACL,wBAAc,KAAK,MAAM,aAAa,EAAE;AAAA,QAClD;AAAA,MACA;AACM,mBAAa,gBAAgB,IAAI,KAAK,eAAe,OAAO,CAAC;AAAA,IACnE;AACI,UAAM,WAAW,OAAOyH,WAAU,YAAY,OAAOA,WAAU,YAAYA,UAAS,IAAI,aAAaA,MAAK,KAAK;AAC/G,UAAM,gBAAgB,IAAI,IAAI,GAAG,IAAI,IAAI,QAAQ,SAAS,EAAE,EAAE;AAC9D,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AACpD,WAAO,MAAM,SAAS,GAAG,aAAa,GAAG,UAAU,GAAG,UAAU,GAAG,QAAQ,GAAG,SAAS;AAAA,EAC3F;AAAA,EACE,iBAAiB,EAAE,OAAO,QAAQ,gBAAgB,YAAY,WAAW,UAAU,UAAU;AAC3F,UAAM,gBAAgB,CAAE;AACxB,UAAM,UAAU,MAAM,MAAM,OAAO,OAAO;AAC1C,UAAM,aAAa,OAAO,QAAQ,OAAO,EAAE;AAAA,MACzC,CAAC,CAACvH,IAAG,GAAG,MAAM,CAAC,IAAI,oBAAmB;AAAA,IACvC;AACD,UAAM,cAAc,WAAW,IAAI,CAAC,CAAG,EAAA,MAAM,MAAM,IAAI,WAAW,KAAK,OAAO,gBAAgB,MAAM,CAAC,CAAC;AACtG,QAAI,QAAQ;AACV,YAAM,UAAU;AAChB,UAAI,GAAG,SAAS,GAAG,GAAG;AACpB,sBAAc,KAAK,OAAO;AAAA,MAClC,OAAa;AACL,sBAAc,KAAK,QAAQ,QAAQ;AAAA,MAC3C;AAAA,IACA,OAAW;AACL,YAAM,SAAS;AACf,oBAAc,KAAK,IAAI,IAAI,SAAS,CAAC;AACrC,iBAAW,CAAC,YAAY,KAAK,KAAK,OAAO,QAAO,GAAI;AAClD,cAAM,YAAY,CAAE;AACpB,mBAAW,CAAC,WAAW,GAAG,KAAK,YAAY;AACzC,gBAAM,WAAW,MAAM,SAAS;AAChC,cAAI,aAAa,UAAU,GAAG,UAAU,KAAK,KAAK,SAAS,UAAU,QAAQ;AAC3E,gBAAI;AACJ,gBAAI,IAAI,YAAY,QAAQ,IAAI,YAAY,QAAQ;AAClD,6BAAe,GAAG,IAAI,SAAS,GAAG,IAAI,IAAI,UAAU,IAAI,MAAM,IAAI,SAAS,GAAG;AAAA,YAC5F,WAAuB,IAAI,cAAc,QAAQ;AACnC,oBAAM,kBAAkB,IAAI,UAAW;AACvC,6BAAe,GAAG,iBAAiB,GAAG,IAAI,kBAAkB,IAAI,MAAM,iBAAiB,GAAG;AAAA,YACxG,WAAuB,CAAC,IAAI,WAAW,IAAI,eAAe,QAAQ;AACpD,oBAAM,mBAAmB,IAAI,WAAY;AACzC,6BAAe,GAAG,kBAAkB,GAAG,IAAI,mBAAmB,IAAI,MAAM,kBAAkB,GAAG;AAAA,YAC3G,OAAmB;AACL,6BAAe;AAAA,YAC7B;AACY,sBAAU,KAAK,YAAY;AAAA,UACvC,OAAiB;AACL,sBAAU,KAAK,QAAQ;AAAA,UACnC;AAAA,QACA;AACQ,sBAAc,KAAK,SAAS;AAC5B,YAAI,aAAa,OAAO,SAAS,GAAG;AAClC,wBAAc,KAAK,OAAO;AAAA,QACpC;AAAA,MACA;AAAA,IACA;AACI,UAAM,UAAU,KAAK,aAAa,QAAQ;AAC1C,UAAM,YAAY,IAAI,KAAK,aAAa;AACxC,UAAM,eAAe,YAAY,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,MAAM,CAAC,KAAK;AAC9G,UAAM,gBAAgB,aAAa,mBAAmB,UAAU,KAAK;AACrE,WAAO,MAAM,OAAO,eAAe,KAAK,IAAI,WAAW,IAAI,SAAS,GAAG,aAAa,GAAG,YAAY;AAAA,EACvG;AAAA,EACE,WAAW,MAAM,cAAc;AAC7B,WAAO,KAAK,QAAQ;AAAA,MAClB,QAAQ,KAAK;AAAA,MACb,YAAY,KAAK;AAAA,MACjB,aAAa,KAAK;AAAA,MAClB,cAAc,KAAK;AAAA,MACnB;AAAA,IACN,CAAK;AAAA,EACL;AAAA,EACE,qBAAqB;AAAA,IACnB;AAAA,IACA,QAAA8J;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa1C;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAAK;AACD,QAAI,YAAY,CAAE;AAClB,QAAIG,QAAO,QAAQ,UAAU,CAAE,GAAE;AACjC,UAAM,QAAQ,CAAE;AAChB,QAAIH,YAAW,MAAM;AACnB,YAAM,mBAAmB,OAAO,QAAQ,YAAY,OAAO;AAC3D,kBAAY,iBAAiB,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO;AAAA,QAClD,OAAO,MAAM;AAAA,QACb,OAAO;AAAA,QACP,OAAO,mBAAmB,OAAO,UAAU;AAAA,QAC3C,oBAAoB;AAAA,QACpB,QAAQ;AAAA,QACR,WAAW,CAAA;AAAA,MACnB,EAAQ;AAAA,IACR,OAAW;AACL,YAAM,iBAAiB,OAAO;AAAA,QAC5B,OAAO,QAAQ,YAAY,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,mBAAmB,OAAO,UAAU,CAAC,CAAC;AAAA,MACvG;AACD,UAAIA,QAAO,OAAO;AAChB,cAAM,WAAW,OAAOA,QAAO,UAAU,aAAaA,QAAO,MAAM,gBAAgB,cAAc,IAAIA,QAAO;AAC5G,gBAAQ,YAAY,uBAAuB,UAAU,UAAU;AAAA,MACvE;AACM,YAAM,kBAAkB,CAAE;AAC1B,UAAI,kBAAkB,CAAE;AACxB,UAAIA,QAAO,SAAS;AAClB,YAAI,gBAAgB;AACpB,mBAAW,CAAC,OAAO,KAAK,KAAK,OAAO,QAAQA,QAAO,OAAO,GAAG;AAC3D,cAAI,UAAU,QAAQ;AACpB;AAAA,UACZ;AACU,cAAI,SAAS,YAAY,SAAS;AAChC,gBAAI,CAAC,iBAAiB,UAAU,MAAM;AACpC,8BAAgB;AAAA,YAC9B;AACY,4BAAgB,KAAK,KAAK;AAAA,UACtC;AAAA,QACA;AACQ,YAAI,gBAAgB,SAAS,GAAG;AAC9B,4BAAkB,gBAAgB,gBAAgB,OAAO,CAACwC,OAAM;;AAAA,qBAAArJ,MAAA6G,QAAO,YAAP,gBAAA7G,IAAiBqJ,SAAO;AAAA,WAAI,IAAI,OAAO,KAAK,YAAY,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,gBAAgB,SAAS,GAAG,CAAC;AAAA,QACzL;AAAA,MACA,OAAa;AACL,0BAAkB,OAAO,KAAK,YAAY,OAAO;AAAA,MACzD;AACM,iBAAW,SAAS,iBAAiB;AACnC,cAAM,SAAS,YAAY,QAAQ,KAAK;AACxC,wBAAgB,KAAK,EAAE,OAAO,OAAO,OAAO,QAAQ;AAAA,MAC5D;AACM,UAAI,oBAAoB,CAAE;AAC1B,UAAIxC,QAAO,MAAM;AACf,4BAAoB,OAAO,QAAQA,QAAO,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,WAAW,OAAO,EAAE,OAAO,aAAa,UAAU,YAAY,UAAU,KAAK,EAAG,EAAC;AAAA,MACpL;AACM,UAAI;AACJ,UAAIA,QAAO,QAAQ;AACjB,iBAAS,OAAOA,QAAO,WAAW,aAAaA,QAAO,OAAO,gBAAgB,EAAE,KAAK,IAAIA,QAAO;AAC/F,mBAAW,CAAC,OAAO,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACnD,0BAAgB,KAAK;AAAA,YACnB;AAAA,YACA,OAAO,8BAA8B,OAAO,UAAU;AAAA,UAClE,CAAW;AAAA,QACX;AAAA,MACA;AACM,iBAAW,EAAE,OAAO,MAAK,KAAM,iBAAiB;AAC9C,kBAAU,KAAK;AAAA,UACb,OAAO,GAAG,OAAO,IAAI,OAAO,IAAI,MAAM,aAAa,YAAY,QAAQ,KAAK,EAAE;AAAA,UAC9E;AAAA,UACA,OAAO,GAAG,OAAO,MAAM,IAAI,mBAAmB,OAAO,UAAU,IAAI;AAAA,UACnE,oBAAoB;AAAA,UACpB,QAAQ;AAAA,UACR,WAAW,CAAA;AAAA,QACrB,CAAS;AAAA,MACT;AACM,UAAI,cAAc,OAAOA,QAAO,YAAY,aAAaA,QAAO,QAAQ,gBAAgB,oBAAqB,CAAA,IAAIA,QAAO,WAAW,CAAE;AACrI,UAAI,CAAC,MAAM,QAAQ,WAAW,GAAG;AAC/B,sBAAc,CAAC,WAAW;AAAA,MAClC;AACM,gBAAU,YAAY,IAAI,CAAC,iBAAiB;AAC1C,YAAI,GAAG,cAAc,MAAM,GAAG;AAC5B,iBAAO,mBAAmB,cAAc,UAAU;AAAA,QAC5D;AACQ,eAAO,uBAAuB,cAAc,UAAU;AAAA,MAC9D,CAAO;AACD,MAAAG,SAAQH,QAAO;AACf,eAASA,QAAO;AAChB,iBAAW;AAAA,QACT,OAAO;AAAA,QACP,aAAa;AAAA,QACb;AAAA,MACD,KAAI,mBAAmB;AACtB,cAAM,qBAAqB,kBAAkB0C,SAAQ,eAAe,QAAQ;AAC5E,cAAM,oBAAoB,mBAAmB,SAAS,eAAe;AACrE,cAAM,sBAAsB,cAAc,iBAAiB;AAC3D,cAAM,qBAAqB,GAAG,UAAU,IAAI,qBAAqB;AACjE,cAAM,UAAU;AAAA,UACd,GAAG,mBAAmB,OAAO;AAAA,YAC3B,CAAC,QAAQhK,OAAM;AAAA,cACb,mBAAmB,mBAAmB,WAAWA,EAAC,GAAG,kBAAkB;AAAA,cACvE,mBAAmB,QAAQ,UAAU;AAAA,YACnD;AAAA,UACA;AAAA,QACS;AACD,cAAM,gBAAgB,KAAK,qBAAqB;AAAA,UAC9C;AAAA,UACA,QAAAgK;AAAA,UACA;AAAA,UACA,OAAO,WAAW,mBAAmB;AAAA,UACrC,aAAaA,QAAO,mBAAmB;AAAA,UACvC,aAAa,GAAG,UAAU,GAAG,IAAI,gCAAgC,OAAO,EAAE,OAAO,EAAC,IAAK,EAAE,GAAG,6BAA6B,OAAO,EAAG,IAAG;AAAA,UACtI,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,qBAAqB;AAAA,QAC/B,CAAS;AACD,cAAM,QAAQ,OAAO,cAAc,GAAG,IAAI,GAAG,qBAAqB;AAClE,kBAAU,KAAK;AAAA,UACb,OAAO;AAAA,UACP,OAAO;AAAA,UACP;AAAA,UACA,oBAAoB;AAAA,UACpB,QAAQ;AAAA,UACR,WAAW,cAAc;AAAA,QACnC,CAAS;AAAA,MACT;AAAA,IACA;AACI,QAAI,UAAU,WAAW,GAAG;AAC1B,YAAM,IAAI,aAAa;AAAA,QACrB,SAAS,iCAAiC,YAAY,MAAM,OAAO,UAAU;AAAA,MACrF,CAAO;AAAA,IACP;AACI,QAAI;AACJ,YAAQ,IAAI,QAAQ,KAAK;AACzB,QAAI,qBAAqB;AACvB,UAAI,QAAQ,iBAAiB,IAAI;AAAA,QAC/B,UAAU;AAAA,UACR,CAAC,EAAE,OAAO,OAAM,MAAO,GAAG,QAAQ,YAAY,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,MAAM,CAAC,IAAI,GAAG,QAAQ,IAAI,OAAO,IAAI,OAAO,MAAM;AAAA,QAChJ;AAAA,QACD;AAAA,MACD,CAAA;AACD,UAAI,GAAG,qBAAqB,IAAI,GAAG;AACjC,gBAAQ,gCAAgC,KAAK;AAAA,MACrD;AACM,YAAM,kBAAkB,CAAC;AAAA,QACvB,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,MAAM,GAAG,MAAM;AAAA,QACtB,QAAQ;AAAA,QACR,oBAAoB,YAAY;AAAA,QAChC;AAAA,MACR,CAAO;AACD,YAAM,gBAAgBvC,WAAU,UAAU,WAAW,UAAU,QAAQ,SAAS;AAChF,UAAI,eAAe;AACjB,iBAAS,KAAK,iBAAiB;AAAA,UAC7B,OAAO,aAAa,OAAO,UAAU;AAAA,UACrC,QAAQ,CAAE;AAAA,UACV,YAAY;AAAA,YACV;AAAA,cACE,MAAM,CAAE;AAAA,cACR,OAAO,IAAI,IAAI,GAAG;AAAA,YAChC;AAAA,UACW;AAAA,UACD;AAAA,UACA,OAAAA;AAAA,UACA;AAAA,UACA;AAAA,UACA,cAAc,CAAA;AAAA,QACxB,CAAS;AACD,gBAAQ;AACR,QAAAA,SAAQ;AACR,iBAAS;AACT,kBAAU;AAAA,MAClB,OAAa;AACL,iBAAS,aAAa,OAAO,UAAU;AAAA,MAC/C;AACM,eAAS,KAAK,iBAAiB;AAAA,QAC7B,OAAO,GAAG,QAAQ,WAAW,IAAI,SAAS,IAAI,SAAS,QAAQ,CAAE,GAAE,UAAU;AAAA,QAC7E,QAAQ,CAAE;AAAA,QACV,YAAY,gBAAgB,IAAI,CAAC,EAAE,OAAO,OAAM,OAAQ;AAAA,UACtD,MAAM,CAAE;AAAA,UACR,OAAO,GAAG,QAAQ,MAAM,IAAI,mBAAmB,QAAQ,UAAU,IAAI;AAAA,QAC/E,EAAU;AAAA,QACF;AAAA,QACA;AAAA,QACA,OAAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,CAAA;AAAA,MACtB,CAAO;AAAA,IACP,OAAW;AACL,eAAS,KAAK,iBAAiB;AAAA,QAC7B,OAAO,aAAa,OAAO,UAAU;AAAA,QACrC,QAAQ,CAAE;AAAA,QACV,YAAY,UAAU,IAAI,CAAC,EAAE,MAAK,OAAQ;AAAA,UACxC,MAAM,CAAE;AAAA,UACR,OAAO,GAAG,OAAO,MAAM,IAAI,mBAAmB,OAAO,UAAU,IAAI;AAAA,QAC7E,EAAU;AAAA,QACF;AAAA,QACA;AAAA,QACA,OAAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,CAAA;AAAA,MACtB,CAAO;AAAA,IACP;AACI,WAAO;AAAA,MACL,YAAY,YAAY;AAAA,MACxB,KAAK;AAAA,MACL;AAAA,IACD;AAAA,EACL;AACA;AA5hBE,cADI,eACI,KAAc;AA6hBxB,MAAM,2BAA0B,qBACtB,kBADsB,KAAc;AAAA,EAE5C,QAAQ,YAAY,SAASH,SAAQ;AACnC,UAAM,kBAAkBA,YAAW,SAAS,yBAAyB,OAAOA,YAAW,WAAW,yBAAyBA,QAAO,mBAAmB;AACrJ,UAAM,uBAAuB;AAAA,gCACD,IAAI,WAAW,eAAe,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3D,YAAQ,IAAI,oBAAoB;AAChC,UAAM,eAAe,QAAQ;AAAA,MAC3B,uCAAuC,IAAI,WAAW,eAAe,CAAC;AAAA,IACvE;AACD,UAAM,kBAAkB,aAAa,CAAC,KAAK;AAC3C,YAAQ,IAAI,UAAU;AACtB,QAAI;AACF,iBAAW,aAAa,YAAY;AAClC,YAAI,CAAC,mBAAmB,OAAO,gBAAgB,CAAC,CAAC,IAAI,UAAU,cAAc;AAC3E,qBAAW,QAAQ,UAAU,KAAK;AAChC,oBAAQ,IAAI,IAAI,IAAI,IAAI,CAAC;AAAA,UACrC;AACU,kBAAQ;AAAA,YACN,kBAAkB,IAAI,WAAW,eAAe,CAAC,kCAAkC,UAAU,IAAI,KAAK,UAAU,YAAY;AAAA,UAC7H;AAAA,QACX;AAAA,MACA;AACM,cAAQ,IAAI,WAAW;AAAA,IACxB,SAAQ3G,IAAG;AACV,cAAQ,IAAI,aAAa;AACzB,YAAMA;AAAA,IACZ;AAAA,EACA;AACA;AAjCE,cADI,mBACI,KAAc;ACljBd;AADV,MAAM,kBAAkB;AAAA;AAAA,EAGtB,oBAAoB;AAClB,WAAO,KAAK,EAAE;AAAA,EAClB;AACA;AALE,cADI,mBACI,KAAc;ACed;AADV,MAAM,oBAAoB;AAAA,EAOxB,YAAY2G,SAAQ;AALpB;AACA;AACA;AACA;AACA;AAEE,SAAK,SAASA,QAAO;AACrB,SAAK,UAAUA,QAAO;AACtB,SAAK,UAAUA,QAAO;AACtB,SAAK,WAAWA,QAAO;AACvB,SAAK,WAAWA,QAAO;AAAA,EAC3B;AAAA,EACE,KAAK,QAAQ;AACX,UAAM,kBAAkB,CAAC,CAAC,KAAK;AAC/B,QAAI;AACJ,QAAI,KAAK,QAAQ;AACf,eAAS,KAAK;AAAA,IACf,WAAU,GAAG,QAAQ,QAAQ,GAAG;AAC/B,eAAS,OAAO;AAAA,QACd,OAAO,KAAK,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC;AAAA,MACrE;AAAA,IACF,WAAU,GAAG,QAAQ,cAAc,GAAG;AACrC,eAAS,OAAO,cAAc,EAAE;AAAA,IACjC,WAAU,GAAG,QAAQ,GAAG,GAAG;AAC1B,eAAS,CAAE;AAAA,IACjB,OAAW;AACL,eAAS,gBAAgB,MAAM;AAAA,IACrC;AACI,WAAO,IAAI,iBAAiB;AAAA,MAC1B,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,IACrB,CAAK;AAAA,EACL;AACA;AAvCE,cADI,qBACI,KAAc;AAwCxB,MAAM,sCAAqC,yBACjC,kBADiC,KAAkB;AAAA,EAU3D,YAAY,EAAE,OAAO,QAAQ,iBAAiB,SAAS,SAAS,UAAU,YAAY;AACpF,UAAO;AATT;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAyGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAW,KAAK,WAAW,MAAM;AA4BjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAY,KAAK,WAAW,OAAO;AA4BnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAY,KAAK,WAAW,OAAO;AA4BnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAW,KAAK,WAAW,MAAM;AAsCjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAQ,KAAK,kBAAkB,SAAS,KAAK;AA0B7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAW,KAAK,kBAAkB,SAAS,IAAI;AA0B/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAY,KAAK,kBAAkB,aAAa,KAAK;AA0BrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAS,KAAK,kBAAkB,UAAU,KAAK;AA9S7C,SAAK,SAAS;AAAA,MACZ;AAAA,MACA;AAAA,MACA,QAAQ,EAAE,GAAG,OAAQ;AAAA,MACrB;AAAA,MACA,cAAc,CAAA;AAAA,IACf;AACD,SAAK,kBAAkB;AACvB,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,IAAI;AAAA,MACP,gBAAgB;AAAA,IACjB;AACD,SAAK,YAAY,iBAAiB,KAAK;AACvC,SAAK,sBAAsB,OAAO,KAAK,cAAc,WAAW,EAAE,CAAC,KAAK,SAAS,GAAG,KAAI,IAAK,CAAE;AAAA,EACnG;AAAA,EACE,WAAW,UAAU;AACnB,WAAO,CAAC,OAAO,OAAO;;AACpB,YAAM,gBAAgB,KAAK;AAC3B,YAAM,YAAY,iBAAiB,KAAK;AACxC,UAAI,OAAO,cAAc,cAAY7G,MAAA,KAAK,OAAO,UAAZ,gBAAAA,IAAmB,KAAK,CAAC,SAAS,KAAK,UAAU,aAAY;AAChG,cAAM,IAAI,MAAM,UAAU,SAAS,iCAAiC;AAAA,MAC5E;AACM,UAAI,CAAC,KAAK,iBAAiB;AACzB,YAAI,OAAO,KAAK,KAAK,mBAAmB,EAAE,WAAW,KAAK,OAAO,kBAAkB,UAAU;AAC3F,eAAK,OAAO,SAAS;AAAA,YACnB,CAAC,aAAa,GAAG,KAAK,OAAO;AAAA,UAC9B;AAAA,QACX;AACQ,YAAI,OAAO,cAAc,YAAY,CAAC,GAAG,OAAO,GAAG,GAAG;AACpD,gBAAM,YAAY,GAAG,OAAO,QAAQ,IAAI,MAAM,EAAE,iBAAiB,GAAG,OAAO,IAAI,IAAI,MAAM,cAAc,EAAE,iBAAiB,MAAM,MAAM,OAAO,OAAO;AACpJ,eAAK,OAAO,OAAO,SAAS,IAAI;AAAA,QAC1C;AAAA,MACA;AACM,UAAI,OAAO,OAAO,YAAY;AAC5B,aAAK;AAAA,UACH,IAAI;AAAA,YACF,KAAK,OAAO;AAAA,YACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAO,CAAA;AAAA,UACvF;AAAA,QACS;AAAA,MACT;AACM,UAAI,CAAC,KAAK,OAAO,OAAO;AACtB,aAAK,OAAO,QAAQ,CAAE;AAAA,MAC9B;AACM,WAAK,OAAO,MAAM,KAAK,EAAE,IAAI,OAAO,UAAU,OAAO,WAAW;AAChE,UAAI,OAAO,cAAc,UAAU;AACjC,gBAAQ,UAAQ;AAAA,UACd,KAAK,QAAQ;AACX,iBAAK,oBAAoB,SAAS,IAAI;AACtC;AAAA,UACZ;AAAA,UACU,KAAK,SAAS;AACZ,iBAAK,sBAAsB,OAAO;AAAA,cAChC,OAAO,QAAQ,KAAK,mBAAmB,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC;AAAA,YACrE;AACD,iBAAK,oBAAoB,SAAS,IAAI;AACtC;AAAA,UACZ;AAAA,UACU,KAAK,SAAS;AACZ,iBAAK,oBAAoB,SAAS,IAAI;AACtC;AAAA,UACZ;AAAA,UACU,KAAK,QAAQ;AACX,iBAAK,sBAAsB,OAAO;AAAA,cAChC,OAAO,QAAQ,KAAK,mBAAmB,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC;AAAA,YACrE;AACD,iBAAK,oBAAoB,SAAS,IAAI;AACtC;AAAA,UACZ;AAAA,QACA;AAAA,MACA;AACM,aAAO;AAAA,IACR;AAAA,EACL;AAAA,EAiHE,kBAAkB,MAAM,OAAO;AAC7B,WAAO,CAAC,mBAAmB;AACzB,YAAM,cAAc,OAAO,mBAAmB,aAAa,eAAe,sBAAuB,CAAA,IAAI;AACrG,UAAI,CAAC,aAAa,KAAK,kBAAmB,GAAE,YAAY,kBAAiB,CAAE,GAAG;AAC5E,cAAM,IAAI;AAAA,UACR;AAAA,QACD;AAAA,MACT;AACM,WAAK,OAAO,aAAa,KAAK,EAAE,MAAM,OAAO,aAAa;AAC1D,aAAO;AAAA,IACR;AAAA,EACL;AAAA;AAAA,EA0GE,gBAAgB,cAAc;AAC5B,SAAK,OAAO,aAAa,KAAK,GAAG,YAAY;AAC7C,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8BE,MAAM,OAAO;AACX,QAAI,OAAO,UAAU,YAAY;AAC/B,cAAQ;AAAA,QACN,IAAI;AAAA,UACF,KAAK,OAAO;AAAA,UACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAO,CAAA;AAAA,QACrF;AAAA,MACO;AAAA,IACP;AACI,SAAK,OAAO,QAAQ;AACpB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBE,OAAO,QAAQ;AACb,QAAI,OAAO,WAAW,YAAY;AAChC,eAAS;AAAA,QACP,IAAI;AAAA,UACF,KAAK,OAAO;AAAA,UACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAO,CAAA;AAAA,QACrF;AAAA,MACO;AAAA,IACP;AACI,SAAK,OAAO,SAAS;AACrB,WAAO;AAAA,EACX;AAAA,EACE,WAAW,SAAS;AAClB,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACpC,YAAM,UAAU,QAAQ,CAAC;AAAA,QACvB,IAAI;AAAA,UACF,KAAK,OAAO;AAAA,UACZ,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAO,CAAA;AAAA,QACvF;AAAA,MACO;AACD,WAAK,OAAO,UAAU,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAAA,IACvE,OAAW;AACL,WAAK,OAAO,UAAU;AAAA,IAC5B;AACI,WAAO;AAAA,EACX;AAAA,EACE,WAAW,SAAS;AAClB,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACpC,YAAM,UAAU,QAAQ,CAAC;AAAA,QACvB,IAAI;AAAA,UACF,KAAK,OAAO;AAAA,UACZ,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAO,CAAA;AAAA,QACvF;AAAA,MACO;AACD,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,UAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACvC,aAAK,OAAO,aAAa,GAAG,EAAE,EAAE,UAAU;AAAA,MAClD,OAAa;AACL,aAAK,OAAO,UAAU;AAAA,MAC9B;AAAA,IACA,OAAW;AACL,YAAM,eAAe;AACrB,UAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACvC,aAAK,OAAO,aAAa,GAAG,EAAE,EAAE,UAAU;AAAA,MAClD,OAAa;AACL,aAAK,OAAO,UAAU;AAAA,MAC9B;AAAA,IACA;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBE,MAAMgH,QAAO;AACX,QAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACvC,WAAK,OAAO,aAAa,GAAG,EAAE,EAAE,QAAQA;AAAA,IAC9C,OAAW;AACL,WAAK,OAAO,QAAQA;AAAA,IAC1B;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBE,OAAO,QAAQ;AACb,QAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACvC,WAAK,OAAO,aAAa,GAAG,EAAE,EAAE,SAAS;AAAA,IAC/C,OAAW;AACL,WAAK,OAAO,SAAS;AAAA,IAC3B;AACI,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS;AACP,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;AAAA,EACpD;AAAA,EACE,QAAQ;AACN,UAAM,EAAE,SAAS,UAAU,GAAG,KAAM,IAAG,KAAK,QAAQ,WAAW,KAAK,QAAQ;AAC5E,WAAO;AAAA,EACX;AAAA,EACE,GAAG,OAAO;AACR,WAAO,IAAI;AAAA,MACT,IAAI,SAAS,KAAK,OAAM,GAAI,KAAK,OAAO,QAAQ,KAAK;AAAA,MACrD,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAS,CAAA;AAAA,IACvF;AAAA,EACL;AAAA;AAAA,EAEE,oBAAoB;AAClB,WAAO,IAAI;AAAA,MACT,KAAK,OAAO;AAAA,MACZ,IAAI,sBAAsB,EAAE,OAAO,KAAK,WAAW,oBAAoB,SAAS,aAAa,QAAS,CAAA;AAAA,IACvG;AAAA,EACL;AAAA,EACE,WAAW;AACT,WAAO;AAAA,EACX;AACA;AAxfE,cADI,8BACI,KAAc;AAyfxB,MAAM,0BAAyB,oCACrB,kBADqB,KAA6B;AAAA,EAA5D;AAAA;AAoBE,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,kCAAS,CAAC,sBAAsB;AAC9B,aAAO,KAAK,WAAW,OAAO,iBAAiB;AAAA,IAChD;AAAA;AAAA;AAAA,EA5BD,SAAS,iBAAiB,MAAM;AAC9B,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,oFAAoF;AAAA,IAC1G;AACI,UAAM,aAAa,oBAAoB,KAAK,OAAO,MAAM;AACzD,UAAM,QAAQ,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;AAAA,MAChF,KAAK,QAAQ,WAAW,KAAK,OAAM,CAAE;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACD,UAAM,sBAAsB,KAAK;AACjC,WAAO;AAAA,EACX;AAAA,EACE,UAAU;AACR,WAAO,KAAK,SAAS,KAAK;AAAA,EAC9B;AAAA,EAaE,MAAM,UAAU;AACd,WAAO,KAAK,IAAK;AAAA,EACrB;AACA;AAlCE,cADI,kBACI,KAAc;AAmCxB,YAAY,kBAAkB,CAAC,YAAY,CAAC;AAC5C,SAAS,kBAAkB,MAAM,OAAO;AACtC,SAAO,CAAC,YAAY,gBAAgB,gBAAgB;AAClD,UAAM,eAAe,CAAC,aAAa,GAAG,WAAW,EAAE,IAAI,CAAC,YAAY;AAAA,MAClE;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACnB,EAAM;AACF,eAAW,eAAe,cAAc;AACtC,UAAI,CAAC,aAAa,WAAW,kBAAiB,GAAI,YAAY,YAAY,kBAAiB,CAAE,GAAG;AAC9F,cAAM,IAAI;AAAA,UACR;AAAA,QACD;AAAA,MACT;AAAA,IACA;AACI,WAAO,WAAW,gBAAgB,YAAY;AAAA,EAC/C;AACH;AACA,MAAM,wBAAwB,OAAO;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,MAAM,QAAQ,kBAAkB,SAAS,KAAK;AAC9C,MAAM,WAAW,kBAAkB,SAAS,IAAI;AAChD,MAAM,YAAY,kBAAkB,aAAa,KAAK;AACtD,MAAM,SAAS,kBAAkB,UAAU,KAAK;AC5mBtC;AADV,MAAM,aAAa;AAAA,EAIjB,YAAY,SAAS;AAFrB;AACA;AAEE,SAAK,UAAU,GAAG,SAAS,aAAa,IAAI,UAAU;AACtD,SAAK,gBAAgB,GAAG,SAAS,aAAa,IAAI,SAAS;AAAA,EAC/D;AAAA,EACE,MAAM,OAAO;AACX,UAAM,eAAe;AACrB,WAAO;AAAA,MACL,GAAG,IAAI;AACL,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,GAAG,YAAY;AAAA,QAC9B;AACQ,eAAO,IAAI;AAAA,UACT,IAAI,aAAa,GAAG,OAAQ,GAAE,GAAG,kBAAmB,GAAE,OAAO,IAAI;AAAA,UACjE,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAS,CAAA;AAAA,QACvF;AAAA,MACT;AAAA,IACK;AAAA,EACL;AAAA,EACE,QAAQ,SAAS;AACf,UAAM,OAAO;AACb,aAAS,OAAO,QAAQ;AACtB,aAAO,IAAI,oBAAoB;AAAA,QAC7B,QAAQ,UAAU;AAAA,QAClB,SAAS;AAAA,QACT,SAAS,KAAK,WAAY;AAAA,QAC1B,UAAU;AAAA,MAClB,CAAO;AAAA,IACP;AACI,aAAS,eAAe,QAAQ;AAC9B,aAAO,IAAI,oBAAoB;AAAA,QAC7B,QAAQ,UAAU;AAAA,QAClB,SAAS;AAAA,QACT,SAAS,KAAK,WAAY;AAAA,QAC1B,UAAU;AAAA,QACV,UAAU;AAAA,MAClB,CAAO;AAAA,IACP;AACI,WAAO,EAAE,QAAQ,eAAgB;AAAA,EACrC;AAAA,EACE,OAAO,QAAQ;AACb,WAAO,IAAI,oBAAoB,EAAE,QAAQ,UAAU,QAAQ,SAAS,QAAQ,SAAS,KAAK,WAAY,EAAA,CAAE;AAAA,EAC5G;AAAA,EACE,eAAe,QAAQ;AACrB,WAAO,IAAI,oBAAoB;AAAA,MAC7B,QAAQ,UAAU;AAAA,MAClB,SAAS;AAAA,MACT,SAAS,KAAK,WAAY;AAAA,MAC1B,UAAU;AAAA,IAChB,CAAK;AAAA,EACL;AAAA;AAAA,EAEE,aAAa;AACX,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU,IAAI,kBAAkB,KAAK,aAAa;AAAA,IAC7D;AACI,WAAO,KAAK;AAAA,EAChB;AACA;AA5DE,cADI,cACI,KAAc;ACQd;AAPV,MAAM,oBAAoB;AAAA,EACxB,YAAY,OAAO,SAAS,SAAS,UAAU;AAC7C,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EACpB;AAAA,EAEE,OAAO,QAAQ;AACb,aAAS,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,MAAM;AACjD,QAAI,OAAO,WAAW,GAAG;AACvB,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACvE;AACI,UAAM,eAAe,OAAO,IAAI,CAAC,UAAU;AACzC,YAAM,SAAS,CAAE;AACjB,YAAM,OAAO,KAAK,MAAM,MAAM,OAAO,OAAO;AAC5C,iBAAW,UAAU,OAAO,KAAK,KAAK,GAAG;AACvC,cAAM,WAAW,MAAM,MAAM;AAC7B,eAAO,MAAM,IAAI,GAAG,UAAU,GAAG,IAAI,WAAW,IAAI,MAAM,UAAU,KAAK,MAAM,CAAC;AAAA,MACxF;AACM,aAAO;AAAA,IACb,CAAK;AACD,WAAO,IAAI,iBAAiB,KAAK,OAAO,cAAc,KAAK,SAAS,KAAK,SAAS,KAAK,QAAQ;AAAA,EACnG;AAAA,EACE,OAAO,aAAa;AAClB,UAAM,SAAS,OAAO,gBAAgB,aAAa,YAAY,IAAI,aAAc,CAAA,IAAI;AACrF,QAAI,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,aAAa,KAAK,MAAM,OAAO,GAAG,OAAO,EAAE,cAAc,GAAG;AACnF,YAAM,IAAI;AAAA,QACR;AAAA,MACD;AAAA,IACP;AACI,WAAO,IAAI,iBAAiB,KAAK,OAAO,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,UAAU,IAAI;AAAA,EACnG;AACA;AA1BE,cAPI,qBAOI,KAAc;AA2BxB,MAAM,0BAAyB,oBAOrB,kBAPqB,KAAa;AAAA,EAC1C,YAAY,OAAO,QAAQ,SAAS,SAAS,UAAU,QAAQ;AAC7D,UAAO;AAOT;AAAA;AAoGA,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,kCAAS,CAAC,sBAAsB;AAC9B,aAAO,KAAK,WAAW,OAAO,iBAAiB;AAAA,IAChD;AArHC,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS,EAAE,OAAO,QAAQ,UAAU,OAAQ;AAAA,EACrD;AAAA,EAIE,UAAU,SAAS,KAAK,OAAO,MAAM,YAAY,OAAO,OAAO,GAAG;AAChE,SAAK,OAAO,YAAY,oBAAoB,MAAM;AAClD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBE,oBAAoBH,UAAS,IAAI;AAC/B,QAAIA,QAAO,WAAW,QAAQ;AAC5B,WAAK,OAAO,aAAa;AAAA,IAC/B,OAAW;AACL,YAAM,YAAY,MAAM,QAAQA,QAAO,MAAM,IAAI,MAAMA,QAAO,MAAM,KAAK,MAAM,CAACA,QAAO,MAAM,CAAC;AAC9F,YAAM,WAAWA,QAAO,QAAQ,aAAaA,QAAO,KAAK,KAAK;AAC9D,WAAK,OAAO,aAAa,MAAM,SAAS,cAAc,QAAQ;AAAA,IACpE;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8BE,mBAAmBA,SAAQ;AACzB,QAAIA,QAAO,UAAUA,QAAO,eAAeA,QAAO,WAAW;AAC3D,YAAM,IAAI;AAAA,QACR;AAAA,MACD;AAAA,IACP;AACI,UAAM,WAAWA,QAAO,QAAQ,aAAaA,QAAO,KAAK,KAAK;AAC9D,UAAM,iBAAiBA,QAAO,cAAc,aAAaA,QAAO,WAAW,KAAK;AAChF,UAAM,cAAcA,QAAO,WAAW,aAAaA,QAAO,QAAQ,KAAK;AACvE,UAAM,YAAY,MAAM,QAAQA,QAAO,MAAM,IAAI,MAAMA,QAAO,MAAM,KAAK,MAAM,CAACA,QAAO,MAAM,CAAC;AAC9F,UAAM,SAAS,KAAK,QAAQ,eAAe,KAAK,OAAO,OAAO,aAAa,KAAK,OAAO,OAAOA,QAAO,GAAG,CAAC;AACzG,SAAK,OAAO,aAAa,MAAM,SAAS,GAAG,cAAc,kBAAkB,MAAM,GAAG,QAAQ,GAAG,WAAW;AAC1G,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS;AACP,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;AAAA,EACpD;AAAA,EACE,QAAQ;AACN,UAAM,EAAE,SAAS,UAAU,GAAG,KAAM,IAAG,KAAK,QAAQ,WAAW,KAAK,QAAQ;AAC5E,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS,iBAAiB,MAAM;AAC9B,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;AAAA,MACzE,KAAK,QAAQ,WAAW,KAAK,OAAM,CAAE;AAAA,MACrC,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO,YAAY,QAAQ;AAAA,MAChC;AAAA,IACD;AAAA,EACL;AAAA,EACE,UAAU;AACR,WAAO,KAAK,SAAS,KAAK;AAAA,EAC9B;AAAA,EAaE,MAAM,UAAU;AACd,WAAO,KAAK,OAAO,YAAY,KAAK,IAAK,IAAG,KAAK,IAAK;AAAA,EAC1D;AAAA,EACE,WAAW;AACT,WAAO;AAAA,EACX;AACA;AAxHE,cAPI,kBAOI,KAAc;AC5Bd;AAPV,MAAM,oBAAoB;AAAA,EACxB,YAAY,OAAO,SAAS,SAAS,UAAU;AAC7C,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EACpB;AAAA,EAEE,IAAI,QAAQ;AACV,WAAO,IAAI;AAAA,MACT,KAAK;AAAA,MACL,aAAa,KAAK,OAAO,MAAM;AAAA,MAC/B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAAA,EACL;AACA;AAVE,cAPI,qBAOI,KAAc;AAWxB,MAAM,0BAAyB,oBAOrB,kBAPqB,KAAa;AAAA,EAC1C,YAAY,OAAO,KAAK,SAAS,SAAS,UAAU;AAClD,UAAO;AAOT;AAAA;AA4BA,oCAAW,KAAK,WAAW,MAAM;AACjC,qCAAY,KAAK,WAAW,OAAO;AACnC,qCAAY,KAAK,WAAW,OAAO;AACnC,oCAAW,KAAK,WAAW,MAAM;AAkFjC,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,+BAAM,CAAC,sBAAsB;AAC3B,aAAO,KAAK,WAAW,IAAI,iBAAiB;AAAA,IAC7C;AACD,kCAAS,CAAC,sBAAsB;AAC9B,aAAO,KAAK,WAAW,OAAO,iBAAiB;AAAA,IAChD;AAlIC,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS,EAAE,KAAK,OAAO,UAAU,OAAO,GAAI;AAAA,EACrD;AAAA,EAIE,KAAK,QAAQ;AACX,SAAK,OAAO,OAAO;AACnB,WAAO;AAAA,EACX;AAAA,EACE,WAAW,UAAU;AACnB,WAAO,CAAC,OAAO,OAAO;AACpB,YAAM,YAAY,iBAAiB,KAAK;AACxC,UAAI,OAAO,cAAc,YAAY,KAAK,OAAO,MAAM,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GAAG;AAC/F,cAAM,IAAI,MAAM,UAAU,SAAS,iCAAiC;AAAA,MAC5E;AACM,UAAI,OAAO,OAAO,YAAY;AAC5B,cAAM,OAAO,KAAK,OAAO,OAAO,GAAG,OAAO,WAAW,IAAI,MAAM,MAAM,OAAO,OAAO,IAAI,GAAG,OAAO,QAAQ,IAAI,MAAM,EAAE,iBAAiB,GAAG,OAAO,cAAc,IAAI,MAAM,cAAc,EAAE,iBAAiB,SAAS;AAClN,aAAK;AAAA,UACH,IAAI;AAAA,YACF,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;AAAA,YACtC,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAO,CAAA;AAAA,UAC5E;AAAA,UACD,QAAQ,IAAI;AAAA,YACV;AAAA,YACA,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAO,CAAA;AAAA,UACvF;AAAA,QACS;AAAA,MACT;AACM,WAAK,OAAO,MAAM,KAAK,EAAE,IAAI,OAAO,UAAU,OAAO,WAAW;AAChE,aAAO;AAAA,IACR;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsCE,MAAM,OAAO;AACX,SAAK,OAAO,QAAQ;AACpB,WAAO;AAAA,EACX;AAAA,EACE,WAAW,SAAS;AAClB,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACpC,YAAM,UAAU,QAAQ,CAAC;AAAA,QACvB,IAAI;AAAA,UACF,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;AAAA,UACtC,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAO,CAAA;AAAA,QACvF;AAAA,MACO;AACD,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,WAAK,OAAO,UAAU;AAAA,IAC5B,OAAW;AACL,YAAM,eAAe;AACrB,WAAK,OAAO,UAAU;AAAA,IAC5B;AACI,WAAO;AAAA,EACX;AAAA,EACE,MAAMG,QAAO;AACX,SAAK,OAAO,QAAQA;AACpB,WAAO;AAAA,EACX;AAAA,EACE,UAAU,SAAS,KAAK,OAAO,MAAM,YAAY,OAAO,OAAO,GAAG;AAChE,SAAK,OAAO,YAAY,oBAAoB,MAAM;AAClD,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS;AACP,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;AAAA,EACpD;AAAA,EACE,QAAQ;AACN,UAAM,EAAE,SAAS,UAAU,GAAG,KAAM,IAAG,KAAK,QAAQ,WAAW,KAAK,QAAQ;AAC5E,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,SAAS,iBAAiB,MAAM;AAC9B,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;AAAA,MACzE,KAAK,QAAQ,WAAW,KAAK,OAAM,CAAE;AAAA,MACrC,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO,YAAY,QAAQ;AAAA,MAChC;AAAA,IACD;AAAA,EACL;AAAA,EACE,UAAU;AACR,WAAO,KAAK,SAAS,KAAK;AAAA,EAC9B;AAAA,EAaE,MAAM,UAAU;AACd,WAAO,KAAK,OAAO,YAAY,KAAK,IAAK,IAAG,KAAK,IAAK;AAAA,EAC1D;AAAA,EACE,WAAW;AACT,WAAO;AAAA,EACX;AACA;AArIE,cAPI,kBAOI,KAAc;ACpCxB,MAAM,sBAAN,MAAM,6BAA2B,WAWvB,kBACP,aAAO,aAZuB,KAAI;AAAA,EACnC,YAAY,QAAQ;AAClB,UAAM,oBAAmB,mBAAmB,OAAO,QAAQ,OAAO,OAAO,EAAE,WAAW;AAQxF;AAEA,wBAAC,KAAsB;AACvB;AAVE,SAAK,SAAS;AACd,SAAK,UAAU,OAAO;AACtB,SAAK,MAAM,oBAAmB;AAAA,MAC5B,OAAO;AAAA,MACP,OAAO;AAAA,IACR;AAAA,EACL;AAAA,EAKE,OAAO,mBAAmB,QAAQ,SAAS;AACzC,WAAO,4BAA4B,MAAM,GAAG,IAAI,IAAI,SAAS,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO;AAAA,EACxF;AAAA,EACE,OAAO,WAAW,QAAQ,SAAS;AACjC,WAAO,2BAA2B,MAAM,GAAG,IAAI,IAAI,SAAS,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO;AAAA,EACvF;AAAA,EACE,KAAK,aAAa,YAAY;AAC5B,WAAO,QAAQ,QAAQ,KAAK,QAAQ,MAAM,KAAK,GAAG,CAAC,EAAE;AAAA,MACnD;AAAA,MACA;AAAA,IACD;AAAA,EACL;AAAA,EACE,MAAM,YAAY;AAChB,WAAO,KAAK,KAAK,QAAQ,UAAU;AAAA,EACvC;AAAA,EACE,QAAQ,WAAW;AACjB,WAAO,KAAK;AAAA,MACV,CAAC,UAAU;AACT;AACA,eAAO;AAAA,MACR;AAAA,MACD,CAAC,WAAW;AACV;AACA,cAAM;AAAA,MACd;AAAA,IACK;AAAA,EACL;AACA;AA9BE,cAXI,qBAWI,KAAc;AAXxB,IAAM,qBAAN;ACcU;AAXV,MAAM,uBAAuB;AAAA,EAC3B,YAAY,MAAM,YAAYuC,SAAQ,eAAe,OAAO,aAAa,SAAS,SAAS;AACzF,SAAK,OAAO;AACZ,SAAK,aAAa;AAClB,SAAK,SAASA;AACd,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,UAAU;AAAA,EACnB;AAAA,EAEE,SAAS1C,SAAQ;AACf,WAAO,KAAK,SAAS,SAAS,IAAI;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACLA,UAASA,UAAS,CAAE;AAAA,MACpB;AAAA,IACD,IAAG,IAAI;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACLA,UAASA,UAAS,CAAE;AAAA,MACpB;AAAA,IACD;AAAA,EACL;AAAA,EACE,UAAUA,SAAQ;AAChB,WAAO,KAAK,SAAS,SAAS,IAAI;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACLA,UAAS,EAAE,GAAGA,SAAQ,OAAO,MAAM,EAAE,OAAO,EAAG;AAAA,MAC/C;AAAA,IACD,IAAG,IAAI;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACLA,UAAS,EAAE,GAAGA,SAAQ,OAAO,MAAM,EAAE,OAAO,EAAG;AAAA,MAC/C;AAAA,IACD;AAAA,EACL;AACA;AA/CE,cAXI,wBAWI,KAAc;AAgDxB,MAAM,+BAA8B,oBAa1B,kBAb0B,KAAa;AAAA,EAC/C,YAAY,YAAY0C,SAAQ,eAAe,OAAO,aAAa,SAAS,SAAS1C,SAAQ,MAAM;AACjG,UAAO;AAaT;AAAA;AAZE,SAAK,aAAa;AAClB,SAAK,SAAS0C;AACd,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS1C;AACd,SAAK,OAAO;AAAA,EAChB;AAAA;AAAA,EAKE,SAAS;AACP,WAAO,KAAK,QAAQ,qBAAqB;AAAA,MACvC,YAAY,KAAK;AAAA,MACjB,QAAQ,KAAK;AAAA,MACb,eAAe,KAAK;AAAA,MACpB,OAAO,KAAK;AAAA,MACZ,aAAa,KAAK;AAAA,MAClB,aAAa,KAAK;AAAA,MAClB,YAAY,KAAK,YAAY;AAAA,IAC9B,CAAA,EAAE;AAAA,EACP;AAAA;AAAA,EAEE,SAAS,iBAAiB,OAAO;AAC/B,UAAM,EAAE,OAAO,eAAe,KAAK,OAAQ;AAC3C,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;AAAA,MACzE;AAAA,MACA;AAAA,MACA,KAAK,SAAS,UAAU,QAAQ;AAAA,MAChC;AAAA,MACA,CAAC,SAAS,mBAAmB;AAC3B,cAAM,OAAO,QAAQ;AAAA,UACnB,CAAC,QAAQ,iBAAiB,KAAK,QAAQ,KAAK,aAAa,KAAK,MAAM,WAAW,cAAc;AAAA,QAC9F;AACD,YAAI,KAAK,SAAS,SAAS;AACzB,iBAAO,KAAK,CAAC;AAAA,QACvB;AACQ,eAAO;AAAA,MACf;AAAA,IACK;AAAA,EACL;AAAA,EACE,UAAU;AACR,WAAO,KAAK,SAAS,KAAK;AAAA,EAC9B;AAAA,EACE,SAAS;AACP,UAAM,QAAQ,KAAK,QAAQ,qBAAqB;AAAA,MAC9C,YAAY,KAAK;AAAA,MACjB,QAAQ,KAAK;AAAA,MACb,eAAe,KAAK;AAAA,MACpB,OAAO,KAAK;AAAA,MACZ,aAAa,KAAK;AAAA,MAClB,aAAa,KAAK;AAAA,MAClB,YAAY,KAAK,YAAY;AAAA,IACnC,CAAK;AACD,UAAM,aAAa,KAAK,QAAQ,WAAW,MAAM,GAAG;AACpD,WAAO,EAAE,OAAO,WAAY;AAAA,EAChC;AAAA,EACE,QAAQ;AACN,WAAO,KAAK,OAAM,EAAG;AAAA,EACzB;AAAA;AAAA,EAEE,aAAa;AACX,QAAI,KAAK,SAAS,SAAS;AACzB,aAAO,KAAK,SAAS,KAAK,EAAE,IAAK;AAAA,IACvC;AACI,WAAO,KAAK,SAAS,KAAK,EAAE,IAAK;AAAA,EACrC;AAAA,EACE,MAAM,UAAU;AACd,WAAO,KAAK,WAAY;AAAA,EAC5B;AACA;AA/DE,cAbI,uBAaI,KAAc;AAgExB,MAAM,mCAAkC,6BAC9B,kBAD8B,KAAsB;AAAA,EAE5D,OAAO;AACL,WAAO,KAAK,WAAY;AAAA,EAC5B;AACA;AAJE,cADI,2BACI,KAAc;AC5IxB,MAAM,mBAAkB,oBASd,kBATc,KAAa;AAAA,EACnC,YAAY,SAAS,QAAQ,QAAQ,SAAS,gBAAgB;AAC5D,UAAO;AAST;AAAA;AARE,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,iBAAiB;AACtB,SAAK,SAAS,EAAE,OAAQ;AAAA,EAC5B;AAAA,EAIE,WAAW;AACT,WAAO,EAAE,GAAG,KAAK,QAAQ,WAAW,KAAK,OAAQ,CAAA,GAAG,QAAQ,KAAK,OAAO,OAAQ;AAAA,EACpF;AAAA,EACE,UAAU,QAAQ,aAAa;AAC7B,WAAO,cAAc,KAAK,eAAe,MAAM,IAAI;AAAA,EACvD;AAAA,EACE,WAAW;AACT,WAAO;AAAA,EACX;AAAA;AAAA,EAEE,wBAAwB;AACtB,WAAO;AAAA,EACX;AACA;AAhBE,cATI,WASI,KAAc;ACkCd;AA/BV,MAAM,mBAAmB;AAAA,EACvB,YAAY,YAAY,SAAS,SAAS0C,SAAQ;AA+BlD;AA9BE,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,IAAIA,UAAS;AAAA,MAChB,QAAQA,QAAO;AAAA,MACf,YAAYA,QAAO;AAAA,MACnB,eAAeA,QAAO;AAAA,IAC5B,IAAQ;AAAA,MACF,QAAQ;AAAA,MACR,YAAY,CAAE;AAAA,MACd,eAAe,CAAA;AAAA,IAChB;AACD,SAAK,QAAQ,CAAE;AACf,UAAM,QAAQ,KAAK;AACnB,QAAI,KAAK,EAAE,QAAQ;AACjB,iBAAW,CAAC,WAAW,OAAO,KAAK,OAAO,QAAQ,KAAK,EAAE,MAAM,GAAG;AAChE,cAAM,SAAS,IAAI,IAAI;AAAA,UACrB;AAAA,UACAA,QAAO;AAAA,UACP,KAAK,EAAE;AAAA,UACP,KAAK,EAAE;AAAA,UACPA,QAAO,WAAW,SAAS;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACT;AAAA,IACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmCE,MAAM,OAAO;AACX,UAAM,OAAO;AACb,WAAO;AAAA,MACL,GAAG,IAAI;AACL,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,GAAG,IAAI,aAAa,KAAK,OAAO,CAAC;AAAA,QAChD;AACQ,eAAO,IAAI;AAAA,UACT,IAAI,aAAa,GAAG,OAAQ,GAAE,GAAG,kBAAmB,GAAE,OAAO,IAAI;AAAA,UACjE,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAS,CAAA;AAAA,QACvF;AAAA,MACT;AAAA,IACK;AAAA,EACL;AAAA,EACE,OAAO,QAAQ,SAAS;AACtB,WAAO,IAAI,mBAAmB,EAAE,QAAQ,SAAS,SAAS,KAAK,SAAS;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBE,QAAQ,SAAS;AACf,UAAM,OAAO;AACb,aAAS,OAAO,QAAQ;AACtB,aAAO,IAAI,oBAAoB;AAAA,QAC7B,QAAQ,UAAU;AAAA,QAClB,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,QACd,UAAU;AAAA,MAClB,CAAO;AAAA,IACP;AACI,aAAS,eAAe,QAAQ;AAC9B,aAAO,IAAI,oBAAoB;AAAA,QAC7B,QAAQ,UAAU;AAAA,QAClB,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,QACd,UAAU;AAAA,QACV,UAAU;AAAA,MAClB,CAAO;AAAA,IACP;AACI,aAAStC,QAAO,OAAO;AACrB,aAAO,IAAI,oBAAoB,OAAO,KAAK,SAAS,KAAK,SAAS,OAAO;AAAA,IAC/E;AACI,aAAS,OAAO,MAAM;AACpB,aAAO,IAAI,oBAAoB,MAAM,KAAK,SAAS,KAAK,SAAS,OAAO;AAAA,IAC9E;AACI,aAAS,QAAQ,MAAM;AACrB,aAAO,IAAI,iBAAiB,MAAM,KAAK,SAAS,KAAK,SAAS,OAAO;AAAA,IAC3E;AACI,WAAO,EAAE,QAAQ,gBAAgB,QAAAA,SAAQ,QAAQ,QAAQ,QAAS;AAAA,EACtE;AAAA,EACE,OAAO,QAAQ;AACb,WAAO,IAAI,oBAAoB,EAAE,QAAQ,UAAU,QAAQ,SAAS,KAAK,SAAS,SAAS,KAAK,QAAO,CAAE;AAAA,EAC7G;AAAA,EACE,eAAe,QAAQ;AACrB,WAAO,IAAI,oBAAoB;AAAA,MAC7B,QAAQ,UAAU;AAAA,MAClB,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,UAAU;AAAA,IAChB,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BE,OAAO,OAAO;AACZ,WAAO,IAAI,oBAAoB,OAAO,KAAK,SAAS,KAAK,OAAO;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBE,OAAO,MAAM;AACX,WAAO,IAAI,oBAAoB,MAAM,KAAK,SAAS,KAAK,OAAO;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBE,OAAO,MAAM;AACX,WAAO,IAAI,iBAAiB,MAAM,KAAK,SAAS,KAAK,OAAO;AAAA,EAChE;AAAA,EACE,IAAI,OAAO;AACT,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAQ;AAC1E,QAAI,KAAK,eAAe,SAAS;AAC/B,aAAO,IAAI;AAAA,QACT,YAAY,KAAK,QAAQ,IAAI,MAAM;AAAA,QACnC,MAAM;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;AAAA,MACjE;AAAA,IACP;AACI,WAAO,KAAK,QAAQ,IAAI,MAAM;AAAA,EAClC;AAAA,EACE,IAAI,OAAO;AACT,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAQ;AAC1E,QAAI,KAAK,eAAe,SAAS;AAC/B,aAAO,IAAI;AAAA,QACT,YAAY,KAAK,QAAQ,IAAI,MAAM;AAAA,QACnC,MAAM;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;AAAA,MACjE;AAAA,IACP;AACI,WAAO,KAAK,QAAQ,IAAI,MAAM;AAAA,EAClC;AAAA,EACE,IAAI,OAAO;AACT,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAQ;AAC1E,QAAI,KAAK,eAAe,SAAS;AAC/B,aAAO,IAAI;AAAA,QACT,YAAY,KAAK,QAAQ,IAAI,MAAM;AAAA,QACnC,MAAM;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;AAAA,MACjE;AAAA,IACP;AACI,WAAO,KAAK,QAAQ,IAAI,MAAM;AAAA,EAClC;AAAA,EACE,OAAO,OAAO;AACZ,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAQ;AAC1E,QAAI,KAAK,eAAe,SAAS;AAC/B,aAAO,IAAI;AAAA,QACT,YAAY,KAAK,QAAQ,OAAO,MAAM;AAAA,QACtC,MAAM;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK,QAAQ,qCAAqC,KAAK,KAAK,OAAO;AAAA,MACpE;AAAA,IACP;AACI,WAAO,KAAK,QAAQ,OAAO,MAAM;AAAA,EACrC;AAAA,EACE,YAAY,aAAaJ,SAAQ;AAC/B,WAAO,KAAK,QAAQ,YAAY,aAAaA,OAAM;AAAA,EACvD;AACA;AA1PE,cA/BI,oBA+BI,KAAc;ACzCxB,MAAM,2BAA0B,oBAKtB,kBALsB,KAAa;AAAA,EAC3C,YAAY,UAAU;AACpB,UAAO;AACP,SAAK,WAAW;AAAA,EACpB;AAAA,EAEE,MAAM,UAAU;AACd,WAAO,KAAK,SAAU;AAAA,EAC1B;AAAA,EACE,OAAO;AACL,WAAO,KAAK,SAAU;AAAA,EAC1B;AACA;AAPE,cALI,mBAKI,KAAc;AAcd;AANV,MAAM,oBAAoB;AAAA,EACxB,YAAY,MAAM,eAAe,OAAO;AAOxC;AAAA;AANE,SAAK,OAAO;AACZ,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAIE,WAAW;AACT,WAAO,KAAK;AAAA,EAChB;AAAA,EACE,aAAa,QAAQ,cAAc;AACjC,WAAO;AAAA,EACX;AAAA,EACE,aAAa,SAAS,cAAc;AAClC,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AAAA,EACE,aAAa,SAAS,cAAc;AAClC,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AAAA,EACE,QAAQ,mBAAmB;AACzB,QAAI,KAAK,SAAS,SAAS;AACzB,aAAO,KAAK,KAAK,aAAa,EAAE,iBAAiB;AAAA,IACvD;AACI,WAAO,IAAI,kBAAkB,MAAM,KAAK,KAAK,aAAa,EAAE,iBAAiB,CAAC;AAAA,EAClF;AAAA,EACE,UAAU,UAAU,aAAa;AAC/B,YAAQ,KAAK,eAAa;AAAA,MACxB,KAAK,OAAO;AACV,eAAO,KAAK,aAAa,UAAU,WAAW;AAAA,MACtD;AAAA,MACM,KAAK,OAAO;AACV,eAAO,KAAK,aAAa,UAAU,WAAW;AAAA,MACtD;AAAA,MACM,KAAK,OAAO;AACV,eAAO,KAAK,aAAa,UAAU,WAAW;AAAA,MACtD;AAAA,IACA;AAAA,EACA;AACA;AAlCE,cANI,qBAMI,KAAc;AAuCd;AAJV,MAAM,cAAc;AAAA,EAClB,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACnB;AAAA,EAEE,oBAAoB,OAAO,QAAQ,eAAe,uBAAuB;AACvE,WAAO,KAAK,aAAa,OAAO,QAAQ,eAAe,qBAAqB;AAAA,EAChF;AAAA,EACE,IAAI,OAAO;AACT,UAAM,cAAc,KAAK,QAAQ,WAAW,KAAK;AACjD,QAAI;AACF,aAAO,KAAK,oBAAoB,aAAa,QAAQ,OAAO,KAAK,EAAE,IAAK;AAAA,IACzE,SAAQ,KAAK;AACZ,YAAM,IAAI,aAAa,EAAE,OAAO,KAAK,SAAS,4BAA4B,YAAY,GAAG,IAAG,CAAE;AAAA,IACpG;AAAA,EACA;AAAA;AAAA,EAEE,kCAAkC,QAAQ;AACxC,WAAO;AAAA,EACX;AAAA,EACE,IAAI,OAAO;AACT,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAQ,OAAO,KAAK,EAAE,IAAK;AAAA,EAC/F;AAAA;AAAA,EAEE,kCAAkC,SAAS;AACzC,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AAAA,EACE,IAAI,OAAO;AACT,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAQ,OAAO,KAAK,EAAE,IAAK;AAAA,EAC/F;AAAA;AAAA,EAEE,kCAAkC,SAAS;AACzC,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AAAA,EACE,OAAO,OAAO;AACZ,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAQ,OAAO,KAAK,EAAE,OAAQ;AAAA,EAClG;AAAA,EACE,MAAM,MAAMqD,MAAK;AACf,UAAM,SAAS,MAAM,KAAK,OAAOA,IAAG;AACpC,WAAO,OAAO,CAAC,EAAE,CAAC;AAAA,EACtB;AAAA;AAAA,EAEE,qCAAqC,SAAS;AAC5C,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AACA;AAzCE,cAJI,eAII,KAAc;AA0CxB,MAAM,2BAA0B,0BAMtB,kBANsB,KAAmB;AAAA,EACjD,YAAY,YAAY,SAAS,SAASX,SAAQ,cAAc,GAAG;AACjE,UAAM,YAAY,SAAS,SAASA,OAAM;AAC1C,SAAK,SAASA;AACd,SAAK,cAAc;AAAA,EACvB;AAAA,EAEE,WAAW;AACT,UAAM,IAAI,yBAA0B;AAAA,EACxC;AACA;AAJE,cANI,mBAMI,KAAc;ACrGxB,MAAM,6BAA4B,qBAOxB,kBAPwB,KAAc;AAAA,EAC9C,YAAYtB,SAAQ,SAASsB,SAAQ,UAAU,CAAA,GAAI;AACjD,UAAM,OAAO;AAMf;AALE,SAAK,SAAStB;AACd,SAAK,SAASsB;AACd,SAAK,SAAS,QAAQ,UAAU,IAAI,WAAY;AAAA,EACpD;AAAA,EAGE,aAAa,OAAO,QAAQ,eAAe,uBAAuB,oBAAoB;AACpF,UAAM,OAAO,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC1C,WAAO,IAAI;AAAA,MACT;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACL;AAAA,EACE,YAAY,aAAa1C,UAAS,IAAI;AACpC,UAAM,KAAK,IAAI,wBAAwB,QAAQ,KAAK,SAAS,MAAM,KAAK,MAAM;AAC9E,UAAM,WAAW,KAAK,OAAO,YAAY,WAAW;AACpD,WAAO,SAASA,QAAO,YAAY,UAAU,EAAE,EAAE;AAAA,EACrD;AACA;AAnBE,cAPI,qBAOI,KAAc;AAoBxB,MAAM,2BAAN,MAAM,kCAAgC,yBAC5B,kBAD4B,KAAkB;AAAA,EAEtD,YAAY,aAAa;AACvB,UAAM,gBAAgB,KAAK,KAAK,WAAW;AAC3C,UAAM,KAAK,IAAI,yBAAwB,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,QAAQ,KAAK,cAAc,CAAC;AAC5G,SAAK,QAAQ,IAAI,IAAI,IAAI,aAAa,aAAa,EAAE,CAAC;AACtD,QAAI;AACF,YAAM,SAAS,YAAY,EAAE;AAC7B,WAAK,QAAQ,IAAI,IAAI,IAAI,qBAAqB,aAAa,EAAE,CAAC;AAC9D,aAAO;AAAA,IACR,SAAQ,KAAK;AACZ,WAAK,QAAQ,IAAI,IAAI,IAAI,yBAAyB,aAAa,EAAE,CAAC;AAClE,YAAM;AAAA,IACZ;AAAA,EACA;AACA;AAdE,cADI,0BACI,KAAc;AADxB,IAAM,0BAAN;AAgBA,MAAM,uBAAsB+D,2BASlB,kBATkBA,KAAkB;AAAA,EAC5C,YAAY,MAAM,OAAOC,SAAQ,QAAQ,eAAe,wBAAwB,oBAAoB;AAClG,UAAM,QAAQ,eAAe,KAAK;AAClC,SAAK,OAAO;AACZ,SAAK,SAASA;AACd,SAAK,SAAS;AACd,SAAK,yBAAyB;AAC9B,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EAEE,IAAI,mBAAmB;AACrB,UAAM,SAAS,iBAAiB,KAAK,MAAM,QAAQ,qBAAqB,EAAE;AAC1E,SAAK,OAAO,SAAS,KAAK,MAAM,KAAK,MAAM;AAC3C,WAAO,KAAK,KAAK,IAAI,GAAG,MAAM;AAAA,EAClC;AAAA,EACE,IAAI,mBAAmB;AACrB,UAAM,EAAE,QAAQ,qBAAqB,OAAO,QAAAA,SAAQ,MAAM,mBAAkB,IAAK;AACjF,QAAI,CAAC,UAAU,CAAC,oBAAoB;AAClC,YAAM,SAAS,iBAAiB,MAAM,QAAQ,qBAAqB,CAAA,CAAE;AACrE,MAAAA,QAAO,SAAS,MAAM,KAAK,MAAM;AACjC,aAAO,KAAK,IAAI,GAAG,MAAM;AAAA,IAC/B;AACI,UAAM,OAAO,KAAK,OAAO,iBAAiB;AAC1C,QAAI,oBAAoB;AACtB,aAAO,mBAAmB,IAAI;AAAA,IACpC;AACI,WAAO,KAAK,IAAI,CAAC,QAAQ,aAAa,QAAQ,KAAK,mBAAmB,CAAC;AAAA,EAC3E;AAAA,EACE,IAAI,mBAAmB;AACrB,UAAM,SAAS,iBAAiB,KAAK,MAAM,QAAQ,qBAAqB,EAAE;AAC1E,SAAK,OAAO,SAAS,KAAK,MAAM,KAAK,MAAM;AAC3C,UAAM,EAAE,QAAQ,MAAM,qBAAqB,mBAAoB,IAAG;AAClE,QAAI,CAAC,UAAU,CAAC,oBAAoB;AAClC,aAAO,KAAK,IAAI,GAAG,MAAM;AAAA,IAC/B;AACI,UAAM,MAAM,KAAK,IAAK,EAAC,IAAI,GAAG,MAAM;AACpC,QAAI,CAAC,KAAK;AACR,aAAO;AAAA,IACb;AACI,QAAI,oBAAoB;AACtB,aAAO,mBAAmB,CAAC,GAAG,CAAC;AAAA,IACrC;AACI,WAAO,aAAa,QAAQ,KAAK,mBAAmB;AAAA,EACxD;AAAA,EACE,OAAO,mBAAmB;AACxB,UAAM,SAAS,iBAAiB,KAAK,MAAM,QAAQ,qBAAqB,EAAE;AAC1E,SAAK,OAAO,SAAS,KAAK,MAAM,KAAK,MAAM;AAC3C,WAAO,KAAK,KAAK,IAAK,EAAC,IAAI,GAAG,MAAM;AAAA,EACxC;AAAA;AAAA,EAEE,wBAAwB;AACtB,WAAO,KAAK;AAAA,EAChB;AACA;AA5CE,cATI,eASI,KAAc;AClDxB,MAAM,+BAA8B,0BAC1B,kBAD0B,KAAmB;AAEvD;AADE,cADI,uBACI,KAAc;AAExB,SAAS,UAAU5C,SAAQpB,UAAS,IAAI;AACtC,QAAM,UAAU,IAAI,kBAAkB,EAAE,QAAQA,QAAO,QAAQ;AAC/D,MAAIgE;AACJ,MAAIhE,QAAO,WAAW,MAAM;AAC1B,IAAAgE,UAAS,IAAI,cAAe;AAAA,EAChC,WAAahE,QAAO,WAAW,OAAO;AAClC,IAAAgE,UAAShE,QAAO;AAAA,EACpB;AACE,MAAI0C;AACJ,MAAI1C,QAAO,QAAQ;AACjB,UAAM,eAAe;AAAA,MACnBA,QAAO;AAAA,MACP;AAAA,IACD;AACD,IAAA0C,UAAS;AAAA,MACP,YAAY1C,QAAO;AAAA,MACnB,QAAQ,aAAa;AAAA,MACrB,eAAe,aAAa;AAAA,IAC7B;AAAA,EACL;AACE,QAAM,UAAU,IAAI,oBAAoBoB,SAAQ,SAASsB,SAAQ,EAAE,QAAAsB,SAAQ;AAC3E,QAAM,KAAK,IAAI,sBAAsB,QAAQ,SAAS,SAAStB,OAAM;AACrE,KAAG,UAAUtB;AACb,SAAO;AACT;AACA,SAAS,WAAW,QAAQ;AAC1B,MAAI,OAAO,CAAC,MAAM,UAAU,OAAO,OAAO,CAAC,MAAM,UAAU;AACzD,UAAM,WAAW,OAAO,CAAC,MAAM,SAAS,IAAIC,SAAM,IAAK,IAAIA,SAAO,OAAO,CAAC,CAAC;AAC3E,WAAO,UAAU,UAAU,OAAO,CAAC,CAAC;AAAA,EACxC;AACE,MAAI,SAAS,OAAO,CAAC,CAAC,GAAG;AACvB,UAAM,EAAE,YAAY,QAAAD,SAAQ,GAAG,cAAe,IAAG,OAAO,CAAC;AACzD,QAAIA;AACF,aAAO,UAAUA,SAAQ,aAAa;AACxC,QAAI,OAAO,eAAe,UAAU;AAClC,YAAM,EAAE,QAAQ,GAAG,QAAO,IAAK;AAC/B,YAAM,YAAY,IAAIC,SAAO,QAAQ,OAAO;AAC5C,aAAO,UAAU,WAAW,aAAa;AAAA,IAC/C;AACI,UAAM,WAAW,IAAIA,SAAO,UAAU;AACtC,WAAO,UAAU,UAAU,aAAa;AAAA,EAC5C;AACE,SAAO,UAAU,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AACvC;AAAA,CACC,CAAC,aAAa;AACb,WAAS,KAAKrB,SAAQ;AACpB,WAAO,UAAU,CAAE,GAAEA,OAAM;AAAA,EAC/B;AACE,WAAS,OAAO;AAClB,GAAG,YAAY,UAAU,CAAA,EAAG;AC3D5B,MAAMiE,YAAU,SAAS,QAAQ,EAAC,QAAQ,IAAG;AAG7C,MAAM,SAAS;AAAA,EACb,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAGA,MAAM,QAAQ,MAAM;AACZ,QAAA,MAAM,YAAY,YAAY;AACpC,QAAM,gBAAgB,QAAQ;AAC9B,SAAO,gBAAgB,UAAU;AACnC;AAGA,MAAM,SAAS;AAAA,EACb,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAEA,QAAQ,UAAU,MAAM;AAGxB,MAAM,SAAS,QAAQ,OAAO;AAAA,EAC5B,QAAQ,OAAO,UAAU,EAAE,QAAQ,uBAAuB;AAAA,EAC1D,QAAQ,OAAO,SAAS,EAAE,KAAK,MAAM;AAAA,EACrC,QAAQ,OAAO;AAAA,IACb,CAAC,SAAS,GAAG,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK,OAAO;AAAA,EAAA;AAE9D;AAGA,MAAM,aAAa;AAAA,EACjB,IAAI,QAAQ,WAAW,QAAQ;AAAA,EAC/B,IAAI,QAAQ,WAAW,KAAK;AAAA,IAC1B,UAAUhL,cAAK,KAAKgL,UAAQ,KAAK,WAAW;AAAA,IAC5C,OAAO;AAAA,EAAA,CACR;AAAA,EACD,IAAI,QAAQ,WAAW,KAAK;AAAA,IAC1B,UAAUhL,cAAK,KAAKgL,UAAQ,KAAK,SAAS;AAAA,EAC3C,CAAA;AACH;AAGA,MAAM,SAAS,QAAQ,aAAa;AAAA,EAClC,OAAO,MAAM;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACF,CAAC;AC1DY,MAAA,QAAQ,YAAY,SAAS;AAAA,EACxC,IAAI,KAAK,IAAI,EAAE,WAAW;AAAA,EAC1B,OAAO,KAAK,OAAO,EAAE,QAAQ;AAAA,EAC7B,WAAW,KAAK,YAAY,EAAE,QAAQ;AACxC,CAAC;AAEY,MAAA,WAAW,YAAY,YAAY;AAAA,EAC9C,IAAI,QAAQ,IAAI,EAAE,WAAW,EAAE,eAAe,MAAM;AAAA,EACpD,SAAS,KAAK,SAAS,EAAE,QAAQ;AAAA,EACjC,MAAM,KAAK,MAAM,EAAE,QAAQ;AAAA,EAC3B,QAAQ,KAAK,SAAS,EAAE,QAAQ;AAAA,EAChC,WAAW,KAAK,YAAY,EAAE,QAAQ;AAAA,EACtC,WAAW,KAAK,YAAY,EAAE,QAAQ;AAAA,EACtC,OAAO,KAAK,SAAS,EAAE,MAAM,OAAQ,CAAA,EAAE,QAAQ;AACjD,CAAC;;;;;;ACyBD,MAAM,qBAAmD;AAAA,EAGvD,YAAY,QAAiB;AAFtB;AACA,gCAAqB;AAqF5B;AAAA,gDAAuB,OAAO,WAAmB,SAAsB;AACrE,YAAM,UAAU,MAAM,KAAK,GAAG,MAAM,SAAS,UAAU;AAAA,QACrD,OAAOC,KAAG,SAAS,WAAW,SAAS;AAAA,MAAA,CACxC;AAED,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,kBAAkB,SAAS,iBAAiB;AAAA,MAAA;AAG1D,UAAA,QAAQ,SAAS,QAAQ;AACrB,cAAA,IAAI,MAAM,kCAAkC;AAAA,MAAA;AAIpD,YAAM,aAAkC,CAAC;AAErC,UAAA,KAAK,SAAS,QAAW;AAC3B,mBAAW,UAAU,KAAK;AAAA,MAAA;AAG5B,YAAM,QAAkB,CAAC;AACzB,UAAI,KAAK,QAAQ;AACT,cAAA,KAAK,GAAG,KAAK,MAAM;AAAA,MAAA;AAE3B,UAAI,KAAK,WAAW;AACZ,cAAA,KAAK,GAAG,KAAK,SAAS;AAAA,MAAA;AAE9B,iBAAW,QAAQ;AAEnB,YAAM,CAAC,cAAc,IAAI,MAAM,KAAK,GACjC,OAAO,QAAQ,EACf,IAAI,UAAU,EACd,MAAMA,KAAG,SAAS,WAAW,SAAS,CAAC,EACvC,UAAU;AAEN,aAAA;AAAA,IACT;AAGA;AAAA,4CAAmB,OAAO,QAAgB,cAAsB;AAC9D,YAAM,cAAc,MAAM,KAAK,GAAG,MAAM,SAAS,UAAU;AAAA,QACzD,OAAOA,KAAG,SAAS,WAAW,SAAS;AAAA,MAAA,CACxC;AAED,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,eAAe,SAAS,yCAAyC;AAAA,MAAA;AAG/E,UAAA,YAAY,SAAS,QAAQ;AACzB,cAAA,IAAI,MAAM,gDAAgD;AAAA,MAAA;AAGlE,YAAM,cAAc,MAAM,KAAK,GAAG,MAAM,SAAS,UAAU;AAAA,QACzD,OAAOC,MAAID,KAAG,SAAS,QAAQ,MAAM,GAAGR,KAAG,SAAS,IAAI,YAAY,EAAE,GAAGQ,KAAG,SAAS,MAAM,WAAW,CAAC;AAAA,MAAA,CACxG;AAED,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,0CAA0C,SAAS,0CAA0C;AAAA,MAAA;AAGxG,aAAA;AAAA,IACT;AAhJM,QAAA;AACF,YAAM,SAAS,IAAIE,SAAS,UAAU,sBAAsB;AAC5D,WAAK,KAAK,QAAQ,QAAQ,EAAE,QAAgB;AAO5C,aAAO,KAAK,sBAAsB;AAAA,aAC3B,OAAO;AACP,aAAA,MAAM,gCAAgC,KAAK;AAC5C,YAAA;AAAA,IAAA;AAAA,EACR;AAAA,EAGF,MAAM,YAAY,UAA4B;AAC5C,UAAMC,SAAQ,MAAM,KAAK,GAAG,MAAM,MAAM,SAAS;AACjD,WAAOA,OAAM,QAAQ;AAAA,EAAA;AAAA,EAGvB,MAAM,oBAAoB,QAAgB,UAA4B;AACpE,UAAM,OAAO,MAAM,KAAK,GAAG,MAAM,MAAM,UAAU;AAAA,MAC/C,OAAOH,KAAG,MAAM,IAAI,MAAM;AAAA,IAAA,CAC3B;AAEG,QAAA,CAAC,KAAa,QAAA;AAElB,UAAM,UAAU,MAAM,KAAK,GAAG,MAAM,SAAS,SAAS;AAAA,MACpD,OAAOA,KAAG,SAAS,QAAQ,MAAM;AAAA,IAAA,CAClC;AAEM,WAAA,EAAE,MAAM,UAAU,QAAQ;AAAA,EAAA;AAAA,EAGnC,MAAM,WAAW,QAAgB,OAAe,UAA4B;AACpE,UAAA,CAAC,IAAI,IAAI,MAAM,KAAK,GACvB,OAAO,KAAK,EACZ,OAAO,EAAE,IAAI,QAAQ,OAAO,YAAe,oBAAA,KAAA,GAAO,YAAY,GAAG,EACjE,UAAU;AACN,WAAA;AAAA,EAAA;AAAA,EAGT,MAAM,cAAc,MAAkB,UAA4B;AAChE,WAAO,MAAM,KAAK,GAAG,YAAY,OAAO,OAAO;AAC7C,YAAM,aAAa,MAAM,GAAG,MAAM,MAAM,UAAU;AAAA,QAChD,OAAOA,KAAG,MAAM,IAAI,KAAK,MAAM;AAAA,MAAA,CAChC;AAED,UAAI,CAAC,YAAY;AACf,cAAM,IAAI,MAAM,QAAQ,KAAK,MAAM,iBAAiB;AAAA,MAAA;AAGhD,YAAA,CAAC,OAAO,IAAI,MAAM,GAAG,OAAO,QAAQ,EAAE,OAAO,IAAI,EAAE,UAAU;AAC5D,aAAA;AAAA,IAAA,CACR;AAAA,EAAA;AAAA,EAGH,MAAM,gBAAgB,QAAgB,UAA4B;AAChE,UAAM,OAAO,MAAM,KAAK,GAAG,MAAM,MAAM,UAAU;AAAA,MAC/C,OAAOA,KAAG,MAAM,IAAI,MAAM;AAAA,IAAA,CAC3B;AACD,WAAO,CAAC,CAAC;AAAA,EAAA;AAAA,EAGX,MAAM,WAAW,QAAgB,UAA4B;AACrD,UAAA,KAAK,GAAG,OAAO,KAAK,EAAE,MAAMA,KAAG,MAAM,IAAI,MAAM,CAAC;AAChD,UAAA,KAAK,GAAG,OAAO,QAAQ,EAAE,MAAMA,KAAG,SAAS,QAAQ,MAAM,CAAC;AAAA,EAAA;AAAA,EAGlE,MAAM,oBAAoB,QAAgB,WAAmB,UAA4B;AACvF,UAAM,gBAAgB,MAAM,KAAK,GAAG,MAAM,SAAS,UAAU;AAAA,MAC3D,OAAOA,KAAG,SAAS,WAAW,SAAS;AAAA,IAAA,CACxC;AAED,QAAI,CAAC,eAAe;AAClB,YAAM,IAAI,MAAM,WAAW,SAAS,iBAAiB;AAAA,IAAA;AAGvD,UAAM,KAAK,GAAG,OAAO,QAAQ,EAAE,MAAMC,MAAID,KAAG,SAAS,QAAQ,MAAM,GAAGR,KAAG,SAAS,IAAI,cAAc,KAAK,CAAC,CAAC,CAAC;AAAA,EAAA;AAkEhH;AAGA,MAAM,kBAAgD;AAAA,EAOpD,YAAY,SAAiB;AANtB;AACC;AACA;AACA;AACD,gCAAqB;AAG1B,SAAK,KAAK;AACV,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,KAAK,UAAU;AAAA,EAAA;AAAA,EAGtB,MAAc,YAAY;AAClB,UAAAY,SAAQ,MAAM,OAAO,OAAO;AAC7B,SAAA,gBAAgB,MAAM,OAAO;AAAA,MAChC,SAAS,KAAK;AAAA,MACd,YAAY,IAAIA,OAAM,MAAM;AAAA,QAC1B,oBAAoB;AAAA,MACrB,CAAA;AAAA,IAAA,CACF;AAAA,EAAA;AAAA,EAGH,MAAc,WAAW,SAA2B;AAC5C,UAAA,QAAQ,MAAM,KAAK,eAAe;AACjC,WAAA;AAAA,MACL,gBAAe,mCAAS,qBAAoB,UAAU,QAAQ,iBAAiB,KAAK;AAAA,MACpF,eAAe;AAAA,IACjB;AAAA,EAAA;AAAA,EAGM,iBAAiB,OAAe;AACtC,UAAM,UAAU,IAAI,OAAO,OAAO,QAAA,IAAY,cAAc,EAAE;AAC9D,WAAO,QAAQ;AAAA,EAAA;AAAA,EAGjB,MAAM,iBAAiB;AACjB,QAAA,KAAK,YAAa,QAAO,KAAK;AAC9B,QAAA;AACF,YAAM,WAAW,MAAM,KAAK,cAAc,KAAK,UAAU;AAAA,QACvD,aAAa;AAAA,MAAA,CACd;AACD,UAAI,SAAS,KAAK,UAAU,SAAS,KAAK,OAAO;AAC1C,aAAA,cAAc,SAAS,KAAK;AAAA,MAAA;AAE/B,UAAA,CAAC,KAAK,aAAa;AACf,cAAA,IAAI,MAAM,sBAAsB;AAAA,MAAA;AAExC,aAAO,KAAK;AAAA,aACL,OAAO;AACP,aAAA,MAAM,+BAA+B,KAAK;AAC3C,YAAA;AAAA,IAAA;AAAA,EACR;AAAA,EAGF,MAAM,YAAY,SAA2B;AAC3C,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,WAAW,MAAM,KAAK,cAAc,IAAI,iBAAiB;AAAA,MAC7D,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AACD,UAAM,UAAU,SAAS;AAErB,QAAA,CAAC,QAAQ,QAAQ;AACnB,YAAM,IAAI,MAAM,2BAA2B,QAAQ,OAAO;AAAA,IAAA;AAG5D,UAAMD,SAAQ,QAAQ,KAAK,IAAI,CAAC,UAAe;AAAA,MAC7C,IAAI,KAAK;AAAA,MACT,OAAO,KAAK;AAAA,MACZ,WAAW,KAAK;AAAA,IAAA,EAChB;AACKA,WAAAA;AAAAA,EAAAA;AAAAA,EAGT,MAAM,oBAAoB,QAAgB,SAA2B;AACnE,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,eAAe,MAAM,KAAK,cAAc,IAAI,YAAY,MAAM,IAAI;AAAA,MACtE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AAED,UAAM,cAAc,aAAa;AAC7B,QAAA,CAAC,YAAY,QAAQ;AAChB,aAAA,MAAM,IAAI,MAAM,8CAA8C,KAAK,UAAU,WAAW,CAAC,EAAE;AAC3F,aAAA;AAAA,IAAA;AAGT,UAAM,kBAAkB,MAAM,KAAK,cAAc,IAAI,YAAY,MAAM,IAAI;AAAA,MACzE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AAED,UAAM,iBAAiB,gBAAgB;AACnC,QAAA,CAAC,eAAe,QAAQ;AACnB,aAAA,MAAM,IAAI,MAAM,iDAAiD,KAAK,UAAU,cAAc,CAAC,EAAE;AACjG,aAAA;AAAA,IAAA;AAGT,UAAM,OAAO;AAAA,MACX,IAAI,YAAY,KAAK;AAAA,MACrB,OAAO,YAAY,KAAK;AAAA,MACxB,WAAW,YAAY,KAAK;AAAA,IAC9B;AAEA,UAAMxI,YAAW,eAAe,KAAK,IAAI,CAAC,aAAkB;AAAA,MAC1D,IAAI,QAAQ;AAAA,MACZ,WAAW,QAAQ;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,WAAW,QAAQ;AAAA,MACnB,MAAM,QAAQ;AAAA,MACd,QAAQ,QAAQ;AAAA,IAAA,EAChB;AAEK,WAAA,EAAE,MAAM,UAAAA,UAAS;AAAA,EAAA;AAAA,EAG1B,MAAM,WAAW,QAAgB,OAAe,SAA2B;AACzE,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAC1C,UAAA,WAAW,MAAM,KAAK,cAAc;AAAA,MACxC;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,gBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,QACE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MAAA;AAAA,IAE1C;AAEA,UAAM,UAAU,SAAS;AACrB,QAAA,CAAC,QAAQ,QAAQ;AACnB,YAAM,IAAI,MAAM,6BAA6B,QAAQ,OAAO;AAAA,IAAA;AAE9D,WAAO,QAAQ;AAAA,EAAA;AAAA,EAGjB,MAAM,cAAc,MAAkB,SAA2B;AAC/D,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAC1C,UAAA,WAAW,MAAM,KAAK,cAAc;AAAA,MACxC;AAAA,MACA;AAAA,QACE,GAAG;AAAA,QACH,gBAAgB,KAAK;AAAA,QACrB,gBAAgB,KAAK;AAAA,QACrB,YAAY,KAAK;AAAA,QACjB;AAAA,QACA,WAAW,KAAK,SAAS,cAAc,mCAAS,YAAY;AAAA,MAC9D;AAAA,MACA;AAAA,QACE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MAAA;AAAA,IAE1C;AAEA,UAAM,UAAU,SAAS;AACrB,QAAA,CAAC,QAAQ,QAAQ;AACnB,YAAM,IAAI,MAAM,gCAAgC,QAAQ,OAAO;AAAA,IAAA;AAEjE,WAAO,QAAQ;AAAA,EAAA;AAAA,EAGjB,MAAM,gBAAgB,QAAgB,SAA2B;AAC/D,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,WAAW,MAAM,KAAK,cAAc,IAAI,YAAY,MAAM,IAAI;AAAA,MAClE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AACD,UAAM,UAAU,SAAS;AACzB,WAAO,QAAQ;AAAA,EAAA;AAAA,EAGjB,MAAM,WAAW,QAAgB,SAA2B;AAC1D,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,KAAK,cAAc,OAAO,YAAY,MAAM,IAAI;AAAA,MACpD,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AAAA,EAAA;AAAA,EAGH,MAAM,oBAAoB,QAAgB,WAAmB,SAA2B;AACtF,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,KAAK,cAAc,OAAO,YAAY,MAAM,IAAI,SAAS,UAAU;AAAA,MACvE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AAAA,EAAA;AAAA,EAGH,MAAM,oBAAoB,QAAgB,WAAmB,SAA2B;AACtF,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,KAAK,cAAc,OAAO,YAAY,MAAM,IAAI,SAAS,IAAI;AAAA,MACjE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AAAA,EAAA;AAAA,EAGH,MAAM,qBAAqB,WAAmB,MAAmB,SAA2B;AAC1F,UAAM,EAAE,cAAc,UAAU,IAAI,WAAW,CAAC;AAChD,UAAM,WAAW,MAAM,KAAK,cAAc,IAAI,YAAY,SAAS,IAAI;AAAA,MACrE,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ;AAAA,MAAA;AAAA,IACF,CACD;AACD,WAAO,SAAS;AAAA,EAAA;AAAA,EAGlB,MAAM,iBAAiB,QAAgB,WAAmB;AAClD,UAAA,WAAW,MAAM,KAAK,cAAc,IAAI,YAAY,MAAM,IAAI,SAAS,SAAS;AAAA,MACpF,SAAS,MAAM,KAAK,WAAW;AAAA,IAAA,CAChC;AACD,WAAO,SAAS;AAAA,EAAA;AAEpB;AAEY,IAAA,iCAAA0I,kBAAL;AACLA,gBAAA,QAAS,IAAA;AACTA,gBAAA,KAAM,IAAA;AAFIA,SAAAA;AAAA,GAAA,gBAAA,CAAA,CAAA;AAMZ,IAAI;AAGS,MAAA,eAAe,CAAC,MAAoBvE,YAAiD;AAChG,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,UAAI,CAACA,QAAO,OAAc,OAAA,IAAI,MAAM,2CAA2C;AAC1D,2BAAA,IAAI,qBAAqBA,QAAO,MAAM;AAC3D;AAAA,IACF,KAAK;AACH,UAAI,CAACA,QAAO,OAAc,OAAA,IAAI,MAAM,kCAAkC;AACjD,2BAAA,IAAI,kBAAkBA,QAAO,MAAM;AACxD;AAAA,IACF;AACQ,YAAA,IAAI,MAAM,uBAAuB;AAAA,EAAA;AAE7C;AAGO,MAAM,cAAc,CAAC,YAA8B,mBAAmB,YAAY,OAAO;AACzF,MAAM,sBAAsB,CAAC,QAAgB,YAClD,mBAAmB,oBAAoB,QAAQ,OAAO;AAC3C,MAAA,aAAa,CAAC,QAAgB,OAAe,YACxD,mBAAmB,WAAW,QAAQ,OAAO,OAAO;AAC/C,MAAM,gBAAgB,CAAC,MAAkB,YAC9C,mBAAmB,cAAc,MAAM,OAAO;AACzC,MAAM,kBAAkB,CAAC,QAAgB,YAC9C,mBAAmB,gBAAgB,QAAQ,OAAO;AAC7C,MAAM,aAAa,CAAC,QAAgB,YAA8B,mBAAmB,WAAW,QAAQ,OAAO;AACzG,MAAA,sBAAsB,CAAC,QAAgB,WAAmB,YACrE,mBAAmB,oBAAoB,QAAQ,WAAW,OAAO;AACtD,MAAA,uBAAuB,CAAC,WAAmB,MAAmB,YACzE,mBAAmB,qBAAqB,WAAW,MAAM,OAAO;AAC3D,MAAM,mBAAmB,CAAC,QAAgB,cAC/C,mBAAmB,iBAAiB,QAAQ,SAAS;AAC1C,MAAA,kBAAkB,MAAM,mBAAmB;AAC3C,MAAA,QAAQ,MAAM,mBAAmB;ACjdvC,MAAM,0BAA0B;AAChC,MAAM,8BAA8B;AAAA,EACvC;AAAA,EACA;AACJ;AAEO,MAAM,kBAAkB;AAIxB,MAAM,sBAAsBkD,IAAE,MAAM,CAACA,IAAE,UAAUA,IAAE,OAAM,EAAG,IAAG,CAAE,CAAC;AAIlE,MAAM,eAAeA,IAAE,OAAQ;AACtC,MAAM,0BAA0BA,IAC3B,OAAO;AAAA,EACR,OAAOA,IAAE,SAASA,IACb,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,eAAeA,IAAE,SAAS,mBAAmB;AAAA,EAChD,CAAA,EACI,aAAa;AACtB,CAAC,EACI,YAAa;AACX,MAAM,gBAAgBA,IAAE,OAAO;AAAA,EAClC,QAAQA,IAAE,OAAQ;AAAA,EAClB,QAAQA,IAAE,SAAS,uBAAuB;AAC9C,CAAC;AACD,MAAM,+BAA+BA,IAChC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,OAAOA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAChD,CAAC,EACI,YAAa;AACX,MAAM,qBAAqBA,IAAE,OAAO;AAAA,EACvC,QAAQA,IAAE,OAAQ;AAAA,EAClB,QAAQA,IAAE,SAAS,4BAA4B;AACnD,CAAC;AACM,MAAM,eAAeA,IACvB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,OAAOA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAChD,CAAC,EACI,YAAa;AAIX,MAAM,kBAAkBA,IAAE,MAAM,CAACA,IAAE,UAAUA,IAAE,OAAM,EAAG,IAAG,CAAE,CAAC;AAI9D,MAAM,uBAAuBA,IAC/B,OAAO;AAAA,EACR,SAASA,IAAE,QAAQ,eAAe;AAAA,EAClC,IAAI;AACR,CAAC,EACI,MAAM,aAAa,EACnB,OAAQ;AAIN,MAAM,4BAA4BA,IACpC,OAAO;AAAA,EACR,SAASA,IAAE,QAAQ,eAAe;AACtC,CAAC,EACI,MAAM,kBAAkB,EACxB,OAAQ;AAIN,MAAM,wBAAwBA,IAChC,OAAO;AAAA,EACR,SAASA,IAAE,QAAQ,eAAe;AAAA,EAClC,IAAI;AAAA,EACJ,QAAQ;AACZ,CAAC,EACI,OAAQ;AAIN,IAAI;AAAA,CACV,SAAUsB,YAAW;AAElB,EAAAA,WAAUA,WAAU,kBAAkB,IAAI,KAAM,IAAI;AACpD,EAAAA,WAAUA,WAAU,gBAAgB,IAAI,MAAM,IAAI;AAElD,EAAAA,WAAUA,WAAU,YAAY,IAAI,MAAM,IAAI;AAC9C,EAAAA,WAAUA,WAAU,gBAAgB,IAAI,MAAM,IAAI;AAClD,EAAAA,WAAUA,WAAU,gBAAgB,IAAI,MAAM,IAAI;AAClD,EAAAA,WAAUA,WAAU,eAAe,IAAI,MAAM,IAAI;AACjD,EAAAA,WAAUA,WAAU,eAAe,IAAI,MAAM,IAAI;AACrD,GAAG,cAAc,YAAY,CAAA,EAAG;AAIzB,MAAM,qBAAqBtB,IAC7B,OAAO;AAAA,EACR,SAASA,IAAE,QAAQ,eAAe;AAAA,EAClC,IAAI;AAAA,EACJ,OAAOA,IAAE,OAAO;AAAA;AAAA;AAAA;AAAA,IAIZ,MAAMA,IAAE,OAAQ,EAAC,IAAK;AAAA;AAAA;AAAA;AAAA,IAItB,SAASA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,IAInB,MAAMA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EACpC,CAAK;AACL,CAAC,EACI,OAAQ;AACN,MAAM,uBAAuBA,IAAE,MAAM;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAKM,MAAM,oBAAoB,aAAa,OAAQ;AAW/C,MAAM,8BAA8B,mBAAmB,OAAO;AAAA,EACjE,QAAQA,IAAE,QAAQ,yBAAyB;AAAA,EAC3C,QAAQ,6BAA6B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMxC,WAAW;AAAA;AAAA;AAAA;AAAA,IAIX,QAAQA,IAAE,OAAQ,EAAC,SAAU;AAAA,EACrC,CAAK;AACL,CAAC;AAKM,MAAM,uBAAuBA,IAC/B,OAAO;AAAA,EACR,MAAMA,IAAE,OAAQ;AAAA,EAChB,SAASA,IAAE,OAAQ;AACvB,CAAC,EACI,YAAa;AAIX,MAAM,2BAA2BA,IACnC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,cAAcA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA;AAAA;AAAA;AAAA,EAInD,UAAUA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA;AAAA;AAAA;AAAA,EAI/C,OAAOA,IAAE,SAASA,IACb,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,aAAaA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EACtC,CAAA,EACI,aAAa;AACtB,CAAC,EACI,YAAa;AAIX,MAAM,0BAA0B,cAAc,OAAO;AAAA,EACxD,QAAQA,IAAE,QAAQ,YAAY;AAAA,EAC9B,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,iBAAiBA,IAAE,OAAQ;AAAA,IAC3B,cAAc;AAAA,IACd,YAAY;AAAA,EACpB,CAAK;AACL,CAAC;AAIM,MAAM,2BAA2BA,IACnC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,cAAcA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA;AAAA;AAAA;AAAA,EAInD,SAASA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA;AAAA;AAAA;AAAA,EAI9C,SAASA,IAAE,SAASA,IACf,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,aAAaA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EACtC,CAAA,EACI,aAAa;AAAA;AAAA;AAAA;AAAA,EAIlB,WAAWA,IAAE,SAASA,IACjB,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,WAAWA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA;AAAA;AAAA;AAAA,IAIjC,aAAaA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EACtC,CAAA,EACI,aAAa;AAAA;AAAA;AAAA;AAAA,EAIlB,OAAOA,IAAE,SAASA,IACb,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,aAAaA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EACtC,CAAA,EACI,aAAa;AACtB,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyB,aAAa,OAAO;AAAA;AAAA;AAAA;AAAA,EAItD,iBAAiBA,IAAE,OAAQ;AAAA,EAC3B,cAAc;AAAA,EACd,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,cAAcA,IAAE,SAASA,IAAE,OAAM,CAAE;AACvC,CAAC;AAIM,MAAM,gCAAgC,mBAAmB,OAAO;AAAA,EACnE,QAAQA,IAAE,QAAQ,2BAA2B;AACjD,CAAC;AAKM,MAAM,oBAAoB,cAAc,OAAO;AAAA,EAClD,QAAQA,IAAE,QAAQ,MAAM;AAC5B,CAAC;AAEM,MAAM,iBAAiBA,IACzB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,UAAUA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIpB,OAAOA,IAAE,SAASA,IAAE,OAAM,CAAE;AAChC,CAAC,EACI,YAAa;AAIX,MAAM,6BAA6B,mBAAmB,OAAO;AAAA,EAChE,QAAQA,IAAE,QAAQ,wBAAwB;AAAA,EAC1C,QAAQ,6BAA6B,MAAM,cAAc,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA,IAI9D,eAAe;AAAA,EACvB,CAAK;AACL,CAAC;AAEM,MAAM,yBAAyB,cAAc,OAAO;AAAA,EACvD,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKnC,QAAQA,IAAE,SAAS,YAAY;AAAA,EAClC,CAAA,EAAE,SAAU;AACjB,CAAC;AACM,MAAM,wBAAwB,aAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrD,YAAYA,IAAE,SAAS,YAAY;AACvC,CAAC;AAKM,MAAM,yBAAyBA,IACjC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,KAAKA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIf,UAAUA,IAAE,SAASA,IAAE,OAAM,CAAE;AACnC,CAAC,EACI,YAAa;AACX,MAAM,6BAA6B,uBAAuB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIpE,MAAMA,IAAE,OAAQ;AACpB,CAAC;AACM,MAAM,6BAA6B,uBAAuB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIpE,MAAMA,IAAE,OAAQ,EAAC,OAAQ;AAC7B,CAAC;AAIM,MAAM,iBAAiBA,IACzB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,KAAKA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMf,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,UAAUA,IAAE,SAASA,IAAE,OAAM,CAAE;AACnC,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyBA,IACjC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,aAAaA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvB,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,UAAUA,IAAE,SAASA,IAAE,OAAM,CAAE;AACnC,CAAC,EACI,YAAa;AAIX,MAAM,6BAA6B,uBAAuB,OAAO;AAAA,EACpE,QAAQA,IAAE,QAAQ,gBAAgB;AACtC,CAAC;AAIM,MAAM,4BAA4B,sBAAsB,OAAO;AAAA,EAClE,WAAWA,IAAE,MAAM,cAAc;AACrC,CAAC;AAIM,MAAM,qCAAqC,uBAAuB,OAAO;AAAA,EAC5E,QAAQA,IAAE,QAAQ,0BAA0B;AAChD,CAAC;AAIM,MAAM,oCAAoC,sBAAsB,OAAO;AAAA,EAC1E,mBAAmBA,IAAE,MAAM,sBAAsB;AACrD,CAAC;AAIM,MAAM,4BAA4B,cAAc,OAAO;AAAA,EAC1D,QAAQA,IAAE,QAAQ,gBAAgB;AAAA,EAClC,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,KAAKA,IAAE,OAAQ;AAAA,EACvB,CAAK;AACL,CAAC;AAIM,MAAM,2BAA2B,aAAa,OAAO;AAAA,EACxD,UAAUA,IAAE,MAAMA,IAAE,MAAM,CAAC,4BAA4B,0BAA0B,CAAC,CAAC;AACvF,CAAC;AAIM,MAAM,wCAAwC,mBAAmB,OAAO;AAAA,EAC3E,QAAQA,IAAE,QAAQ,sCAAsC;AAC5D,CAAC;AAIM,MAAM,yBAAyB,cAAc,OAAO;AAAA,EACvD,QAAQA,IAAE,QAAQ,qBAAqB;AAAA,EACvC,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,KAAKA,IAAE,OAAQ;AAAA,EACvB,CAAK;AACL,CAAC;AAIM,MAAM,2BAA2B,cAAc,OAAO;AAAA,EACzD,QAAQA,IAAE,QAAQ,uBAAuB;AAAA,EACzC,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,KAAKA,IAAE,OAAQ;AAAA,EACvB,CAAK;AACL,CAAC;AAIM,MAAM,oCAAoC,mBAAmB,OAAO;AAAA,EACvE,QAAQA,IAAE,QAAQ,iCAAiC;AAAA,EACnD,QAAQ,6BAA6B,OAAO;AAAA;AAAA;AAAA;AAAA,IAIxC,KAAKA,IAAE,OAAQ;AAAA,EACvB,CAAK;AACL,CAAC;AAKM,MAAM,uBAAuBA,IAC/B,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIhB,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,UAAUA,IAAE,SAASA,IAAE,QAAO,CAAE;AACpC,CAAC,EACI,YAAa;AAIX,MAAM,eAAeA,IACvB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIhB,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,WAAWA,IAAE,SAASA,IAAE,MAAM,oBAAoB,CAAC;AACvD,CAAC,EACI,YAAa;AAIX,MAAM,2BAA2B,uBAAuB,OAAO;AAAA,EAClE,QAAQA,IAAE,QAAQ,cAAc;AACpC,CAAC;AAIM,MAAM,0BAA0B,sBAAsB,OAAO;AAAA,EAChE,SAASA,IAAE,MAAM,YAAY;AACjC,CAAC;AAIM,MAAM,yBAAyB,cAAc,OAAO;AAAA,EACvD,QAAQA,IAAE,QAAQ,aAAa;AAAA,EAC/B,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,IAIhB,WAAWA,IAAE,SAASA,IAAE,OAAOA,IAAE,OAAM,CAAE,CAAC;AAAA,EAClD,CAAK;AACL,CAAC;AAIM,MAAM,oBAAoBA,IAC5B,OAAO;AAAA,EACR,MAAMA,IAAE,QAAQ,MAAM;AAAA;AAAA;AAAA;AAAA,EAItB,MAAMA,IAAE,OAAQ;AACpB,CAAC,EACI,YAAa;AAIX,MAAM,qBAAqBA,IAC7B,OAAO;AAAA,EACR,MAAMA,IAAE,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA,EAIvB,MAAMA,IAAE,OAAQ,EAAC,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIzB,UAAUA,IAAE,OAAQ;AACxB,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyBA,IACjC,OAAO;AAAA,EACR,MAAMA,IAAE,QAAQ,UAAU;AAAA,EAC1B,UAAUA,IAAE,MAAM,CAAC,4BAA4B,0BAA0B,CAAC;AAC9E,CAAC,EACI,YAAa;AAIX,MAAM,sBAAsBA,IAC9B,OAAO;AAAA,EACR,MAAMA,IAAE,KAAK,CAAC,QAAQ,WAAW,CAAC;AAAA,EAClC,SAASA,IAAE,MAAM;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACR,CAAK;AACL,CAAC,EACI,YAAa;AAIX,MAAM,wBAAwB,aAAa,OAAO;AAAA;AAAA;AAAA;AAAA,EAIrD,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA,EAClC,UAAUA,IAAE,MAAM,mBAAmB;AACzC,CAAC;AAIM,MAAM,sCAAsC,mBAAmB,OAAO;AAAA,EACzE,QAAQA,IAAE,QAAQ,oCAAoC;AAC1D,CAAC;AAKM,MAAM,aAAaA,IACrB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIhB,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,EAIlC,aAAaA,IACR,OAAO;AAAA,IACR,MAAMA,IAAE,QAAQ,QAAQ;AAAA,IACxB,YAAYA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA,EACpD,CAAA,EACI,YAAa;AACtB,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyB,uBAAuB,OAAO;AAAA,EAChE,QAAQA,IAAE,QAAQ,YAAY;AAClC,CAAC;AAIM,MAAM,wBAAwB,sBAAsB,OAAO;AAAA,EAC9D,OAAOA,IAAE,MAAM,UAAU;AAC7B,CAAC;AAIM,MAAM,uBAAuB,aAAa,OAAO;AAAA,EACpD,SAASA,IAAE,MAAMA,IAAE,MAAM,CAAC,mBAAmB,oBAAoB,sBAAsB,CAAC,CAAC;AAAA,EACzF,SAASA,IAAE,QAAO,EAAG,QAAQ,KAAK,EAAE,SAAU;AAClD,CAAC;AAIgD,qBAAqB,GAAG,aAAa,OAAO;AAAA,EACzF,YAAYA,IAAE,QAAS;AAC3B,CAAC,CAAC;AAIK,MAAM,wBAAwB,cAAc,OAAO;AAAA,EACtD,QAAQA,IAAE,QAAQ,YAAY;AAAA,EAC9B,QAAQ,wBAAwB,OAAO;AAAA,IACnC,MAAMA,IAAE,OAAQ;AAAA,IAChB,WAAWA,IAAE,SAASA,IAAE,OAAOA,IAAE,QAAO,CAAE,CAAC;AAAA,EACnD,CAAK;AACL,CAAC;AAIM,MAAM,oCAAoC,mBAAmB,OAAO;AAAA,EACvE,QAAQA,IAAE,QAAQ,kCAAkC;AACxD,CAAC;AAKM,MAAM,qBAAqBA,IAAE,KAAK;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAIM,MAAM,wBAAwB,cAAc,OAAO;AAAA,EACtD,QAAQA,IAAE,QAAQ,kBAAkB;AAAA,EACpC,QAAQ,wBAAwB,OAAO;AAAA;AAAA;AAAA;AAAA,IAInC,OAAO;AAAA,EACf,CAAK;AACL,CAAC;AAIM,MAAM,mCAAmC,mBAAmB,OAAO;AAAA,EACtE,QAAQA,IAAE,QAAQ,uBAAuB;AAAA,EACzC,QAAQ,6BAA6B,OAAO;AAAA;AAAA;AAAA;AAAA,IAIxC,OAAO;AAAA;AAAA;AAAA;AAAA,IAIP,QAAQA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,IAI7B,MAAMA,IAAE,QAAS;AAAA,EACzB,CAAK;AACL,CAAC;AAKM,MAAM,kBAAkBA,IAC1B,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,MAAMA,IAAE,OAAQ,EAAC,SAAU;AAC/B,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyBA,IACjC,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,OAAOA,IAAE,SAASA,IAAE,MAAM,eAAe,CAAC;AAAA;AAAA;AAAA;AAAA,EAI1C,cAAcA,IAAE,SAASA,IAAE,OAAM,EAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIjD,eAAeA,IAAE,SAASA,IAAE,OAAM,EAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIlD,sBAAsBA,IAAE,SAASA,IAAE,OAAM,EAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7D,CAAC,EACI,YAAa;AAIX,MAAM,wBAAwBA,IAChC,OAAO;AAAA,EACR,MAAMA,IAAE,KAAK,CAAC,QAAQ,WAAW,CAAC;AAAA,EAClC,SAASA,IAAE,MAAM,CAAC,mBAAmB,kBAAkB,CAAC;AAC5D,CAAC,EACI,YAAa;AAIX,MAAM,6BAA6B,cAAc,OAAO;AAAA,EAC3D,QAAQA,IAAE,QAAQ,wBAAwB;AAAA,EAC1C,QAAQ,wBAAwB,OAAO;AAAA,IACnC,UAAUA,IAAE,MAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA,IAIvC,cAAcA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,IAInC,gBAAgBA,IAAE,SAASA,IAAE,KAAK,CAAC,QAAQ,cAAc,YAAY,CAAC,CAAC;AAAA,IACvE,aAAaA,IAAE,SAASA,IAAE,OAAM,CAAE;AAAA;AAAA;AAAA;AAAA,IAIlC,WAAWA,IAAE,OAAQ,EAAC,IAAK;AAAA,IAC3B,eAAeA,IAAE,SAASA,IAAE,MAAMA,IAAE,OAAM,CAAE,CAAC;AAAA;AAAA;AAAA;AAAA,IAI7C,UAAUA,IAAE,SAASA,IAAE,OAAO,CAAE,CAAA,EAAE,aAAa;AAAA;AAAA;AAAA;AAAA,IAI/C,kBAAkBA,IAAE,SAAS,sBAAsB;AAAA,EAC3D,CAAK;AACL,CAAC;AAIM,MAAM,4BAA4B,aAAa,OAAO;AAAA;AAAA;AAAA;AAAA,EAIzD,OAAOA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,EAIjB,YAAYA,IAAE,SAASA,IAAE,KAAK,CAAC,WAAW,gBAAgB,WAAW,CAAC,EAAE,GAAGA,IAAE,OAAQ,CAAA,CAAC;AAAA,EACtF,MAAMA,IAAE,KAAK,CAAC,QAAQ,WAAW,CAAC;AAAA,EAClC,SAASA,IAAE,mBAAmB,QAAQ;AAAA,IAClC;AAAA,IACA;AAAA,EACR,CAAK;AACL,CAAC;AAKM,MAAM,0BAA0BA,IAClC,OAAO;AAAA,EACR,MAAMA,IAAE,QAAQ,cAAc;AAAA;AAAA;AAAA;AAAA,EAI9B,KAAKA,IAAE,OAAQ;AACnB,CAAC,EACI,YAAa;AAIX,MAAM,wBAAwBA,IAChC,OAAO;AAAA,EACR,MAAMA,IAAE,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA,EAI5B,MAAMA,IAAE,OAAQ;AACpB,CAAC,EACI,YAAa;AAIX,MAAM,wBAAwB,cAAc,OAAO;AAAA,EACtD,QAAQA,IAAE,QAAQ,qBAAqB;AAAA,EACvC,QAAQ,wBAAwB,OAAO;AAAA,IACnC,KAAKA,IAAE,MAAM,CAAC,uBAAuB,uBAAuB,CAAC;AAAA;AAAA;AAAA;AAAA,IAI7D,UAAUA,IACL,OAAO;AAAA;AAAA;AAAA;AAAA,MAIR,MAAMA,IAAE,OAAQ;AAAA;AAAA;AAAA;AAAA,MAIhB,OAAOA,IAAE,OAAQ;AAAA,IACpB,CAAA,EACI,YAAa;AAAA,EAC1B,CAAK;AACL,CAAC;AAIM,MAAM,uBAAuB,aAAa,OAAO;AAAA,EACpD,YAAYA,IACP,OAAO;AAAA;AAAA;AAAA;AAAA,IAIR,QAAQA,IAAE,MAAMA,IAAE,QAAQ,EAAE,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA,IAInC,OAAOA,IAAE,SAASA,IAAE,OAAM,EAAG,KAAK;AAAA;AAAA;AAAA;AAAA,IAIlC,SAASA,IAAE,SAASA,IAAE,QAAO,CAAE;AAAA,EAClC,CAAA,EACI,YAAa;AACtB,CAAC;AAKM,MAAM,aAAaA,IACrB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIR,KAAKA,IAAE,SAAS,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA,EAIpC,MAAMA,IAAE,SAASA,IAAE,OAAM,CAAE;AAC/B,CAAC,EACI,YAAa;AAIX,MAAM,yBAAyB,cAAc,OAAO;AAAA,EACvD,QAAQA,IAAE,QAAQ,YAAY;AAClC,CAAC;AAIM,MAAM,wBAAwB,aAAa,OAAO;AAAA,EACrD,OAAOA,IAAE,MAAM,UAAU;AAC7B,CAAC;AAIM,MAAM,qCAAqC,mBAAmB,OAAO;AAAA,EACxE,QAAQA,IAAE,QAAQ,kCAAkC;AACxD,CAAC;AAEkCA,IAAE,MAAM;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACuCA,IAAE,MAAM;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACiCA,IAAE,MAAM;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAEkCA,IAAE,MAAM;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACuCA,IAAE,MAAM;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACiCA,IAAE,MAAM;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACM,MAAM,iBAAiB,MAAM;AAAA,EAChC,YAAY,MAAM,SAAS,MAAM;AAC7B,UAAM,aAAa,IAAI,KAAK,OAAO,EAAE;AACrC,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACpB;AACA;ACr+BO,MAAM,+BAA+B;AAKrC,MAAM,SAAS;AAAA,EAClB,YAAY,UAAU;AAClB,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,mBAAmB,oBAAI,IAAK;AACjC,SAAK,kCAAkC,oBAAI,IAAK;AAChD,SAAK,wBAAwB,oBAAI,IAAK;AACtC,SAAK,oBAAoB,oBAAI,IAAK;AAClC,SAAK,oBAAoB,oBAAI,IAAK;AAClC,SAAK,uBAAuB,6BAA6B,CAAC,iBAAiB;AACvE,YAAM,aAAa,KAAK,gCAAgC,IAAI,aAAa,OAAO,SAAS;AACzF,qBAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,MAAM,aAAa,OAAO,MAAM;AAAA,IAC/G,CAAS;AACD,SAAK,uBAAuB,4BAA4B,CAAC,iBAAiB;AACtE,WAAK,YAAY,YAAY;AAAA,IACzC,CAAS;AACD,SAAK;AAAA,MAAkB;AAAA;AAAA,MAEvB,CAAC,cAAc,CAAA;AAAA,IAAG;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,QAAQ,WAAW;AACrB,SAAK,aAAa;AAClB,SAAK,WAAW,UAAU,MAAM;AAC5B,WAAK,SAAU;AAAA,IAClB;AACD,SAAK,WAAW,UAAU,CAAC,UAAU;AACjC,WAAK,SAAS,KAAK;AAAA,IACtB;AACD,SAAK,WAAW,YAAY,CAAC,YAAY;AACrC,UAAI,EAAE,YAAY,UAAU;AACxB,aAAK,YAAY,OAAO;AAAA,MACxC,WACqB,QAAQ,SAAS;AACtB,aAAK,WAAW,OAAO;AAAA,MACvC,OACiB;AACD,aAAK,gBAAgB,OAAO;AAAA,MAC5C;AAAA,IACS;AACD,UAAM,KAAK,WAAW,MAAO;AAAA,EACrC;AAAA,EACI,WAAW;AACP,QAAI/J;AACJ,UAAM,mBAAmB,KAAK;AAC9B,SAAK,oBAAoB,oBAAI,IAAK;AAClC,SAAK,kBAAkB,MAAO;AAC9B,SAAK,aAAa;AAClB,KAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,IAAI;AACrE,UAAM,QAAQ,IAAI,SAAS,UAAU,kBAAkB,mBAAmB;AAC1E,eAAW,WAAW,iBAAiB,UAAU;AAC7C,cAAQ,KAAK;AAAA,IACzB;AAAA,EACA;AAAA,EACI,SAAS,OAAO;AACZ,QAAIA;AACJ,KAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAAA,EACpF;AAAA,EACI,gBAAgB,cAAc;AAC1B,QAAIA;AACJ,UAAM,WAAWA,MAAK,KAAK,sBAAsB,IAAI,aAAa,MAAM,OAAO,QAAQA,QAAO,SAASA,MAAK,KAAK;AAEjH,QAAI,YAAY,QAAW;AACvB;AAAA,IACZ;AAEQ,YAAQ,QAAO,EACV,KAAK,MAAM,QAAQ,YAAY,CAAC,EAChC,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,2CAA2C,KAAK,EAAE,CAAC,CAAC;AAAA,EAC1G;AAAA,EACI,WAAW,SAAS;AAChB,QAAIA,KAAIG;AACR,UAAM,WAAWH,MAAK,KAAK,iBAAiB,IAAI,QAAQ,MAAM,OAAO,QAAQA,QAAO,SAASA,MAAK,KAAK;AACvG,QAAI,YAAY,QAAW;AACvB,OAACG,MAAK,KAAK,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK;AAAA,QAChE,SAAS;AAAA,QACT,IAAI,QAAQ;AAAA,QACZ,OAAO;AAAA,UACH,MAAM,UAAU;AAAA,UAChB,SAAS;AAAA,QACZ;AAAA,MACJ,CAAA,EAAE,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,qCAAqC,KAAK,EAAE,CAAC,CAAC;AAC1F;AAAA,IACZ;AACQ,UAAM,kBAAkB,IAAI,gBAAiB;AAC7C,SAAK,gCAAgC,IAAI,QAAQ,IAAI,eAAe;AAEpE,YAAQ,QAAO,EACV,KAAK,MAAM,QAAQ,SAAS,EAAE,QAAQ,gBAAgB,QAAQ,CAAC,EAC/D,KAAK,CAAC,WAAW;AAClB,UAAIH;AACJ,UAAI,gBAAgB,OAAO,SAAS;AAChC;AAAA,MAChB;AACY,cAAQA,MAAK,KAAK,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK;AAAA,QACvE;AAAA,QACA,SAAS;AAAA,QACT,IAAI,QAAQ;AAAA,MAC5B,CAAa;AAAA,IACJ,GAAE,CAAC,UAAU;AACV,UAAIA,KAAIG;AACR,UAAI,gBAAgB,OAAO,SAAS;AAChC;AAAA,MAChB;AACY,cAAQH,MAAK,KAAK,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK;AAAA,QACvE,SAAS;AAAA,QACT,IAAI,QAAQ;AAAA,QACZ,OAAO;AAAA,UACH,MAAM,OAAO,cAAc,MAAM,MAAM,CAAC,IAClC,MAAM,MAAM,IACZ,UAAU;AAAA,UAChB,UAAUG,MAAK,MAAM,aAAa,QAAQA,QAAO,SAASA,MAAK;AAAA,QAClE;AAAA,MACjB,CAAa;AAAA,IACJ,CAAA,EACI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,4BAA4B,KAAK,EAAE,CAAC,CAAC,EAC9E,QAAQ,MAAM;AACf,WAAK,gCAAgC,OAAO,QAAQ,EAAE;AAAA,IAClE,CAAS;AAAA,EACT;AAAA,EACI,YAAY,cAAc;AACtB,UAAM,EAAE,eAAe,GAAG,OAAQ,IAAG,aAAa;AAClD,UAAM,UAAU,KAAK,kBAAkB,IAAI,OAAO,aAAa,CAAC;AAChE,QAAI,YAAY,QAAW;AACvB,WAAK,SAAS,IAAI,MAAM,0DAA0D,KAAK,UAAU,YAAY,CAAC,EAAE,CAAC;AACjH;AAAA,IACZ;AACQ,YAAQ,MAAM;AAAA,EACtB;AAAA,EACI,YAAY,UAAU;AAClB,UAAM,YAAY,SAAS;AAC3B,UAAM,UAAU,KAAK,kBAAkB,IAAI,OAAO,SAAS,CAAC;AAC5D,QAAI,YAAY,QAAW;AACvB,WAAK,SAAS,IAAI,MAAM,kDAAkD,KAAK,UAAU,QAAQ,CAAC,EAAE,CAAC;AACrG;AAAA,IACZ;AACQ,SAAK,kBAAkB,OAAO,OAAO,SAAS,CAAC;AAC/C,SAAK,kBAAkB,OAAO,OAAO,SAAS,CAAC;AAC/C,QAAI,YAAY,UAAU;AACtB,cAAQ,QAAQ;AAAA,IAC5B,OACa;AACD,YAAM,QAAQ,IAAI,SAAS,SAAS,MAAM,MAAM,SAAS,MAAM,SAAS,SAAS,MAAM,IAAI;AAC3F,cAAQ,KAAK;AAAA,IACzB;AAAA,EACA;AAAA,EACI,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,QAAQ;AACV,QAAIH;AACJ,YAAQA,MAAK,KAAK,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG;EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,QAAQ,SAAS,cAAc,SAAS;AACpC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAIA,KAAIG,KAAIE,KAAID;AAChB,UAAI,CAAC,KAAK,YAAY;AAClB,eAAO,IAAI,MAAM,eAAe,CAAC;AACjC;AAAA,MAChB;AACY,YAAMJ,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,+BAA+B,MAAM;AACnG,aAAK,0BAA0B,QAAQ,MAAM;AAAA,MAC7D;AACY,OAACG,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,eAAgB;AAChI,YAAM,YAAY,KAAK;AACvB,YAAM,iBAAiB;AAAA,QACnB,GAAG;AAAA,QACH,SAAS;AAAA,QACT,IAAI;AAAA,MACP;AACD,UAAI,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY;AACtE,aAAK,kBAAkB,IAAI,WAAW,QAAQ,UAAU;AACxD,uBAAe,SAAS;AAAA,UACpB,GAAG,QAAQ;AAAA,UACX,OAAO,EAAE,eAAe,UAAW;AAAA,QACtC;AAAA,MACjB;AACY,UAAI,YAAY;AAChB,WAAK,kBAAkB,IAAI,WAAW,CAAC,aAAa;AAChD,YAAIH;AACJ,YAAI,cAAc,QAAW;AACzB,uBAAa,SAAS;AAAA,QAC1C;AACgB,aAAKA,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS;AACzH;AAAA,QACpB;AACgB,YAAI,oBAAoB,OAAO;AAC3B,iBAAO,OAAO,QAAQ;AAAA,QAC1C;AACgB,YAAI;AACA,gBAAM,SAAS,aAAa,MAAM,SAAS,MAAM;AACjD,kBAAQ,MAAM;AAAA,QAClC,SACuB,OAAO;AACV,iBAAO,KAAK;AAAA,QAChC;AAAA,MACA,CAAa;AACD,YAAM,SAAS,CAAC,WAAW;AACvB,YAAIA;AACJ,aAAK,kBAAkB,OAAO,SAAS;AACvC,aAAK,kBAAkB,OAAO,SAAS;AACvC,SAACA,MAAK,KAAK,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK;AAAA,UAChE,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,QAAQ;AAAA,YACJ,WAAW;AAAA,YACX,QAAQ,OAAO,MAAM;AAAA,UACxB;AAAA,QACJ,CAAA,EAAE,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,gCAAgC,KAAK,EAAE,CAAC,CAAC;AACrF,eAAO,MAAM;AAAA,MAChB;AACD,OAACK,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,iBAAiB,SAAS,MAAM;AAC5I,YAAIL;AACJ,YAAI,cAAc,QAAW;AACzB,uBAAa,SAAS;AAAA,QAC1C;AACgB,gBAAQA,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,MAAM;AAAA,MAC7I,CAAa;AACD,YAAM,WAAWI,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,aAAa,QAAQA,QAAO,SAASA,MAAK;AAC1H,kBAAY,WAAW,MAAM,OAAO,IAAI,SAAS,UAAU,gBAAgB,qBAAqB;AAAA,QAC5F;AAAA,MAChB,CAAa,CAAC,GAAG,OAAO;AACZ,WAAK,WAAW,KAAK,cAAc,EAAE,MAAM,CAAC,UAAU;AAClD,YAAI,cAAc,QAAW;AACzB,uBAAa,SAAS;AAAA,QAC1C;AACgB,eAAO,KAAK;AAAA,MAC5B,CAAa;AAAA,IACb,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,aAAa,cAAc;AAC7B,QAAI,CAAC,KAAK,YAAY;AAClB,YAAM,IAAI,MAAM,eAAe;AAAA,IAC3C;AACQ,SAAK,6BAA6B,aAAa,MAAM;AACrD,UAAM,sBAAsB;AAAA,MACxB,GAAG;AAAA,MACH,SAAS;AAAA,IACZ;AACD,UAAM,KAAK,WAAW,KAAK,mBAAmB;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,kBAAkB,eAAe,SAAS;AACtC,UAAM,SAAS,cAAc,MAAM,OAAO;AAC1C,SAAK,+BAA+B,MAAM;AAC1C,SAAK,iBAAiB,IAAI,QAAQ,CAAC,SAAS,UAAU,QAAQ,QAAQ,QAAQ,cAAc,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC;AAAA,EAC3H;AAAA;AAAA;AAAA;AAAA,EAII,qBAAqB,QAAQ;AACzB,SAAK,iBAAiB,OAAO,MAAM;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAII,2BAA2B,QAAQ;AAC/B,QAAI,KAAK,iBAAiB,IAAI,MAAM,GAAG;AACnC,YAAM,IAAI,MAAM,yBAAyB,MAAM,4CAA4C;AAAA,IACvG;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,uBAAuB,oBAAoB,SAAS;AAChD,SAAK,sBAAsB,IAAI,mBAAmB,MAAM,OAAO,OAAO,CAAC,iBAAiB,QAAQ,QAAQ,QAAQ,mBAAmB,MAAM,YAAY,CAAC,CAAC,CAAC;AAAA,EAChK;AAAA;AAAA;AAAA;AAAA,EAII,0BAA0B,QAAQ;AAC9B,SAAK,sBAAsB,OAAO,MAAM;AAAA,EAChD;AACA;AACO,SAAS,kBAAkB,MAAM,YAAY;AAChD,SAAO,OAAO,QAAQ,UAAU,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AAC5D,QAAI,SAAS,OAAO,UAAU,UAAU;AACpC,UAAI,GAAG,IAAI,IAAI,GAAG,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,MAAO,IAAG;AAAA,IAC9D,OACa;AACD,UAAI,GAAG,IAAI;AAAA,IACvB;AACQ,WAAO;AAAA,EACf,GAAO,EAAE,GAAG,MAAM;AAClB;AC/RO,MAAM8H,gBAAe,SAAS;AAAA;AAAA;AAAA;AAAA,EAIjC,YAAY,aAAa,SAAS;AAC9B,QAAIlI;AACJ,UAAM,OAAO;AACb,SAAK,cAAc;AACnB,SAAK,iBAAiBA,MAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,kBAAkB,QAAQA,QAAO,SAASA,MAAK,CAAE;AAAA,EAC9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,qBAAqB,cAAc;AAC/B,QAAI,KAAK,WAAW;AAChB,YAAM,IAAI,MAAM,4DAA4D;AAAA,IACxF;AACQ,SAAK,gBAAgB,kBAAkB,KAAK,eAAe,YAAY;AAAA,EAC/E;AAAA,EACI,iBAAiB,YAAY,QAAQ;AACjC,QAAIA;AACJ,QAAI,GAAGA,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU,IAAI;AACxF,YAAM,IAAI,MAAM,2BAA2B,UAAU,kBAAkB,MAAM,GAAG;AAAA,IAC5F;AAAA,EACA;AAAA,EACI,MAAM,QAAQ,WAAW;AACrB,UAAM,MAAM,QAAQ,SAAS;AAC7B,QAAI;AACA,YAAM,SAAS,MAAM,KAAK,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,UACJ,iBAAiB;AAAA,UACjB,cAAc,KAAK;AAAA,UACnB,YAAY,KAAK;AAAA,QACpB;AAAA,MACJ,GAAE,sBAAsB;AACzB,UAAI,WAAW,QAAW;AACtB,cAAM,IAAI,MAAM,0CAA0C,MAAM,EAAE;AAAA,MAClF;AACY,UAAI,CAAC,4BAA4B,SAAS,OAAO,eAAe,GAAG;AAC/D,cAAM,IAAI,MAAM,+CAA+C,OAAO,eAAe,EAAE;AAAA,MACvG;AACY,WAAK,sBAAsB,OAAO;AAClC,WAAK,iBAAiB,OAAO;AAC7B,WAAK,gBAAgB,OAAO;AAC5B,YAAM,KAAK,aAAa;AAAA,QACpB,QAAQ;AAAA,MACxB,CAAa;AAAA,IACb,SACe,OAAO;AAEV,WAAK,KAAK,MAAO;AACjB,YAAM;AAAA,IAClB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAII,wBAAwB;AACpB,WAAO,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAII,mBAAmB;AACf,WAAO,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAII,kBAAkB;AACd,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,0BAA0B,QAAQ;AAC9B,QAAIA,KAAIG,KAAIE,KAAID,KAAIG;AACpB,YAAQ,QAAM;AAAA,MACV,KAAK;AACD,YAAI,GAAGP,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU;AACpF,gBAAM,IAAI,MAAM,iDAAiD,MAAM,GAAG;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AACD,YAAI,GAAGG,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU;AACpF,gBAAM,IAAI,MAAM,iDAAiD,MAAM,GAAG;AAAA,QAC9F;AACgB;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,YAAI,GAAGE,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,YAAY;AACtF,gBAAM,IAAI,MAAM,mDAAmD,MAAM,GAAG;AAAA,QAChG;AACgB,YAAI,WAAW,yBACX,CAAC,KAAK,oBAAoB,UAAU,WAAW;AAC/C,gBAAM,IAAI,MAAM,gEAAgE,MAAM,GAAG;AAAA,QAC7G;AACgB;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AACD,YAAI,GAAGD,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ;AAClF,gBAAM,IAAI,MAAM,+CAA+C,MAAM,GAAG;AAAA,QAC5F;AACgB;AAAA,MACJ,KAAK;AACD,YAAI,GAAGG,MAAK,KAAK,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU;AACpF,gBAAM,IAAI,MAAM,iDAAiD,MAAM,GAAG;AAAA,QAC9F;AACgB;AAAA,IAOhB;AAAA,EACA;AAAA,EACI,6BAA6B,QAAQ;AACjC,QAAIP;AACJ,YAAQ,QAAM;AAAA,MACV,KAAK;AACD,YAAI,GAAGA,MAAK,KAAK,cAAc,WAAW,QAAQA,QAAO,SAAS,SAASA,IAAG,cAAc;AACxF,gBAAM,IAAI,MAAM,0EAA0E,MAAM,GAAG;AAAA,QACvH;AACgB;AAAA,IAUhB;AAAA,EACA;AAAA,EACI,+BAA+B,QAAQ;AACnC,YAAQ,QAAM;AAAA,MACV,KAAK;AACD,YAAI,CAAC,KAAK,cAAc,UAAU;AAC9B,gBAAM,IAAI,MAAM,6DAA6D,MAAM,GAAG;AAAA,QAC1G;AACgB;AAAA,MACJ,KAAK;AACD,YAAI,CAAC,KAAK,cAAc,OAAO;AAC3B,gBAAM,IAAI,MAAM,0DAA0D,MAAM,GAAG;AAAA,QACvG;AACgB;AAAA,IAIhB;AAAA,EACA;AAAA,EACI,MAAM,KAAK,SAAS;AAChB,WAAO,KAAK,QAAQ,EAAE,QAAQ,OAAQ,GAAE,mBAAmB,OAAO;AAAA,EAC1E;AAAA,EACI,MAAM,SAAS,QAAQ,SAAS;AAC5B,WAAO,KAAK,QAAQ,EAAE,QAAQ,uBAAuB,OAAQ,GAAE,sBAAsB,OAAO;AAAA,EACpG;AAAA,EACI,MAAM,gBAAgBsL,QAAO,SAAS;AAClC,WAAO,KAAK,QAAQ,EAAE,QAAQ,oBAAoB,QAAQ,EAAE,OAAAA,OAAO,EAAA,GAAI,mBAAmB,OAAO;AAAA,EACzG;AAAA,EACI,MAAM,UAAU,QAAQ,SAAS;AAC7B,WAAO,KAAK,QAAQ,EAAE,QAAQ,eAAe,OAAQ,GAAE,uBAAuB,OAAO;AAAA,EAC7F;AAAA,EACI,MAAM,YAAY,QAAQ,SAAS;AAC/B,WAAO,KAAK,QAAQ,EAAE,QAAQ,gBAAgB,OAAQ,GAAE,yBAAyB,OAAO;AAAA,EAChG;AAAA,EACI,MAAM,cAAc,QAAQ,SAAS;AACjC,WAAO,KAAK,QAAQ,EAAE,QAAQ,kBAAkB,OAAQ,GAAE,2BAA2B,OAAO;AAAA,EACpG;AAAA,EACI,MAAM,sBAAsB,QAAQ,SAAS;AACzC,WAAO,KAAK,QAAQ,EAAE,QAAQ,4BAA4B,OAAQ,GAAE,mCAAmC,OAAO;AAAA,EACtH;AAAA,EACI,MAAM,aAAa,QAAQ,SAAS;AAChC,WAAO,KAAK,QAAQ,EAAE,QAAQ,kBAAkB,OAAQ,GAAE,0BAA0B,OAAO;AAAA,EACnG;AAAA,EACI,MAAM,kBAAkB,QAAQ,SAAS;AACrC,WAAO,KAAK,QAAQ,EAAE,QAAQ,uBAAuB,OAAQ,GAAE,mBAAmB,OAAO;AAAA,EACjG;AAAA,EACI,MAAM,oBAAoB,QAAQ,SAAS;AACvC,WAAO,KAAK,QAAQ,EAAE,QAAQ,yBAAyB,OAAQ,GAAE,mBAAmB,OAAO;AAAA,EACnG;AAAA,EACI,MAAM,SAAS,QAAQ,eAAe,sBAAsB,SAAS;AACjE,WAAO,KAAK,QAAQ,EAAE,QAAQ,cAAc,OAAQ,GAAE,cAAc,OAAO;AAAA,EACnF;AAAA,EACI,MAAM,UAAU,QAAQ,SAAS;AAC7B,WAAO,KAAK,QAAQ,EAAE,QAAQ,cAAc,OAAQ,GAAE,uBAAuB,OAAO;AAAA,EAC5F;AAAA,EACI,MAAM,uBAAuB;AACzB,WAAO,KAAK,aAAa,EAAE,QAAQ,mCAAkC,CAAE;AAAA,EAC/E;AACA;AC7NO,MAAM,iBAAiB,MAAM;AAAA,EAChC,YAAY,MAAM,SAAS,OAAO;AAC9B,UAAM,cAAc,OAAO,EAAE;AAC7B,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA,EACrB;AACA;AAKO,MAAM,mBAAmB;AAAA,EAC5B,YAAY,KAAK,MAAM;AACnB,SAAK,OAAO;AACZ,SAAK,mBAAmB,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AACzE,SAAK,eAAe,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAAA,EAC7E;AAAA,EACI,QAAQ;AACJ,QAAI,KAAK,cAAc;AACnB,YAAM,IAAI,MAAM,6GAA6G;AAAA,IACzI;AACQ,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,WAAK,eAAe,IAAI,YAAY,KAAK,KAAK,MAAM,KAAK,gBAAgB;AACzE,WAAK,mBAAmB,IAAI,gBAAiB;AAC7C,WAAK,aAAa,UAAU,CAAC,UAAU;AACnC,YAAItL;AACJ,cAAM,QAAQ,IAAI,SAAS,MAAM,MAAM,MAAM,SAAS,KAAK;AAC3D,eAAO,KAAK;AACZ,SAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAAA,MAC/E;AACD,WAAK,aAAa,SAAS,MAAM;AAAA,MAEhC;AACD,WAAK,aAAa,iBAAiB,YAAY,CAAC,UAAU;AACtD,YAAIA;AACJ,cAAM,eAAe;AACrB,YAAI;AACA,eAAK,YAAY,IAAI,IAAI,aAAa,MAAM,KAAK,IAAI;AACrD,cAAI,KAAK,UAAU,WAAW,KAAK,KAAK,QAAQ;AAC5C,kBAAM,IAAI,MAAM,qDAAqD,KAAK,UAAU,MAAM,EAAE;AAAA,UACpH;AAAA,QACA,SACuB,OAAO;AACV,iBAAO,KAAK;AACZ,WAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAC5E,eAAK,KAAK,MAAO;AACjB;AAAA,QACpB;AACgB,gBAAS;AAAA,MACzB,CAAa;AACD,WAAK,aAAa,YAAY,CAAC,UAAU;AACrC,YAAIA,KAAIG;AACR,cAAM,eAAe;AACrB,YAAI;AACJ,YAAI;AACA,oBAAU,qBAAqB,MAAM,KAAK,MAAM,aAAa,IAAI,CAAC;AAAA,QACtF,SACuB,OAAO;AACV,WAACH,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAC5E;AAAA,QACpB;AACgB,SAACG,MAAK,KAAK,eAAe,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,OAAO;AAAA,MACnF;AAAA,IACb,CAAS;AAAA,EACT;AAAA,EACI,MAAM,QAAQ;AACV,QAAIH,KAAIG,KAAIE;AACZ,KAACL,MAAK,KAAK,sBAAsB,QAAQA,QAAO,SAAS,SAASA,IAAG,MAAO;AAC5E,KAACG,MAAK,KAAK,kBAAkB,QAAQA,QAAO,SAAS,SAASA,IAAG,MAAO;AACxE,KAACE,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,IAAI;AAAA,EAC7E;AAAA,EACI,MAAM,KAAK,SAAS;AAChB,QAAIL,KAAIG,KAAIE;AACZ,QAAI,CAAC,KAAK,WAAW;AACjB,YAAM,IAAI,MAAM,eAAe;AAAA,IAC3C;AACQ,QAAI;AACA,YAAM,UAAU,IAAI,SAASL,MAAK,KAAK,kBAAkB,QAAQA,QAAO,SAAS,SAASA,IAAG,OAAO;AACpG,cAAQ,IAAI,gBAAgB,kBAAkB;AAC9C,YAAM,OAAO;AAAA,QACT,GAAG,KAAK;AAAA,QACR,QAAQ;AAAA,QACR;AAAA,QACA,MAAM,KAAK,UAAU,OAAO;AAAA,QAC5B,SAASG,MAAK,KAAK,sBAAsB,QAAQA,QAAO,SAAS,SAASA,IAAG;AAAA,MAChF;AACD,YAAM,WAAW,MAAM,MAAM,KAAK,WAAW,IAAI;AACjD,UAAI,CAAC,SAAS,IAAI;AACd,cAAMwI,QAAO,MAAM,SAAS,KAAI,EAAG,MAAM,MAAM,IAAI;AACnD,cAAM,IAAI,MAAM,mCAAmC,SAAS,MAAM,MAAMA,KAAI,EAAE;AAAA,MAC9F;AAAA,IACA,SACe,OAAO;AACV,OAACtI,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAC5E,YAAM;AAAA,IAClB;AAAA,EACA;AACA;AC/FO,MAAM,WAAW;AAAA,EACpB,OAAO,OAAO;AACV,SAAK,UAAU,KAAK,UAAU,OAAO,OAAO,CAAC,KAAK,SAAS,KAAK,CAAC,IAAI;AAAA,EAC7E;AAAA,EACI,cAAc;AACV,QAAI,CAAC,KAAK,SAAS;AACf,aAAO;AAAA,IACnB;AACQ,UAAM,QAAQ,KAAK,QAAQ,QAAQ,IAAI;AACvC,QAAI,UAAU,IAAI;AACd,aAAO;AAAA,IACnB;AACQ,UAAM,OAAO,KAAK,QAAQ,SAAS,QAAQ,GAAG,KAAK;AACnD,SAAK,UAAU,KAAK,QAAQ,SAAS,QAAQ,CAAC;AAC9C,WAAO,mBAAmB,IAAI;AAAA,EACtC;AAAA,EACI,QAAQ;AACJ,SAAK,UAAU;AAAA,EACvB;AACA;AACO,SAAS,mBAAmB,MAAM;AACrC,SAAO,qBAAqB,MAAM,KAAK,MAAM,IAAI,CAAC;AACtD;AACO,SAAS,iBAAiB,SAAS;AACtC,SAAO,KAAK,UAAU,OAAO,IAAI;AACrC;ACtBa,MAAA,6BAA6BkL,UAAQ,aAAa,UACzD;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAAA;AAAA,EAEI,CAAC,QAAQ,WAAW,QAAQ,SAAS,QAAQ,MAAM;AAAA;AAIpD,SAAS,wBAAwB;AACpC,QAAM,MAAM,CAAC;AACb,aAAW,OAAO,4BAA4B;AACpC,UAAA,QAAQA,UAAQ,IAAI,GAAG;AAC7B,QAAI,UAAU,QAAW;AACrB;AAAA,IAAA;AAEA,QAAA,MAAM,WAAW,IAAI,GAAG;AAExB;AAAA,IAAA;AAEJ,QAAI,GAAG,IAAI;AAAA,EAAA;AAER,SAAA;AACX;AAMO,MAAM,qBAAqB;AAAA,EAC9B,YAAY,QAAQ;AACX,SAAA,mBAAmB,IAAI,gBAAgB;AACvC,SAAA,cAAc,IAAI,WAAW;AAClC,SAAK,gBAAgB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,MAAM,QAAQ;AACV,QAAI,KAAK,UAAU;AACT,YAAA,IAAI,MAAM,+GAA+G;AAAA,IAAA;AAEnI,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAIvL,KAAIG,KAAIE,KAAID,KAAIG,KAAID;AACxB,WAAK,WAAW,MAAM,KAAK,cAAc,UAAUN,MAAK,KAAK,cAAc,UAAU,QAAQA,QAAO,SAASA,MAAK,IAAI;AAAA,QAClH,MAAMG,MAAK,KAAK,cAAc,SAAS,QAAQA,QAAO,SAAS,EAAE,GAAG,sBAAsB,GAAG,GAAGA,IAAA,IAAO,sBAAsB;AAAA,QAC7H,OAAO,CAAC,QAAQ,SAASE,MAAK,KAAK,cAAc,YAAY,QAAQA,QAAO,SAASA,MAAK,SAAS;AAAA,QACnG,OAAO;AAAA,QACP,QAAQ,KAAK,iBAAiB;AAAA,QAC9B,aAAakL,UAAQ,aAAa,WAAW,WAAW;AAAA,MAAA,CAC3D;AACD,WAAK,SAAS,GAAG,SAAS,CAAC,UAAU;AACjC,YAAIvL,MAAIG;AACJ,YAAA,MAAM,SAAS,cAAc;AAE5BH,WAAAA,OAAK,KAAK,aAAa,QAAQA,SAAO,SAAS,SAASA,KAAG,KAAK,IAAI;AACrE;AAAA,QAAA;AAEJ,eAAO,KAAK;AACXG,SAAAA,OAAK,KAAK,aAAa,QAAQA,SAAO,SAAS,SAASA,KAAG,KAAK,MAAM,KAAK;AAAA,MAAA,CAC/E;AACI,WAAA,SAAS,GAAG,SAAS,MAAM;AACpB,gBAAA;AAAA,MAAA,CACX;AACD,WAAK,SAAS,GAAG,SAAS,CAAC,UAAU;AAC7BH,YAAAA;AACJ,aAAK,WAAW;AACfA,SAAAA,OAAK,KAAK,aAAa,QAAQA,SAAO,SAAS,SAASA,KAAG,KAAK,IAAI;AAAA,MAAA,CACxE;AACD,OAACI,MAAK,KAAK,SAAS,WAAW,QAAQA,QAAO,SAAS,SAASA,IAAG,GAAG,SAAS,CAAC,UAAU;AAClFJ,YAAAA;AACHA,SAAAA,OAAK,KAAK,aAAa,QAAQA,SAAO,SAAS,SAASA,KAAG,KAAK,MAAM,KAAK;AAAA,MAAA,CAC/E;AACD,OAACO,MAAK,KAAK,SAAS,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,GAAG,QAAQ,CAAC,UAAU;AACjF,aAAA,YAAY,OAAO,KAAK;AAC7B,aAAK,kBAAkB;AAAA,MAAA,CAC1B;AACD,OAACD,MAAK,KAAK,SAAS,YAAY,QAAQA,QAAO,SAAS,SAASA,IAAG,GAAG,SAAS,CAAC,UAAU;AACnFN,YAAAA;AACHA,SAAAA,OAAK,KAAK,aAAa,QAAQA,SAAO,SAAS,SAASA,KAAG,KAAK,MAAM,KAAK;AAAA,MAAA,CAC/E;AAAA,IAAA,CACJ;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOL,IAAI,SAAS;AACT,QAAIA,KAAIG;AACR,YAAQA,OAAMH,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,YAAY,QAAQG,QAAO,SAASA,MAAK;AAAA,EAAA;AAAA,EAEvH,oBAAoB;AAChB,QAAIH,KAAIG;AACR,WAAO,MAAM;AACL,UAAA;AACM,cAAA,UAAU,KAAK,YAAY,YAAY;AAC7C,YAAI,YAAY,MAAM;AAClB;AAAA,QAAA;AAEH,SAAAH,MAAK,KAAK,eAAe,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,OAAO;AAAA,eAE7E,OAAO;AACT,SAAAG,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAAA,MAAA;AAAA,IAChF;AAAA,EACJ;AAAA,EAEJ,MAAM,QAAQ;AACV,SAAK,iBAAiB,MAAM;AAC5B,SAAK,WAAW;AAChB,SAAK,YAAY,MAAM;AAAA,EAAA;AAAA,EAE3B,KAAK,SAAS;AACH,WAAA,IAAI,QAAQ,CAAC,YAAY;AACxB,UAAAH;AACA,UAAA,GAAGA,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ;AACjE,cAAA,IAAI,MAAM,eAAe;AAAA,MAAA;AAE7B,YAAA,OAAO,iBAAiB,OAAO;AACrC,UAAI,KAAK,SAAS,MAAM,MAAM,IAAI,GAAG;AACzB,gBAAA;AAAA,MAAA,OAEP;AACD,aAAK,SAAS,MAAM,KAAK,SAAS,OAAO;AAAA,MAAA;AAAA,IAC7C,CACH;AAAA,EAAA;AAET;AACA,SAAS,aAAa;AAClB,SAAO,UAAUuL;AACrB;AClJA,MAAM,cAAc;AAIb,MAAM,yBAAyB;AAAA,EAClC,YAAY,KAAK;AACb,SAAK,OAAO;AAAA,EACpB;AAAA,EACI,QAAQ;AACJ,QAAI,KAAK,SAAS;AACd,YAAM,IAAI,MAAM,mHAAmH;AAAA,IAC/I;AACQ,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,WAAK,UAAU,IAAI,UAAU,KAAK,MAAM,WAAW;AACnD,WAAK,QAAQ,UAAU,CAAC,UAAU;AAC9B,YAAIvL;AACJ,cAAM,QAAQ,WAAW,QACnB,MAAM,QACN,IAAI,MAAM,oBAAoB,KAAK,UAAU,KAAK,CAAC,EAAE;AAC3D,eAAO,KAAK;AACZ,SAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAAA,MAC/E;AACD,WAAK,QAAQ,SAAS,MAAM;AACxB,gBAAS;AAAA,MACZ;AACD,WAAK,QAAQ,UAAU,MAAM;AACzB,YAAIA;AACJ,SAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,IAAI;AAAA,MACxE;AACD,WAAK,QAAQ,YAAY,CAAC,UAAU;AAChC,YAAIA,KAAIG;AACR,YAAI;AACJ,YAAI;AACA,oBAAU,qBAAqB,MAAM,KAAK,MAAM,MAAM,IAAI,CAAC;AAAA,QAC/E,SACuB,OAAO;AACV,WAACH,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,KAAK;AAC5E;AAAA,QACpB;AACgB,SAACG,MAAK,KAAK,eAAe,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM,OAAO;AAAA,MACnF;AAAA,IACb,CAAS;AAAA,EACT;AAAA,EACI,MAAM,QAAQ;AACV,QAAIH;AACJ,KAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,MAAO;AAAA,EAC3E;AAAA,EACI,KAAK,SAAS;AACV,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAIA;AACJ,UAAI,CAAC,KAAK,SAAS;AACf,eAAO,IAAI,MAAM,eAAe,CAAC;AACjC;AAAA,MAChB;AACY,OAACA,MAAK,KAAK,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,KAAK,UAAU,OAAO,CAAC;AACxF,cAAS;AAAA,IACrB,CAAS;AAAA,EACT;AACA;AC3DO,MAAM,wBAAN,MAAM,sBAAqB;AAAA,EAIxB,cAAc;AAFd;AAGD,SAAA,+BAAe,IAAI;AAAA,EAAA;AAAA,EAG1B,OAAc,cAAoC;AAC5C,QAAA,CAAC,sBAAqB,UAAU;AACb,4BAAA,WAAW,IAAI,sBAAqB;AAAA,IAAA;AAE3D,WAAO,sBAAqB;AAAA,EAAA;AAAA,EAGvB,WAAW,UAAwC;AACjD,WAAA,QAAQ,QAAQ,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC5C,WAAA,SAAS,IAAI,KAAK,KAAK;AAAA,IAAA,CAC7B;AAAA,EAAA;AAAA,EAGI,SAAS,KAAiC;AACxC,WAAA,KAAK,SAAS,IAAI,GAAG;AAAA,EAAA;AAAA,EAGvB,iBAAsC;AACpC,WAAA,IAAI,IAAI,KAAK,QAAQ;AAAA,EAAA;AAEhC;AA3BE,cADW,uBACI;AADV,IAAM,uBAAN;ACWP,IAAI,OAAO,WAAW,gBAAgB,aAAa;AACjD,aAAW,cAAc;AAC3B;AAGsB,eAAA,sBAAsB,YAAoB,cAA6B,gBAAqB;;AAChH,SAAO,MAAM,cAAc;AAC3B,SAAO,MAAM,qBAAqB,QAAQ,QAAQ,EAAE;AAC7C,SAAA,MAAM,oCAAoC,UAAU,EAAE;AAGzD,MAAA;AACA,MAAA;AAEJ,MAAI,aAAa,cAAc,SAAS,aAAa,KAAK;AACxD,WAAO,MAAM,iCAAiC,aAAa,GAAG,EAAE;AAChE,UAAM,MAAM,IAAI,IAAI,aAAa,GAAG;AAoCpC,QAAI,aAAa,SAAQ;AACjB,YAAA,UAAU,qBAAqB,YAAY,EAAE,SAAS,aAAa,OAAO,KAAK,aAAa;AAC5F,YAAA,kBACJ,QAAQ,aAAa,UAAU,EAAE,GAAG,gBAAgB,kBAAkB,QAAA,IAAY;AACpF,YAAM,aAAa,sBAAsB;AACnC,YAAA,gBAAgB,IAAI,qBAAqB;AAAA,QAC7C;AAAA,QACA,MAAM,aAAa,QAAQ,CAAC;AAAA,QAC5B,KAAK,EAAE,GAAG,YAAY,GAAG,gBAAgB;AAAA,MAAA,CAC1C;AACD,mBAAa,IAAIkI,QAAO,EAAE,MAAM,cAAc,SAAS,WAAW,EAAE,cAAc,CAAA,GAAI;AAElF,UAAA;AACI,cAAA,WAAW,QAAQ,aAAa;AAAA,eAC/B,OAAO;AACP,eAAA,MAAM,IAAI,UAAU,yEAAyE,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK,CAAC,EAAE;AAAA,MAAA;AAAA,IAC9J;AAGE,QAAA;AACU,kBAAA,IAAI,mBAAmB,GAAG;AACtC,aAAO,MAAM,+CAA+C,aAAa,GAAG,EAAE;AAAA,aACvE,OAAO;AACP,aAAA,MAAM,mCAAmC,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK,CAAC,EAAE;AAClG,YAAA;AAAA,IAAA;AAAA,EAEC,WAAA,aAAa,cAAc,eAAe,aAAa,KAAK;AACrE,WAAO,MAAM,uCAAuC,aAAa,GAAG,EAAE;AAElE,QAAA;AACF,YAAM,MAAM,IAAI,IAAI,aAAa,GAAG;AACxB,kBAAA,IAAI,yBAAyB,GAAG;AAC5C,aAAO,MAAM,wCAAwC,aAAa,GAAG,EAAE;AAAA,aAChE,OAAO;AACP,aAAA,MAAM,yCAAyC,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK,CAAC,EAAE;AACxG,YAAA;AAAA,IAAA;AAAA,EAEC,WAAA,aAAa,cAAc,aAAa,aAAa,SAAS;AAGjE,UAAA,UAAU,qBAAqB,YAAY,EAAE,SAAS,aAAa,OAAO,KAAK,aAAa;AAC5F,UAAA,kBACJ,QAAQ,aAAa,UAAU,EAAE,GAAG,aAAa,KAAK,kBAAkB,QAAQ,IAAI,aAAa;AACnG,UAAM,aAAa,sBAAsB;AAGzC,gBAAY,IAAI,qBAAqB;AAAA,MACnC;AAAA,MACA,MAAM,aAAa,QAAQ,CAAC;AAAA,MAC5B,KAAK,EAAE,GAAG,YAAY,GAAG,gBAAgB;AAAA,IAAA,CAC1C;AAGM,WAAA,MAAM,uCAAuC,OAAO,MAAIlI,MAAA,aAAa,SAAb,gBAAAA,IAAmB,KAAK,SAAQ,EAAE,EAAE;AACtF,iBAAA,OAAO,OAAO,MAAM,gBAAgB,KAAK,UAAU,aAAa,KAAK,MAAM,CAAC,CAAC,EAAE;AAAA,EAAA,OACvF;AACL,UAAM,IAAI,MAAM,8CAA8C,UAAU,EAAE;AAAA,EAAA;AAG5E,SAAO,MAAM,sBAAsB,QAAQ,IAAA,CAAK;AAE5C,MAAA;AAEF,UAAMiI,UAAS,IAAIC,QAAO,EAAE,MAAM,cAAc,SAAS,QAAW,GAAA,EAAE,cAAc,IAAI;AAElF,UAAAD,QAAO,QAAQ,SAAS;AAGxB,UAAA,WAAW,MAAMA,QAAO,UAAU;AACxC,UAAM,QAAQ,SAAS;AACvB,WAAO,KAAK,uBAAuB,UAAU,iBAAiB,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG;AAEnG,WAAA,EAAE,QAAAA,SAAQ,WAAW,WAAW;AAAA,WAChC,OAAO;AACd,WAAO,MAAM,8BAA8B,UAAU,KAAK,KAAK,EAAE;AAC1D,WAAA,MAAM,kBAAkB,KAAK,UAAU,cAAc,MAAM,CAAC,CAAC,EAAE;AAChE,UAAA;AAAA,EAAA;AAEV;ACtIO,SAAS,qBAAqB,OAAiC;AAC7D,SAAA,MAAM,IAAI,CAAC,UAAU;AAAA,IAC1B,MAAM;AAAA,IACN,UAAU;AAAA,MACR,MAAM,KAAK;AAAA,MACX,aAAa,KAAK;AAAA,MAClB,YAAY,EAAE,GAAG,KAAK,aAAa,sBAAsB,MAAM;AAAA,IAAA;AAAA,EACjE,EACA;AACJ;AAGO,SAAS,2BAA2B,OAA2C;AACpF,SAAO,MAAM,8BAA8B;AACpC,SAAA,MAAM,IAAI,CAAC,SAAS;;AAEnB,UAAA,SAAOjI,MAAA,KAAK,aAAL,gBAAAA,IAAe,SAAQ;AAC9B,UAAA,gBAAcG,MAAA,KAAK,aAAL,gBAAAA,IAAe,gBAAe;AAGlD,UAAM,uBAAuB,uBAAsBE,MAAA,KAAK,aAAL,gBAAAA,IAAe,UAAU;AAGrE,WAAA;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA,YAAY;AAAA,MAAA;AAAA,IAEhB;AAAA,EAAA,CACD;AACH;AAGA,SAAS,sBAAsB,gBAA0B;AAEvD,MAAI,CAAC,gBAAgB;AACZ,WAAA;AAAA,MACL,MAAM;AAAA,MACN,YAAY,EAAE,OAAO,EAAE,MAAM,WAAW;AAAA,MACxC,UAAU,CAAA;AAAA,IACZ;AAAA,EAAA;AAGF,QAAM,eAAoB;AAAA,IACxB,MAAM;AAAA,IACN,YAAY,CAAA;AAAA,EACd;AAGA,MAAI,eAAe,YAAY,MAAM,QAAQ,eAAe,QAAQ,GAAG;AACrE,iBAAa,WAAW,CAAC,GAAG,eAAe,QAAQ;AAAA,EAAA;AAIrD,oBAAkB,gBAAgB,YAAY;AAG9C,MAAI,OAAO,KAAK,aAAa,UAAU,EAAE,WAAW,GAAG;AACrD,iBAAa,aAAa,EAAE,OAAO,EAAE,MAAM,WAAW;AAAA,EAAA;AAGjD,SAAA;AACT;AAGA,SAAS,kBAAkB,gBAAqB,cAAyB;AACnE,MAAA,CAAC,eAAe,WAAY;AAErB,aAAA,CAAC,UAAU,SAAS,KAAK,OAAO,QAAa,eAAe,UAAU,GAAG;AAElF,iBAAa,WAAW,QAAQ,IAAI,wBAAwB,SAAS;AAAA,EAAA;AAEzE;AAGA,SAAS,wBAAwB,WAAqB;AACpD,QAAM,aAAkB,CAAC;AAGd,aAAA,OAAO,sBAAsB,SAAS;AAG7C,MAAA,WAAW,SAAS,UAAU;AACrB,eAAA,aAAa,oBAAoB,SAAS;AAAA,EAAA;AAIvD,MAAI,UAAU,aAAa;AACzB,eAAW,cAAc,UAAU;AAAA,EAAA;AAIrC,MAAI,UAAU,QAAQ,MAAM,QAAQ,UAAU,IAAI,GAAG;AACxC,eAAA,OAAO,UAAU,KAAK,IAAI,CAAC,QAAiB,QAAQ,KAAK,SAAS,GAAI;AAAA,EAAA;AAInF,MAAI,WAAW,SAAS,WAAW,UAAU,OAAO;AACvC,eAAA,QAAQ,wBAAwB,UAAU,KAAK;AAAA,EAAA;AAGrD,SAAA;AACT;AAGA,SAAS,sBAAsB,WAAwB;AAErD,MAAI,UAAU,QAAQ,OAAO,UAAU,SAAS,UAAU;AACjD,WAAA,0BAA0B,UAAU,IAAI;AAAA,EAAA;AAI7C,MAAA,UAAU,QAAQ,MAAM,QAAQ,UAAU,IAAI,KAAK,UAAU,KAAK,SAAS,GAAG;AAChF,WAAO,0BAA0B,UAAU,KAAK,CAAC,CAAC;AAAA,EAAA;AAIpD,MAAI,UAAU,QAAQ;AACpB,UAAM,WAAW,UAAU,OAAO,KAAK,CAAC,SAAc,KAAK,IAAI;AAC3D,QAAA,YAAY,SAAS,MAAM;AACzB,UAAA,OAAO,SAAS,SAAS,UAAU;AAC9B,eAAA,0BAA0B,SAAS,IAAI;AAAA,MAAA;AAE5C,UAAA,MAAM,QAAQ,SAAS,IAAI,KAAK,SAAS,KAAK,SAAS,GAAG;AAC5D,eAAO,0BAA0B,SAAS,KAAK,CAAC,CAAC;AAAA,MAAA;AAAA,IACnD;AAAA,EACF;AAIK,SAAA;AACT;AAGA,SAAS,oBAAoB,WAAqB;AAE5C,MAAA,CAAC,UAAU,cAAc,OAAO,KAAK,UAAU,UAAU,EAAE,WAAW,GAAG;AAC3E,WAAO,EAAE,OAAO,EAAE,MAAM,WAAW;AAAA,EAAA;AAIrC,QAAM,sBAA2B,CAAC;AACvB,aAAA,CAAC,aAAa,YAAY,KAAK,OAAO,QAAa,UAAU,UAAU,GAAG;AAC/D,wBAAA,WAAW,IAAI,wBAAwB,YAAY;AAAA,EAAA;AAIzE,MAAI,OAAO,KAAK,mBAAmB,EAAE,WAAW,GAAG;AACjD,WAAO,EAAE,OAAO,EAAE,MAAM,WAAW;AAAA,EAAA;AAG9B,SAAA;AACT;AAGA,SAAS,0BAA0B,MAAsB;AAEvD,QAAM,UAAkC;AAAA,IACtC,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AAGA,SAAO,QAAQ,KAAK,YAAY,CAAC,KAAK;AACxC;AAGA,eAAsB,WAAW,YAAuC;AAClE,MAAA;AACF,UAAM,aAAa,cAAcP,cAAK,KAAK,QAAQ,OAAO,aAAa;AACvE,UAAM,gBAAgB,MAAM0L,KAAG,SAAS,YAAY,OAAO;AACpD,WAAA,KAAK,MAAM,aAAa;AAAA,WACxB,OAAO;AACP,WAAA,EAAE,YAAY,GAAG;AAAA,EAAA;AAE5B;AAGA,eAAsB,qBAAqB,YAAsE;AACzG,QAAA3E,UAAS,MAAM,WAAW,UAAU;AAC1C,SAAO,EAAE,QAAAA,SAAQ,SAAS,OAAO,KAAKA,QAAO,UAAU,EAAE;AAC3D;ACrLO,MAAM,oBAAN,MAAM,kBAA8C;AAAA,EAWjD,YAAY,YAAqB;AATjC,uDAAmC,IAAI;AACvC,0DAAoG,IAAI;AACxG,+DAA2C,IAAI;AAC/C,0CAAmC,CAAC;AACpC,qCAAqB,CAAC;AAEtB;AAAA,2DAAuC,IAAI;AAC5C;AAGL,SAAK,aAAa,cAAc/G,cAAK,KAAK,QAAQ,OAAO,aAAa;AAAA,EAAA;AAAA,EAGxE,OAAc,YAAY,YAAuC;AAC3D,QAAA,CAAC,kBAAiB,UAAU;AACb,wBAAA,WAAW,IAAI,kBAAiB,UAAU;AAAA,IAClD,WAAA,cAAc,eAAe,kBAAiB,SAAS,YAAY;AAE5E,wBAAiB,SAAS,aAAa;AACvC,wBAAiB,SAAS,WAAa,EAAA,MAAM,CAAC,UAAU;AAC/C,eAAA,MAAM,4CAA4C,KAAK;AAAA,MAAA,CAC/D;AAAA,IAAA;AAEH,WAAO,kBAAiB;AAAA,EAAA;AAAA,EAG1B,MAAM,aAA4B;AAEhC,SAAK,QAAQ,MAAM;AACnB,SAAK,WAAW,MAAM;AACtB,SAAK,gBAAgB,MAAM;AAC3B,SAAK,iBAAiB,CAAC;AACvB,SAAK,YAAY,CAAC;AAClB,SAAK,YAAY,MAAM;AAGvB,UAAM,KAAK,kBAAkB;AAAA,EAAA;AAAA,EAG/B,MAAM,oBAAuE;AAC3E,UAAM,aAAuD,CAAC;AAC9D,UAAM,EAAE,QAAA+G,SAAQ,QAAA,IAAY,MAAM,qBAAqB,KAAK,UAAU;AAEtE,UAAM,iBAAiB,OAAO,KAAKA,QAAO,UAAU,EAAE,OAAO,CAAC,eAAeA,QAAO,WAAW,UAAU,EAAE,OAAO;AAClH,WAAO,KAAK,cAAc,eAAe,MAAM,qBAAqB;AAEpE,UAAM,wBAAwB,eAAe,OAAO,CAAC,KAAK,eAAe;AAChE,aAAA,EAAE,GAAG,KAAK,GAAGA,QAAO,WAAW,UAAU,EAAE,IAAI;AAAA,IACxD,GAAG,EAAE;AAGC,UAAA,oBAAoB,MAAM,QAAQ;AAAA,MACtC,eAAe;AAAA,QAAI,CAAC,eAClB,KAAK,oBAAoB,YAAYA,QAAO,WAAW,UAAU,GAAG,qBAAqB;AAAA,MAAA;AAAA,IAE7F;AAGkB,sBAAA,QAAQ,CAAC,WAAW;AAChC,UAAA,OAAO,WAAW,YAAY;AAChC,mBAAW,KAAK;AAAA,UACd,YAAY;AAAA,UACZ,OAAO,OAAO;AAAA,QAAA,CACf;AAAA,MACQ,WAAA,CAAC,OAAO,MAAM,SAAS;AAChC,mBAAW,KAAK;AAAA,UACd,YAAY,OAAO,MAAM;AAAA,UACzB,OAAO,OAAO,MAAM;AAAA,QAAA,CACrB;AAAA,MAAA;AAAA,IACH,CACD;AAED,WAAO,KAAK,mCAAmC;AAC/C,WAAO,KAAK,sBAAsB;AAClC,eAAW,CAAC,YAAYoB,OAAM,KAAK,KAAK,SAAS;AACzC,YAAA,WAAW,KAAK,UAAU,KAAK,CAAC,SAAS,KAAK,SAAS,UAAU;AACvE,UAAI,qCAAU,SAAS;AACd,eAAA,KAAK,GAAG,UAAU,GAAG;AACnB,iBAAA,MAAM,QAAQ,CAAC,SAAS;AAC/B,iBAAO,KAAK,OAAO,KAAK,IAAI,EAAE;AAAA,QAAA,CAC/B;AAAA,MAAA;AAAA,IACH;AAGK,WAAA;AAAA,EAAA;AAAA,EAGT,MAAM,oBACJ,YACApB,SACA,gBACoE;AAChE,QAAA;AACI,YAAA,gBAAgB,EAAE,GAAGA,QAAO;AAC9B,UAAA,CAAC,cAAc,WAAW;AAC5B,sBAAc,YAAY;AACnB,eAAA,MAAM,qCAAqC,UAAU,qCAAqC;AAAA,MAAA;AAG7F,YAAA,EAAE,QAAAoB,SAAQ,WAAW,WAAA,IAAe,MAAM,sBAAsB,YAAY,eAAe,cAAc;AAC1G,WAAA,QAAQ,IAAI,YAAYA,OAAM;AAC9B,WAAA,WAAW,IAAI,YAAY,SAAS;AACzC,oBAAc,KAAK,YAAY,IAAI,YAAY,UAAU;AAGnD,YAAA,WAAW,MAAMA,QAAO,UAAU;AAClC,YAAA,eAAe,MAAMA,QAAO,sBAAsB;AAGxD,YAAM,SAAS,SAAS,MAAM,IAAI,CAAC,UAAU;AAAA,QAC3C,MAAM,KAAK;AAAA,QACX,aAAa,KAAK;AAAA,MAAA,EAClB;AAGF,WAAK,UAAU,KAAK;AAAA,QAClB,MAAM;AAAA,QACN,cAAc,6CAAc,gBAA0B;AAAA,QACtD,OAAO;AAAA,QACP,SAASpB,QAAO,WAAW;AAAA,QAC3B,OAAO,6CAAc,SAAmB;AAAA,MAAA,CACzC;AAGD,UAAIA,QAAO,SAAS;AACZ,cAAA,iBAAiB,qBAAqB,SAAS,KAAK;AACrD,aAAA,eAAe,KAAK,GAAG,cAAc;AAGjC,iBAAA,MAAM,QAAQ,CAAC,SAAS;AAC/B,eAAK,gBAAgB,IAAI,KAAK,MAAMoB,OAAM;AAAA,QAAA,CAC3C;AAAA,MAAA;AAGI,aAAA;AAAA,QACL,SAAS;AAAA,QACT;AAAA,MACF;AAAA,aACO,OAAY;AACZ,aAAA;AAAA,QACL,SAAS;AAAA,QACT;AAAA,QACA,OAAO,MAAM;AAAA,MACf;AAAA,IAAA;AAAA,EACF;AAAA,EAGF,MAAM,wBAA2E;AAC/E,WAAO,KAAK,uCAAuC;AAG/C,QAAA;AACF,YAAM,KAAK,qBAAqB;AAC1B,YAAA,aAAa,MAAM,KAAK,kBAAkB;AAwDhD,aAAO,KAAK,qCAAqC;AAC1C,aAAA;AAAA,aACA,OAAO;AACP,aAAA,MAAM,2CAA2C,KAAK;AACvD,YAAA;AAAA,IAAA;AAAA,EACR;AAAA,EAGF,MAAM,uBAAuB,YAAmC;AAC1D,QAAA;AACF,YAAMA,UAAS,KAAK,QAAQ,IAAI,UAAU;AAC1C,UAAIA,SAAQ;AAEN,YAAA;AACI,gBAAA,WAAW,MAAMA,QAAO,UAAU;AAClC,gBAAA,gBAAgB,IAAI,IAAI,SAAS,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AAGrE,eAAK,iBAAiB,KAAK,eAAe,OAAO,CAAC,SAAS,CAAC,cAAc,IAAI,KAAK,SAAS,IAAI,CAAC;AAGnF,wBAAA,QAAQ,CAAC,aAAa;AAC7B,iBAAA,gBAAgB,OAAO,QAAQ;AAAA,UAAA,CACrC;AAAA,iBACM,OAAO;AACd,iBAAO,MAAM,uCAAuC,UAAU,KAAK,KAAK;AAAA,QAAA;AAI1E,cAAM,YAAY,KAAK,WAAW,IAAI,UAAU;AAChD,YAAI,WAAW;AACb,gBAAM,UAAU,MAAM;AAAA,QAAA;AAExB,cAAM,aAAa,KAAK,YAAY,IAAI,UAAU;AAClD,YAAI,YAAW;AACb,gBAAM,WAAW,MAAM;AAAA,QAAA;AAEpB,aAAA,WAAW,OAAO,UAAU;AAC5B,aAAA,QAAQ,OAAO,UAAU;AAGzB,aAAA,YAAY,KAAK,UAAU,OAAO,CAAC,SAAS,KAAK,SAAS,UAAU;AAElE,eAAA,KAAK,UAAU,UAAU,eAAe;AAAA,MAAA;AAAA,aAE1C,OAAO;AACd,aAAO,MAAM,8BAA8B,UAAU,KAAK,KAAK;AAAA,IAAA;AAAA,EACjE;AAAA,EAGF,MAAM,yBAAyB,YAAoB,SAAiC;AAE5E,UAAA,WAAW,KAAK,UAAU,KAAK,CAAC,SAAS,KAAK,SAAS,UAAU;AACvE,QAAI,CAAC,UAAU;AACN,aAAA,KAAK,kCAAkC,UAAU,uBAAuB;AAC/E;AAAA,IAAA;AAEF,aAAS,UAAU;AAGb,UAAA,cAAc,IAAI,IAAI,SAAS,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AAGnE,QAAI,SAAS;AAEX,YAAMA,UAAS,KAAK,QAAQ,IAAI,UAAU;AAC1C,UAAIA,SAAQ;AACJ,cAAA,WAAW,MAAMA,QAAO,UAAU;AAClC,cAAA,iBAAiB,qBAAqB,SAAS,KAAK;AACrD,aAAA,eAAe,KAAK,GAAG,cAAc;AAAA,MAAA;AAAA,IAC5C,OACK;AAEL,WAAK,iBAAiB,KAAK,eAAe,OAAO,CAAC,SAAS,CAAC,YAAY,IAAI,KAAK,SAAS,IAAI,CAAC;AAAA,IAAA;AAAA,EACjG;AAAA,EAGF,uBAAuB,YAAoBpB,SAAuB;AAChE,UAAMoB,UAAS,KAAK,QAAQ,IAAI,UAAU;AACtC,QAAA,CAACA,QAAe,QAAA;AACd,UAAA,iBAAiBA,WAAA,gBAAAA,QAAQ,WAAkB;AAGjD,QAAI,cAAc,cAAcpB,QAAO,UAAkB,QAAA;AAGzD,QAAIA,QAAO,cAAc,aAAa,cAAc,cAAc,WAAW;AACrE,YAAA,iBAAiB,cAAc,WAAW;AAC1C,YAAA,aAAa,qBAAqB,YAAA,EAAc,SAASA,QAAO,WAAW,EAAE,KAAKA,QAAO,WAAW;AACpG,YAAA,cAAc,cAAc,QAAQ,CAAC;AACrC,YAAA,UAAUA,QAAO,QAAQ,CAAC;AAEhC,aACE,mBAAmB,cACnB,YAAY,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,KAC1C,KAAK,UAAU,cAAc,GAAG,MAAM,KAAK,UAAUA,QAAO,GAAG;AAAA,IAAA;AAMhE,SAAAA,QAAO,cAAc,SAASA,QAAO,cAAc,iBACnD,cAAc,cAAc,SAAS,cAAc,cAAc,cAClE;AACO,aAAA,cAAc,QAAQA,QAAO;AAAA,IAAA;AAG/B,WAAA;AAAA,EAAA;AAAA,EAGT,oBAAsC;AACpC,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,eAAwB;AACtB,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,qBAA0C;AACxC,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,MAAM,uBAAsC;AAC1C,WAAO,KAAK,+BAA+B;AAC3C,eAAW,cAAc,KAAK,QAAQ,KAAA,GAAQ;AAC5C,YAAM,YAAY,KAAK,WAAW,IAAI,UAAU;AAChD,UAAI,WAAW;AACb,cAAM,UAAU,MAAM;AAAA,MAAA;AAAA,IACxB;AAEF,eAAW,cAAc,KAAK,YAAY,KAAA,GAAO;AACxC,aAAA,MAAM,IAAI,UAAU,6BAA6B;AACxD,YAAMoB,UAAS,KAAK,YAAY,IAAI,UAAU;AAC9C,UAAIA,SAAO;AACT,cAAMA,QAAO,MAAM;AAAA,MAAA;AAAA,IACrB;AAEF,SAAK,QAAQ,MAAM;AACnB,SAAK,WAAW,MAAM;AACtB,SAAK,gBAAgB,MAAM;AAC3B,SAAK,iBAAiB,CAAC;AACvB,SAAK,YAAY,CAAC;AAClB,WAAO,KAAK,sCAAsC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUtD;AA1WE,cADW,mBACI;AADV,IAAM,mBAAN;ACXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,IAAI,OAAO,OAAO,WAAW,WAAW,SAAS,CAAE;AACnD,IAAI,YAAY,mBAAmB,MAAM,EAAE;AAC3C,IAAI,QAAQ,CAAC,aAAa,SAAS,OAAO,GAAG;AAC7C,IAAI,QAAQ,CAAC,IAAI,IAAI,GAAG,CAAC;AAEzB,IAAI,SAAS,CAAE;AACf,SAAS,KAAK,cAAc;AACxB,MAAI,cAAc;AACd,WAAO,CAAC,IACJ,OAAO,EAAE,IACL,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,CAAC,IACJ,OAAO,EAAE,IACL,OAAO,EAAE,IACL,OAAO,EAAE,IACL,OAAO,EAAE,IACL,OAAO,EAAE,IACL,OAAO,EAAE,IACL;AACpE,SAAK,SAAS;AAAA,EACtB,OACS;AACD,SAAK,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,EACxE;AACI,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS;AACrD,OAAK,YAAY,KAAK,SAAS;AAC/B,OAAK,QAAQ;AACjB;AACA,KAAK,UAAU,SAAS,SAAU,SAAS;AACvC,MAAI,KAAK,WAAW;AAChB;AAAA,EACR;AACI,MAAI,YAAY,OAAO,YAAY;AACnC,MAAI,aAAa,QAAQ,gBAAgB,KAAK,aAAa;AACvD,cAAU,IAAI,WAAW,OAAO;AAAA,EACxC;AACI,MAAI,MAAM,QAAQ,GAAG1I,IAAG,SAAS,QAAQ,UAAU,GAAGkM,UAAS,KAAK;AACpE,SAAO,QAAQ,QAAQ;AACnB,QAAI,KAAK,QAAQ;AACb,WAAK,SAAS;AACd,MAAAA,QAAO,CAAC,IAAI,KAAK;AACjB,MAAAA,QAAO,EAAE,IACLA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACL;AAAA,IAC5E;AACQ,QAAI,WAAW;AACX,WAAKlM,KAAI,KAAK,OAAO,QAAQ,UAAUA,KAAI,IAAI,EAAE,OAAO;AACpD,QAAAkM,QAAOlM,MAAK,CAAC,KAAK,QAAQ,KAAK,KAAK,MAAMA,OAAM,CAAC;AAAA,MACjE;AAAA,IACA,OACa;AACD,WAAKA,KAAI,KAAK,OAAO,QAAQ,UAAUA,KAAI,IAAI,EAAE,OAAO;AACpD,eAAO,QAAQ,WAAW,KAAK;AAC/B,YAAI,OAAO,KAAM;AACb,UAAAkM,QAAOlM,MAAK,CAAC,KAAK,QAAQ,MAAMA,OAAM,CAAC;AAAA,QAC3D,WACyB,OAAO,MAAO;AACnB,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,QAAQ,MAAO,MAAMA,OAAM,CAAC;AACvD,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,OAAO,OAAU,MAAMA,OAAM,CAAC;AAAA,QAC7E,WACyB,OAAO,SAAU,QAAQ,OAAQ;AACtC,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,QAAQ,OAAQ,MAAMA,OAAM,CAAC;AACxD,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAS,QAAQ,IAAK,OAAU,MAAMA,OAAM,CAAC;AAChE,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,OAAO,OAAU,MAAMA,OAAM,CAAC;AAAA,QAC7E,OACqB;AACD,iBACI,UACO,OAAO,SAAU,KAAO,QAAQ,WAAW,EAAE,KAAK,IAAI;AACjE,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,QAAQ,OAAQ,MAAMA,OAAM,CAAC;AACxD,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAS,QAAQ,KAAM,OAAU,MAAMA,OAAM,CAAC;AACjE,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAS,QAAQ,IAAK,OAAU,MAAMA,OAAM,CAAC;AAChE,UAAAkM,QAAOlM,MAAK,CAAC,MAAM,MAAQ,OAAO,OAAU,MAAMA,OAAM,CAAC;AAAA,QAC7E;AAAA,MACA;AAAA,IACA;AACQ,SAAK,gBAAgBA;AACrB,SAAK,SAASA,KAAI,KAAK;AACvB,QAAIA,MAAK,IAAI;AACT,WAAK,QAAQkM,QAAO,EAAE;AACtB,WAAK,QAAQlM,KAAI;AACjB,WAAK,KAAM;AACX,WAAK,SAAS;AAAA,IAC1B,OACa;AACD,WAAK,QAAQA;AAAA,IACzB;AAAA,EACA;AACI,MAAI,KAAK,QAAQ,YAAY;AACzB,SAAK,UAAW,KAAK,QAAQ,cAAe;AAC5C,SAAK,QAAQ,KAAK,QAAQ;AAAA,EAClC;AACI,SAAO;AACX;AACA,KAAK,UAAU,WAAW,WAAY;AAClC,MAAI,KAAK,WAAW;AAChB;AAAA,EACR;AACI,OAAK,YAAY;AACjB,MAAIkM,UAAS,KAAK,QAAQlM,KAAI,KAAK;AACnC,EAAAkM,QAAO,EAAE,IAAI,KAAK;AAClB,EAAAA,QAAOlM,MAAK,CAAC,KAAK,MAAMA,KAAI,CAAC;AAC7B,OAAK,QAAQkM,QAAO,EAAE;AACtB,MAAIlM,MAAK,IAAI;AACT,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,KAAM;AAAA,IACvB;AACQ,IAAAkM,QAAO,CAAC,IAAI,KAAK;AACjB,IAAAA,QAAO,EAAE,IACLA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,CAAC,IACJA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACLA,QAAO,EAAE,IACL;AAAA,EACxE;AACI,EAAAA,QAAO,EAAE,IAAK,KAAK,UAAU,IAAM,KAAK,UAAU;AAClD,EAAAA,QAAO,EAAE,IAAI,KAAK,SAAS;AAC3B,OAAK,KAAM;AACf;AACA,KAAK,UAAU,OAAO,WAAY;AAC9B,MAAI7I,KAAI,KAAK,IAAIC,KAAI,KAAK,IAAIwG,KAAI,KAAK,IAAIqC,KAAI,KAAK,IAAIxL,KAAI,KAAK;AACjE,MAAIwK,IAAG1E,IAAGyC,IAAGgD,UAAS,KAAK;AAC3B,OAAKzF,KAAI,IAAIA,KAAI,IAAI,EAAEA,IAAG;AACtB,IAAAyC,KAAIgD,QAAOzF,KAAI,CAAC,IAAIyF,QAAOzF,KAAI,CAAC,IAAIyF,QAAOzF,KAAI,EAAE,IAAIyF,QAAOzF,KAAI,EAAE;AAClE,IAAAyF,QAAOzF,EAAC,IAAKyC,MAAK,IAAMA,OAAM;AAAA,EACtC;AACI,OAAKzC,KAAI,GAAGA,KAAI,IAAIA,MAAK,GAAG;AACxB,IAAA0E,KAAK7H,KAAIwG,KAAM,CAACxG,KAAI6I;AACpB,IAAAjD,KAAK7F,MAAK,IAAMA,OAAM;AACtB,IAAA1C,KAAKuI,KAAIiC,KAAIxK,KAAI,aAAauL,QAAOzF,EAAC,KAAM;AAC5C,IAAAnD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA6H,KAAK9H,KAAIC,KAAM,CAACD,KAAIyG;AACpB,IAAAZ,KAAKvI,MAAK,IAAMA,OAAM;AACtB,IAAAwL,KAAKjD,KAAIiC,KAAIgB,KAAI,aAAaD,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAApD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA8H,KAAKxK,KAAI0C,KAAM,CAAC1C,KAAI2C;AACpB,IAAA4F,KAAKiD,MAAK,IAAMA,OAAM;AACtB,IAAArC,KAAKZ,KAAIiC,KAAIrB,KAAI,aAAaoC,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA9F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAwK,KAAKgB,KAAIxL,KAAM,CAACwL,KAAI9I;AACpB,IAAA6F,KAAKY,MAAK,IAAMA,OAAM;AACtB,IAAAxG,KAAK4F,KAAIiC,KAAI7H,KAAI,aAAa4I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA0F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAhB,KAAKrB,KAAIqC,KAAM,CAACrC,KAAInJ;AACpB,IAAAuI,KAAK5F,MAAK,IAAMA,OAAM;AACtB,IAAAD,KAAK6F,KAAIiC,KAAI9H,KAAI,aAAa6I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAAqD,KAAKA,MAAK,KAAOA,OAAM;AAAA,EAC/B;AACI,SAAOrD,KAAI,IAAIA,MAAK,GAAG;AACnB,IAAA0E,KAAI7H,KAAIwG,KAAIqC;AACZ,IAAAjD,KAAK7F,MAAK,IAAMA,OAAM;AACtB,IAAA1C,KAAKuI,KAAIiC,KAAIxK,KAAI,aAAauL,QAAOzF,EAAC,KAAM;AAC5C,IAAAnD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA6H,KAAI9H,KAAIC,KAAIwG;AACZ,IAAAZ,KAAKvI,MAAK,IAAMA,OAAM;AACtB,IAAAwL,KAAKjD,KAAIiC,KAAIgB,KAAI,aAAaD,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAApD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA8H,KAAIxK,KAAI0C,KAAIC;AACZ,IAAA4F,KAAKiD,MAAK,IAAMA,OAAM;AACtB,IAAArC,KAAKZ,KAAIiC,KAAIrB,KAAI,aAAaoC,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA9F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAwK,KAAIgB,KAAIxL,KAAI0C;AACZ,IAAA6F,KAAKY,MAAK,IAAMA,OAAM;AACtB,IAAAxG,KAAK4F,KAAIiC,KAAI7H,KAAI,aAAa4I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA0F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAhB,KAAIrB,KAAIqC,KAAIxL;AACZ,IAAAuI,KAAK5F,MAAK,IAAMA,OAAM;AACtB,IAAAD,KAAK6F,KAAIiC,KAAI9H,KAAI,aAAa6I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAAqD,KAAKA,MAAK,KAAOA,OAAM;AAAA,EAC/B;AACI,SAAOrD,KAAI,IAAIA,MAAK,GAAG;AACnB,IAAA0E,KAAK7H,KAAIwG,KAAMxG,KAAI6I,KAAMrC,KAAIqC;AAC7B,IAAAjD,KAAK7F,MAAK,IAAMA,OAAM;AACtB,IAAA1C,KAAKuI,KAAIiC,KAAIxK,KAAI,aAAauL,QAAOzF,EAAC,KAAM;AAC5C,IAAAnD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA6H,KAAK9H,KAAIC,KAAMD,KAAIyG,KAAMxG,KAAIwG;AAC7B,IAAAZ,KAAKvI,MAAK,IAAMA,OAAM;AACtB,IAAAwL,KAAKjD,KAAIiC,KAAIgB,KAAI,aAAaD,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAApD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA8H,KAAKxK,KAAI0C,KAAM1C,KAAI2C,KAAMD,KAAIC;AAC7B,IAAA4F,KAAKiD,MAAK,IAAMA,OAAM;AACtB,IAAArC,KAAKZ,KAAIiC,KAAIrB,KAAI,aAAaoC,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA9F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAwK,KAAKgB,KAAIxL,KAAMwL,KAAI9I,KAAM1C,KAAI0C;AAC7B,IAAA6F,KAAKY,MAAK,IAAMA,OAAM;AACtB,IAAAxG,KAAK4F,KAAIiC,KAAI7H,KAAI,aAAa4I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAA0F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAhB,KAAKrB,KAAIqC,KAAMrC,KAAInJ,KAAMwL,KAAIxL;AAC7B,IAAAuI,KAAK5F,MAAK,IAAMA,OAAM;AACtB,IAAAD,KAAK6F,KAAIiC,KAAI9H,KAAI,aAAa6I,QAAOzF,KAAI,CAAC,KAAM;AAChD,IAAAqD,KAAKA,MAAK,KAAOA,OAAM;AAAA,EAC/B;AACI,SAAOrD,KAAI,IAAIA,MAAK,GAAG;AACnB,IAAA0E,KAAI7H,KAAIwG,KAAIqC;AACZ,IAAAjD,KAAK7F,MAAK,IAAMA,OAAM;AACtB,IAAA1C,KAAKuI,KAAIiC,KAAIxK,KAAI,YAAYuL,QAAOzF,EAAC,KAAM;AAC3C,IAAAnD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA6H,KAAI9H,KAAIC,KAAIwG;AACZ,IAAAZ,KAAKvI,MAAK,IAAMA,OAAM;AACtB,IAAAwL,KAAKjD,KAAIiC,KAAIgB,KAAI,YAAYD,QAAOzF,KAAI,CAAC,KAAM;AAC/C,IAAApD,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAA8H,KAAIxK,KAAI0C,KAAIC;AACZ,IAAA4F,KAAKiD,MAAK,IAAMA,OAAM;AACtB,IAAArC,KAAKZ,KAAIiC,KAAIrB,KAAI,YAAYoC,QAAOzF,KAAI,CAAC,KAAM;AAC/C,IAAA9F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAwK,KAAIgB,KAAIxL,KAAI0C;AACZ,IAAA6F,KAAKY,MAAK,IAAMA,OAAM;AACtB,IAAAxG,KAAK4F,KAAIiC,KAAI7H,KAAI,YAAY4I,QAAOzF,KAAI,CAAC,KAAM;AAC/C,IAAA0F,KAAKA,MAAK,KAAOA,OAAM;AACvB,IAAAhB,KAAIrB,KAAIqC,KAAIxL;AACZ,IAAAuI,KAAK5F,MAAK,IAAMA,OAAM;AACtB,IAAAD,KAAK6F,KAAIiC,KAAI9H,KAAI,YAAY6I,QAAOzF,KAAI,CAAC,KAAM;AAC/C,IAAAqD,KAAKA,MAAK,KAAOA,OAAM;AAAA,EAC/B;AACI,OAAK,KAAM,KAAK,KAAKzG,MAAM;AAC3B,OAAK,KAAM,KAAK,KAAKC,MAAM;AAC3B,OAAK,KAAM,KAAK,KAAKwG,MAAM;AAC3B,OAAK,KAAM,KAAK,KAAKqC,MAAM;AAC3B,OAAK,KAAM,KAAK,KAAKxL,MAAM;AAC/B;AACA,KAAK,UAAU,MAAM,WAAY;AAC7B,OAAK,SAAU;AACf,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK;AACtE,SAAQ,UAAW,MAAM,KAAM,EAAI,IAC/B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAU,KAAK,EAAI,IACnB,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAU,KAAK,EAAI,IACnB,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAU,KAAK,EAAI,IACnB,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAU,KAAK,EAAI,IACnB,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,KAAM,EAAI,IAC3B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAW,MAAM,IAAK,EAAI,IAC1B,UAAU,KAAK,EAAI;AAC3B;AACA,KAAK,UAAU,WAAW,KAAK,UAAU;AACzC,KAAK,UAAU,SAAS,WAAY;AAChC,OAAK,SAAU;AACf,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK;AACtE,SAAO;AAAA,IACF,MAAM,KAAM;AAAA,IACZ,MAAM,KAAM;AAAA,IACZ,MAAM,IAAK;AAAA,IACZ,KAAK;AAAA,IACJ,MAAM,KAAM;AAAA,IACZ,MAAM,KAAM;AAAA,IACZ,MAAM,IAAK;AAAA,IACZ,KAAK;AAAA,IACJ,MAAM,KAAM;AAAA,IACZ,MAAM,KAAM;AAAA,IACZ,MAAM,IAAK;AAAA,IACZ,KAAK;AAAA,IACJ,MAAM,KAAM;AAAA,IACZ,MAAM,KAAM;AAAA,IACZ,MAAM,IAAK;AAAA,IACZ,KAAK;AAAA,IACJ,MAAM,KAAM;AAAA,IACZ,MAAM,KAAM;AAAA,IACZ,MAAM,IAAK;AAAA,IACZ,KAAK;AAAA,EACR;AACL;AACA,KAAK,UAAU,QAAQ,KAAK,UAAU;AACtC,KAAK,UAAU,cAAc,WAAY;AACrC,OAAK,SAAU;AACf,MAAI,SAAS,IAAI,YAAY,EAAE;AAC/B,MAAI,WAAW,IAAI,SAAS,MAAM;AAClC,WAAS,UAAU,GAAG,KAAK,EAAE;AAC7B,WAAS,UAAU,GAAG,KAAK,EAAE;AAC7B,WAAS,UAAU,GAAG,KAAK,EAAE;AAC7B,WAAS,UAAU,IAAI,KAAK,EAAE;AAC9B,WAAS,UAAU,IAAI,KAAK,EAAE;AAC9B,SAAO;AACX;AACO,MAAM,eAAe,CAAC,YAAY;AACrC,SAAO,IAAI,KAAK,IAAI,EAAE,OAAO,OAAO,EAAE,KAAK,EAAG;AAClD;ACtVO,MAAM,cAAc,IAAI,YAAY,aAAa,QAAQ,KAAK,GAAG,CAAC;AAwBlE,MAAM,UAAU;AACvB;AACA,MAAM,aAAa,oBAAI,IAAK;AAIrB,MAAM,sBAAsB,UAAU;AAAA,EACzC,YAAY,KAAK;AACb,UAAO;AACP,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ,OAAO,oBAAI,IAAK;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,OAAO,QAAQ,QAAQ;AACnB,WAAO,QAAQ,QAAQ,KAAK,MAAM,IAAI,YAAY,QAAQ,MAAM,CAAC,KAAK,IAAI;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,OAAO,QAAQ,QAAQ,OAAO;AAChC,SAAK,MAAM,IAAI,YAAY,QAAQ,MAAM,GAAG,KAAK;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,OAAO,SAAS;AACZ,WAAO,IAAI,cAAc,UAAU;AAAA,EAC3C;AACA;AC1EO,MAAM,wBAAwB,aAAa;AAClD;AAKO,MAAM,0BAA0B,gBAAgB;AAAA,EACnD,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,OAAO;AACf,UAAM,EAAE,OAAO;AACf,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,eAAe;AAAA,IACrD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,QAAQ;AAAA,EACrB;AAAA,EACI,WAAW;AACP,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,iBAAiB;AACb,WAAO,CAAC,IAAI,aAAa,KAAK,KAAK,CAAC;AAAA,EAC5C;AACA;AAKO,MAAM,wBAAwB,gBAAgB;AAAA,EACjD,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,QAAI,MAAM,QAAQ,MAAM,GAAG;AAEvB,eAAS,EAAE,UAAU,OAAQ;AAAA,IACzC;AACQ,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,eAAe;AAAA,IACrD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,WAAW,OAAO;AAAA,EAC/B;AAAA,EACI,WAAW;AACP,WAAO,gBAAgB,KAAK,QAAQ;AAAA,EAC5C;AAAA,EACI,iBAAiB;AACb,WAAO,KAAK;AAAA,EACpB;AACA;;;;;;ACnFA,WAAA,aAAqB;AACrB,WAAA,cAAsB;AACtB,WAAA,gBAAwB;AAExB,MAAI,SAAS,CAAA;AACb,MAAI,YAAY,CAAA;AAChB,MAAI,MAAM,OAAO,eAAe,cAAc,aAAa;AAE3D,MAAI,OAAO;AACX,WAASX,KAAI,GAAG,MAAM,KAAK,QAAQA,KAAI,KAAK,EAAEA,IAAG;AAC/C,WAAOA,EAAC,IAAI,KAAKA,EAAC;AAClB,cAAU,KAAK,WAAWA,EAAC,CAAC,IAAIA;AAAA,EAClC;AAIA,YAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAC/B,YAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAE/B,WAAS,QAAS,KAAK;AACrB,QAAIoM,OAAM,IAAI;AAEd,QAAIA,OAAM,IAAI,GAAG;AACf,YAAM,IAAI,MAAM,gDAAgD;AAAA,IACpE;AAIE,QAAI,WAAW,IAAI,QAAQ,GAAG;AAC9B,QAAI,aAAa,GAAI,YAAWA;AAEhC,QAAI,kBAAkB,aAAaA,OAC/B,IACA,IAAK,WAAW;AAEpB,WAAO,CAAC,UAAU,eAAe;AAAA,EACnC;AAGA,WAAS,WAAY,KAAK;AACxB,QAAI,OAAO,QAAQ,GAAG;AACtB,QAAI,WAAW,KAAK,CAAC;AACrB,QAAI,kBAAkB,KAAK,CAAC;AAC5B,YAAS,WAAW,mBAAmB,IAAI,IAAK;AAAA,EAClD;AAEA,WAAS,YAAa,KAAK,UAAU,iBAAiB;AACpD,YAAS,WAAW,mBAAmB,IAAI,IAAK;AAAA,EAClD;AAEA,WAAS,YAAa,KAAK;AACzB,QAAI;AACJ,QAAI,OAAO,QAAQ,GAAG;AACtB,QAAI,WAAW,KAAK,CAAC;AACrB,QAAI,kBAAkB,KAAK,CAAC;AAE5B,QAAIjI,OAAM,IAAI,IAAI,YAAY,KAAK,UAAU,eAAe,CAAC;AAE7D,QAAI,UAAU;AAGd,QAAIiI,OAAM,kBAAkB,IACxB,WAAW,IACX;AAEJ,QAAIpM;AACJ,SAAKA,KAAI,GAAGA,KAAIoM,MAAKpM,MAAK,GAAG;AAC3B,YACG,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,KAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,KACpC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IACrC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC;AACjC,MAAAmE,KAAI,SAAS,IAAK,OAAO,KAAM;AAC/B,MAAAA,KAAI,SAAS,IAAK,OAAO,IAAK;AAC9B,MAAAA,KAAI,SAAS,IAAI,MAAM;AAAA,IAC3B;AAEE,QAAI,oBAAoB,GAAG;AACzB,YACG,UAAU,IAAI,WAAWnE,EAAC,CAAC,KAAK,IAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AACvC,MAAAmE,KAAI,SAAS,IAAI,MAAM;AAAA,IAC3B;AAEE,QAAI,oBAAoB,GAAG;AACzB,YACG,UAAU,IAAI,WAAWnE,EAAC,CAAC,KAAK,KAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IACpC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AACvC,MAAAmE,KAAI,SAAS,IAAK,OAAO,IAAK;AAC9B,MAAAA,KAAI,SAAS,IAAI,MAAM;AAAA,IAC3B;AAEE,WAAOA;AAAA,EACT;AAEA,WAAS,gBAAiB,KAAK;AAC7B,WAAO,OAAO,OAAO,KAAK,EAAI,IAC5B,OAAO,OAAO,KAAK,EAAI,IACvB,OAAO,OAAO,IAAI,EAAI,IACtB,OAAO,MAAM,EAAI;AAAA,EACrB;AAEA,WAAS,YAAa,OAAO,OAAO,KAAK;AACvC,QAAI;AACJ,QAAI,SAAS,CAAA;AACb,aAASnE,KAAI,OAAOA,KAAI,KAAKA,MAAK,GAAG;AACnC,aACI,MAAMA,EAAC,KAAK,KAAM,aAClB,MAAMA,KAAI,CAAC,KAAK,IAAK,UACtB,MAAMA,KAAI,CAAC,IAAI;AAClB,aAAO,KAAK,gBAAgB,GAAG,CAAC;AAAA,IACpC;AACE,WAAO,OAAO,KAAK,EAAE;AAAA,EACvB;AAEA,WAAS,cAAe,OAAO;AAC7B,QAAI;AACJ,QAAIoM,OAAM,MAAM;AAChB,QAAI,aAAaA,OAAM;AACvB,QAAI,QAAQ,CAAA;AACZ,QAAI,iBAAiB;AAGrB,aAASpM,KAAI,GAAGqM,QAAOD,OAAM,YAAYpM,KAAIqM,OAAMrM,MAAK,gBAAgB;AACtE,YAAM,KAAK,YAAY,OAAOA,IAAIA,KAAI,iBAAkBqM,QAAOA,QAAQrM,KAAI,cAAe,CAAC;AAAA,IAC/F;AAGE,QAAI,eAAe,GAAG;AACpB,YAAM,MAAMoM,OAAM,CAAC;AACnB,YAAM;AAAA,QACJ,OAAO,OAAO,CAAC,IACf,OAAQ,OAAO,IAAK,EAAI,IACxB;AAAA,MACN;AAAA,IACA,WAAa,eAAe,GAAG;AAC3B,aAAO,MAAMA,OAAM,CAAC,KAAK,KAAK,MAAMA,OAAM,CAAC;AAC3C,YAAM;AAAA,QACJ,OAAO,OAAO,EAAE,IAChB,OAAQ,OAAO,IAAK,EAAI,IACxB,OAAQ,OAAO,IAAK,EAAI,IACxB;AAAA,MACN;AAAA,IACA;AAEE,WAAO,MAAM,KAAK,EAAE;AAAA,EACtB;;;;;ACnJA,IAAIE,aAAY,OAAO;AACvB,IAAIC,mBAAkB,CAAC,KAAK,KAAK,UAAU,OAAO,MAAMD,WAAU,KAAK,KAAK,EAAE,YAAY,MAAM,cAAc,MAAM,UAAU,MAAM,MAAK,CAAE,IAAI,IAAI,GAAG,IAAI;AAC1J,IAAIE,iBAAgB,CAAC,KAAK,KAAK,UAAU;AACvC,EAAAD,iBAAgB,KAA+B,MAAM,IAAU,KAAK;AACpE,SAAO;AACT;AAKA,SAAS,cAAc,OAAO,OAAO;AACnC,MAAI,QAAQ,MAAM;AAAA,IAChB,EAAE,QAAQ,MAAM,OAAQ;AAAA,IACxB,CAACrM,IAAGF,QAAO,EAAE,OAAOA,IAAG,KAAKA,KAAI,EAAG;AAAA,EACpC;AACD,SAAO,MAAM,SAAS,GAAG;AACvB,QAAI,UAAU;AACd,aAASA,KAAI,GAAGA,KAAI,MAAM,SAAS,GAAGA,MAAK;AACzC,YAAM,QAAQ,MAAM,MAAM,MAAMA,EAAC,EAAE,OAAO,MAAMA,KAAI,CAAC,EAAE,GAAG;AAC1D,YAAM,OAAO,MAAM,IAAI,MAAM,KAAK,GAAG,CAAC;AACtC,UAAI,QAAQ;AACV;AACF,UAAI,WAAW,QAAQ,OAAO,QAAQ,CAAC,GAAG;AACxC,kBAAU,CAAC,MAAMA,EAAC;AAAA,MAC1B;AAAA,IACA;AACI,QAAI,WAAW,MAAM;AACnB,YAAMA,KAAI,QAAQ,CAAC;AACnB,YAAMA,EAAC,IAAI,EAAE,OAAO,MAAMA,EAAC,EAAE,OAAO,KAAK,MAAMA,KAAI,CAAC,EAAE,IAAK;AAC3D,YAAM,OAAOA,KAAI,GAAG,CAAC;AAAA,IAC3B,OAAW;AACL;AAAA,IACN;AAAA,EACA;AACE,SAAO;AACT;AACA,SAAS,eAAe,OAAO,OAAO;AACpC,MAAI,MAAM,WAAW;AACnB,WAAO,CAAC,MAAM,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC;AACpC,SAAO,cAAc,OAAO,KAAK,EAAE,IAAI,CAACwJ,OAAM,MAAM,IAAI,MAAM,MAAMA,GAAE,OAAOA,GAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,OAAO,CAACpJ,OAAMA,MAAK,IAAI;AACzH;AACA,SAAS,YAAYH,MAAK;AACxB,SAAOA,KAAI,QAAQ,uBAAuB,MAAM;AAClD;AACA,IAAI,YAAY,MAAM;AAAA,EAepB,YAAY,OAAO,uBAAuB;AAb1C;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA,uCAAc,IAAI,YAAa;AAE/B;AAAA,uCAAc,IAAI,YAAY,OAAO;AAErC;AAAA,mCAA0B,oBAAI,IAAK;AAEnC;AAAA,mCAA0B,oBAAI,IAAK;AAEjC,SAAK,SAAS,MAAM;AACpB,UAAM,eAAe,MAAM,UAAU,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE,OAAO,CAAC,MAAMG,OAAM;AACnF,YAAM,CAACF,IAAG,WAAW,GAAG,MAAM,IAAIE,GAAE,MAAM,GAAG;AAC7C,YAAM,SAAS,OAAO,SAAS,WAAW,EAAE;AAC5C,aAAO,QAAQ,CAAC,OAAOJ,OAAM,KAAK,KAAK,IAAI,SAASA,EAAC;AACrD,aAAO;AAAA,IACR,GAAE,EAAE;AACL,eAAW,CAAC,OAAO,IAAI,KAAK,OAAO,QAAQ,YAAY,GAAG;AACxD,YAAM,QAAQ,OAAO,YAAY,KAAK;AACtC,WAAK,QAAQ,IAAI,MAAM,KAAK,GAAG,GAAG,IAAI;AACtC,WAAK,QAAQ,IAAI,MAAM,KAAK;AAAA,IAClC;AACI,SAAK,gBAAgB,EAAE,GAAG,MAAM,gBAAgB,GAAG,sBAAuB;AAC1E,SAAK,uBAAuB,OAAO,QAAQ,KAAK,aAAa,EAAE,OAAO,CAAC,MAAM,CAACoJ,OAAM,IAAI,MAAM;AAC5F,WAAK,IAAI,IAAI,KAAK,YAAY,OAAOA,KAAI;AACzC,aAAO;AAAA,IACR,GAAE,EAAE;AAAA,EACT;AAAA,EACE,OAAOA,OAAM,iBAAiB,CAAA,GAAI,oBAAoB,OAAO;AAC3D,UAAM,UAAU,IAAI,OAAO,KAAK,QAAQ,IAAI;AAC5C,UAAM,eAAe,UAAU;AAAA,MAC7B,OAAO,KAAK,KAAK,aAAa;AAAA,IAC/B;AACD,UAAM,MAAM,CAAE;AACd,UAAM,oBAAoB,IAAI;AAAA,MAC5B,mBAAmB,QAAQ,OAAO,KAAK,KAAK,aAAa,IAAI;AAAA,IAC9D;AACD,UAAM,uBAAuB,IAAI;AAAA,MAC/B,sBAAsB,QAAQ,OAAO,KAAK,KAAK,aAAa,EAAE;AAAA,QAC5D,CAAChJ,OAAM,CAAC,kBAAkB,IAAIA,EAAC;AAAA,MACvC,IAAU;AAAA,IACL;AACD,QAAI,qBAAqB,OAAO,GAAG;AACjC,YAAM,yBAAyB,UAAU,kBAAkB;AAAA,QACzD,GAAG;AAAA,MACX,CAAO;AACD,YAAM,eAAegJ,MAAK,MAAM,sBAAsB;AACtD,UAAI,gBAAgB,MAAM;AACxB,cAAM,IAAI;AAAA,UACR,0DAA0D,aAAa,CAAC,CAAC;AAAA,QAC1E;AAAA,MACT;AAAA,IACA;AACI,QAAI,QAAQ;AACZ,WAAO,MAAM;AACX,UAAI,cAAc;AAClB,UAAI,YAAY;AAChB,aAAO,MAAM;AACX,qBAAa,YAAY;AACzB,sBAAc,aAAa,KAAKA,KAAI;AACpC,YAAI,eAAe,QAAQ,kBAAkB,IAAI,YAAY,CAAC,CAAC;AAC7D;AACF,oBAAY,YAAY,QAAQ;AAAA,MACxC;AACM,YAAM,OAAM,2CAAa,UAASA,MAAK;AACvC,iBAAW,SAASA,MAAK,UAAU,OAAO,GAAG,EAAE,SAAS,OAAO,GAAG;AAChE,cAAM,QAAQ,KAAK,YAAY,OAAO,MAAM,CAAC,CAAC;AAC9C,cAAM,SAAS,KAAK,QAAQ,IAAI,MAAM,KAAK,GAAG,CAAC;AAC/C,YAAI,UAAU,MAAM;AAClB,cAAI,KAAK,MAAM;AACf;AAAA,QACV;AACQ,YAAI,KAAK,GAAG,eAAe,OAAO,KAAK,OAAO,CAAC;AAAA,MACvD;AACM,UAAI,eAAe;AACjB;AACF,UAAI,QAAQ,KAAK,cAAc,YAAY,CAAC,CAAC;AAC7C,UAAI,KAAK,KAAK;AACd,cAAQ,YAAY,QAAQ,YAAY,CAAC,EAAE;AAAA,IACjD;AACI,WAAO;AAAA,EACX;AAAA,EACE,OAAO,QAAQ;AACb,UAAM,MAAM,CAAE;AACd,QAAI,SAAS;AACb,aAASqD,MAAK,GAAGA,MAAK,OAAO,QAAQ,EAAEA,KAAI;AACzC,YAAM,QAAQ,OAAOA,GAAE;AACvB,YAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK,KAAK,KAAK,qBAAqB,KAAK;AACxE,UAAI,SAAS,MAAM;AACjB,YAAI,KAAK,KAAK;AACd,kBAAU,MAAM;AAAA,MACxB;AAAA,IACA;AACI,UAAM,cAAc,IAAI,WAAW,MAAM;AACzC,QAAIzM,KAAI;AACR,eAAW,SAAS,KAAK;AACvB,kBAAY,IAAI,OAAOA,EAAC;AACxB,MAAAA,MAAK,MAAM;AAAA,IACjB;AACI,WAAO,KAAK,YAAY,OAAO,WAAW;AAAA,EAC9C;AACA;AACA,IAAI,WAAW;AACfwM,eAAc,UAAU,qBAAqB,CAAC,WAAW;AACvD,SAAO,IAAI,OAAO,OAAO,IAAI,CAACxM,OAAM,YAAYA,EAAC,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG;AACpE,CAAC;AACD,SAAS,wBAAwB,OAAO;AACtC,UAAQ,OAAK;AAAA,IACX,KAAK,QAAQ;AACX,aAAO;AAAA,IACb;AAAA,IACI,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,oBAAoB;AACvB,aAAO;AAAA,IACb;AAAA,IACI,KAAK;AAAA,IACL,KAAK,yBAAyB;AAC5B,aAAO;AAAA,IACb;AAAA,IACI,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,+BAA+B;AAClC,aAAO;AAAA,IACb;AAAA,IACI,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,0BAA0B;AAC7B,aAAO;AAAA,IACb;AAAA,IACI,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,sCAAsC;AACzC,aAAO;AAAA,IACb;AAAA,IACI;AACE,YAAM,IAAI,MAAM,eAAe;AAAA,EACrC;AACA;AClPA,MAAM,QAAQ,CAAE;AAChB,MAAM,SAAyB,oBAAIwH,aAAY,EAAE;AAC1C,eAAe,YAAY,UAAU;AACxC,MAAI,EAAE,YAAY,QAAQ;AACtB,UAAM,QAAQ,IAAI,OACb,MAAM,iCAAiC,QAAQ,OAAO,EACtD,KAAK,CAAC,QAAQ,IAAI,KAAM,CAAA,EACxB,KAAK,CAAC,SAAS,IAAI,SAAS,IAAI,CAAC,EACjC,MAAM,CAAC7G,OAAM;AACd,aAAO,MAAM,QAAQ;AACrB,YAAMA;AAAA,IAClB,CAAS;AAAA,EACT;AACI,SAAO,MAAM,MAAM,QAAQ;AAC/B;AACO,eAAe,iBAAiB,OAAO;AAC1C,SAAO,YAAY,wBAAwB,KAAK,CAAC;AACrD;ACZO,MAAM,0BAA0B,CAAC,cAAc;AAClD,MAAI,UAAU,WAAW,mBAAmB,GAAG;AAC3C,WAAO;AAAA,EACf;AACI,MAAI,UAAU,WAAW,gBAAgB,GAAG;AACxC,WAAO;AAAA,EACf;AACI,MAAI,UAAU,WAAW,WAAW,GAAG;AACnC,WAAO;AAAA,EACf;AACI,MAAI,UAAU,WAAW,QAAQ,GAAG;AAChC,WAAO;AAAA,EACf;AACI,MAAI,UAAU,WAAW,QAAQ,GAAG;AAChC,WAAO;AAAA,EACf;AACI,SAAO;AACX;AAoEA,MAAM,eAAe,MAAM;AAIpB,MAAM,sBAAsB,SAAS;AAAA,EACxC,IAAI,gBAAgB;AAChB,WAAO;AAAA,MACH,WAAW;AAAA,MACX,SAAS;AAAA,IACZ;AAAA,EACT;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AAIZ,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,SAAK,UAAU,OAAO,WAAW,aAAc;AAC/C,SAAK,YAAY,OAAO;AACxB,SAAK,OAAO,OAAO,QAAQ,CAAE;AAC7B,SAAK,WAAW,OAAO,YAAY,CAAE;AAAA,EAC7C;AACA;AAIO,MAAM,0BAA0B,cAAc;AAAA;AAAA;AAAA;AAAA,EAIjD,IAAI,WAAW;AACX,WAAO,CAAC,QAAQ,WAAW,UAAU,QAAQ,YAAY,WAAW;AAAA,EAC5E;AAAA,EACI,YAAY,EAAE,WAAW,iBAAiB,GAAG,OAAM,GAAI;AACnD,UAAM,EAAE,OAAA+L,QAAO,GAAG,KAAI,IAAK;AAC3B,UAAM;AAAA,MACF,WAAW,aAAa;AAAA,MACxB,GAAG;AAAA,IACf,CAAS;AAKD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,SAAS;AAAA,MACjC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,QAAI,OAAOA,WAAU,UAAU;AAC3B,WAAK,QAAQA;AAAA,IACzB,WACiBA,QAAO;AACZ,WAAK,QAAQ,cAAc,OAAQ;AAAA,IAC/C,OACa;AACD,WAAK,QAAQ;AAAA,IACzB;AACQ,SAAK,SAAS,IAAIlF,aAAY,UAAU,CAAA,CAAE;AAAA,EAClD;AAAA,EACI,MAAM,aAAa,SAAS;AAExB,QAAI,OAAO,YAAY,UAAU;AAC7B,aAAO;AAAA,IACnB;AAEQ,QAAI,YAAY,KAAK,KAAK,QAAQ,SAAS,CAAC;AAC5C,QAAI,CAAC,KAAK,WAAW;AACjB,UAAI;AACA,aAAK,YAAY,MAAM,iBAAiB,eAAe,OACjD,wBAAwB,KAAK,SAAS,IACtC,MAAM;AAAA,MAC5B,SACmB,OAAO;AACV,gBAAQ,KAAK,2EAA2E,KAAK;AAAA,MAC7G;AAAA,IACA;AACQ,QAAI,KAAK,WAAW;AAChB,UAAI;AACA,oBAAY,KAAK,UAAU,OAAO,OAAO,EAAE;AAAA,MAC3D,SACmB,OAAO;AACV,gBAAQ,KAAK,2EAA2E,KAAK;AAAA,MAC7G;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,2BAA2B,OAAO;AACrC,QAAI,OAAO,UAAU,UAAU;AAC3B,aAAO,IAAI,kBAAkB,KAAK;AAAA,IAC9C,WACiB,MAAM,QAAQ,KAAK,GAAG;AAC3B,aAAO,IAAI,gBAAgB,MAAM,IAAI,0BAA0B,CAAC;AAAA,IAC5E,OACa;AACD,aAAO;AAAA,IACnB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,qBAAqB;AACjB,WAAO,CAAE;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,wCAEA,EAAE,QAAAF,SAAQ,GAAG,eAAe;AAExB,UAAM,SAAS;AAAA,MACX,GAAG,KAAK,mBAAoB;AAAA,MAC5B,GAAG;AAAA,MACH,OAAO,KAAK,SAAU;AAAA,MACtB,QAAQ,KAAK,WAAY;AAAA,IAC5B;AACD,UAAM,kBAAkB,OAAO,QAAQ,MAAM,EAAE,OAAO,CAAC,CAACpH,IAAG,KAAK,MAAM,UAAU,MAAS;AACzF,UAAM,oBAAoB,gBACrB,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,GAAG,IAAI,KAAK,UAAU,KAAK,CAAC,EAAE,EACvD,KAAI,EACJ,KAAK,GAAG;AACb,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,YAAY;AACR,WAAO;AAAA,MACH,GAAG,KAAK,mBAAoB;AAAA,MAC5B,OAAO,KAAK,SAAU;AAAA,MACtB,QAAQ,KAAK,WAAY;AAAA,IAC5B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,aAAa,YAAY,OAAO;AAC5B,UAAM,IAAI,MAAM,uBAAuB;AAAA,EAC/C;AACA;AClPO,MAAM,4BAA4B,SAAS;AAAA,EAC9C,OAAO,UAAU;AACb,WAAO;AAAA,EACf;AAAA,EACI,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,kBAAkB,WAAW;AAAA,IACjD,CAAS;AACD,WAAO,eAAe,MAAM,mBAAmB;AAAA,MAC3C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AACD,QAAI,QAAQ;AACR,WAAK,OAAO,OAAO;AAAA,IAC/B;AAAA,EACA;AAAA,EACI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAMoH,UAAS,aAAa,OAAO;AACnC,QAAI,KAAK,MAAM;AACX,YAAM,KAAK,KAAK,OAAOA,OAAM;AAAA,IACzC;AACQ,WAAO,KAAK,gBAAgB,CAACqF,WAAU,QAAQ,QAAQA,MAAK,GAAG,OAAOrF,OAAM;AAAA,EACpF;AAAA,EACI,OAAO,UAAU,WAAW,SAAS;AACjC,UAAMA,UAAS,aAAa,OAAO;AACnC,QAAI;AACJ,QAAI,uBAAuB;AAC3B,qBAAiB,SAAS,KAAK,2BAA2B,WAAW,CAAC,UAAU,OAAOA,OAAM,GAAG;AAC5F,YAAM;AACN,UAAI,sBAAsB;AACtB,YAAI,gBAAgB,QAAW;AAC3B,wBAAc;AAAA,QAClC,OACqB;AACD,cAAI;AAEA,0BAAc,OAAO,aAAa,KAAK;AAAA,UAC/D,QAC0B;AACF,0BAAc;AACd,mCAAuB;AAAA,UAC/C;AAAA,QACA;AAAA,MACA;AAAA,IACA;AACQ,QAAI,KAAK,QAAQ,gBAAgB,QAAW;AACxC,YAAM,KAAK,KAAK,aAAaA,OAAM;AAAA,IAC/C;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BI,OAAO,OAAO,SAAS;AACnB,WAAO,IAAI,eAAe,IAAI,YAAY,EAAE,OAAO,QAAO,CAAE,CAAC;AAAA,EACrE;AACA;ACpHO,SAAS,YAEhB,OAAO;AAEH,SAAO,QAAO,+BAAO,WAAU;AACnC;ACkBO,MAAM,sBAAsB,kBAAkB;AAAA,EACjD,YAAY,QAAQ;AAChB,UAAM,MAAM;AAEZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,aAAa,eAAe,KAAK,SAAU,CAAA;AAAA,IAC/D,CAAS;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACnB,CAAS;AAAA,EACT;AAAA,EACI,6CAA6C,SAAS;AAElD,UAAM,CAAC,gBAAgB,WAAW,IAAI,MAAM,uCAAuC,OAAO;AAC1F,gBAAY,SAAS,eAAe;AACpC,WAAO,CAAC,gBAAgB,WAAW;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,OAAO,OAAO,SAAS;AACzB,UAAM,cAAc,cAAc,2BAA2B,KAAK;AAClE,UAAM,SAAS,MAAM,KAAK,eAAe,CAAC,WAAW,GAAG,SAAS,mCAAS,SAAS;AACnF,UAAM,iBAAiB,OAAO,YAAY,CAAC,EAAE,CAAC;AAE9C,WAAO,eAAe;AAAA,EAC9B;AAAA;AAAA,EAEI,OAAO,sBAAsB,WAAW,UAAU,aAAa;AAC3D,UAAM,IAAI,MAAM,kBAAkB;AAAA,EAC1C;AAAA,EACI,OAAO,gBAAgB,OAAO,SAAS;;AAEnC,QAAI,KAAK,0BACL,cAAc,UAAU,yBACxB,KAAK,kBAAkB;AACvB,YAAM,KAAK,OAAO,OAAO,OAAO;AAAA,IAC5C,OACa;AACD,YAAM,SAAS,cAAc,2BAA2B,KAAK;AAC7D,YAAMnE,YAAW,OAAO,eAAgB;AACxC,YAAM,CAAC,gBAAgB,WAAW,IAAI,KAAK,6CAA6C,OAAO;AAC/F,YAAM,sBAAsB;AAAA,QACxB,GAAG,eAAe;AAAA,QAClB,GAAG,KAAK,YAAY,WAAW;AAAA,MAClC;AACD,YAAM,mBAAmB,MAAM,gBAAgB,UAAU,eAAe,WAAW,KAAK,WAAW,eAAe,MAAM,KAAK,MAAM,qBAAqB,KAAK,UAAU,EAAE,SAAS,KAAK,SAAS;AAChM,YAAM,QAAQ;AAAA,QACV,SAAS;AAAA,QACT,mBAAmB,6BAAM,iBAAiB;AAAA,QAC1C,YAAY;AAAA,MACf;AACD,YAAM,cAAc,OAAM,qDAAkB,qBAAqB,KAAK,OAAQ,GAAE,CAACA,SAAQ,GAAG,eAAe,OAAO,QAAW,OAAO,QAAW,QAAW,eAAe;AACzK,UAAI;AAEJ,UAAI;AACJ,UAAI;AACA,yBAAiB,SAAS,KAAK,sBAAsBA,WAAU,aAAa,2CAAc,EAAE,GAAG;AAC3F,cAAI,MAAM,QAAQ,MAAM,MAAM;AAC1B,kBAAM,SAAQ1C,MAAA,2CAAa,GAAG,OAAhB,gBAAAA,IAAoB;AAClC,gBAAI,SAAS;AACT,oBAAM,QAAQ,UAAU,OAAO,KAAK,EAAE;AAAA,UAClE;AACoB,gBAAM,QAAQ,oBAAoB;AAAA,YAC9B,GAAG,MAAM;AAAA,YACT,GAAG,MAAM,QAAQ;AAAA,UACpB;AACD,gBAAM,MAAM;AACZ,cAAI,CAAC,iBAAiB;AAClB,8BAAkB;AAAA,UAC1C,OACyB;AACD,8BAAkB,gBAAgB,OAAO,KAAK;AAAA,UACtE;AACoB,cAAI,iBAAiB,MAAM,OAAO,KAC9B,MAAM,QAAQ,mBAAmB,QAAW;AAC5C,wBAAY;AAAA,cACR,YAAY;AAAA,gBACR,cAAc,MAAM,QAAQ,eAAe;AAAA,gBAC3C,kBAAkB,MAAM,QAAQ,eAAe;AAAA,gBAC/C,aAAa,MAAM,QAAQ,eAAe;AAAA,cAC7C;AAAA,YACJ;AAAA,UACzB;AAAA,QACA;AAAA,MACA,SACmB,KAAK;AACR,cAAM,QAAQ,KAAK,eAAe,CAAA,GAAI,IAAI,CAAC,eAAe,yCAAY,eAAe,IAAI,CAAC;AAC1F,cAAM;AAAA,MACtB;AACY,YAAM,QAAQ,KAAK,eAAe,CAAA,GAAI,IAAI,CAAC,eAAe,yCAAY,aAAa;AAAA;AAAA,QAE/E,aAAa,CAAC,CAAC,eAAe,CAAC;AAAA,QAC/B;AAAA,MACH,EAAC,CAAC;AAAA,IACf;AAAA,EACA;AAAA,EACI,YAAY,SAAS;AACjB,UAAM,eAAe,KAAK,QAAS,EAAC,WAAW,MAAM,IAC/C,KAAK,QAAO,EAAG,QAAQ,QAAQ,EAAE,IACjC,KAAK,QAAS;AACpB,WAAO;AAAA,MACH,eAAe;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,aAAa;AAAA,IAChB;AAAA,EACT;AAAA;AAAA,EAEI,MAAM,kBAAkB0C,WAAU,eAAe,gBAAgB;;AAC7D,UAAM,eAAeA,UAAS,IAAI,CAAC,gBAAgB,YAAY,IAAI,0BAA0B,CAAC;AAC9F,UAAM,sBAAsB;AAAA,MACxB,GAAG,eAAe;AAAA,MAClB,GAAG,KAAK,YAAY,aAAa;AAAA,IACpC;AAED,UAAM,mBAAmB,MAAM,gBAAgB,UAAU,eAAe,WAAW,KAAK,WAAW,eAAe,MAAM,KAAK,MAAM,qBAAqB,KAAK,UAAU,EAAE,SAAS,KAAK,SAAS;AAChM,UAAM,QAAQ;AAAA,MACV,SAAS;AAAA,MACT,mBAAmB,6BAAM,iBAAiB;AAAA,MAC1C,YAAY;AAAA,IACf;AACD,UAAM,cAAc,OAAM,qDAAkB,qBAAqB,KAAK,OAAM,GAAI,cAAc,eAAe,OAAO,QAAW,OAAO,QAAW,QAAW,eAAe;AAC3K,UAAM,cAAc,CAAE;AACtB,UAAM,aAAa,CAAE;AAIrB,UAAM,sBAAsB,CAAC,EAAC,2CAAc,GAAG,SAAS,KAAK;AAC7D,QAAI,uBACA,aAAa,WAAW,KACxB,KAAK,0BACD,cAAc,UAAU,uBAAuB;AACnD,UAAI;AACA,cAAM,SAAS,MAAM,KAAK,sBAAsB,aAAa,CAAC,GAAG,eAAe,2CAAc,EAAE;AAChG,YAAI;AAEJ,YAAI;AACJ,yBAAiB,SAAS,QAAQ;AAC9B,cAAI,MAAM,QAAQ,MAAM,MAAM;AAC1B,kBAAM,SAAQ1C,MAAA,2CAAa,GAAG,OAAhB,gBAAAA,IAAoB;AAClC,gBAAI,SAAS;AACT,oBAAM,QAAQ,UAAU,OAAO,KAAK,EAAE;AAAA,UAClE;AACoB,cAAI,eAAe,QAAW;AAC1B,yBAAa;AAAA,UACrC,OACyB;AACD,yBAAa,OAAO,YAAY,KAAK;AAAA,UAC7D;AACoB,cAAI,iBAAiB,MAAM,OAAO,KAC9B,MAAM,QAAQ,mBAAmB,QAAW;AAC5C,wBAAY;AAAA,cACR,YAAY;AAAA,gBACR,cAAc,MAAM,QAAQ,eAAe;AAAA,gBAC3C,kBAAkB,MAAM,QAAQ,eAAe;AAAA,gBAC/C,aAAa,MAAM,QAAQ,eAAe;AAAA,cAC7C;AAAA,YACJ;AAAA,UACzB;AAAA,QACA;AACgB,YAAI,eAAe,QAAW;AAC1B,gBAAM,IAAI,MAAM,+CAA+C;AAAA,QACnF;AACgB,oBAAY,KAAK,CAAC,UAAU,CAAC;AAC7B,eAAM,2CAAc,GAAG,aAAa;AAAA,UAChC;AAAA,UACA;AAAA,QACpB;AAAA,MACA,SACmBE,IAAG;AACN,eAAM,2CAAc,GAAG,eAAeA;AACtC,cAAMA;AAAA,MACtB;AAAA,IACA,OACa;AAED,YAAM,UAAU,MAAM,QAAQ,WAAW,aAAa,IAAI,CAAC,aAAaX,OAAM,KAAK,UAAU,aAAa,EAAE,GAAG,eAAe,aAAaA,GAAC,GAAI,2CAAcA,GAAE,CAAC,CAAC;AAElK,YAAM,QAAQ,IAAI,QAAQ,IAAI,OAAO,SAASA,OAAM;;AAChD,YAAI,QAAQ,WAAW,aAAa;AAChC,gBAAM,SAAS,QAAQ;AACvB,qBAAW,cAAc,OAAO,aAAa;AACzC,gBAAI,WAAW,QAAQ,MAAM,MAAM;AAC/B,oBAAM,SAAQS,MAAA,2CAAa,GAAG,OAAhB,gBAAAA,IAAoB;AAClC,kBAAI,SAAS;AACT,2BAAW,QAAQ,UAAU,OAAO,KAAK,EAAE;AAAA,YAC3E;AACwB,uBAAW,QAAQ,oBAAoB;AAAA,cACnC,GAAG,WAAW;AAAA,cACd,GAAG,WAAW,QAAQ;AAAA,YACzB;AAAA,UACzB;AACoB,cAAI,OAAO,YAAY,WAAW,GAAG;AACjC,mBAAO,YAAY,CAAC,EAAE,QAAQ,oBAAoB;AAAA,cAC9C,GAAG,OAAO;AAAA,cACV,GAAG,OAAO,YAAY,CAAC,EAAE,QAAQ;AAAA,YACpC;AAAA,UACzB;AACoB,sBAAYT,EAAC,IAAI,OAAO;AACxB,qBAAWA,EAAC,IAAI,OAAO;AACvB,kBAAOY,MAAA,2CAAcZ,QAAd,gBAAAY,IAAkB,aAAa;AAAA,YAClC,aAAa,CAAC,OAAO,WAAW;AAAA,YAChC,WAAW,OAAO;AAAA,UAC1C;AAAA,QACA,OACqB;AAED,kBAAME,MAAA,2CAAcd,QAAd,gBAAAc,IAAkB,eAAe,QAAQ;AAC/C,iBAAO,QAAQ,OAAO,QAAQ,MAAM;AAAA,QACxD;AAAA,MACA,CAAa,CAAC;AAAA,IACd;AAEQ,UAAM,SAAS;AAAA,MACX;AAAA,MACA,WAAW,WAAW,UAChBF,MAAA,KAAK,sBAAL,gBAAAA,IAAA,WAAyB,GAAG,cAC5B;AAAA,IACT;AACD,WAAO,eAAe,QAAQ,SAAS;AAAA,MACnC,OAAO,cACD,EAAE,QAAQ,2CAAa,IAAI,CAAC,YAAY,QAAQ,OAAM,IACtD;AAAA,MACN,cAAc;AAAA,IAC1B,CAAS;AACD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,gBAAgB,EAAE,UAAAuC,WAAU,OAAAuJ,QAAO,cAAc,eAAe,kBAAmB;AACrF,UAAM,eAAevJ,UAAS,IAAI,CAAC,gBAAgB,YAAY,IAAI,0BAA0B,CAAC;AAC9F,UAAM,sBAAsB;AAAA,MACxB,GAAG,eAAe;AAAA,MAClB,GAAG,KAAK,YAAY,aAAa;AAAA,IACpC;AAED,UAAM,mBAAmB,MAAM,gBAAgB,UAAU,eAAe,WAAW,KAAK,WAAW,eAAe,MAAM,KAAK,MAAM,qBAAqB,KAAK,UAAU,EAAE,SAAS,KAAK,SAAS;AAChM,UAAM,QAAQ;AAAA,MACV,SAAS;AAAA,MACT,mBAAmB,6BAAM,iBAAiB;AAAA,MAC1C,YAAY;AAAA,MACZ,QAAQ;AAAA,IACX;AACD,UAAM,cAAc,OAAM,qDAAkB,qBAAqB,KAAK,OAAM,GAAI,cAAc,eAAe,OAAO,QAAW,OAAO,QAAW,QAAW,eAAe;AAE3K,UAAM,uBAAuB,CAAE;AAC/B,UAAM,UAAU,MAAM,QAAQ,WAAW,aAAa,IAAI,OAAO,aAAa,UAAU;AAEpF,YAAM,SAAS,cAAc,2BAA2B,WAAW,EAAE,SAAU;AAC/E,YAAM,SAAS,MAAMuJ,OAAM,OAAO,QAAQ,YAAY;AACtD,UAAI,UAAU,MAAM;AAChB,6BAAqB,KAAK,KAAK;AAAA,MAC/C;AACY,aAAO;AAAA,IACnB,CAAS,CAAC;AAGF,UAAM,gBAAgB,QACjB,IAAI,CAAC,QAAQ,WAAW,EAAE,QAAQ,YAAY,2CAAc,SAAS,EACrE,OAAO,CAAC,EAAE,OAAM,MAAQ,OAAO,WAAW,eAAe,OAAO,SAAS,QAC1E,OAAO,WAAW,UAAU;AAEhC,UAAM,cAAc,CAAE;AACtB,UAAM,QAAQ,IAAI,cAAc,IAAI,OAAO,EAAE,QAAQ,eAAe,WAAY,GAAE1M,OAAM;AACpF,UAAI,cAAc,WAAW,aAAa;AACtC,cAAM,SAAS,cAAc;AAC7B,oBAAYA,EAAC,IAAI;AACjB,YAAI,OAAO,QAAQ;AACf,iBAAM,yCAAY,kBAAkB,OAAO,CAAC,EAAE;AAAA,QAClE;AACgB,eAAO,yCAAY,aAAa;AAAA,UAC5B,aAAa,CAAC,MAAM;AAAA,QACxC;AAAA,MACA,OACiB;AAED,eAAM,yCAAY,eAAe,cAAc;AAC/C,eAAO,QAAQ,OAAO,cAAc,MAAM;AAAA,MAC1D;AAAA,IACA,CAAS,CAAC;AACF,UAAM,SAAS;AAAA,MACX;AAAA,MACA;AAAA,IACH;AAID,WAAO,eAAe,QAAQ,SAAS;AAAA,MACnC,OAAO,cACD,EAAE,QAAQ,2CAAa,IAAI,CAAC,YAAY,QAAQ,OAAM,IACtD;AAAA,MACN,cAAc;AAAA,IAC1B,CAAS;AACD,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,MAAM,SAASmD,WAAU,SAAS,WAAW;AAEzC,QAAI;AACJ,QAAI,MAAM,QAAQ,OAAO,GAAG;AACxB,sBAAgB,EAAE,MAAM,QAAS;AAAA,IAC7C,OACa;AACD,sBAAgB;AAAA,IAC5B;AACQ,UAAM,eAAeA,UAAS,IAAI,CAAC,gBAAgB,YAAY,IAAI,0BAA0B,CAAC;AAC9F,UAAM,CAAC,gBAAgB,WAAW,IAAI,KAAK,6CAA6C,aAAa;AACrG,mBAAe,YAAY,eAAe,aAAa;AACvD,QAAI,CAAC,KAAK,OAAO;AACb,aAAO,KAAK,kBAAkB,cAAc,aAAa,cAAc;AAAA,IACnF;AACQ,UAAM,EAAE,OAAAuJ,OAAK,IAAK;AAClB,UAAM,eAAe,KAAK,wCAAwC,WAAW;AAC7E,UAAM,EAAE,aAAa,qBAAsB,IAAG,MAAM,KAAK,gBAAgB;AAAA,MACrE,UAAU;AAAA,MACV,OAAAA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,gBAAgB;AAAA,IAC5B,CAAS;AACD,QAAI,YAAY,CAAE;AAClB,QAAI,qBAAqB,SAAS,GAAG;AACjC,YAAM,UAAU,MAAM,KAAK,kBAAkB,qBAAqB,IAAI,CAAC1M,OAAM,aAAaA,EAAC,CAAC,GAAG,aAAa,cAAc;AAC1H,YAAM,QAAQ,IAAI,QAAQ,YAAY,IAAI,OAAO,YAAY,UAAU;AACnE,cAAM,cAAc,qBAAqB,KAAK;AAC9C,oBAAY,WAAW,IAAI;AAE3B,cAAM,SAAS,cAAc,2BAA2B,aAAa,WAAW,CAAC,EAAE,SAAU;AAC7F,eAAO0M,OAAM,OAAO,QAAQ,cAAc,UAAU;AAAA,MACpE,CAAa,CAAC;AACF,kBAAY,QAAQ,aAAa,CAAE;AAAA,IAC/C;AACQ,WAAO,EAAE,aAAa,UAAW;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,iBAAiB,UAAU;AACvB,WAAO,CAAE;AAAA,EACjB;AAAA,EACI,aAAa;AACT,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,YAAY;AACR,WAAO;AAAA,MACH,GAAG,KAAK,iBAAkB;AAAA,MAC1B,OAAO,KAAK,SAAU;AAAA,MACtB,QAAQ,KAAK,WAAY;AAAA,IAC5B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,MAAM,eAAe,cAAc,SAAS,WAAW;AACnD,UAAM,iBAAiB,aAAa,IAAI,CAAC,gBAAgB,YAAY,gBAAgB;AACrF,WAAO,KAAK,SAAS,gBAAgB,SAAS,SAAS;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,MAAM,KAAKvJ,WAAU,SAAS,WAAW;AACrC,UAAM,SAAS,MAAM,KAAK,SAAS,CAACA,UAAS,IAAI,0BAA0B,CAAC,GAAG,SAAS,SAAS;AACjG,UAAM,cAAc,OAAO;AAC3B,WAAO,YAAY,CAAC,EAAE,CAAC,EAAE;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,MAAM,WAAW,aAAa,SAAS,WAAW;AAC9C,UAAM,iBAAiB,YAAY,eAAgB;AACnD,WAAO,KAAK,KAAK,gBAAgB,SAAS,SAAS;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,MAAM,gBAAgBA,WAAU,SAAS,WAAW;AAChD,WAAO,KAAK,KAAKA,WAAU,SAAS,SAAS;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,MAAM,QAAQiG,OAAM,SAAS,WAAW;AACpC,UAAM,UAAU,IAAI,aAAaA,KAAI;AACrC,UAAM,SAAS,MAAM,KAAK,KAAK,CAAC,OAAO,GAAG,SAAS,SAAS;AAC5D,QAAI,OAAO,OAAO,YAAY,UAAU;AACpC,YAAM,IAAI,MAAM,iDAAiD;AAAA,IAC7E;AACQ,WAAO,OAAO;AAAA,EACtB;AAAA,EACI,qBAAqB,cAAc9B,SAAQ;AACvC,QAAI,OAAO,KAAK,cAAc,YAAY;AACtC,YAAM,IAAI,MAAM,uEAAuE;AAAA,IACnG;AACQ,QAAIA,WAAA,gBAAAA,QAAQ,QAAQ;AAChB,YAAM,IAAI,MAAM,2DAA2D;AAAA,IACvF;AAEQ,UAAM0C,UAAS;AACf,UAAM,OAAO1C,WAAA,gBAAAA,QAAQ;AACrB,UAAM,cAAc0C,QAAO,eAAe;AAC1C,UAAM,SAAS1C,WAAA,gBAAAA,QAAQ;AACvB,UAAM,aAAaA,WAAA,gBAAAA,QAAQ;AAC3B,QAAI,WAAW,YAAY;AACvB,YAAM,IAAI,MAAM,uFAAuF;AAAA,IACnH;AACQ,QAAI,eAAe,QAAQ;AAC3B,QAAI;AACJ,QAAI,YAAY0C,OAAM,GAAG;AACrB,cAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,UAAU;AAAA,YACN,MAAM;AAAA,YACN;AAAA,YACA,YAAY,gBAAgBA,OAAM;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,IACb,OACa;AACD,UAAI,UAAUA,SAAQ;AAClB,uBAAeA,QAAO;AAAA,MACtC;AACY,cAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,UAAU;AAAA,YACN,MAAM;AAAA,YACN;AAAA,YACA,YAAYA;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACb;AACQ,UAAM,MAAM,KAAK,UAAU,KAAK;AAChC,UAAM,eAAe,eAAe,KAAK,CAAC,UAAU;AAChD,UAAI,CAAC,MAAM,cAAc,MAAM,WAAW,WAAW,GAAG;AACpD,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACtE;AACY,YAAM,WAAW,MAAM,WAAW,KAAK,CAAC,OAAO,GAAG,SAAS,YAAY;AACvE,UAAI,CAAC,UAAU;AACX,cAAM,IAAI,MAAM,gCAAgC,YAAY,GAAG;AAAA,MAC/E;AACY,aAAO,SAAS;AAAA,IAC5B,CAAS;AACD,QAAI,CAAC,YAAY;AACb,aAAO,IAAI,KAAK,YAAY,EAAE,WAAW;AAAA,QACrC,SAAS;AAAA,MACzB,CAAa;AAAA,IACb;AACQ,UAAM,eAAe,oBAAoB,OAAO;AAAA;AAAA,MAE5C,QAAQ,CAAC,OAAO1C,YAAW,aAAa,OAAO,MAAM,KAAKA,OAAM;AAAA,IAC5E,CAAS;AACD,UAAM,aAAa,oBAAoB,OAAO;AAAA,MAC1C,QAAQ,MAAM;AAAA,IAC1B,CAAS;AACD,UAAM,qBAAqB,aAAa,cAAc;AAAA,MAClD,WAAW,CAAC,UAAU;AAAA,IAClC,CAAS;AACD,WAAO,iBAAiB,KAAK;AAAA,MACzB;AAAA,QACI,KAAK;AAAA,MACR;AAAA,MACD;AAAA,IACH,CAAA,EAAE,WAAW;AAAA,MACV,SAAS;AAAA,IACrB,CAAS;AAAA,EACT;AACA;AC7hBA,MAAM,uBAAuB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,eAAe,qBAAqB,OAAO,eAE3C,SAAS,CAAA,GAAI;AACH,QAAA,oBAAoB,iBAAiB,oBAAoB,KAAK;AACpE,MAAI,CAAC,mBAAmB;AACpB,UAAM,IAAI,MAAM,+CAA+C,KAAK,4CAA4C;AAAA,EAAA;AAEpH,QAAM,EAAE,eAAe,SAAS,GAAG,aAAiB,IAAA;AAChD,MAAA;AACA,YAAQ,mBAAmB;AAAA,MACvB,KAAK,UAAU;AACX,cAAM,EAAE,WAAA,IAAe,MAAM,OAAO,mBAAmB;AACvD,eAAO,IAAI,WAAW,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEpD,KAAK,aAAa;AACd,cAAM,EAAE,cAAA,IAAkB,MAAM,OAAO,sBAAsB;AAC7D,eAAO,IAAI,cAAc,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEvD,KAAK,gBAAgB;AACjB,cAAM,EAAE,gBAAA,IAAoB,MAAM,OAAO,mBAAmB;AAC5D,eAAO,IAAI,gBAAgB,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEzD,KAAK,UAAU;AACX,cAAM,EAAE,WAAA,IAAe,MAAM,OAAO,gCAAmB;AACvD,eAAO,IAAI,WAAW,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEpD,KAAK,mBAAmB;AACpB,cAAM,EAAE,aAAA,IAAiB,MAAM,OAAO,yCAA4B;AAClE,eAAO,IAAI,aAAa,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEtD,KAAK,uBAAuB;AACxB,cAAM,EAAE,aAAA,IAAiB,MAAM,OAAO,6CAAgC;AACtE,eAAO,IAAI,aAAa,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEtD,KAAK,gBAAgB;AACjB,cAAM,EAAE,uBAAA,IAA2B,MAAM,OAAO,yBAAyB;AACzE,eAAO,IAAI,uBAAuB,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEhE,KAAK,UAAU;AACX,cAAM,EAAE,WAAA,IAAe,MAAM,OAAO,mBAAmB;AACvD,eAAO,IAAI,WAAW,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEpD,KAAK,aAAa;AACd,cAAM,EAAE,cAAA,IAAkB,MAAM,OAAO,sBAAsB;AAC7D,eAAO,IAAI,cAAc,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEvD,KAAK,QAAQ;AACT,cAAM,EAAE,SAAA,IAAa,MAAM,OAAO,8BAAiB;AACnD,eAAO,IAAI,SAAS,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAElD,KAAK,YAAY;AACb,cAAM,EAAE,aAAA,IAAiB,MAAM,OAAO,kCAAqB;AAC3D,eAAO,IAAI,aAAa,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEtD,KAAK,WAAW;AACZ,cAAM,EAAE,oBAAA,IAAwB,MAAM,OAAO,6BAAgB;AAC7D,eAAO,IAAI,oBAAoB,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAE7D,KAAK,aAAa;AACR,cAAA,EAAE,cAAc,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMhC;AAAA,QAA4C;AAC5C,eAAO,IAAI,cAAc,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAEvD,KAAK,YAAY;AACP,cAAA,EAAE,eAAe,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMjC;AAAA,QAA6C;AAC7C,eAAO,IAAI,eAAe,EAAE,OAAO,GAAG,cAAc;AAAA,MAAA;AAAA,MAExD,SAAS;AACC,cAAA,YAAY,qBAAqB,KAAK,IAAI;AAC1C,cAAA,IAAI,MAAM,gCAAgC,iBAAiB;AAAA;AAAA,iCAAyC,SAAS,EAAE;AAAA,MAAA;AAAA,IACzH;AAAA,WAID3G,IAAG;AACN,QAAI,UAAUA,MAAKA,GAAE,KAAK,SAAS,sBAAsB,GAAG;AACxD,YAAM,mBAAmB,IAAI,MAAMA,EAAC,EAAE,QACjC,MAAM,8BAA8B,EAAE,CAAC,EACvC,MAAM,GAAG,EAAE,CAAC;AACX,YAAA,IAAI,MAAM,oBAAoB,gBAAgB,uCAC/B,gBAAgB,oBAAoB,gBAAgB,IAAI;AAAA,IAAA;AAE3E,UAAAA;AAAA,EAAA;AAEd;AAYO,SAAS,oBAAoB,WAAW;AACvC,MAAA,UAAU,WAAW,OAAO,KAC5B,UAAU,WAAW,OAAO,KAC5B,UAAU,WAAW,IAAI,GAAG;AACrB,WAAA;AAAA,EAEF,WAAA,UAAU,WAAW,QAAQ,GAAG;AAC9B,WAAA;AAAA,EAEF,WAAA,UAAU,WAAW,SAAS,GAAG;AAC/B,WAAA;AAAA,EAEF,WAAA,UAAU,WAAW,oBAAoB,GAAG;AAC1C,WAAA;AAAA,EAEF,WAAA,UAAU,WAAW,QAAQ,GAAG;AAC9B,WAAA;AAAA,EAEF,WAAA,UAAU,WAAW,SAAS,GAAG;AAC/B,WAAA;AAAA,EAAA,OAEN;AACM,WAAA;AAAA,EAAA;AAEf;AACA,MAAM,2BAA2B,cAAc;AAAA,EAC3C,WAAW;AACA,WAAA;AAAA,EAAA;AAAA,EAEX,YAAY,QAAQ;AAChB,UAAM,MAAM;AACL,WAAA,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,aAAa,aAAa;AAAA,IAAA,CACrC;AAEM,WAAA,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IAAC,CACX;AAIM,WAAA,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IAAA,CACV;AAIM,WAAA,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IAAA,CACV;AAMM,WAAA,eAAe,MAAM,2BAA2B;AAAA,MACnD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,IAAC,CACX;AAEM,WAAA,eAAe,MAAM,wBAAwB;AAAA,MAChD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAACqJ,YAAW,SAAS;AACxB,aAAK,wBAAwB,uBAAuB,CAACA,SAAQ,GAAG,IAAI;AACpE,eAAO,IAAI,mBAAmB;AAAA,UAC1B,eAAe,KAAK;AAAA,UACpB,oBAAoB,KAAK;AAAA,UACzB,cAAc,KAAK;AAAA,UACnB,wBAAwB,KAAK;AAAA,QAAA,CAChC;AAAA,MAAA;AAAA,IACL,CACH;AACI,SAAA,iBAAiB,OAAO,iBAAiB,CAAC;AAC3C,QAAA,OAAO,uBAAuB,OAAO;AACrC,WAAK,sBAAsB;AAAA,IAAA,OAE1B;AACI,WAAA,sBAAsB,OAAO,sBAAsB;AAAA,QACpD;AAAA,QACA;AAAA,MACJ;AAAA,IAAA;AAEJ,QAAI,OAAO,cAAc;AAChB,WAAA,gBAAgB,OAAO,aAAa,SAAS,GAAG,IAC/C,OAAO,eACP,GAAG,OAAO,YAAY;AAAA,IAAA,OAE3B;AACD,WAAK,gBAAgB;AAAA,IAAA;AAEpB,SAAA,0BACD,OAAO,0BAA0B,KAAK;AAAA,EAAA;AAAA,EAE9C,MAAM,OAAO1C,SAAQ;AACX,UAAA,SAAS,EAAE,GAAG,KAAK,gBAAgB,GAAG,KAAK,aAAaA,OAAM,EAAE;AACtE,QAAI,mBAAmB,MAAM,qBAAqB,OAAO,OAAO,OAAO,eAAe,MAAM;AAE5F,UAAM,gCAAgC,OAAO,QAAQ,KAAK,uBAAuB;AAC7E,QAAA,8BAA8B,SAAS,GAAG;AAC1C,iBAAW,CAAC,QAAQ,IAAI,KAAK,+BAA+B;AACxD,YAAI,UAAU;AAAA,QAEV,OAAO,iBAAiB,MAAM,MAAM,YAAY;AAEhD,6BAAmB,MAAM,iBAAiB,MAAM,EAAE,GAAG,IAAI;AAAA,QAAA;AAAA,MAC7D;AAAA,IACJ;AAEG,WAAA;AAAA,EAAA;AAAA,EAEX,MAAM,UAAUnE,WAAU,SAAS,YAAY;AAC3C,UAAM,QAAQ,MAAM,KAAK,OAAO,OAAO;AACvC,WAAO,MAAM,UAAUA,WAAU,WAAW,CAAA,GAAI,UAAU;AAAA,EAAA;AAAA,EAE9D,UAAU,OAEV,QAAQ;AACJ,SAAK,wBAAwB,YAAY,CAAC,OAAO,MAAM;AACvD,WAAO,IAAI,mBAAmB;AAAA,MAC1B,eAAe,KAAK;AAAA,MACpB,oBAAoB,KAAK;AAAA,MACzB,cAAc,KAAK;AAAA,MACnB,wBAAwB,KAAK;AAAA,IAAA,CAChC;AAAA,EAAA;AAAA;AAAA,EAGL,aAAamE,SAAQ;AACX,UAAA,gBAAeA,WAAA,gBAAAA,QAAQ,iBAAgB,CAAC;AAE9C,QAAI,cAAc,CAAC;AACnB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AACrD,UAAI,IAAI,WAAW,KAAK,aAAa,GAAG;AACpC,cAAM,cAAc,KAAK,cAAc,KAAK,KAAK,aAAa;AAC9D,oBAAY,WAAW,IAAI;AAAA,MAAA;AAAA,IAC/B;AAEA,QAAA,KAAK,wBAAwB,OAAO;AACpC,oBAAc,OAAO,YAAY,OAAO,QAAQ,WAAW,EAAE,OAAO,CAAC,CAAC,GAAG,MAAM,KAAK,oBAAoB,SAAS,GAAG,CAAC,CAAC;AAAA,IAAA;AAEnH,WAAA;AAAA,EAAA;AAAA,EAEX,cAAcrH,MAAK,QAAQ;AAChB,WAAAA,KAAI,WAAW,MAAM,IAAIA,KAAI,MAAM,OAAO,MAAM,IAAIA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/D,WAAWqH,SAAQ;AACf,UAAM,eAAe,EAAE,GAAIA,WAAU,GAAI;AACnC,UAAA,cAAc,KAAK,aAAa,YAAY;AAClD,UAAM,kBAAkB,OAAO,YAAY,OAAO,QAAQ,YAAY,EAAE,OAAO,CAAC,CAACH,EAAC,MAAMA,OAAM,cAAc,CAAC;AAC7G,oBAAgB,eAAe,OAAO,YAAY,OAAO,QAAQ,aAAa,gBAAgB,CAAA,CAAE,EAAE,OAAO,CAAC,CAACA,EAAC,MAAM,KAAK,iBACnH,CAAC,OAAO,KAAK,WAAW,EAAE,SAAS,KAAK,cAAcA,IAAG,KAAK,aAAa,CAAC,CAAC,CAAC;AAC5E,UAAA,uBAAuB,IAAI,mBAAmB;AAAA,MAChD,eAAe,EAAE,GAAG,KAAK,gBAAgB,GAAG,YAAY;AAAA,MACxD,oBAAoB,MAAM,QAAQ,KAAK,mBAAmB,IACpD,CAAC,GAAG,KAAK,mBAAmB,IAC5B,KAAK;AAAA,MACX,cAAc,KAAK;AAAA,MACnB,wBAAwB,KAAK;AAAA,IAAA,CAChC;AACD,WAAO,IAAI,gBAAgB;AAAA,MACvB,QAAQ;AAAA,MACR,OAAO;AAAA,IAAA,CACV;AAAA,EAAA;AAAA,EAEL,MAAM,OAAO,OAAO,SAAS;AACzB,UAAM,QAAQ,MAAM,KAAK,OAAO,OAAO;AACjC,UAAAG,UAAS,aAAa,OAAO;AAC5B,WAAA,MAAM,OAAO,OAAOA,OAAM;AAAA,EAAA;AAAA,EAErC,MAAM,OAAO,OAAO,SAAS;AACzB,UAAM,QAAQ,MAAM,KAAK,OAAO,OAAO;AACjC,UAAA,mBAAmB,IAAI,wBAAwB;AAAA,MACjD,WAAW,MAAM,MAAM,OAAO,OAAO,OAAO;AAAA,MAC5C,QAAQ;AAAA,IAAA,CACX;AACD,UAAM,iBAAiB;AAChB,WAAA,uBAAuB,mBAAmB,gBAAgB;AAAA,EAAA;AAAA,EAErE,MAAM,MAAM,QAAQ,SAAS,cAAc;AAGvC,WAAO,MAAM,MAAM,QAAQ,SAAS,YAAY;AAAA,EAAA;AAAA,EAEpD,OAAO,UAAU,WAAW,SAAS;AACjC,UAAM,QAAQ,MAAM,KAAK,OAAO,OAAO;AACjC,UAAAA,UAAS,aAAa,OAAO;AAC5B,WAAA,MAAM,UAAU,WAAWA,OAAM;AAAA,EAAA;AAAA,EAE5C,OAAO,UAAU,OAAO,SAAS,eAAe;AAC5C,UAAM,QAAQ,MAAM,KAAK,OAAO,OAAO;AACjC,UAAAA,UAAS,aAAa,OAAO;AAC5B,WAAA,MAAM,UAAU,OAAOA,SAAQ;AAAA,MAClC,GAAG;AAAA,MACH,eAAe;AAAA,MACf,cAAc,+CAAe;AAAA,MAC7B,cAAc,+CAAe;AAAA,MAC7B,aAAa,+CAAe;AAAA,MAC5B,cAAc,+CAAe;AAAA,MAC7B,cAAc,+CAAe;AAAA,MAC7B,aAAa,+CAAe;AAAA,IAAA,CAC/B;AAAA,EAAA;AAAA,EAEL,aAAa,OAAO,SAAS,eAAe;AAExC,UAAM,YAAY;AAClB,oBAAgB,mBAAmB;AAC/B,YAAM,QAAQ,MAAM,UAAU,OAAO,OAAO;AACtC,YAAAA,UAAS,aAAa,OAAO;AACnC,YAAM,cAAc,MAAM,aAAa,OAAOA,SAAQ,aAAa;AACnE,uBAAiB,SAAS,aAAa;AAC7B,cAAA;AAAA,MAAA;AAAA,IACV;AAEG,WAAA,uBAAuB,mBAAmB,kBAAkB;AAAA,EAAA;AAE3E;AAmNsB,eAAA,cAAc,OAEpC,QAAQ;AACJ,QAAM,EAAE,oBAAoB,cAAc,eAAe,GAAG,WAAW;AAAA,IACnE,cAAc;AAAA,IACd,GAAI,UAAU,CAAA;AAAA,EAClB;AACI,MAAA,yBAAyB,MAAM,QAAQ,kBAAkB,IACvD,CAAC,GAAG,kBAAkB,IACtB;AACF,MAAA,CAAC,SAAS,2BAA2B,QAAW;AACvB,6BAAA,CAAC,SAAS,eAAe;AAAA,EAAA;AAElD,MAAA,gBAAgB,2BAA2B,QAAW;AAC9C,YAAA,KAAK,mBAAmB,YAAY,sIAEzB;AAAA,EAAA;AAGjB,QAAA,aAAa,EAAE,GAAG,OAAO;AAC/B,MAAI,2BAA2B,QAAW;AACtC,WAAO,IAAI,mBAAmB;AAAA,MAC1B,eAAe;AAAA,QACX,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,IAAA,CACH;AAAA,EAAA,OAEA;AACD,QAAI,OAAO;AACP,iBAAW,QAAQ;AAAA,IAAA;AAEvB,QAAI,eAAe;AACf,iBAAW,gBAAgB;AAAA,IAAA;AAE/B,WAAO,IAAI,mBAAmB;AAAA,MAC1B,eAAe;AAAA,MACf;AAAA,MACA,oBAAoB;AAAA,IAAA,CACvB;AAAA,EAAA;AAET;ACpkBO,MAAM,gBAAN,MAAM,cAAa;AAAA,EAQhB,YAAY,YAAqB;AANjC,sCAAmC;AACpC,iCAA8B;AAC9B,sCAAqB;AACrB,gDAA6C;AAC7C,uCAAuB;AAG5B,SAAK,aAAa,cAAc/G,cAAK,KAAK,QAAQ,OAAO,kBAAkB;AAAA,EAAA;AAAA,EAG7E,OAAO,YAAY,YAAmC;AAChD,QAAA,CAAC,cAAa,UAAU;AACb,oBAAA,WAAW,IAAI,cAAa,UAAU;AAAA,eAC1C,YAAY;AACrB,oBAAa,SAAS,aAAa;AAAA,IAAA;AAErC,WAAO,cAAa;AAAA,EAAA;AAAA,EAGtB,MAAM,iBAAiE;AACjE,QAAA;AACI,YAAA,aAAa,KAAK,cAAcA,cAAK,KAAK,QAAQ,OAAO,kBAAkB;AACjF,YAAM,gBAAgB,MAAM0L,KAAG,SAAS,YAAY,OAAO;AACrD,YAAA3E,UAAS,KAAK,MAAM,aAAa;AAChC,aAAAA;AAAA,aACA,OAAO;AACP,aAAA,MAAM,sCAAsC,KAAK;AACjD,aAAA;AAAA,IAAA;AAAA,EACT;AAAA,EAGF,MAAM,kBAAiD;;AACrD,WAAO,KAAK,uBAAuB;AAC/B,QAAAA,UAAS,MAAM,KAAK,eAAe;AAEvC,QAAI,CAACA,SAAQ;AACX,aAAO,MAAM,+BAA+B;AAC5C,WAAK,QAAQ;AACb,WAAK,aAAa;AAClB,WAAK,uBAAuB;AACrB,aAAA;AAAA,IAAA;AAIT,QAAI,CAAEA,QAAwB,kBAAkB,CAAEA,QAAwB,SAAS;AAEjF,YAAM,YAA0B;AAAA,QAC9B,gBAAiBA,QAA2B,eAAe,iBAAiB;AAAA,QAC5E,aAAa;AAAA,QACb,SAAS;AAAA,UACP,CAAEA,QAA2B,eAAe,aAAa,GAAIA,QAA2B;AAAA,QAAA;AAAA,MAE5F;AACS,MAAAA,UAAA;AAEH,YAAA2E,KAAG,UAAU,KAAK,YAAY,KAAK,UAAU3E,SAAQ,MAAM,CAAC,GAAG,OAAO;AAAA,IAAA;AAG9E,UAAM,iBAAkBA,QAAwB;AAC1C,UAAA,gBAAiBA,QAAwB,QAAQ,cAAc;AAChE,SAAA,cAAeA,QAAwB,eAAe;AAE3D,QAAI,CAAC,eAAe;AACX,aAAA,MAAM,0CAA0C,cAAc,EAAE;AACvE,WAAK,QAAQ;AACN,aAAA;AAAA,IAAA;AAGT,UAAM,YAAY,cAAc;AAChC,UAAM,YAAU7G,MAAA,cAAc,kBAAd,gBAAAA,IAA6B,YAAW,cAAc,WAAW;AAC5E,SAAA,QAAQ,MAAM,cAAc,WAAW;AAAA,MAC1C,GAAG;AAAA,MACH;AAAA,IAAA,CACD;AAGI,SAAA,aAAa,MAAM,cAAc,WAAW;AAAA,MAC/C,GAAG;AAAA,MACH;AAAA,IAAA,CACD;AAED,SAAK,uBAAuB;AAE5B,WAAO,KAAK,gCAAgC,KAAK,cAAc,YAAY,UAAU,EAAE;AAEvF,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,MAAM,gBAAgB,UAAkB,qBAAoC,cAAuB;AAC7F,QAAA6G,UAAU,MAAM,KAAK,eAAe;AACxC,QAAI,CAACA,SAAQ;AACF,MAAAA,UAAA;AAAA,QACP,gBAAgB;AAAA,QAChB,aAAa,gBAAgB;AAAA,QAC7B,SAAS;AAAA,UACP,CAAC,QAAQ,GAAG;AAAA,QAAA;AAAA,MAEhB;AAAA,IAAA;AAEF,IAAAA,QAAO,iBAAiB;AACjB,IAAAA,QAAA,QAAQ,QAAQ,IAAI;AAC3B,IAAAA,QAAO,cAAc,gBAAgB;AAC/B,UAAA2E,KAAG,UAAU,KAAK,YAAY,KAAK,UAAU3E,SAAQ,MAAM,CAAC,GAAG,OAAO;AAAA,EAAA;AAAA,EAG9E,MAAM,sBAAsB,qBAAmC;AACvD,UAAA2E,KAAG,UAAU,KAAK,YAAY,KAAK,UAAU,qBAAqB,MAAM,CAAC,GAAG,OAAO;AAAA,EAAA;AAAA,EAG3F,MAAa,cAAc,SAAiB;AACtC,QAAA,CAAC,KAAK,YAAY;AACpB,aAAO,MAAM,uBAAuB;AAC7B,aAAA;AAAA,IAAA;AAET,UAAM,WAAW,MAAM,KAAK,WAAW,OAAO;AAAA,MAC5C,IAAI;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUF;AAAA,MACA,IAAI,aAAa,qBAAqB,OAAO,qBAAqB;AAAA,IAAA,CACnE;AAED,UAAM,aAAa,qCAAU;AAEzB,QAAA,OAAO,eAAe,UAAU;AAC3B,aAAA;AAAA,IAAA;AAET,WAAQ,cAAyB;AAAA,EAAA;AAAA,EAGnC,WAAiC;AAC3B,QAAA,CAAC,KAAK,SAAS,OAAO,KAAK,KAAK,KAAK,EAAE,WAAW,GAAG;AACvD,aAAO,MAAM,uBAAuB;AAC7B,aAAA;AAAA,IAAA;AAET,WAAO,KAAK;AAAA,EAAA;AAAA,EAGd,MAAM,cAAc;AAClB,WAAO,KAAK,oBAAoB;AAC5B,QAAA;AACG,WAAA,QAAQ,MAAM,KAAK,gBAAgB;AACxC,aAAO,KAAK,gBAAgB;AAAA,aACrB,OAAO;AACP,aAAA,MAAM,0BAA0B,KAAK;AAAA,IAAA;AAAA,EAC9C;AAEJ;AA5JE,cADW,eACI;AADV,IAAM,eAAN;AC9BP,eAAsB,sBAAsB,WAAoC;AAC1E,MAAA;AACF,UAAM,cAAc,MAAMA,KAAG,SAAS,SAAS;AAC/C,WAAO,0BAA0B,YAAY,SAAS,QAAQ,CAAC;AAAA,WACxD,OAAO;AACP,WAAA,MAAM,wBAAwB,KAAK;AACpC,UAAA;AAAA,EAAA;AAEV;AAEA,eAAsB,cAAc1L,OAA+B;AAC7D,MAAA;AAEF,UAAM,wBAAwB,MAAM,MAAMA,KAAI,EAC3C,OAAO,KAAK,KAAK;AAAA;AAAA,MAEhB,KAAK;AAAA;AAAA,MACL,oBAAoB;AAAA;AAAA,IACrB,CAAA,EACA,KAAK;AAAA;AAAA,MAEJ,SAAS;AAAA;AAAA,MACT,aAAa;AAAA;AAAA,IACd,CAAA,EACA,SAAS;AAGZ,WAAO,0BAA0B,sBAAsB,SAAS,QAAQ,CAAC;AAAA,WAClE,OAAO;AACP,WAAA,MAAM,4BAA4B,KAAK;AAE9C,WAAO,sBAAsBA,KAAI;AAAA,EAAA;AAErC;ACpBa,MAAA,yCAAyB,IAA6B;AAOtD,MAAA,yCAAyB,IAA6B;AAQnE,eAAsB,mBACpB,iBACA,gBACA,OACA,OACA,SACA,UACA,QACA;;AAEA,MAAI,QAAQ;AACJ,UAAA,qBAAqB,mBAAmB,IAAI,MAAM;AACxD,QAAI,oBAAoB;AACtB,yBAAmB,MAAM;AACzB,yBAAmB,OAAO,MAAM;AAChC,YAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,GAAI,CAAC;AACjD,aAAA,MAAM,IAAI,MAAM,kDAAkD;AAAA,IAAA;AAGrE,UAAA,aAAa,IAAI,gBAAgB;AACpB,uBAAA,IAAI,QAAQ,UAAU;AAClC,WAAA,MAAM,IAAI,MAAM,2BAA2B;AAAA,EAAA;AAGpD,MAAI,gBAAgB;AAEd,QAAA,eAAe,aAAa,YAAY;AAC9C,QAAM,uBAAuB,aAAa;AAE1C,QAAM,aAAa;AAAA,IACjB,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,aAAa;AAAA,EACf;AAEI,MAAA;AAEF,QAAI4C,YAA0B;AAE9B,QAAI,CAAC,OAAO;AACJ,YAAA,IAAI,MAAM,uBAAuB;AAAA,IAAA;AAIzC,QAAI,OAAO;AACL,UAAA,OAAO,UAAU,UAAU;AAC7B,QAAAA,UAAS,KAAK,IAAI,aAAa,KAAK,CAAC;AAAA,MAAA,OAChC;AAEL,cAAM,UAAmC,CAAC;AAG1C,YAAI,MAAM,MAAM;AACN,kBAAA,KAAK,EAAE,MAAM,QAAQ,MAAM,KAAK,MAAM,MAAM;AAAA,QAAA;AAItD,YAAI,MAAM,UAAU,MAAM,OAAO,SAAS,GAAG;AAChC,qBAAA,aAAa,MAAM,QAAQ;AAE9B,kBAAA,YAAY,GAAG,SAAS;AACxB,kBAAA,cAAc,MAAM,cAAc,SAAS;AACjD,oBAAQ,KAAK;AAAA,cACX,MAAM;AAAA,cACN,MAAM,YAAY,SAAS;AAAA,YAAA,CAC5B;AACD,oBAAQ,KAAK;AAAA,cACX,MAAM;AAAA,cACN,WAAW;AAAA,gBACT,KAAK;AAAA,cAAA;AAAA,YACP,CACD;AAAA,UAAA;AAAA,QACH;AAIF,YAAI,MAAM,aAAa,MAAM,UAAU,SAAS,GAAG;AACtC,qBAAA,gBAAgB,MAAM,WAAW;AACpC,kBAAA,YAAY,GAAG,YAAY;AACjC,oBAAQ,KAAK;AAAA,cACX,MAAM;AAAA,cACN,MAAM,eAAe,SAAS;AAAA,YAAA,CAC/B;AAAA,UAAA;AAAA,QACH;AAGF,QAAAA,UAAS,KAAK,IAAI,aAAa,EAAE,QAAS,CAAA,CAAC;AAAA,MAAA;AAAA,IAC7C;AAGF,QAAI,eAAe;AAEnB,UAAM,SAAQ,6DAAsB,mBAAkB,iBAAiB,2BAA2B,cAAc,IAAI;AAEpH,UAAM,WAAW,aAAa,gBAAc1C,MAAA,MAAM,cAAN,gBAAAA,IAAA,YAAkB,WAAU,QAAQ;AAE1E,UAAA,YAAW,6DAAsB,mBAAkB;AACzD,UAAM,eACJK,OAAAF,MAAA,6DAAsB,kBAAtB,gBAAAA,IAAqC,YAArC,gBAAAE,IAA8C,cAAc,SAAS,kBACrED,MAAA,6DAAsB,UAAtB,gBAAAA,IAA6B,cAAc,SAAS;AAChD,UAAA,eAAc,6DAAsB,mBAAkB;AACtD,UAAA,aAAY,6DAAsB,mBAAkB;AAEnD,WAAA,MAAM,IAAI,MAAM,8BAA8B;AAErD,WAAO,cAAc;AACnB,YAAM,SAAS,MAAM,SAAS,OAAOsC,WAAU;AAAA,QAC7C,QAAQ,UAASnC,MAAA,mBAAmB,IAAI,MAAM,MAA7B,gBAAAA,IAAgC,SAAS;AAAA,MAAA,CAC3D;AAED,UAAI,iBAAiB;AACrB,UAAI,YAAmB,CAAC;AAEpB,UAAA;AAEF,yBAAiB,SAAS,QAAQ;AACb,6BAAA,YAAY,OAAO,oBAAqB;AAE3D,cAAI,MAAM,SAAS;AACjB,gBAAI,eAAe;AACnB,gBAAI,MAAM,QAAQ,MAAM,OAAO,GAAG;AAE1B,oBAAA,cAAc,MAAM,QAAQ,KAAK,CAAC,SAAS,KAAK,SAAS,UAAU,KAAK,SAAS,YAAY;AAEnG,8BAAe,2CAAa,SAAQ;AAAA,YAAA,OAC/B;AACL,6BAAe,MAAM;AAAA,YAAA;AAEL,8BAAA;AAClB;AAAA,cACE,KAAK,UAAU;AAAA,gBACb,MAAM;AAAA,gBACN,SAAS;AAAA,cACQ,CAAA;AAAA;AAAA,UACrB;AAOF,cACE,MAAM,cACN,MAAM,oBACL,MAAM,QAAQ,MAAM,OAAO,KAAK,MAAM,QAAQ,KAAK,CAAC,SAAS,KAAK,SAAS,UAAU,GACtF;AACA,gBAAI,iBAAwB,CAAC;AAEZ,6BAAA,MAAM,oBAAoB,CAAC;AAE5C,uBAAW,UAAU,gBAAgB;AACnC,kBAAI,QAAQ,OAAO;AAGnB,kBAAI,YAAY,UAAU,UAAa,SAAS,KAAK,UAAU,KAAK,GAAG;AACrE,wBAAQ,UAAU,UAAU,CAAC,aAAa,SAAS,OAAO,OAAO,EAAE;AAC/D,oBAAA,UAAU,UAAa,QAAQ,GAAG;AACpC,0BAAQ,UAAU;AAAA,gBAAA;AAAA,cACpB;AAGF,kBAAI,UAAU,UAAa,SAAS,KAAK,CAAC,UAAU,KAAK,GAAG;AAC1D,0BAAU,KAAK,IAAI;AAAA,kBACjB,IAAI,OAAO;AAAA,kBACX,MAAM;AAAA,kBACN,UAAU;AAAA,oBACR,MAAM,OAAO;AAAA,oBACb,WAAW;AAAA,kBAAA;AAAA,gBAEf;AAAA,cAAA;AAGE,kBAAA,UAAU,UAAa,SAAS,GAAG;AACrC,oBAAI,OAAO,MAAM;AACf,4BAAU,KAAK,EAAE,SAAS,OAAO,OAAO;AAAA,gBAAA;AAGtC,oBAAA,OAAO,QAAQ,OAAO,OAAO;AAC/B,wBAAM,UAAU,OAAO,QAAQ,OAAO,SAAS;AACrC,4BAAA,KAAK,EAAE,SAAS,aAAa;AAAA,gBAAA;AAIrC,oBAAA;AACF,wBAAM,OAAO,UAAU,KAAK,EAAE,SAAS;AACvC,sBAAI,KAAK,WAAW,GAAG,KAAK,KAAK,SAAS,GAAG,GAAG;AACxC,0BAAA,aAAa,KAAK,MAAM,IAAI;AAClC,8BAAU,KAAK,EAAE,SAAS,YAAY,KAAK,UAAU,UAAU;AAAA,kBAAA;AAAA,yBAE1DL,IAAG;AAAA,gBAAA;AAAA,cAEZ;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,eAEK,OAAgB;AACnB,YAAA,iBAAiB,SAAS,MAAM,QAAQ,cAAc,SAAS,OAAO,GAAG;AACpE,iBAAA,KAAK,IAAI,MAAM,uCAAuC;AAC5C,2BAAA;AAEE,6BAAA,IAAI,UAAU,IAAI;AAAA,YACnC,SAAS;AAAA,UAAA,CACV;AACK,gBAAA;AAAA,QAAA;AAED,eAAA,MAAM,+BAA+B,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK,CAAC,EAAE;AAC9F,cAAA;AAAA,MAAA;AAGD,aAAA,MAAM,IAAI,MAAM,mBAAmB;AAG1C,kBAAY,UAAU,OAAO,CAAC,SAAS,IAAI;AAG1B,uBAAA;AAGb,UAAA,UAAU,WAAW,GAAG;AACX,uBAAA;AACf;AAAA,MAAA;AAGK,aAAA,MAAM,IAAI,MAAM,iBAAiB,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC,EAAE;AAEnE,MAAAwC,UAAA;AAAA,QACP,IAAI,UAAU;AAAA,UACZ,SAAS;AAAA,YACP;AAAA,cACE,MAAM;AAAA;AAAA,cAEN,MAAM,kBAAkB;AAAA,YAC1B;AAAA;AAAA,YAEA,GAAI,cAAc,eAAe,YAC7B,CACA,IAAA,UAAU,IAAI,CAAC,aAAa;AAC5B,kBAAI,aAAa,CAAC;AACd,kBAAA;AACW,6BAAA,SAAS,SAAS,cAAc,KAAK,KAAK,KAAK,MAAM,SAAS,SAAS,SAAS;AAAA,uBACtF,OAAO;AACd,yBAAS,SAAS,YAAY;AACvB,uBAAA,MAAM,IAAI,MAAM,6BAA6B,SAAS,SAAS,IAAI,UAAU,KAAK,EAAE;AAAA,cAAA;AAEtF,qBAAA;AAAA,gBACL,MAAM;AAAA,gBACN,IAAI,SAAS;AAAA,gBACb,MAAM,SAAS,SAAS;AAAA,gBACxB,OAAO;AAAA,cACT;AAAA,YACD,CAAA;AAAA,UACL;AAAA,UACA,mBAAmB;AAAA,YACjB,YAAY,UAAU,IAAI,CAAC,cAAc;AAAA,cACvC,IAAI,SAAS;AAAA,cACb,MAAM;AAAA,cACN,UAAU;AAAA,gBACR,MAAM,SAAS,SAAS;AAAA,gBACxB,WAAW,SAAS,SAAS;AAAA,cAAA;AAAA,YAC/B,EACA;AAAA,UAAA;AAAA,QAEL,CAAA;AAAA,MACH;AAGI,UAAA,UAAU,SAAS,GAAG;AACxB;AAAA,UACE,KAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,SAAS,UAAU,IAAI,CAAC,SAAS;AACxB,qBAAA;AAAA,gBACL,iBAAiB,KAAK,SAAS,IAAI,KAAK,KAAK,UAAU,KAAK,SAAS,aAAa,MAAM,MAAM,CAAC,CAAC;AAAA,cAClG;AACO,qBAAA;AAAA,gBACL,MAAM,KAAK,SAAS;AAAA,gBACpB,WAAW,KAAK,MAAM,KAAK,SAAS,aAAa,IAAI;AAAA,cACvD;AAAA,YACD,CAAA;AAAA,UACgB,CAAA;AAAA;AAAA,MACrB;AAGK,aAAA,MAAM,IAAI,MAAM,wBAAwB;AAGzC,YAAA,cAAc,MAAM,QAAQ;AAAA,QAChC,UAAU,IAAI,OAAO,aAAa;AAC5B,cAAA;AAEF,gBAAI,UAAU,mBAAmB,IAAI,MAAM,GAAG;AACtC,oBAAA,aAAa,mBAAmB,IAAI,MAAM;AAC5C,kBAAA,yCAAY,OAAO,SAAS;AACvB,uBAAA,KAAK,IAAI,MAAM,4BAA4B;AAC5C,sBAAA,IAAI,MAAM,SAAS;AAAA,cAAA;AAAA,YAC3B;AAGI,kBAAA,WAAW,SAAS,SAAS;AACnC,kBAAM,WAAW,KAAK,MAAM,SAAS,SAAS,aAAa,IAAI;AACzD,kBAAAuF,UAAS,gBAAgB,IAAI,QAAQ;AAGrC,kBAAA,kBAAkB,IAAI,gBAAgB;AAGxC,gBAAA;AACJ,gBAAI,UAAU,mBAAmB,IAAI,MAAM,GAAG;AACtC,oBAAA,iBAAiB,mBAAmB,IAAI,MAAM;AACpD,kBAAI,gBAAgB;AAEd,oBAAA,eAAe,OAAO,SAAS;AAC3B,wBAAA,IAAI,MAAM,SAAS;AAAA,gBAAA;AAG3B,oCAAoB,MAAM;AACxB,yBAAO,KAAK,IAAI,MAAM,yBAAyB,QAAQ,GAAG;AAC1D,kCAAgB,MAAM;AAAA,gBACxB;AACe,+BAAA,OAAO,iBAAiB,SAAS,iBAAiB;AAAA,cAAA;AAAA,YACnE;AAGE,gBAAA;AACF,oBAAM,SAAS,MAAM,IAAI,QAAa,CAAC,SAAS,WAAW;AACzD,sBAAM,kBAAkB,YAAY;AAC9B,sBAAA;AACF,0BAAM,gBAAgB,MAAM;AAC1B,6BAAO,KAAK,IAAI,MAAM,gBAAgB,QAAQ,oBAAoB;AAC3D,6BAAA,IAAI,MAAM,SAAS,CAAC;AAAA,oBAC7B;AAEgB,oCAAA,OAAO,iBAAiB,SAAS,aAAa;AAE1D,wBAAA;AACIgC,4BAAAA,UAAS,OAAMhC,WAAA,gBAAAA,QAAQ;AAAA,wBAC3B;AAAA,0BACE,MAAM;AAAA,0BACN,WAAW;AAAA,wBACb;AAAA,wBACA;AAAA,wBACA;AAAA,0BACE,QAAQ,gBAAgB;AAAA,0BACxB,SAAS;AAAA,wBAAA;AAAA;AAIb,8BAAQgC,OAAM;AAAA,6BACP,OAAO;AACd,6BAAO,KAAK;AAAA,oBAAA,UACZ;AACgB,sCAAA,OAAO,oBAAoB,SAAS,aAAa;AAAA,oBAAA;AAAA,2BAE5D,OAAO;AACd,2BAAO,KAAK;AAAA,kBAAA;AAAA,gBAEhB;AAEA,6BAAa,eAAe;AAAA,cAAA,CAC7B;AAED,kBAAI,iCAAQ,QAAgB,QAAA,MAAM,kBAAkB,QAAQ,KAAK,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC,EAAE;AAAA,kBAC7F,QAAO,KAAK,kBAAkB,QAAQ,KAAK,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC,EAAE;AAEjF;AAAA,gBACE,KAAK,UAAU;AAAA,kBACb,MAAM;AAAA,kBACN,SAAS;AAAA,oBACP,MAAM;AAAA,oBACN;AAAA,kBAAA;AAAA,gBAEe,CAAA;AAAA;AAGd,qBAAA;AAAA,gBACL,cAAc,SAAS;AAAA,gBACvB,MAAM;AAAA,gBACN,SAAS,KAAK,UAAU,MAAM;AAAA,cAChC;AAAA,YAAA,UACA;AACA,kBAAI,qBAAqB,UAAU,mBAAmB,IAAI,MAAM,GAAG;AAC3D,sBAAA,iBAAiB,mBAAmB,IAAI,MAAM;AACpC,iEAAA,OAAO,oBAAoB,SAAS;AAAA,cAAiB;AAAA,YACvE;AAAA,mBAEK,OAAO;AACd,gBAAI,iBAAiB,SAAS,MAAM,YAAY,WAAW;AAEnD,oBAAA;AAAA,YAAA;AAEF,kBAAA;AAAA,UAAA;AAAA,QAET,CAAA;AAAA,MACH;AAEO,aAAA,MAAM,IAAI,MAAM,0BAA0B;AAG7C,UAAA,YAAY,SAAS,GAAG;AACjB,QAAAvH,UAAA,KAAK,GAAG,YAAY,IAAI,CAAC,WAAW,IAAI,YAAY,MAAM,CAAC,CAAC;AAAA,MAAA;AAGhE,aAAA,MAAM,IAAI,MAAM,8CAA8C;AAAA,IAAA;AAIhE,WAAA;AAAA,MACL,IAAI,MAAM,mBAAmB,WAAW,gBAAgB,oBAAoB,WAAW,iBAAiB,mBAAmB,WAAW,WAAW;AAAA,IACnJ;AAEO,WAAA,EAAE,QAAQ,eAAe,WAAW;AAAA,WACpC,OAAO;AACd,UAAM,MAAM;AACZ,QAAI,IAAI,QAAQ,YAAc,EAAA,SAAS,OAAO,GAAG;AAExC,aAAA,KAAK,IAAI,MAAM,oBAAoB;AAC1C,YAAM,kBAAkB,mBAAmB,IAAI,UAAU,EAAE;AAC3D,aAAO,EAAE,SAAQ,mDAAiB,YAAW,iBAAiB,IAAI,WAAW;AAAA,IAAA;AAE/E,WAAO,MAAM,gCAAgC,IAAI,OAAO,EAAE;AACpD,UAAA;AAAA,EAAA,UACN;AAEA,QAAI,QAAQ;AACV,yBAAmB,OAAO,MAAM;AAAA,IAAA;AAAA,EAClC;AAEJ;AAEA,SAAS,mBAAmB,YAAwB,OAAuB,sBAAqC;;AAC9G,MAAI,CAAC,sBAAsB;AACzB;AAAA,EAAA;AAGF,OAAIvC,OAAAH,MAAA,qBAAqB,kBAArB,gBAAAA,IAAoC,YAApC,gBAAAG,IAA6C,cAAc,SAAS,YAAY;AAC5E,UAAA,QAAQ,MAAM,kBAAkB;AAC3B,eAAA,oBAAmB,+BAAO,kBAAiB;AAC3C,eAAA,qBAAoB,+BAAO,sBAAqB;AAChD,eAAA,eAAc,+BAAO,iBAAgB;AAChD;AAAA,EAAA;AAGF,UAAQ,qBAAqB,eAAe;AAAA,IAC1C,KAAK;AACC,WAAAE,MAAA,MAAM,sBAAN,gBAAAA,IAAyB,OAAO;AAC5B,cAAA,QAAQ,MAAM,kBAAkB;AAC3B,mBAAA,qBAAoB,+BAAO,kBAAiB;AAC5C,mBAAA,sBAAqB,+BAAO,sBAAqB;AACjD,mBAAA,gBAAe,+BAAO,iBAAgB;AAAA,MAAA;AAEnD;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AACH,UAAI,MAAM,gBAAgB;AACxB,cAAM,QAAQ,MAAM;AACT,mBAAA,qBAAoB,+BAAO,iBAAgB;AAC3C,mBAAA,sBAAqB,+BAAO,kBAAiB;AAC7C,mBAAA,gBAAe,+BAAO,iBAAgB;AAAA,MAAA;AAEnD;AAAA,EAEA;AAEN;ACjfa,MAAA,eAAe,CAAC,gBAAwB;AAC5C,SAAA;AAAA;AAAA;AAAA,mBAGa,oBAAA,KAAO,GAAA,YAAa,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAapjB;ACxHO,MAAM,iBAAN,MAAM,eAAc;AAAA,EAKjB,YAAY,iBAA0B;AAHtC;AACD;AAGA,SAAA,8BAAc,IAAI;AACvB,SAAK,kBAAkB,mBAAmB,KAAK,QAAQ,QAAQ,OAAO,cAAc;AAGhF,QAAA;AACF,YAAM,cAAc,GAAG,aAAa,KAAK,iBAAiB,OAAO;AAEjE,WAAK,QAAQ,IAAI,UAAU,aAAa,WAAW,CAAC;AAAA,aAC7C,OAAO;AACd,cAAQ,KAAK,eAAe,KAAK,eAAe,KAAK,KAAK,EAAE;AAC5D,WAAK,QAAQ,IAAI,UAAU,aAAa,EAAE,CAAC;AAAA,IAAA;AAAA,EAC7C;AAAA,EAGF,OAAO,YAAY,iBAA0B;AACvC,QAAA,CAAC,eAAc,UAAU;AACb,qBAAA,WAAW,IAAI,eAAc,eAAe;AAAA,eACjD,iBAAiB;AAC1B,qBAAc,SAAS,kBAAkB;AAAA,IAAA;AAE3C,WAAO,eAAc;AAAA,EAAA;AAAA,EAGvB,UAAU,KAAa,QAAgB;AAChC,SAAA,QAAQ,IAAI,KAAK,MAAM;AAAA,EAAA;AAAA,EAG9B,UAAU,KAAiC;AAClC,WAAA,KAAK,QAAQ,IAAI,GAAG;AAAA,EAAA;AAAA,EAG7B,kBAAkB;AACV,UAAA,kBAAkB,KAAK,mBAAmB,KAAK,QAAQ,QAAQ,OAAO,cAAc;AACtF,QAAA;AACF,YAAM,cAAc,GAAG,aAAa,iBAAiB,OAAO;AACrD,aAAA;AAAA,aACA,OAAO;AACd,cAAQ,KAAK,eAAe,eAAe,KAAK,KAAK,EAAE;AAChD,aAAA;AAAA,IAAA;AAAA,EACT;AAAA,EAGF,qBAAqB;AACb,UAAA,cAAc,KAAK,gBAAgB;AACzC,SAAK,QAAQ,IAAI,UAAU,aAAa,WAAW,CAAC;AAAA,EAAA;AAExD;AAnDE,cADW,gBACI;AADV,IAAM,gBAAN;ACAe,eAAA,uBAAuB,iBAA4B,SAAwB;;AAC/F,aAAW,WAAW,iBAAiB;AACrC,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAEhC,YAAM,mBAAiBL,MAAA,QAAQ,YAAR,gBAAAA,IAAiB,UAAS,QAAQ,UAAU;AAC/D,UAAA,QAAQ,SAAS,QAAQ;AAC3B,gBAAQ,KAAK,IAAI,aAAa,cAAc,CAAC;AAAA,MAAA,OACxC;AACL,gBAAQ,KAAK,IAAI,UAAU,cAAc,CAAC;AAAA,MAAA;AAAA,IAC5C,OACK;AACL,UAAI,UAAiB,CAAC;AACtB,UAAI,QAAQ,SAAS;AACnB,gBAAQ,KAAK;AAAA,UACX,MAAM;AAAA,UACN,MAAM,QAAQ;AAAA,QAAA,CACf;AAAA,MAAA;AAGH,iBAAW,YAAY,OAAO;AACtB,cAAA,YAAY,GAAG,QAAQ;AACzB,YAAA,SAAS,MAAM,6BAA6B,GAAG;AAC3C,gBAAA,cAAc,MAAM,cAAc,SAAS;AACjD,kBAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,MAAM,YAAY,SAAS;AAAA,UAAA,CAC5B;AACD,kBAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,WAAW;AAAA,cACT,KAAK;AAAA,YAAA;AAAA,UACP,CACD;AAAA,QAAA,OACI;AACL,kBAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,MAAM,eAAe,SAAS;AAAA,UAAA,CAC/B;AAAA,QAAA;AAAA,MACH;AAGE,UAAA,QAAQ,SAAS,aAAa;AACxB,gBAAA,KAAK,IAAI,UAAU;AAAA,UACvB;AAAA,QAAA,CACH,CAAC;AAAA,MAAA,OACG;AACG,gBAAA,KAAK,IAAI,aAAa;AAAA,UAC1B;AAAA,QAAA,CACH,CAAC;AAAA,MAAA;AAAA,IACJ;AAAA,EACF;AAGK,SAAA;AACT;ACnCO,MAAM,UAAU;AAAA,EAGrB,YAAY6G,UAA0B,IAAI;AAFlC;AAGN,SAAK,SAASA;AAAA,EAAA;AAAA,EAGhB,MAAa,OAAO;;AAElB,UAAM,aAAa,aAAY7G,MAAA,KAAK,WAAL,gBAAAA,IAAa,eAAe,EAAE,gBAAgB;AAE/D,kBAAA,aAAYG,MAAA,KAAK,WAAL,gBAAAA,IAAa,eAAe;AAEtD,UAAM,iBAAiB,aAAYE,MAAA,KAAK,WAAL,gBAAAA,IAAa,mBAAmB,EAAE,WAAW;AAChF,YAAQ,IAAI,IAAI;AAAA,EAAA;AAAA,EAGlB,MAAa,aACX,QACA,OACA,UACA,qBACA,aACA,mBACA;;AACI,QAAA,gCAAgB,KAAK;AACrB,QAAA,UAAU,UAAU,WAAW;AAC5B,WAAA,MAAM,IAAI,OAAO,oBAAoB;AAC5C,QAAI,UAAyB,CAAC;AAC9B,QAAI,QAAQ;AACR,QAAA;AAEJ,UAAM8L,gBAAe,cAAc,YAAY,EAAE,UAAU,QAAQ;AACnE,QAAIA,eAAc;AAChB,cAAQ,KAAK,IAAI,cAAcA,aAAY,CAAC;AAAA,IAAA;AAK9C,UAAM,YAAY,OAAO,UAAU,WAAW,QAAQ,MAAM;AAEtD,UAAA,iBAAiB,MAAM,oBAAoB,OAAO;AACxD,QAAI,kBAAkB,eAAe,SAAS,SAAS,GAAG;AACxD,cAAQ,eAAe,KAAK;AAE5B,UAAI,qBAAqB;AACjB,cAAA,cAAc,eAAe,SAAS,UAAU,CAAC,QAAQ,IAAI,cAAc,mBAAmB;AACpG,YAAI,eAAe,GAAG;AACpB,yBAAe,WAAW,eAAe,SAAS,MAAM,GAAG,WAAW;AAAA,QAAA;AAAA,MACxE;AAEF,gBAAU,MAAM,uBAAuB,eAAe,UAAU,OAAO;AAAA,IAAA,OAGpE;AAEH,UAAI,WAAW;AACb,uBAAe,aAAa,cAAc,cAAc,SAAS;AAAA,MAAA;AAAA,IACnE;AAGF,WAAO,MAAM,IAAI,OAAO,iCAAoC,oBAAA,KAAO,GAAA,QAAA,IAAY,UAAU,QAAS,CAAA,IAAI;AAEtG,QAAI,UAAU;AACZ;AAAA,QACE,KAAK,UAAU;AAAA,UACb,MAAM;AAAA,UACN,SAAS;AAAA,YACP,IAAI;AAAA,YACJ,OAAO,SAAS;AAAA,UAAA;AAAA,QAED,CAAA;AAAA,MACrB;AAAA,IAAA;AAGE,QAAA;AACI,YAAA,gBAAgB,iBAAiB,YAAY;AAC7C,YAAA,gBAAgB,cAAc,mBAAmB;AACjD,YAAA,iBAAiB,cAAc,kBAAkB;AAEvD,YAAM,EAAE,QAAQ,WAAW,IAAI,MAAM;AAAA,QACnC;AAAA,QACA;AAAA,QACA,aAAa,YAAY,EAAE,SAAS;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAM,eAAe,UAAa,oBAAA,KAAA,GAAO,YAAY,UAAU,QAAQ,KAAK,KAAM,QAAQ,CAAC,CAAC;AAC5F,aAAO,MAAM,IAAI,OAAO,qBAAqB,YAAY,GAAG;AAE5D,UAAI,CAAC,UAAU;AACL,gBAAA,IAAI,kBAAkB,MAAM;AAAA,MAAA;AAItC,UAAI,cAAc;AAEZ,YAAA;AACM,kBAAA,MAAM,QAAQ,KAAK;AAAA,YACzB;AAAA,YACA,IAAI,QAAgB,CAAC1M,IAAG,WAAW,WAAW,MAAM,OAAO,IAAI,MAAM,0BAA0B,CAAC,GAAG,GAAI,CAAC;AAAA,UAAA,CACzG;AAAA,iBACM,OAAY;AACnB,iBAAO,KAAK,IAAI,OAAO,2CAA2C,MAAM,OAAO,EAAE;AACzE,kBAAA;AAAA,QAAA;AAAA,MACV;AAII,YAAA,eAAe,MAAM,gBAAgB,OAAO;AAClD,UAAI,CAAC,cAAc;AACX,cAAA,WAAW,SAAS,SAAS,YAAY;AAAA,UAC7C;AAAA,UACA;AAAA,QAAA,CACD;AAAA,MAAA;AAIH,UAAI,qBAAqB;AACjB,cAAA,oBAAoB,SAAS,mBAAmB;AAAA,MAAA;AAExD,YAAM,gBAAgB,WAAW;AACjC,UAAI,CAAC,qBAAqB;AACxB,cAAM,QAAS,OAAO,UAAU,YAAY,CAAC,GAAI,MAAM,UAAU,CAAA,GAAK,GAAI,MAAM,aAAa,CAAA,CAAG,KAAM,CAAC;AACjG,cAAA;AAAA,UACJ;AAAA,YACE,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,WAAW;AAAA,YACX,SAAS,aAAa;AAAA,YACtB;AAAA,YACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UACpC;AAAA,UACA;AAAA,YACE;AAAA,YACA;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAEF,YAAM,qBAAqB,WAAW;AAChC,YAAA;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,SAAS;AAAA,UACT,OAAO,CAAC;AAAA,UACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC;AAAA,QACA;AAAA,UACE,WAAW;AAAA,YACT,SAAOO,MAAA,aAAa,YAAY,EAAE,yBAA3B,gBAAAA,IAAiD,UAAS;AAAA,YACjE,oBAAoB,WAAW;AAAA,YAC/B,qBAAqB,WAAW;AAAA,YAChC,gBAAgB;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QAAA;AAAA,MAEJ;AAEA,UAAI,UAAU;AACZ;AAAA,UACE,KAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,SAAS;AAAA;AAAA,cAEP,eAAe,sBAAsB,KAAK;AAAA,cAC1C;AAAA,YAAA;AAAA,UAEe,CAAA;AAAA,QACrB;AAAA,MAAA;AAGF,UAAI,UAAU;AACZ;AAAA,UACE,KAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,SAAS;AAAA,cACP,IAAI;AAAA,cACJ,OAAO,SAAS;AAAA,YAAA;AAAA,UAED,CAAA;AAAA,QACrB;AAAA,MAAA;AAGK,aAAA,MAAM,IAAI,OAAO,gCAAgC;AACjD,aAAA;AAAA,aACA,OAAY;AACnB,aAAO,MAAM,IAAI,OAAO,6BAA6B,MAAM,OAAO,EAAE;AACpE,UAAI,UAAU;AACZ;AAAA,UACE,KAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,SAAU,MAAgB;AAAA,UACT,CAAA;AAAA,QACrB;AAAA,MAAA;AAEI,YAAA;AAAA,IAAA;AAAA,EACR;AAAA,EAGF,MAAa,UAAU;AACf,UAAA,iBAAiB,YAAY,EAAE,qBAAqB;AAAA,EAAA;AAE9D;ACnOO,SAAS,aAAa;AACrB,QAAA,SAAS,QAAQ,OAAO;AAE9B,SAAO,IAAI,SAAS,OAAO,KAAK,QAAQ;AAClC,QAAA;AACI,YAAAkL,SAAQ,MAAM,YAAY;AAChC,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,MAAMA;AAAA,MAAA,CACP;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,IAAI,QAAQ,OAAO,KAAK,QAAQ;AACjC,QAAA;AACI,YAAA,SAAS,IAAI,OAAO;AACpB,YAAA,SAAS,MAAM,oBAAoB,MAAM;AAE/C,UAAI,CAAC,QAAQ;AACP,YAAA,OAAO,GAAG,EAAE,KAAK;AAAA,UACnB,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AACD;AAAA,MAAA;AAGF,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,UACJ,MAAM,OAAO;AAAA,UACb,UAAU,OAAO;AAAA,QAAA;AAAA,MACnB,CACD;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,OAAO,QAAQ,OAAO,KAAK,QAAQ;AAClC,UAAA,SAAS,IAAI,OAAO;AAC1B,UAAM,WAAW,MAAM;AACvB,QAAI,KAAK;AAAA,MACP,SAAS;AAAA,IAAA,CACV;AAAA,EAAA,CACF;AAED,SAAO,KAAK,cAAc,OAAO,KAAK,QAAQ;AAC5C,WAAO,KAAK,IAAI,IAAI,OAAO,EAAE,wBAAwB;AACjD,QAAA;AACI,YAAA,SAAS,IAAI,OAAO;AACpB,YAAA,aAAa,mBAAmB,IAAI,MAAM;AAChD,UAAI,YAAY;AACP,eAAA,KAAK,IAAI,MAAM,uCAAuC;AAC7D,mBAAW,MAAM;AACjB,YAAI,KAAK;AAAA,UACP,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA,OACI;AACE,eAAA,KAAK,IAAI,MAAM,qCAAqC;AACvD,YAAA,OAAO,GAAG,EAAE,KAAK;AAAA,UACnB,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAAA,aAEI,OAAY;AACnB,aAAO,MAAM,IAAI,IAAI,OAAO,EAAE,yBAAyB,KAAK;AACxD,UAAA,OAAO,GAAG,EAAE,KAAK;AAAA,QACnB,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAGM,SAAA;AACT;ACpDO,SAAS,mBAAmB;AAC3B,QAAA,SAAS,QAAQ,OAAO;AACxB,QAAA,eAAe,aAAa,YAAY;AACxC,QAAA,gBAAgB,cAAc,YAAY;AAC1C,QAAA,mBAAmB,iBAAiB,YAAY;AAEtD,SAAO,IAAI,KAAK,CAAC,KAAK,QAAQ;AAC5B,QAAI,KAAK;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IAAA,CACV;AAAA,EAAA,CACF;AAED,SAAO,IAAI,WAAW,OAAO,KAAK,QAAQ;AACpC,QAAA;AACF,YAAM,gBAAgB,aAAa;AACnC,YAAM,SAAS,gBACX;AAAA,QACE;AAAA,UACE,IAAI,cAAc;AAAA,UAClB,MAAM;AAAA,UACN,UAAU,cAAc;AAAA,QAAA;AAAA,MAC1B,IAEF,CAAC;AAEL,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MAAA,CACP;AAAA,aACM,OAAY;AACf,UAAA,OAAO,GAAG,EAAE,KAAK;AAAA,QACnB,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAID,SAAO,KAAK,qBAAqB,OAAO,KAAK,QAAQ;;AAC/C,QAAA;AACF,YAAM,EAAE,UAAAxI,WAAU,QAAQ,gBAAgB,IAAI;AAE9C,UAAI,CAACA,aAAY,CAAC,MAAM,QAAQA,SAAQ,GAAG;AACzC,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAGC,UAAA,OAAO,WAAW,WAAW;AAC/B,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAEC,UAAA,gBAAgB,UAAU,gBAAgB,QAAQ;AACpD,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAGH,YAAM,iBAAiBA,UAAS;AAAA,QAC9B,CAAC,QAAQ,IAAI,QAAQ,OAAO,IAAI,SAAS,YAAY,IAAI,WAAW,OAAO,IAAI,YAAY;AAAA,MAC7F;AAEA,UAAI,CAAC,gBAAgB;AACnB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SACE;AAAA,QAAA,CACH;AAAA,MAAA;AAIH,YAAM,gBAAgB,aAAa;AACnC,UAAI,CAAC,eAAe;AAClB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAIH,UAAI,mBAAmB;AACnB,UAAA,UAAUA,UAAS,MAAM,GAAG,EAAE,EAAE,IAAI,CAAC,QAAQ;AAC3C,YAAA,IAAI,SAAS,UAAU;AACN,6BAAA;AACZ,iBAAA,IAAI,cAAc,IAAI,OAAO;AAAA,QAAA,WAC3B,IAAI,SAAS,aAAa;AAC5B,iBAAA,IAAI,UAAU,IAAI,OAAO;AAAA,QAAA,OAC3B;AACE,iBAAA,IAAI,aAAa,IAAI,OAAO;AAAA,QAAA;AAAA,MACrC,CACD;AAGD,UAAI,CAAC,kBAAkB;AACf,cAAAyJ,gBAAe,cAAc,UAAU,QAAQ;AACrD,YAAIA,eAAc;AAChB,oBAAU,CAAC,IAAI,cAAcA,aAAY,GAAG,GAAG,OAAO;AAAA,QAAA;AAAA,MACxD;AAGF,YAAM,SAAQnM,MAAA0C,UAASA,UAAS,SAAS,CAAC,MAA5B,gBAAA1C,IAA+B;AAC7C,YAAM,iBAAiB,gBAAgB,SAAS,iBAAiB,sBAAsB,CAAC;AAExF,YAAM,YAAY,cAAc;AAChC,YAAM,YAAUG,MAAA,cAAc,kBAAd,gBAAAA,IAA6B,YAAW,cAAc,WAAW;AAC3E,YAAA,QAAQ,MAAM,cAAc,WAAW;AAAA,QAC3C,GAAG;AAAA,QACH;AAAA,MAAA,CACD;AAED,YAAM,SAAS,WAAW;AAG1B,UAAI,QAAQ;AACN,YAAA,UAAU,gBAAgB,mBAAmB;AAC7C,YAAA,UAAU,iBAAiB,UAAU;AACrC,YAAA,UAAU,cAAc,YAAY;AAAA,MAAA;AAI1C,YAAM,cAAc,MAAM;AAClB,cAAA,aAAa,mBAAmB,IAAI,MAAM;AAChD,YAAI,YAAY;AACP,iBAAA,KAAK,IAAI,MAAM,4CAA4C;AAClE,qBAAW,MAAM;AAAA,QAAA;AAAA,MAErB;AAEI,UAAA,GAAG,SAAS,WAAW;AACvB,UAAA,GAAG,WAAW,WAAW;AACzB,UAAA,GAAG,SAAS,WAAW;AAEpB,aAAA,MAAM,IAAI,MAAM,gCAAgC;AAEnD,UAAA;AACF,cAAM,EAAE,QAAQ,WAAW,IAAI,MAAM;AAAA,UACnC,iBAAiB,mBAAmB;AAAA,UACpC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,SACI,CAACwI,UAAiB;AACV,kBAAA,aAAa,KAAK,MAAMA,KAAI;AAC9B,gBAAA,WAAW,SAAS,QAAQ;AAC9B,oBAAM,WAAmC;AAAA,gBACvC,IAAI,YAAY,MAAM;AAAA,gBACtB,QAAQ;AAAA,gBACR,SAAS,KAAK,MAAM,KAAK,IAAA,IAAQ,GAAI;AAAA,gBACrC,OAAO,cAAc;AAAA,gBACrB,oBAAoB;AAAA,gBACpB,SAAS;AAAA,kBACP;AAAA,oBACE,OAAO;AAAA,oBACP,OAAO,CAAC,WAAW,UACf,EAAE,MAAM,aAAa,SAAS,GAAG,IACjC,EAAE,SAAS,WAAW,QAAQ;AAAA,oBAClC,UAAU;AAAA,oBACV,eAAe;AAAA,kBAAA;AAAA,gBACjB;AAAA,cAEJ;AACA,kBAAI,MAAM,SAAS,KAAK,UAAU,QAAQ,CAAC;AAAA;AAAA,CAAM;AAAA,YAAA;AAAA,UAGrD,IAAA;AAAA,UACJ;AAAA,QACF;AAEA,YAAI,QAAQ;AAEV,gBAAM,cAAsC;AAAA,YAC1C,IAAI,YAAY,MAAM;AAAA,YACtB,QAAQ;AAAA,YACR,SAAS,KAAK,MAAM,KAAK,IAAA,IAAQ,GAAI;AAAA,YACrC,OAAO,cAAc;AAAA,YACrB,oBAAoB;AAAA,YACpB,SAAS;AAAA,cACP;AAAA,gBACE,OAAO;AAAA,gBACP,OAAO,CAAC;AAAA,gBACR,UAAU;AAAA,gBACV,eAAe;AAAA,cAAA;AAAA,YACjB;AAAA,UAEJ;AAEA,cAAI,MAAM,SAAS,KAAK,UAAU,WAAW,CAAC;AAAA;AAAA,CAAM;AACpD,cAAI,IAAI;AAAA,QAAA,OACH;AAEL,cAAI,KAAK;AAAA,YACP,IAAI,YAAY,MAAM;AAAA,YACtB,QAAQ;AAAA,YACR,SAAS,KAAK,MAAM,KAAK,IAAA,IAAQ,GAAI;AAAA,YACrC,OAAO,cAAc;AAAA,YACrB,SAAS;AAAA,cACP;AAAA,gBACE,OAAO;AAAA,gBACP,SAAS;AAAA,kBACP,MAAM;AAAA,kBACN,SAAS;AAAA,kBACT,SAAS;AAAA,gBACX;AAAA,gBACA,UAAU;AAAA,gBACV,eAAe;AAAA,cAAA;AAAA,YAEnB;AAAA,YACA,OAAO;AAAA,cACL,eAAe,WAAW;AAAA,cAC1B,mBAAmB,WAAW;AAAA,cAC9B,cAAc,WAAW;AAAA,YAC3B;AAAA,YACA,oBAAoB;AAAA,UAAA,CACrB;AAAA,QAAA;AAAA,MACH,UACA;AACO,eAAA,MAAM,IAAI,MAAM,8BAA8B;AACjD,YAAA,IAAI,SAAS,WAAW;AACxB,YAAA,IAAI,WAAW,WAAW;AAC1B,YAAA,IAAI,SAAS,WAAW;AAAA,MAAA;AAAA,aAEvB,OAAY;AACf,UAAA,OAAO,GAAG,EAAE,KAAK;AAAA,QACnB,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAEM,SAAA;AACT;AC3PO,MAAM,iBAA2C;AAAA,EACtD,gBAAgB;AAAA,IACd,eAAe;AAAA,MACb,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf;AAyBJ;ACpEO,SAAS,eAAe;AACvB,QAAA,SAAS,QAAQ,OAAO;AAE9B,SAAO,IAAI,cAAc,OAAO,KAAK,QAAQ;AACvC,QAAA;AACF,YAAM9B,UAAS,MAAM,WAAW,iBAAiB,YAAA,EAAc,UAAU;AAEzE,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,QAAAA;AAAA,MAAA,CACD;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,KAAK,cAAc,OAAO,KAAK,QAAQ;AACxC,QAAA;AACI,YAAA,aAAa,iBAAiB,YAAA,EAAc;AAClD,YAAM,YAAY,IAAI;AAGtB,UAAI,CAAC,aAAa,OAAO,cAAc,UAAU;AACzC,cAAA,IAAI,MAAM,8BAA8B;AAAA,MAAA;AAI1C,YAAA2E,KAAG,UAAU,YAAY,KAAK,UAAU,WAAW,MAAM,CAAC,GAAG,OAAO;AAG1E,YAAM,aAAa,MAAM,iBAAiB,YAAA,EAAc,sBAAsB;AAE9E,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,MAAA,CACT;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,IAAI,UAAU,OAAO,KAAK,QAAQ;AACnC,QAAA;AACF,YAAM,cAAc,MAAM,aAAa,YAAA,EAAc,eAAe;AACpE,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,MAAA,CACT;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,IAAI,oBAAoB,OAAO,KAAK,QAAQ;AACjD,QAAI,KAAK;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IAAA,CACZ;AAAA,EAAA,CACF;AAED,SAAO,KAAK,UAAU,OAAO,KAAK,QAAQ;AACpC,QAAA;AACF,YAAM,EAAE,UAAU,eAAe,gBAAgB,IAAI;AAGrD,UAAI,CAAC,iBAAiB,OAAO,kBAAkB,UAAU;AACjD,cAAA,IAAI,MAAM,8BAA8B;AAAA,MAAA;AAIhD,YAAM,aAAa,YAAY,EAAE,gBAAgB,UAAU,eAAe,WAAW;AAG/E,YAAA,aAAa,YAAY,EAAE,YAAY;AAE7C,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,MAAA,CACV;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,KAAK,qBAAqB,OAAO,KAAK,QAAQ;AAC/C,QAAA;AACF,YAAM,sBAAsB,IAAI;AAChC,YAAM,aAAa,cAAc,sBAAsB,mBAAmB;AACpE,YAAA,aAAa,YAAY,EAAE,YAAY;AAC7C,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,MAAA,CACV;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,IAAI,gBAAgB,OAAO,KAAK,QAAQ;AACzC,QAAA;AACF,YAAM,cAAc,MAAM,cAAc,YAAA,EAAc,gBAAgB;AACtE,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,OAAO;AAAA,MAAA,CACR;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAED,SAAO,KAAK,gBAAgB,OAAO,KAAK,QAAQ;AAC1C,QAAA;AACI,YAAA,kBAAkB,cAAc,YAAA,EAAc;AACpD,YAAM,iBAAiB,MAAM,IAAI,QAAgB,CAAC,SAAS,WAAW;AACpE,YAAI,OAAO;AACP,YAAA,GAAG,QAAQ,CAAC,UAAU;AAChB,kBAAA;AAAA,QAAA,CACT;AACG,YAAA,GAAG,OAAO,MAAM;AAClB,kBAAQ,IAAI;AAAA,QAAA,CACb;AACG,YAAA,GAAG,SAAS,CAAC,QAAQ;AACvB,iBAAO,GAAG;AAAA,QAAA,CACX;AAAA,MAAA,CACF;AACD,YAAMA,KAAG,UAAU,iBAAiB,gBAAgB,OAAO;AAErD,YAAA,cAAc,YAAY,EAAE,mBAAmB;AACrD,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,MAAA,CACV;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAEM,SAAA;AACT;AC5JA,MAAM,yBAAyB;AAAA,EACrB,0BAA0B,SAAoC,SAAkB;AAC/E,WAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS,QAAQ,IAAI,CAACY,QAAO;AAAA,QAC3B,WAAWA,GAAE;AAAA,QACb,YAAY;AAAA,UACV,QAAQA,GAAE;AAAA,UACV,QAAQA,GAAE;AAAA,QACZ;AAAA,QACA,OAAO;AAAA,UACL,QAAQA,GAAE;AAAA,UACV,QAAQA,GAAE;AAAA,QAAA;AAAA,MACZ,EACA;AAAA,MACF;AAAA,IACF;AAAA,EAAA;AAAA,EAGF,MAAc,oBACZ,OACA,WACA,QACmE;AAC/D,QAAA;AACF,YAAM,SAAS,MAAM,MAAM,OAAO,6BAA6B,EAAE,QAAQ;AAClE,aAAA;AAAA,QACL,QAAQ,OAAO,UAAU,YAAY;AAAA,QACrC;AAAA,MACF;AAAA,aACO,OAAO;AACT,WAAA,+BAA6B,UAAS,cAAc;AAChD,eAAA,KAAK,qCAAqC,SAAS,EAAE;AAAA,MAAA;AAEvD,aAAA;AAAA,QACL,QAAQ;AAAA,QACR,QAAS,MAAgB;AAAA,MAC3B;AAAA,IAAA;AAAA,EACF;AAAA,EAGF,MAAc,eACZ,OACA,WACA,QACmE;AAC/D,QAAA;AACF,UAAI,eAAe;AACnB,UAAI,iBAAiB;AAErB,uBAAiB,SAAS,MAAM,MAAM,OAAO,oDAAoD;AAAA,QAC/F,OAAO;AAAA,QACP;AAAA,MAAA,CACD,GAAG;AACF,wBAAgB,MAAM,WAAW;AAE9B,YAAA,MAAM,cAAc,MAAM,WAAW,SAAS,KAC9C,MAAM,oBAAoB,MAAM,iBAAiB,SAAS,GAC3D;AACiB,2BAAA;AAAA,QAAA;AAAA,MACnB;AAGK,aAAA;AAAA,QACL,QAAQ,iBAAiB,YAAY;AAAA,QACrC,QAAQ;AAAA,MACV;AAAA,aACO,OAAO;AACP,aAAA,MAAM,wBAAwB,KAAK,UAAU,OAAO,MAAM,CAAC,CAAC,EAAE;AAChE,WAAA,+BAA6B,UAAS,cAAc;AAChD,eAAA,KAAK,gCAAgC,SAAS,EAAE;AAAA,MAAA;AAElD,aAAA;AAAA,QACL,QAAQ;AAAA,QACR,QAAS,MAAgB;AAAA,MAC3B;AAAA,IAAA;AAAA,EACF;AAAA,EAGF,MAAc,YACZ,UACA,YACA,QACA,aACkC;;AAClC,UAAM,YAAY,SAAS;AAC3B,UAAM,YAAUpM,MAAA,SAAS,kBAAT,gBAAAA,IAAwB,YAAW,SAAS,WAAW;AAEjE,UAAA,QAAQ,MAAM,cAAc,WAAW;AAAA,MAC3C,GAAG;AAAA,MACH;AAAA,MACA,YAAY;AAAA,IAAA,CACb;AAED,UAAM,cAAuC;AAAA,MAC3C;AAAA,MACA,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,IACtB;AAGA,UAAM,iBAAiB,MAAM,KAAK,oBAAoB,OAAO,WAAW,MAAM;AAC9E,gBAAY,mBAAmB,eAAe;AAC9C,gBAAY,mBAAmB,eAAe;AAEnC,eAAA;AAAA,MACT,MAAM;AAAA,MACN,MAAM,cAAc;AAAA,MACpB;AAAA,MACA,UAAU;AAAA,MACV,QAAQ,eAAe;AAAA,MACvB,OAAO,eAAe,WAAW,UAAU,eAAe,SAAS;AAAA,IAAA,CACpE;AAGD,UAAM,YAAY,MAAM,KAAK,eAAe,OAAO,WAAW,MAAM;AACpE,gBAAY,qBAAqB,UAAU;AAC3C,gBAAY,qBAAqB,UAAU;AAEhC,eAAA;AAAA,MACT,MAAM;AAAA,MACN,MAAM,cAAc;AAAA,MACpB;AAAA,MACA,UAAU;AAAA,MACV,QAAQ,UAAU;AAAA,MAClB,OAAO,UAAU,WAAW,UAAU,UAAU,SAAS;AAAA,IAAA,CAC1D;AAEM,WAAA;AAAA,MACL,0BAA0B,SAAS,kBAAkB,YAAY,gBAAgB,mBAAmB,YAAY,kBAAkB;AAAA,IACpI;AAEO,WAAA;AAAA,EAAA;AAAA,EAGD,SAAS,KAAkB;AAC7B,QAAA,UAAU,gBAAgB,mBAAmB;AAC7C,QAAA,UAAU,iBAAiB,UAAU;AACrC,QAAA,UAAU,cAAc,YAAY;AACxC,WAAO,CAAC2I,UAAiB;AACnB,UAAA,MAAM,SAAS,KAAK,UAAU,EAAE,SAASA,OAAM,CAAC;AAAA;AAAA,CAAM;AAAA,IAC5D;AAAA,EAAA;AAAA,EAGM,kBAAkB,OAAc,KAAkB;AACxD,WAAO,MAAM,iBAAiB,MAAM,OAAO,EAAE;AAC7C,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACjB;AACI,QAAA,MAAM,SAAS,KAAK,UAAU,EAAE,SAAS,UAAU,CAAC;AAAA;AAAA,CAAM;AAC9D,QAAI,IAAI;AAAA,EAAA;AAAA,EAGV,MAAM,4BAA4B,KAAsB,KAAkB;AAClE,UAAA,WAAW,KAAK,SAAS,GAAG;AAClC,QAAI,wBAAwB;AACtB,UAAA,kBAAkB,IAAI,gBAAgB;AAExC,QAAA,OAAO,KAAK,SAAS,MAAM;AACL,8BAAA;AACxB,sBAAgB,MAAM;AAAA,IAAA,CACvB;AAEG,QAAA;AACI,YAAA,EAAE,kBAAkB,IAAI;AAC9B,UAAI,CAAC,eAAe;AAClB;AAAA,UACE,KAAK,UAAU;AAAA,YACb,MAAM;AAAA,YACN,SAAS;AAAA,UACV,CAAA;AAAA,QACH;AACA,YAAI,IAAI;AACR;AAAA,MAAA;AAGF,YAAM,SAAS,MAAM,QAAQ,aAAa,IAAI,gBAAgB,CAAC,aAAa;AACtE,YAAA,aAAa,OAAO,SAAS;AACnC,YAAM,eAA0C,CAAC;AAEjD,eAASpJ,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AAClC,YAAA,yBAAyB,IAAI,OAAO,WAAW;AACjD,iBAAO,KAAK,iCAAiC;AAC7C,mBAAS,KAAK,UAAU,KAAK,0BAA0B,cAAc,IAAI,CAAC,CAAC;AAC3E,cAAI,IAAI;AACR;AAAA,QAAA;AAGI,cAAA,SAAS,MAAM,KAAK;AAAA,UACxB,OAAOA,EAAC;AAAA,UACR,CAAC,aAAa,SAAS,KAAK,UAAU,EAAE,GAAG,UAAU,WAAW,CAAC,CAAC;AAAA,UAClE,gBAAgB;AAAA,UAChBA,KAAI;AAAA,QACN;AACA,qBAAa,KAAK,MAAM;AAAA,MAAA;AAG1B,eAAS,KAAK,UAAU,KAAK,0BAA0B,cAAc,KAAK,CAAC,CAAC;AAC5E,UAAI,MAAM,kBAAkB;AAC5B,UAAI,IAAI;AAAA,aACD,OAAO;AACT,WAAA,+BAA6B,UAAS,cAAc;AACvD,eAAO,KAAK,gCAAgC;AAAA,MAAA;AAE9C,aAAO,MAAM,6BAA8B,MAAgB,OAAO,EAAE;AAC/D,WAAA,kBAAkB,OAAgB,GAAG;AAAA,IAAA;AAAA,EAC5C;AAEJ;AAEO,SAAS,oBAAoB;AAC5B,QAAA,SAAS,QAAQ,OAAO;AACxB,QAAA,sBAAsB,IAAI,yBAAyB;AAEzD,SAAO,KAAK,cAAc,CAAC,KAAK,QAAQ;AAClB,wBAAA,4BAA4B,KAAK,GAAG;AAAA,EAAA,CACzD;AAEM,SAAA;AACT;AAEA,MAAM,YAAY;AAAA,EAChB;AAAA,IACE,MAAM;AAAA,IACN,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aACE;AAAA,MACF,YAAY;AAAA,QACV,MAAM;AAAA,QACN,YAAY;AAAA,UACV,OAAO;AAAA,YACL,MAAM;AAAA,YACN,aAAa;AAAA,UACf;AAAA,UACA,MAAM;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,UACf;AAAA,UACA,UAAU;AAAA,YACR,MAAM;AAAA,YACN,aAAa;AAAA,UACf;AAAA,UACA,YAAY;AAAA,YACV,MAAM;AAAA,YACN,OAAO;AAAA,cACL,MAAM;AAAA,cACN,MAAM,CAAC,WAAW,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,gBAAgB,IAAI;AAAA,YAAA;AAAA,UAEnG;AAAA,UACA,YAAY;AAAA,YACV,MAAM;AAAA,YACN,MAAM,CAAC,QAAQ,OAAO,QAAQ,SAAS,MAAM;AAAA,UAC/C;AAAA,UACA,YAAY;AAAA,YACV,MAAM;AAAA,YACN,aAAa;AAAA,UAAA;AAAA,QAEjB;AAAA,QACA,UAAU,CAAC,OAAO;AAAA,QAClB,sBAAsB;AAAA,MAAA;AAAA,IACxB;AAAA,EACF;AAEJ;AChRO,SAAS,cAAc;AACtB,QAAA,SAAS,QAAQ,OAAO;AAE9B,SAAO,IAAI,KAAK,CAAC,KAAK,QAAQ;AACxB,QAAA;AACF,YAAM,QAAQ,iBAAiB,YAAY,EAAE,aAAa;AAC1D,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT;AAAA,MAAA,CACD;AAAA,aACM,OAAY;AACnB,UAAI,KAAK;AAAA,QACP,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH,CACD;AAEM,SAAA;AACT;ACZA,MAAM,wBAAwB,CAAC,KAAsB,KAAuB,SAA+B;AAUpG,OAAA;AACP;AAEO,SAAS,eAAe;AACvB,QAAA,SAAS,QAAQ,OAAO;AAE9B,SAAO,IAAI,KAAK,CAAC,KAAK,QAAQ;AAE5B,QAAI,OAAO,OAAO;AAAA,EAAA,CAMnB;AAEM,SAAA,IAAI,QAAQ,qBAAqB;AAEjC,SAAA,IAAI,cAAc,aAAa;AAC/B,SAAA,IAAI,eAAe,cAAc;AACjC,SAAA,IAAI,oBAAoB,mBAAmB;AAC3C,SAAA,IAAI,WAAW,kBAAkB;AAEjC,SAAA,IAAI,aAAa,YAAY;AAE7B,SAAA;AACT;ACzCA,MAAMuL,YAAU,SAAS,QAAQ,EAAC,QAAQ,IAAG;AAC7C,MAAMuB,iBAAevB,UAAQ;AAItB,MAAM,6BAA6B,CAAC,QAAQ,SAAS,QAAQ,QAAQ,OAAO;AAuBnF,eAAsB,kBAAkB,EAAE,OAAO,aAAoE;AACnH,QAAM,YAAsB,CAAC;AAC7B,QAAM,SAAmB,CAAC;AAE1B,aAAW,QAAQ,OAAO;AACxB,UAAM,OAAO,MAAM,kBAAkB,KAAK,IAAI;AAG9C,UAAM,YAAYhL,cAAK,KAAKuM,gBAAc,SAAS;AACnD,UAAMb,KAAG,MAAM,WAAW,EAAE,WAAW,MAAM;AAC7C,UAAMc,SAAQ,MAAMd,KAAG,QAAQ,SAAS;AAClC,UAAA,eAAec,OAAM,KAAK,CAAC5B,OAAMA,GAAE,WAAW,IAAI,CAAC;AACzD,QAAI,cAAc;AAEhB,WAAK,WAAW;AACV,YAAAc,KAAG,OAAO,KAAK,IAAI;AACzB,WAAK,OAAO1L,cAAK,KAAK,WAAW,YAAY;AAAA,IAAA,OACxC;AACL,YAAM,cAAc,GAAG,IAAI,IAAI,KAAK,YAAY;AAChD,YAAM,UAAUA,cAAK,KAAKuM,gBAAc,WAAW,WAAW;AAE9D,YAAMb,KAAG,OAAO,KAAK,MAAM,OAAO;AAClC,WAAK,WAAW;AAAA,IAAA;AAGlB,UAAM,MAAM1L,cAAK,QAAQ,KAAK,QAAQ,EAAE,YAAY;AAChD,QAAA,2BAA2B,SAAS,GAAG,GAAG;aAEnB,KAAKA,cAAK,KAAKuM,gBAAc,WAAW,KAAK,QAAQ,CAAC;AAAA,IACpC,OACtC;gBACuB,KAAKvM,cAAK,KAAKuM,gBAAc,WAAW,KAAK,QAAQ,CAAC;AAAA,IACpC;AAAA,EAChD;AAMF,aAAW,YAAY,WAAW;AAChC,UAAM,MAAMvM,cAAK,QAAQ,QAAQ,EAAE,YAAY;AAC3C,QAAA,2BAA2B,SAAS,GAAG,GAAG;AAC5C,aAAO,KAAK,QAAQ;AAAA,IAAA,OACf;AACL,gBAAU,KAAK,QAAQ;AAAA,IAAA;AAAA,EACzB;AAMK,SAAA,EAAE,QAAQ,UAAU;AAC7B;AAEA,eAAe,kBAAkB,UAAmC;AAClE,QAAM,aAAa,MAAM0L,KAAG,SAAS,QAAQ;AAC7C,SAAO,OAAO,WAAW,KAAK,EAAE,OAAO,UAAU,EAAE,OAAO,KAAK,EAAE,MAAM,GAAG,EAAE;AAC9E;AC7DA,MAAMV,YAAU,SAAS,QAAQ,EAAC,QAAQ,IAAG;AAC7C,MAAM,eAAeA,UAAQ;AAItB,MAAM,UAAU;AAAA,EAOrB,YAAY,WAAsB;AAN1B;AACA;AACA;AACA;AACD;AAGL,SAAK,MAAM,QAAQ;AACnB,SAAK,YAAY;AACZ,SAAA,gBAAgB,cAAc,YAAY;AAC/C,SAAK,OAAO;AAGZ,SAAK,IAAI,IAAI,CAAC,KAAU,KAAU,SAAc;AAC1C,UAAA,OAAO,+BAA+B,uBAAuB;AAC7D,UAAA,OAAO,gCAAgC,iCAAiC;AACxE,UAAA,OAAO,gCAAgC,+DAA+D;AACtG,UAAA,OAAO,oCAAoC,MAAM;AAEjD,UAAA,IAAI,WAAW,WAAW;AACrB,eAAA,IAAI,WAAW,GAAG;AAAA,MAAA;AAGtB,WAAA;AAAA,IAAA,CACN;AAGK,UAAA,UAAU,OAAO,YAAY;AAAA;AAAA,MAEjC,aAAa,CAAC,KAAK,MAAM,OAAO;AAC9B,cAAM,YAAYhL,cAAK,KAAK,cAAc,SAAS;AAEhD0L,aAAA,MAAM,WAAW,EAAE,WAAW,KAAM,CAAA,EACpC,KAAK,MAAM,GAAG,MAAM,SAAS,CAAC,EAC9B,MAAM,CAAC,QAAQ,GAAG,KAAK,SAAS,CAAC;AAAA,MACtC;AAAA;AAAA,MAEA,UAAU,CAAC,KAAK,MAAM,OAAO;AACrB,cAAA,eAAe,KAAK,IAAA,IAAQ,MAAM,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AACtE,WAAG,MAAM,eAAe1L,cAAK,QAAQ,KAAK,YAAY,CAAC;AAAA,MAAA;AAAA,IACzD,CACD;AAED,SAAK,SAAS,OAAO;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA;AAAA,MAAA;AAAA,IAER,CACD,EAAE,MAAM,OAAO;AAGX,SAAA,IAAI,IAAI,eAAe,KAAK;AACjC,SAAK,IAAI,IAAI,SAASA,cAAK,KAAK,cAAc,OAAO,CAAC;AAGtD,SAAK,IAAI,IAAI,QAAQ,KAAA,CAAM;AACtB,SAAA,IAAI,IAAI,QAAQ,OAAOA,cAAK,KAAK,cAAc,cAAc,CAAC,CAAC;AAC/D,SAAA,IAAI,IAAI,YAAY,QAAQ,OAAOA,cAAK,KAAK,cAAc,SAAS,CAAC,CAAC;AAE3E,SAAK,YAAY;AAAA,EAAA;AAAA,EAGX,SAAS,KAAkB;AAC7B,QAAA,UAAU,gBAAgB,mBAAmB;AAC7C,QAAA,UAAU,iBAAiB,UAAU;AACrC,QAAA,UAAU,cAAc,YAAY;AACxC,WAAO,CAAC6I,UAAc;AACpB,YAAM,aAAa,OAAOA,UAAS,WAAW,KAAK,MAAMA,KAAI,IAAIA;AAC7D,UAAA,MAAM,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,UAAU,UAAU,EAAE,CAAC,CAAC;AAAA;AAAA,CAAM;AAAA,IAClF;AAAA,EAAA;AAAA,EAGF,MAAc,aAAa,OAA8B,eAAmD;AAC1G,QAAI,YAAsB,CAAC;AAE3B,QAAI,eAAe;AACC;AAChB,oBAAY,OAAO,kBAAkB,WAAW,KAAK,MAAM,iBAAiB,IAAI,IAAI;AAAA,MAAA;AAAA,IAGtF;AAMF,SAAI,+BAAO,UAAS,MAAK,uCAAW,UAAS,GAAG;AAC9C,YAAM,eAAe;AAAA,QACnB;AAAA,QACA;AAAA,MACF;AACO,aAAA,MAAM,kBAAkB,YAAY;AAAA,IAAA;AAG7C,WAAO,EAAE,QAAQ,IAAI,WAAW,CAAA,EAAG;AAAA,EAAA;AAAA,EAG7B,kBAAkB,OAAc,KAAkB;AACxD,WAAO,MAAM,iBAAiB,MAAM,OAAO,EAAE;AAC7C,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACjB;AACI,QAAA,MAAM,SAAS,KAAK,UAAU,EAAE,SAAS,UAAU,CAAC;AAAA;AAAA,CAAM;AAC9D,QAAI,IAAI;AAAA,EAAA;AAAA,EAGV,MAAc,kBACZ,SACA,OACA,eACsB;AACtB,UAAM,aAA0B,CAAC;AAEjC,QAAI,SAAS;AACX,iBAAW,OAAO;AAAA,IAAA;AAGd,UAAA,EAAE,QAAQ,UAAU,IAAI,MAAM,KAAK,aAAa,OAAO,aAAa;AAC1E,QAAI,OAAO,SAAS,cAAc,SAAwB;AAC1D,QAAI,UAAU,SAAS,cAAc,YAA2B;AAEzD,WAAA;AAAA,EAAA;AAAA,EAGD,cAAc;AACpB,SAAK,IAAI,IAAI,KAAK,aAAA,CAAc;AAGhC,SAAK,IAAI,KAAK,aAAa,CAAC,KAAK,QAAQ;AACvC,WAAK,OAAO,KAAK,KAAK,OAAO,QAAQ;AACnC,YAAI,KAAK;AACP,iBAAO,MAAM,sBAAsB,IAAI,OAAO,EAAE;AAChD,iBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,YAC1B,SAAS;AAAA,YACT,SAAS,IAAI;AAAA,UAAA,CACd;AAAA,QAAA;AAGC,YAAA;AACF,gBAAM,EAAE,SAAS,QAAQ,aAAa,kBAAA,IAAsB,IAAI;AAC5D,cAAA,gBAAA,MAAsB,aAAa,KAAK;AACtC,gBAAA,CAAC,eAAe,CAAC,mBAAmB;AACtC,qBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,gBAC1B,SAAS;AAAA,gBACT,SAAS;AAAA,cAAA,CACV;AAAA,YAAA;AAAA,UACH;AAGF,cAAI,QAAQ,IAAI;AAEhB,cAAI,CAAC,YAAY,CAAC,SAAS,MAAM,WAAW,IAAI;AAC9C,mBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,cAC1B,SAAS;AAAA,cACT,SAAS;AAAA,YAAA,CACV;AAAA,UAAA;AAGG,gBAAA,WAAW,KAAK,SAAS,GAAG;AAC5B,gBAAA,aAAa,MAAM,KAAK,kBAAkB,SAAS,OAAO,IAAI,KAAK,SAAS;AAE5E,gBAAA,KAAK,UAAU,aAAa,QAAQ,YAAY,UAAU,QAAW,aAAa,iBAAiB;AAEzG,cAAI,MAAM,kBAAkB;AAC5B,cAAI,IAAI;AAAA,iBACD,OAAO;AACT,eAAA,kBAAkB,OAAgB,GAAG;AAAA,QAAA;AAAA,MAC5C,CACD;AAAA,IAAA,CACF;AAGD,SAAK,IAAI,KAAK,kBAAkB,CAAC,KAAK,QAAQ;AAC5C,WAAK,OAAO,KAAK,KAAK,OAAO,QAAQ;AACnC,YAAI,KAAK;AACP,iBAAO,MAAM,sBAAsB,IAAI,OAAO,EAAE;AAChD,iBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,YAC1B,SAAS;AAAA,YACT,SAAS,IAAI;AAAA,UAAA,CACd;AAAA,QAAA;AAGC,YAAA;AACF,gBAAM,EAAE,QAAQ,WAAW,SAAS,aAAa,kBAAA,IAAsB,IAAI;AACvE,cAAA,gBAAA,MAAsB,aAAa,KAAK;AACtC,gBAAA,CAAC,eAAe,CAAC,mBAAmB;AACtC,qBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,gBAC1B,SAAS;AAAA,gBACT,SAAS;AAAA,cAAA,CACV;AAAA,YAAA;AAAA,UACH;AAGE,cAAA,CAAC,UAAU,CAAC,WAAW;AACzB,mBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,cAC1B,SAAS;AAAA,cACT,SAAS;AAAA,YAAA,CACV;AAAA,UAAA;AAGG,gBAAA,WAAW,KAAK,SAAS,GAAG;AAClC,gBAAM,QAAQ,IAAI;AACZ,gBAAA,aAAa,MAAM,KAAK,kBAAkB,SAAS,OAAO,IAAI,KAAK,SAAS;AAE5E,gBAAA,qBAAqB,WAAW,UAAU;AAEhD,gBAAM,gBAAgB,MAAM,iBAAiB,QAAQ,SAAS;AAC9D,cAAI,CAAC,eAAe;AACX,mBAAA,KAAK,0CAA0C,SAAS,EAAE;AAAA,UAAA;AAGnE,gBAAM,KAAK,UAAU;AAAA,YACnB;AAAA,YACA;AAAA,YACA;AAAA,YACA,+CAAe;AAAA,YACf;AAAA,YACA;AAAA,UACF;AAEA,cAAI,MAAM,kBAAkB;AAC5B,cAAI,IAAI;AAAA,iBACD,OAAO;AACT,eAAA,kBAAkB,OAAgB,GAAG;AAAA,QAAA;AAAA,MAC5C,CACD;AAAA,IAAA,CACF;AAGD,SAAK,IAAI,KAAK,mBAAmB,OAAO,KAAK,QAAQ;AACnD,YAAM,EAAE,QAAQ,WAAW,aAAa,kBAAA,IAAsB,IAAI;AAC9D,UAAA,gBAAA,MAAsB,aAAa,KAAK;AACtC,YAAA,CAAC,eAAe,CAAC,mBAAmB;AACtC,iBAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,YAC1B,SAAS;AAAA,YACT,SAAS;AAAA,UAAA,CACV;AAAA,QAAA;AAAA,MACH;AAEE,UAAA,CAAC,UAAU,CAAC,WAAW;AACzB,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,QAAA,CACV;AAAA,MAAA;AAEC,UAAA;AACI,cAAA,WAAW,KAAK,SAAS,GAAG;AAC5B,cAAA,KAAK,UAAU,aAAa,QAAQ,IAAI,UAAU,WAAW,aAAa,iBAAiB;AACjG,YAAI,MAAM,kBAAkB;AAC5B,YAAI,IAAI;AAAA,eACD,OAAO;AACT,aAAA,kBAAkB,OAAgB,GAAG;AAAA,MAAA;AAAA,IAC5C,CACD;AAED,SAAK,IAAI,KAAK,oBAAoB,OAAO,KAAK,QAAQ;;AAChD,UAAA;AACI,cAAA,EAAE,kBAAkB,IAAI;AAC9B,YAAI,CAAC,eAAe;AAClB,cAAI,KAAK;AAAA,YACP,SAAS;AAAA,YACT,SAAS;AAAA,UAAA,CACV;AACD;AAAA,QAAA;AAEF,cAAM,YAAa,cAAgC;AACnD,cAAM,YACH3I,MAAA,cAAgC,kBAAhC,gBAAAA,IAA+C,YAAY,cAAgC,WAAW;AACnG,cAAA,QAAQ,MAAM,cAAc,WAAW;AAAA,UAC3C,GAAI;AAAA,UACJ;AAAA,UACA,YAAY;AAAA,QAAA,CACb;AAED,cAAMuM,aAAY;AAAA,UAChB;AAAA,YACE,MAAM;AAAA,YACN,UAAU;AAAA,cACR,MAAM;AAAA,cACN,aAAa;AAAA,cACb,YAAY;AAAA,gBACV,MAAM;AAAA,gBACN,YAAY;AAAA,kBACV,KAAK,EAAE,aAAa,OAAO;AAAA,gBAC7B;AAAA,gBACA,UAAU,CAAC,KAAK;AAAA,gBAChB,sBAAsB;AAAA,gBACtB,OAAO;AAAA,cAAA;AAAA,YACT;AAAA,UACF;AAAA,QAEJ;AAEA,YAAI,oBAAoB;AACxB,YAAI,mBAAmB;AACvB,YAAI,eAAe;AACnB,YAAI,qBAAqB;AAGrB,YAAA;AACF,gBAAM,SAAS,MAAM,MAAM,OAAO,2BAA2B;AACzC,8BAAA;AACD,6BAAA;AAAA,iBACZ,OAAO;AACd,iBAAO,MAAM,6BAA8B,MAAgB,OAAO,EAAE;AACpE,cAAI,KAAK;AAAA,YACP,mBAAmB;AAAA,YACnB,kBAAmB,MAAgB;AAAA,UAAA,CACpC;AACD;AAAA,QAAA;AAIE,YAAA;AACF,gBAAM,SAAS,MAAM,MAAM,OAAO,6BAA6B;AAAA,YAC7D,OAAOA;AAAA,UAAA,CACR;AACc,yBAAA;AACM,+BAAA;AAAA,iBACd,OAAO;AACd,iBAAO,MAAM,6BAA8B,MAAgB,OAAO,EAAE;AACrD,yBAAA;AACf,+BAAsB,MAAgB;AAAA,QAAA;AAGxC,eAAO,KAAK,4CAA4C,iBAAiB,mBAAmB,YAAY,EAAE;AAE1G,YAAI,KAAK;AAAA,UACP,SAAS;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QAAA,CACD;AAAA,eACM,OAAO;AACd,eAAO,MAAM,6BAA8B,MAAgB,OAAO,EAAE;AACpE,YAAI,KAAK;AAAA,UACP,SAAS;AAAA,UACT,SAAU,MAAgB;AAAA,QAAA,CAC3B;AAAA,MAAA;AAAA,IACH,CACD;AAAA,EAAA;AAAA,EAGH,MAAMC,QAAe,MAAuB;AAC1C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAM,SAAS,KAAK,IACjB,OAAOA,OAAM,MAAM;AACZ,cAAA,UAAU,OAAO,QAAQ;AAC/B,cAAM,aAAa,OAAO,YAAY,YAAY,UAAU,QAAQ,OAAOA;AACpE,eAAA,KAAK,0CAA0C,UAAU,EAAE;AAClE,aAAK,OAAO;AACZ,gBAAQ,UAAU;AAAA,MACnB,CAAA,EACA,GAAG,SAAS,CAAC,QAAQ;AACpB,eAAO,GAAG;AAAA,MAAA,CACX;AAAA,IAAA,CACJ;AAAA,EAAA;AAEL;ACzYA,SAAS,mBAAmB3F,SAAQ;AAClC,QAAM,oBAAoBA,QAAO;AACjC,QAAM,mBAAmB,CAAE;AAC3B,QAAM,cAAc,GAAG,iBAAiB;AACxC,MAAI,CAAC2E,KAAG,WAAW,WAAW,GAAG;AAC/B,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACxD;AACE,QAAM,kBAAkBA,KAAG,aAAa,GAAG,iBAAiB,qBAAqB,EAAE,SAAU;AAC7F,QAAM,UAAU,KAAK,MAAM,eAAe;AAC1C,aAAW,gBAAgB,QAAQ,SAAS;AAC1C,UAAM,gBAAgB,GAAG,iBAAiB,IAAI,aAAa,GAAG;AAC9D,QAAI;AACF,YAAM,QAAQA,KAAG,aAAa,GAAG,iBAAiB,IAAI,aAAa,GAAG,MAAM,EAAE,SAAU;AACxF,YAAM,SAAS,MAAM,MAAM,0BAA0B,EAAE,IAAI,CAAClF,QAAO;AACjE,eAAOA;AAAA,MACf,CAAO;AACD,uBAAiB,KAAK;AAAA,QACpB,KAAK;AAAA,QACL,KAAK,aAAa;AAAA,QAClB,cAAc,aAAa;AAAA,QAC3B,MAAMmG,WAAO,WAAW,QAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK;AAAA,MACpE,CAAO;AAAA,IACP,QAAY;AACN,YAAM,IAAI,MAAM,WAAW,aAAa,aAAa,iBAAiB,SAAS;AAAA,IACrF;AAAA,EACA;AACE,SAAO;AACT;AC5BA,SAAS,QAAQ,IAAI5F,SAAQ;AAC3B,QAAM,aAAa,mBAAmBA,OAAM;AAC5C,KAAG,QAAQ,QAAQ,YAAY,GAAG,SAASA,OAAM;AACnD;ACEO,SAAS,YAAY2F,OAAgC;AACnD,SAAA,IAAI,QAAQ,CAAC,YAAY;AAC9B,UAAM,SAAS,IAAI,aAAA,EAChB,KAAK,SAAS,CAAC,QAA+B;AACzC,UAAA,IAAI,SAAS,cAAc;AAC7B,gBAAQ,IAAI;AAAA,MAAA;AAAA,IACd,CACD,EACA,KAAK,aAAa,MAAM;AACvB,aAAO,MAAM;AACb,cAAQ,KAAK;AAAA,IAAA,CACd,EACA,OAAOA,KAAI;AAAA,EAAA,CACf;AACH;AAEgB,SAAA,WAAW,YAAoB,MAAgC;AAC7E,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,MAAM,QAAQ,aAAa,UAC5B,IAAI,aAAa1M,OAAK,KAAK,QAAQ,eAAe,QAAQ,SAAS,IAAI,YACxE;AAEJ,UAAM,eAAe4M,QAAM,KAAK,QAAQ,CAAC,SAAS,GAAG;AAAA,MACnD,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO,QAAQ,aAAa;AAAA,MAC5B,aAAa;AAAA,MACb,0BAA0B;AAAA,IAAA,CAC3B;AAEY,iBAAA,GAAG,SAAS,CAAC,SAAS;AACjC,UAAI,SAAS,GAAG;AACN,gBAAA;AAAA,MAAA,OACH;AACL,eAAO,IAAI,MAAM,iCAAiC,IAAI,EAAE,CAAC;AAAA,MAAA;AAAA,IAC3D,CACD;AAEY,iBAAA,GAAG,SAAS,CAAC,QAAQ;AAChC,aAAO,GAAG;AAAA,IAAA,CACX;AAAA,EAAA,CACF;AACH;AAEO,SAAS,WAAW,eAAuB;AAChD,QAAM,YAAY,QAAQ,aAAa,UAAU,MAAM;AAC/C,UAAA,IAAI,OAAO,GAAG,aAAa,GAAG,SAAS,GAAG,YAAY,IAAI;AACpE;AAMO,SAAS,aAAqB;AAC7B,QAAA,OAAO,QAAY,IAAA;AACrB,MAAA,CAAC,KAAa,QAAA;AAElB,QAAM,UAAU5M,OAAK,KAAK,MAAM,QAAQ,YAAY,MAAM;AAEtD,MAAA;AACE,QAAA,IAAI,WAAW,OAAO,GAAG;AAC3B,YAAM,iBAAiB,IAAI,YAAY,OAAO,EAC3C,OAAO,CAAA,QAAO,IAAI,WAAW,GAAG,CAAC,EACjC,KAAA,EACA,IAAI;AAEP,UAAI,gBAAgB;AAClB,eAAOA,OAAK,KAAK,SAAS,gBAAgB,KAAK;AAAA,MAAA;AAAA,IACjD;AAAA,WAEK,OAAO;AACN,YAAA,MAAM,2BAA2B,KAAK;AAAA,EAAA;AAGzC,SAAA;AACT;AAQgB,SAAA,aAAa,WAAmB,WAA4B;AACtE,MAAA;AACI,UAAA,QAAQ,IAAI,SAAS,SAAS;AAC9B,UAAA,QAAQ,IAAI,SAAS,SAAS;AAGhC,QAAA,MAAM,SAAS,MAAM,MAAM;AACtB,aAAA;AAAA,IAAA;AAIL,QAAA,MAAM,YAAY,MAAM,SAAS;AAC5B,aAAA;AAAA,IAAA;AAIF,WAAA;AAAA,WAEF,OAAO;AACJ,YAAA,MAAM,0BAA0B,KAAK;AACtC,WAAA;AAAA,EAAA;AAEX;AAEgB,SAAA,uBAAuB,WAAmB,WAAmB;AAC3E,MAAI,IAAI,WAAW,SAAS,KAAK,CAAC,aAAa,WAAW,SAAS,KAAK,CAAC,IAAI,WAAW,SAAS,GAAG;AAC9F,QAAA,aAAa,WAAW,SAAS;AAAA,EAAA;AAEzC;AChHa,MAAA,UAAU,SAAS,IAAI,WAAW,EAAC,QAAQ,IAAG;AACpD,MAAM,YAAY,QAAQ;AACT,QAAQ;AACnB,MAAA,UAAU,GAAG,QAAQ;AAC3B,MAAM,SAASA,cAAK,KAAK,SAAS,OAAO;AACzC,MAAM,aAAaA,cAAK,KAAK,QAAQ,SAAS;AAE9C,MAAM,aAAa;AAAA,EACxBA,cAAK,KAAK,QAAQ,eAAe,MAAM;AAAA,EACvCA,cAAK,KAAK,QAAQ,eAAe,IAAI;AAAA,EACrCA,cAAK,KAAK,QAAQ,eAAe,QAAQ;AAC3C;AAEO,MAAM,iBAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,wBAAwB;AAAA,EACnC,cAAc;AAAA,IACZ,QAAQ;AAAA,MACN,WAAW;AAAA,MACX,WAAW;AAAA,MACX,QAAQ;AAAA,QACNA,cAAK,KAAK,YAAY,SAAS;AAAA,MAAA;AAAA,IACjC;AAAA,EACF;AAEJ;ACvBO,IAAI,SAAoC;AAC/C,eAAe,aAAiC;AAE9C,MAAI,UAAU,WAAW,EAAE,WAAW,MAAM;AAC5C,MAAI,UAAU,QAAQ,EAAE,WAAW,MAAM;AAEzC,QAAM,uBAAuB,EAAE,MAAM,QAAQ,KAAK;AAGlD,QAAM,sBAAsBA,OAAK,KAAK,WAAW,aAAa;AAC9D,MAAI,CAAC,IAAI,WAAW,mBAAmB,GAAG;AACxC,QAAI,cAAc,qBAAqB,KAAK,UAAU,uBAAuB,MAAM,CAAC,CAAC;AAAA,EAAA;AAIvF,QAAM,kBAAkBA,OAAK,KAAK,WAAW,cAAc;AAC3D,MAAI,CAAC,IAAI,WAAW,eAAe,GAAG;AAChC,QAAA,cAAc,iBAAiB,EAAE;AAAA,EAAA;AAGvC,SAAO,SAAS;AAGV,QAAA,UAAU,IAAI,UAAU;AAAA,IAC5B,iBAAiBA,OAAK,KAAK,WAAW,YAAY;AAAA,IAClD;AAAA,IACA;AAAA,EAAA,CACD;AAGK,QAAA,uBAAuB,qBAAqB,YAAY;AAC9D,uBAAqB,WAAW,QAAQ,aAAa,WAAW,IAAI,aAAa;AAAA,IAC/E,OAAOA,OAAK,KAAK,QAAQ,eAAe,QAAQ,SAAS;AAAA,IACzD,OAAOA,OAAK,KAAK,QAAQ,eAAe,QAAQ,SAAS;AAAA,EAC3D,IAAI,EAAE;AAEC,SAAA;AACT;AAEA,SAAS,OAAO6M,YAAmB;AACpB,eAAA,aAAa,QAAQ,EAAE,QAAQ7M,OAAK,KAAK6M,YAAW,SAAS,GAAG;AAC7E,QAAM,KAAK,MAAM;AACjB,UAAQ,IAAI,EAAE,kBAAkB,IAAI,aAAa7M,OAAK,KAAK,QAAQ,eAAe,SAAS,IAAI,YAAA,CAAa;AACrG,SAAA;AACT;AAEA,eAAe,cAA+B;AAC5C,QAAM,cAAc;AACd,QAAA,qBAAqB,MAAM,YAAY,WAAW;AACxD,MAAI,CAAC,oBAAoB;AAChB,WAAA;AAAA,EAAA;AAGT,QAAM,aAAa;AACb,QAAA,oBAAoB,MAAM,YAAY,UAAU;AACtD,MAAI,CAAC,mBAAmB;AACf,WAAA;AAAA,EAAA;AAGF,SAAA;AACT;AAEW,IAAA,OAAO,QAAQ,QAAQ,CAAC;AACnC,eAAe,cAA+B;AAC5C,QAAM,UAAU,MAAM;AACtB,QAAM,QAAQ,KAAA,EAAO,MAAM,QAAQ,KAAK;AAClC,QAAA,SAAS,IAAI,UAAU,OAAO;AACpC,QAAM,OAAO,MAAM,MAAM,aAAa;AACtC,SAAO,OAAO;AAChB;AAEA,eAAsB,gBAAgB;AACpC,WAAS,WAAW;AACpB,SAAO,YAAY;AACrB;AAEA,eAAsB,UAAU;AACxB,QAAA,iBAAiB,YAAY,EAAE,qBAAqB;AAC5D;AAEA,eAAe,yBAAyB;AAEhC,QAAA,qBAAqBA,OAAK,KAAK,IAAI,aAAa,QAAQ,gBAAgB,QAAQ,IAAI,GAAG,kBAAkB;AAC/G,MAAG,CAAC,IAAI,WAAW,UAAU,GAAG;AAC9B,QAAI,UAAU,YAAY,EAAE,WAAW,MAAM;AACzC,QAAA,SAAS,oBAAoB,UAAU;AAAA,EAAA;AAItB,yBAAAA,OAAK,KAAK,oBAAoB,SAAS,GAAGA,OAAK,KAAK,YAAY,SAAS,CAAC;AAGjG,QAAM,WAAW,UAAU,EAAE,MAAM,QAAQ,KAAK;AAC1C,QAAA,WAAW,YAAY,CAAC,WAAW,WAAW,MAAM,CAAC,EAAE,MAAM,QAAQ,KAAK;AAGhF,MAAI,IAAI,WAAWA,OAAK,KAAK,YAAY,UAAU,CAAC,GAAG;AACrD,QAAI,WAAWA,OAAK,KAAK,YAAY,UAAU,CAAC;AAAA,EAAA;AAEpD;ACrGA,MAAM,EAAE,YAAY,IAAI,cAAc,YAAY,GAAG,EAAE,kBAAkB;AAElE,SAAS,OAAO8M,MAA6B;AAGlD,cAAY,eAAe;AAC3B,cAAY,sBAAsB;AAClC,cAAY,iBAAiB;AAEzB,MAAA,YAAY,OAAO;AACrB,gBAAY,mBAAmB9M,OAAK,KAAK,WAAW,oBAAoB;AAAA,EAAA;AAI9D,cAAA,GAAG,uBAAuB,WAAY;AAAA,EAAA,CAAG;AAEzC,cAAA,GAAG,oBAAoB,CAAC,QAAoB;AACtD,IAAA8M,KAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,MAAM,SAAS,IAAI,WAAW,GAAG,YAAY,2BAAK,SAAS;AAAA,EAAA,CACnH;AAEW,cAAA,GAAG,wBAAwB,CAAC,QAAoB;AAC1D,IAAAA,KAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,OAAO,SAAS,IAAI,WAAW,GAAG,YAAY,2BAAK,SAAS;AAAA,EAAA,CACpH;AAGO,UAAA,OAAO,gBAAgB,YAAY;AACrC,QAAA,CAAC,IAAI,YAAY;AACb,YAAA,QAAQ,IAAI,MAAM,yDAAyD;AACjF,aAAO,EAAE,SAAS,MAAM,SAAS,MAAM;AAAA,IAAA;AAGrC,QAAA;AACK,aAAA,MAAM,YAAY,yBAAyB;AAAA,aAC3C,OAAO;AACP,aAAA,EAAE,SAAS,iBAAiB,MAAM;AAAA,IAAA;AAAA,EAC3C,CACD;AAGO,UAAA,OAAO,kBAAkB,CAAC,UAAuC;AACvE;AAAA,MACE,CAAC,OAAO,iBAAiB;AACvB,YAAI,OAAO;AAEH,gBAAA,OAAO,KAAK,gBAAgB,EAAE,SAAS,MAAM,SAAS,OAAO;AAAA,QAAA,OAC9D;AAEC,gBAAA,OAAO,KAAK,qBAAqB,YAAY;AAAA,QAAA;AAAA,MAEvD;AAAA,MACA,MAAM;AAEE,cAAA,OAAO,KAAK,mBAAmB;AAAA,MAAA;AAAA,IAEzC;AAAA,EAAA,CACD;AAGO,UAAA,OAAO,oBAAoB,MAAM;AAC3B,gBAAA,eAAe,OAAO,IAAI;AAAA,EAAA,CACvC;AACH;AAEA,SAAS,cACP,UACA,UACA;AACA,cAAY,GAAG,qBAAqB,CAAC,SAAuB,SAAS,MAAM,IAAI,CAAC;AAChF,cAAY,GAAG,SAAS,CAAC,UAAiB,SAAS,OAAO,IAAI,CAAC;AACnD,cAAA,GAAG,qBAAqB,QAAQ;AAC5C,cAAY,eAAe;AAC7B;AChFA,MAAM,MAAM,QAAQ,aAAa,WAAW,MAAM;AAClD,MAAe,SAAA;AAAA,EACb,qBAAqB,IAAI,GAAG;AAAA,EAC5B,0BAA0B,IAAI,GAAG;AAAA,EACjC,oBAAoB,IAAI,GAAG;AAAA,EAC3B,iCAAiC,IAAI,GAAG;AAAA,EACxC,0BAA0B,IAAI,GAAG;AAAA,EACjC,eAAe,IAAI,GAAG;AAAA,EACtB,mBAAmB,IAAI,GAAG;AAAA,EAC1B,yBAAyB,IAAI,GAAG;AAAA,EAChC,sBAAsB;AAAA,EACtB,8BAA8B,IAAI,GAAG;AACvC;ACVA,MAAe,SAAA;AAAA,EACb;AACF;ACCO,SAAS,cAAcA,MAAoB;AACxC,UAAA,OAAO,oBAAoB,YAAY;AAC7C,WAAO,OAAO;AAAA,EAAA,CACf;AAEO,UAAA,OAAO,mBAAmB,YAAY;AAC5C,WAAO,QAAQ;AAAA,EAAA,CAChB;AAEO,UAAA,OAAO,YAAY,YAAY;AAC9B,WAAA;AAAA,EAAA,CACR;AAED,UAAQ,OAAO,wBAAwB,OAAOnN,IAAGsJ,OAAc;AAC7D,WAAO,IAAI,aAAajJ,OAAK,KAAK,QAAQ,eAAeiJ,EAAC,IAAIA;AAAA,EAAA,CAC/D;AACH;ACnBa,MAAA,QAAQ,IAAI,MAAM;AAAA,EAC7B,MAAM;AAAA,EACN,UAAU;AAAA,IACR,YAAY;AAAA,IACZ,eAAe;AAAA,EAAA;AAEnB,CAAC;ACJM,SAAS,sBAAsB,QAAiB;AACjD,MAAA,CAAC,YAAY,UAAU;AAClB,WAAA;AAAA,EAAA;AAGL,MAAA;AACI,UAAA,eAAe,QAAY,IAAA;AAE7B,QAAA;AACO,eAAA,aAAa,YAAY,GAAG;AAAA,aAC9B,OAAO;AACN,cAAA,MAAM,oDAAoD,KAAK;AAAA,IAAA;AAGzE,UAAM,eAAejJ,cAAK;AAAA,MACxB,YAAY,QAAQ;AAAA,MACpB;AAAA,IACF;AAEA,QAAI,CAAC,IAAI,WAAW,YAAY,GAAG;AACjC,UAAI,UAAU,cAAc,EAAE,WAAW,MAAM;AAAA,IAAA;AAGjD,UAAM,cAAcA,cAAK,KAAK,cAAc,iBAAiB;AAE7D,QAAI,QAAQ;AACV,YAAM,iBAAiB,uBAAuB;AAC1C,UAAA,cAAc,aAAa,cAAc;AAAA,IAAA,OACxC;AACD,UAAA,IAAI,WAAW,WAAW,GAAG;AAC/B,YAAI,WAAW,WAAW;AAAA,MAAA;AAAA,IAC5B;AAEK,WAAA;AAAA,WACA,OAAO;AACP,WAAA;AAAA,EAAA;AAEX;AAEO,SAAS,gCAAgC;AAC1C,MAAA,CAAC,YAAY,UAAU;AAClB,WAAA;AAAA,EAAA;AAGT,QAAM,cAAcA,cAAK;AAAA,IACvB,YAAY,QAAQ;AAAA,IACpB;AAAA,EACF;AACO,SAAA,IAAI,WAAW,WAAW;AACnC;AAEO,SAAS,yBAAyB;AACvC,QAAM,cAAcA,cAAK,KAAK,QAAY,IAAA,aAAa,SAAS,iBAAiB;AAC3E,QAAA,UAAU,IAAI,WAAW,WAAW,IAAI,IAAI,aAAa,aAAa,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUvF,SAAO,QACJ,QAAQ,UAAU,QAAY,IAAA,QAAS,EACvC,QAAQ,UAAUA,cAAK,KAAK,YAAY,aAAa,UAAU,CAAC,EAChE,QAAQ,YAAY,gCAAgC;AACzD;ACnEA,IAAI,OAAoB;AAEjB,SAAS,SAAS8M,MAAoB;AAC3C,QAAM,WAAW,QAAQ,aAAa,UAClC9M,OAAK,KAAK,QAAA,IAAY,aAAa,UAAU,IAC7CA,OAAK,KAAK,QAAA,IAAY,aAAa,UAAU;AAE1C,SAAA,IAAI,KAAK,QAAQ;AACnB,OAAA,WAAW,IAAI,SAAS;AAE7B,iBAAe8M,IAAG;AAEb,OAAA,GAAG,SAAS,MAAM;AACrB,IAAAA,KAAI,KAAK;AAAA,EAAA,CACV;AACH;AAEA,SAAS,eAAeA,MAAoB;AAC1C,QAAM,eAA6C;AAAA,IACjD;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AACX,QAAAA,KAAI,KAAK;AAAA,MAAA;AAAA,IAEb;AAAA,IACA,EAAE,MAAM,YAAY;AAAA,IACpB;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AACXC,mBAAS,cAAc,IAAI;AAC3B,YAAI,KAAK;AAAA,MAAA;AAAA,IACX;AAAA,EAEJ;AAEM,QAAA,cAAc,KAAK,kBAAkB,YAAY;AACvD,+BAAM,eAAe;AACvB;AAEO,SAAS,cAAc;AAC5B,+BAAM;AACC,SAAA;AACT;ACnCO,SAAS,iBAAiBD,MAAoB;AAC3C,UAAA,OAAO,yBAAyB,YAAY;AAClD,UAAM,SAAS,UAAU;AAAA,EAAA,CAC1B;AAEO,UAAA,OAAO,wBAAwB,MAAM;AACvC,QAAA,YAAY,UAAU;AACxB,aAAO,8BAA8B;AAAA,IAAA;AAGhC,WAAA,IAAI,uBAAuB;AAAA,EAAA,CACnC;AAED,UAAQ,OAAO,wBAAwB,CAAC,OAAO,WAAW;AAClD,UAAA,IAAI,cAAc,MAAM;AAE1B,QAAA,YAAY,UAAU;AACxB,4BAAsB,MAAM;AAAA,IAAA,OACvB;AACL,UAAI,qBAAqB;AAAA,QACvB,aAAa;AAAA,QACb,cAAc;AAAA,MAAA,CACf;AAAA,IAAA;AAGI,WAAA;AAAA,EAAA,CACR;AAEO,UAAA,OAAO,2BAA2B,MAAM;AACvC,WAAA,MAAM,IAAI,eAAe;AAAA,EAAA,CACjC;AAED,UAAQ,OAAO,2BAA2B,CAAC,OAAO,WAAW;AACrD,UAAA,IAAI,iBAAiB,MAAM;AACxBC,eAAA,cAAc,CAAC,MAAM;AAE9B,QAAI,QAAQ;AACV,eAASD,IAAG;AAAA,IAAA,OACP;AACO,kBAAA;AAAA,IAAA;AAAA,EACd,CACD;AACH;AChDO,SAAS,eAAeA,MAAoB;AACjD,UAAQ,OAAO,yBAAyB,OAAOnN,IAAG,YAAoB;AAChE,QAAA;AACF,YAAM,EAAE,YAAY,QAAA,IAAY,KAAK,MAAM,OAAO;AAC5C,YAAA,aAAa,OAAO,KAAK,OAAO,EAAE,OAAO,CAAC,KAAK,WAAW;AAC9D,cAAM,EAAE,KAAA,IAAS,QAAQ,MAAM;AAE/B,YAAI,CAAC;AACI,iBAAA;AAET,cAAM,eAAe,KAAK,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,KAAK,IAAI,SAAS,IAAI,CAAC;AAChF,YAAI,CAAC;AACI,iBAAA;AAEH,cAAA,iBAAiB,IAAI,WAAW,YAAY;AAC9C,YAAA;AACK,iBAAA;AAEH,cAAA,YAAY,KAAK,OAAO,CAACqN,MAAK,KAAK,UAAU,iBAAiB,MAAM,QAAQA,MAAK,EAAE;AACzF,YAAI,IAAI,WAAWhN,OAAK,KAAK,YAAY,YAAY,CAAC,GAAG;AACvD,eAAK,SAAS,IAAIA,OAAK,KAAK,YAAY,YAAY;AAAA,QAAA;AAGtD,cAAM,WAAWA,OAAK,MAAM,YAAY,EAAE;AAC1C,YAAI,IAAI,WAAWA,OAAK,KAAK,YAAY,QAAQ,CAAC,GAAG;AACnD,eAAK,SAAS,IAAIA,OAAK,KAAK,YAAY,QAAQ;AAAA,QAAA;AAGlD,YAAI,MAAM,IAAI;AAAA,UACZ,GAAG,QAAQ,MAAM;AAAA,UACjB;AAAA,QACF;AAEO,eAAA;AAAA,SACN,OAAO;AAEV,aAAO,KAAK,UAAU,EAAE,YAAY;AAAA,aAC7B,OAAO;AACP,aAAA;AAAA,IAAA;AAAA,EACT,CACD;AACH;AC9CO,MAAM,iBAAiB;AACvB,MAAM,aAAa;AAAA,EACtB,SAAS,CAAC2D,OAAM,OAAOA,EAAC,EAAE,QAAQ,QAAQ,GAAG;AAAA,EAC7C,SAAS,CAACA,OAAM,OAAOA,EAAC;AAC5B;AACO,MAAM,UAAU;ACHvB,MAAMsJ,aAAW,MAAM;AACvB,MAAM,aAAa,MAAM;AACrB,QAAM,QAAQ,CAAE;AAChB,WAASxN,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC1B,UAAM,KAAK,QAAQA,KAAI,KAAK,MAAM,MAAMA,GAAE,SAAS,EAAE,GAAG,YAAW,CAAE;AAAA,EAC7E;AACI,SAAO;AACX,GAAI;AAuGJ,MAAM,QAAQ;AACP,MAAM,SAAS,CAACC,MAAK,iBAAiB,SAAS,OAAOwN,YAAW;AAGpE,MAAIxN,KAAI,WAAW,GAAG;AAClB,WAAOA;AAAA,EACf;AACI,MAAI,SAASA;AACb,MAAI,OAAOA,SAAQ,UAAU;AACzB,aAAS,OAAO,UAAU,SAAS,KAAKA,IAAG;AAAA,EACnD,WACa,OAAOA,SAAQ,UAAU;AAC9B,aAAS,OAAOA,IAAG;AAAA,EAC3B;AACI,MAAI,YAAY,cAAc;AAC1B,WAAO,OAAO,MAAM,EAAE,QAAQ,mBAAmB,SAAU,IAAI;AAC3D,aAAO,WAAW,SAAS,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI;AAAA,IAC1D,CAAS;AAAA,EACT;AACI,MAAI,MAAM;AACV,WAASwG,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK,OAAO;AAC3C,UAAM,UAAU,OAAO,UAAU,QAAQ,OAAO,MAAMA,IAAGA,KAAI,KAAK,IAAI;AACtE,UAAMtC,OAAM,CAAE;AACd,aAASnE,KAAI,GAAGA,KAAI,QAAQ,QAAQ,EAAEA,IAAG;AACrC,UAAI8J,KAAI,QAAQ,WAAW9J,EAAC;AAC5B,UAAI8J,OAAM;AAAA,MACNA,OAAM;AAAA,MACNA,OAAM;AAAA,MACNA,OAAM;AAAA,MACLA,MAAK,MAAQA,MAAK;AAAA,MAClBA,MAAK,MAAQA,MAAK;AAAA,MAClBA,MAAK,MAAQA,MAAK;AAAA,MAClB2D,YAAW,YAAY3D,OAAM,MAAQA,OAAM,KAC9C;AACE,QAAA3F,KAAIA,KAAI,MAAM,IAAI,QAAQ,OAAOnE,EAAC;AAClC;AAAA,MAChB;AACY,UAAI8J,KAAI,KAAM;AACV,QAAA3F,KAAIA,KAAI,MAAM,IAAI,UAAU2F,EAAC;AAC7B;AAAA,MAChB;AACY,UAAIA,KAAI,MAAO;AACX,QAAA3F,KAAIA,KAAI,MAAM,IAAI,UAAU,MAAQ2F,MAAK,CAAE,IAAI,UAAU,MAAQA,KAAI,EAAK;AAC1E;AAAA,MAChB;AACY,UAAIA,KAAI,SAAUA,MAAK,OAAQ;AAC3B,QAAA3F,KAAIA,KAAI,MAAM,IACV,UAAU,MAAQ2F,MAAK,EAAG,IAAI,UAAU,MAASA,MAAK,IAAK,EAAK,IAAI,UAAU,MAAQA,KAAI,EAAK;AACnG;AAAA,MAChB;AACY,MAAA9J,MAAK;AACL,MAAA8J,KAAI,UAAaA,KAAI,SAAU,KAAO,QAAQ,WAAW9J,EAAC,IAAI;AAC9D,MAAAmE,KAAIA,KAAI,MAAM,IACV,UAAU,MAAQ2F,MAAK,EAAG,IACtB,UAAU,MAASA,MAAK,KAAM,EAAK,IACnC,UAAU,MAASA,MAAK,IAAK,EAAK,IAClC,UAAU,MAAQA,KAAI,EAAK;AAAA,IAC/C;AACQ,WAAO3F,KAAI,KAAK,EAAE;AAAA,EAC1B;AACI,SAAO;AACX;AAwBO,SAAS,UAAU,KAAK;AAC3B,MAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACjC,WAAO;AAAA,EACf;AACI,SAAO,CAAC,EAAE,IAAI,eAAe,IAAI,YAAY,YAAY,IAAI,YAAY,SAAS,GAAG;AACzF;AAIO,SAAS,UAAU,KAAK,IAAI;AAC/B,MAAIqJ,WAAS,GAAG,GAAG;AACf,UAAM,SAAS,CAAE;AACjB,aAASxN,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK,GAAG;AACpC,aAAO,KAAK,GAAG,IAAIA,EAAC,CAAC,CAAC;AAAA,IAClC;AACQ,WAAO;AAAA,EACf;AACI,SAAO,GAAG,GAAG;AACjB;ACrNA,MAAM,MAAM,OAAO,UAAU;AAC7B,MAAM,0BAA0B;AAAA,EAC5B,SAAS,QAAQ;AACb,WAAO,OAAO,MAAM,IAAI;AAAA,EAC3B;AAAA,EACD,OAAO;AAAA,EACP,QAAQ,QAAQ,KAAK;AACjB,WAAO,OAAO,MAAM,IAAI,MAAM,MAAM;AAAA,EACvC;AAAA,EACD,OAAO,QAAQ;AACX,WAAO,OAAO,MAAM;AAAA,EACvB;AACL;AACA,MAAM,WAAW,MAAM;AACvB,MAAM,OAAO,MAAM,UAAU;AAC7B,MAAM,gBAAgB,SAAUmE,MAAK,gBAAgB;AACjD,OAAK,MAAMA,MAAK,SAAS,cAAc,IAAI,iBAAiB,CAAC,cAAc,CAAC;AAChF;AACA,MAAM,SAAS,KAAK,UAAU;AAC9B,MAAM,WAAW;AAAA,EACb,gBAAgB;AAAA,EAChB,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,QAAQ;AAAA,EACR,WAAW,WAAW,cAAc;AAAA;AAAA,EAEpC,SAAS;AAAA,EACT,cAAc,MAAM;AAChB,WAAO,OAAO,KAAK,IAAI;AAAA,EAC1B;AAAA,EACD,WAAW;AAAA,EACX,oBAAoB;AACxB;AACA,SAAS,yBAAyBD,IAAG;AACjC,SAAQ,OAAOA,OAAM,YACjB,OAAOA,OAAM,YACb,OAAOA,OAAM,aACb,OAAOA,OAAM,YACb,OAAOA,OAAM;AACrB;AACA,MAAM,WAAW,CAAE;AACnB,SAAS,gBAAgB,QAAQ,QAAQ,qBAAqB,gBAAgB,kBAAkB,oBAAoB,WAAW,iBAAiB,SAAS,QAAQ,MAAM,WAAW,eAAeuJ,SAAQ,WAAW,kBAAkB,SAAS,aAAa;AACxP,MAAI,MAAM;AACV,MAAI,SAAS;AACb,MAAI,OAAO;AACX,MAAI,YAAY;AAChB,UAAQ,SAAS,OAAO,IAAI,QAAQ,OAAO,UAAkB,CAAC,WAAW;AAErE,UAAM,MAAM,OAAO,IAAI,MAAM;AAC7B,YAAQ;AACR,QAAI,OAAO,QAAQ,aAAa;AAC5B,UAAI,QAAQ,MAAM;AACd,cAAM,IAAI,WAAW,qBAAqB;AAAA,MAC1D,OACiB;AACD,oBAAY;AAAA,MAC5B;AAAA,IACA;AACQ,QAAI,OAAO,OAAO,IAAI,QAAQ,MAAM,aAAa;AAC7C,aAAO;AAAA,IACnB;AAAA,EACA;AACI,MAAI,OAAO,WAAW,YAAY;AAC9B,UAAM,OAAO,QAAQ,GAAG;AAAA,EAChC,WACa,eAAe,MAAM;AAC1B,UAAM,+CAAgB;AAAA,EAC9B,WACa,wBAAwB,WAAW,SAAS,GAAG,GAAG;AACvD,UAAM,UAAU,KAAK,SAAU,OAAO;AAClC,UAAI,iBAAiB,MAAM;AACvB,eAAO,+CAAgB;AAAA,MACvC;AACY,aAAO;AAAA,IACnB,CAAS;AAAA,EACT;AACI,MAAI,QAAQ,MAAM;AACd,QAAI,oBAAoB;AACpB,aAAO,WAAW,CAAC;AAAA;AAAA,QAEf,QAAQ,QAAQ,SAAS,SAAS,SAAS,OAAOA,OAAM;AAAA,UACtD;AAAA,IAClB;AACQ,UAAM;AAAA,EACd;AACI,MAAI,yBAAyB,GAAG,KAAK,UAAU,GAAG,GAAG;AACjD,QAAI,SAAS;AACT,YAAM,YAAY,mBAAmB,SAE/B,QAAQ,QAAQ,SAAS,SAAS,SAAS,OAAOA,OAAM;AAC9D,aAAO;AAAA,SACH,uCAAY,cACR;AAAA,SAEA,uCAAY,QAAQ,KAAK,SAAS,SAAS,SAAS,SAASA,OAAM;AAAA,MAC1E;AAAA,IACb;AACQ,WAAO,EAAC,uCAAY,WAAU,OAAM,uCAAY,OAAO,GAAG,GAAE;AAAA,EACpE;AACI,QAAM,SAAS,CAAE;AACjB,MAAI,OAAO,QAAQ,aAAa;AAC5B,WAAO;AAAA,EACf;AACI,MAAI;AACJ,MAAI,wBAAwB,WAAW,SAAS,GAAG,GAAG;AAElD,QAAI,oBAAoB,SAAS;AAE7B,YAAM,UAAU,KAAK,OAAO;AAAA,IACxC;AACQ,eAAW,CAAC,EAAE,OAAO,IAAI,SAAS,IAAI,IAAI,KAAK,GAAG,KAAK,OAAO,OAAc,CAAE;AAAA,EACtF,WACa,SAAS,MAAM,GAAG;AACvB,eAAW;AAAA,EACnB,OACS;AACD,UAAM,OAAO,OAAO,KAAK,GAAG;AAC5B,eAAW,OAAO,KAAK,KAAK,IAAI,IAAI;AAAA,EAC5C;AACI,QAAM,iBAAiB,kBAAkB,OAAO,MAAM,EAAE,QAAQ,OAAO,KAAK,IAAI,OAAO,MAAM;AAC7F,QAAM,kBAAkB,kBAAkB,SAAS,GAAG,KAAK,IAAI,WAAW,IAAI,iBAAiB,OAAO;AACtG,MAAI,oBAAoB,SAAS,GAAG,KAAK,IAAI,WAAW,GAAG;AACvD,WAAO,kBAAkB;AAAA,EACjC;AACI,WAAShH,KAAI,GAAGA,KAAI,SAAS,QAAQ,EAAEA,IAAG;AACtC,UAAM,MAAM,SAASA,EAAC;AACtB,UAAM;AAAA;AAAA,MAEN,OAAO,QAAQ,YAAY,OAAO,IAAI,UAAU,cAAc,IAAI,QAAQ,IAAI,GAAG;AAAA;AACjF,QAAI,aAAa,UAAU,MAAM;AAC7B;AAAA,IACZ;AAEQ,UAAM,cAAc,aAAa,kBAAkB,IAAI,QAAQ,OAAO,KAAK,IAAI;AAC/E,UAAM,aAAa,SAAS,GAAG,IAC3B,OAAO,wBAAwB,aAC3B,oBAAoB,iBAAiB,WAAW,IAC9C,kBACJ,mBAAmB,YAAY,MAAM,cAAc,MAAM,cAAc;AAC7E,gBAAY,IAAI,QAAQ,IAAI;AAC5B,UAAM,mBAAmB,oBAAI,QAAS;AACtC,qBAAiB,IAAI,UAAU,WAAW;AAC1C,kBAAc,QAAQ;AAAA,MAAgB;AAAA,MAAO;AAAA,MAAY;AAAA,MAAqB;AAAA,MAAgB;AAAA,MAAkB;AAAA,MAAoB;AAAA,MAAW;AAAA;AAAA,MAE/I,wBAAwB,WAAW,oBAAoB,SAAS,GAAG,IAAI,OAAO;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAM;AAAA,MAAW;AAAA,MAAegH;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAkB;AAAA,MAAS;AAAA,IAAgB,CAAC;AAAA,EACtM;AACI,SAAO;AACX;AACA,SAAS,4BAA4B,OAAO,UAAU;AAClD,MAAI,OAAO,KAAK,qBAAqB,eAAe,OAAO,KAAK,qBAAqB,WAAW;AAC5F,UAAM,IAAI,UAAU,wEAAwE;AAAA,EACpG;AACI,MAAI,OAAO,KAAK,oBAAoB,eAAe,OAAO,KAAK,oBAAoB,WAAW;AAC1F,UAAM,IAAI,UAAU,uEAAuE;AAAA,EACnG;AACI,MAAI,KAAK,YAAY,QAAQ,OAAO,KAAK,YAAY,eAAe,OAAO,KAAK,YAAY,YAAY;AACpG,UAAM,IAAI,UAAU,+BAA+B;AAAA,EAC3D;AACI,QAAM,UAAU,KAAK,WAAW,SAAS;AACzC,MAAI,OAAO,KAAK,YAAY,eAAe,KAAK,YAAY,WAAW,KAAK,YAAY,cAAc;AAClG,UAAM,IAAI,UAAU,mEAAmE;AAAA,EAC/F;AACI,MAAIA,UAAS;AACb,MAAI,OAAO,KAAK,WAAW,aAAa;AACpC,QAAI,CAAC,IAAI,KAAK,YAAY,KAAK,MAAM,GAAG;AACpC,YAAM,IAAI,UAAU,iCAAiC;AAAA,IACjE;AACQ,IAAAA,UAAS,KAAK;AAAA,EACtB;AACI,QAAM,YAAY,WAAWA,OAAM;AACnC,MAAI,SAAS,SAAS;AACtB,MAAI,OAAO,KAAK,WAAW,cAAc,SAAS,KAAK,MAAM,GAAG;AAC5D,aAAS,KAAK;AAAA,EACtB;AACI,MAAI;AACJ,MAAI,KAAK,eAAe,KAAK,eAAe,yBAAyB;AACjE,kBAAc,KAAK;AAAA,EAC3B,WACa,aAAa,MAAM;AACxB,kBAAc,KAAK,UAAU,YAAY;AAAA,EACjD,OACS;AACD,kBAAc,SAAS;AAAA,EAC/B;AACI,MAAI,oBAAoB,QAAQ,OAAO,KAAK,mBAAmB,WAAW;AACtE,UAAM,IAAI,UAAU,+CAA+C;AAAA,EAC3E;AACI,QAAM,YAAY,OAAO,KAAK,cAAc,cACxC,CAAC,CAAC,KAAK,oBAAoB,OACvB,OACE,SAAS,YACb,CAAC,CAAC,KAAK;AACb,SAAO;AAAA,IACH,gBAAgB,OAAO,KAAK,mBAAmB,YAAY,KAAK,iBAAiB,SAAS;AAAA;AAAA,IAE1F;AAAA,IACA,kBAAkB,OAAO,KAAK,qBAAqB,YAAY,CAAC,CAAC,KAAK,mBAAmB,SAAS;AAAA,IAClG;AAAA,IACA;AAAA,IACA,iBAAiB,OAAO,KAAK,oBAAoB,YAAY,KAAK,kBAAkB,SAAS;AAAA,IAC7F,gBAAgB,CAAC,CAAC,KAAK;AAAA,IACvB,WAAW,OAAO,KAAK,cAAc,cAAc,SAAS,YAAY,KAAK;AAAA,IAC7E,QAAQ,OAAO,KAAK,WAAW,YAAY,KAAK,SAAS,SAAS;AAAA,IAClE,iBAAiB,OAAO,KAAK,oBAAoB,YAAY,KAAK,kBAAkB,SAAS;AAAA,IAC7F,SAAS,OAAO,KAAK,YAAY,aAAa,KAAK,UAAU,SAAS;AAAA,IACtE,kBAAkB,OAAO,KAAK,qBAAqB,YAAY,KAAK,mBAAmB,SAAS;AAAA,IAChG;AAAA,IACA,QAAQA;AAAA,IACR;AAAA,IACA,eAAe,OAAO,KAAK,kBAAkB,aAAa,KAAK,gBAAgB,SAAS;AAAA,IACxF,WAAW,OAAO,KAAK,cAAc,YAAY,KAAK,YAAY,SAAS;AAAA;AAAA,IAE3E,MAAM,OAAO,KAAK,SAAS,aAAa,KAAK,OAAO;AAAA,IACpD,oBAAoB,OAAO,KAAK,uBAAuB,YAAY,KAAK,qBAAqB,SAAS;AAAA,EACzG;AACL;AACO,SAAS,UAAU,QAAQ,OAAO,IAAI;AACzC,MAAI,MAAM;AACV,QAAM,UAAU,4BAA4B,IAAI;AAChD,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,QAAQ,WAAW,YAAY;AACtC,aAAS,QAAQ;AACjB,UAAM,OAAO,IAAI,GAAG;AAAA,EAC5B,WACa,SAAS,QAAQ,MAAM,GAAG;AAC/B,aAAS,QAAQ;AACjB,eAAW;AAAA,EACnB;AACI,QAAM,OAAO,CAAE;AACf,MAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AACzC,WAAO;AAAA,EACf;AACI,QAAM,sBAAsB,wBAAwB,QAAQ,WAAW;AACvE,QAAM,iBAAiB,wBAAwB,WAAW,QAAQ;AAClE,MAAI,CAAC,UAAU;AACX,eAAW,OAAO,KAAK,GAAG;AAAA,EAClC;AACI,MAAI,QAAQ,MAAM;AACd,aAAS,KAAK,QAAQ,IAAI;AAAA,EAClC;AACI,QAAM,cAAc,oBAAI,QAAS;AACjC,WAASzN,KAAI,GAAGA,KAAI,SAAS,QAAQ,EAAEA,IAAG;AACtC,UAAM,MAAM,SAASA,EAAC;AACtB,QAAI,QAAQ,aAAa,IAAI,GAAG,MAAM,MAAM;AACxC;AAAA,IACZ;AACQ,kBAAc,MAAM;AAAA,MAAgB,IAAI,GAAG;AAAA,MAAG;AAAA;AAAA,MAE9C;AAAA,MAAqB;AAAA,MAAgB,QAAQ;AAAA,MAAkB,QAAQ;AAAA,MAAoB,QAAQ;AAAA,MAAW,QAAQ;AAAA,MAAiB,QAAQ,SAAS,QAAQ,UAAU;AAAA,MAAM,QAAQ;AAAA,MAAQ,QAAQ;AAAA,MAAM,QAAQ;AAAA,MAAW,QAAQ;AAAA,MAAe,QAAQ;AAAA,MAAQ,QAAQ;AAAA,MAAW,QAAQ;AAAA,MAAkB,QAAQ;AAAA,MAAS;AAAA,IAAW,CAAC;AAAA,EAC1V;AACI,QAAM,SAAS,KAAK,KAAK,QAAQ,SAAS;AAC1C,MAAI,SAAS,QAAQ,mBAAmB,OAAO,MAAM;AACrD,MAAI,QAAQ,iBAAiB;AACzB,QAAI,QAAQ,YAAY,cAAc;AAElC,gBAAU;AAAA,IACtB,OACa;AAED,gBAAU;AAAA,IACtB;AAAA,EACA;AACI,SAAO,OAAO,SAAS,IAAI,SAAS,SAAS;AACjD;AClRO,MAAM,UAAU;ACAhB,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI0N,UAAQ;AAIZ,IAAIC,aAAW;AAEf,IAAIC,SAAO;AACX,IAAIC,mBAAiB;AACrB,IAAIC,+BAA6B;AACjC,IAAI,kBAAkB;AACtB,IAAIC,iBAAe;AACnB,IAAI,iBAAiB;AACrB,SAAS,SAAS,OAAO,UAAU,EAAE,MAAM,MAAK,GAAI;AACvD,MAAI,MAAM;AACN,UAAM,IAAI,MAAM,mCAAmC,MAAM,IAAI,gDAAgD;AAAA,EACrH;AACI,MAAI,MAAM;AACN,UAAM,IAAI,MAAM,gCAAgC,MAAM,IAAI,oCAAoC,IAAI,KAAK;AAAA,EAC/G;AACI,SAAO,QAAQ;AACf,SAAO,MAAM;AACbL,YAAQ,MAAM;AAIdC,eAAW,MAAM;AAEjBC,WAAO,MAAM;AACbC,qBAAiB,MAAM;AACvBC,iCAA6B,MAAM;AACnC,oBAAkB,MAAM;AACxBC,mBAAe,MAAM;AACrB,mBAAiB,MAAM;AAC3B;;;;;;;;ACjCA,MAAI,cAAc,CAAE;AACpB,QAAiB;AAEjB,WAAS,KAAK3N,IAAG;AACb,WAAOA,KAAI,IAAI,KAAK;AAAA,EACxB;AAEA,WAAS,UAAUA,IAAG;AAElB,QAAKA,KAAI,MAAO,QAAQA,KAAI,OAAO,GAAG;AAClC,aAAO,KAAK,MAAMA,EAAC;AAAA,IAC3B,OAAW;AACH,aAAO,KAAK,MAAMA,EAAC;AAAA,IAC3B;AAAA,EACA;AAEA,WAAS,uBAAuB,WAAW,UAAU;AACjD,QAAI,CAAC,SAAS,UAAU;AACpB,QAAE;AAAA,IACV;AACI,UAAM0G,cAAa,SAAS,WAAW,IAAI,CAAC,KAAK,IAAI,GAAG,SAAS;AACjE,UAAM,aAAa,KAAK,IAAI,GAAG,SAAS,IAAI;AAE5C,UAAM,YAAY,SAAS,kBAAkB,KAAK,IAAI,GAAG,SAAS,eAAe,IAAI,KAAK,IAAI,GAAG,SAAS;AAC1G,UAAM,cAAc,SAAS,kBAAkB,KAAK,IAAI,GAAG,SAAS,kBAAkB,CAAC,IAAI,KAAK,IAAI,GAAG,YAAY,CAAC;AAEpH,WAAO,SAASkH,IAAG,MAAM;AACrB,UAAI,CAAC,KAAM,QAAO,CAAE;AAEpB,UAAI5N,KAAI,CAAC4N;AAET,UAAI,KAAK,cAAc;AACnB,YAAI,CAAC,OAAO,SAAS5N,EAAC,GAAG;AACrB,gBAAM,IAAI,UAAU,iCAAiC;AAAA,QACrE;AAEY,QAAAA,KAAI,KAAKA,EAAC,IAAI,KAAK,MAAM,KAAK,IAAIA,EAAC,CAAC;AACpC,YAAIA,KAAI0G,eAAc1G,KAAI,YAAY;AAClC,gBAAM,IAAI,UAAU,+BAA+B;AAAA,QACnE;AAEY,eAAOA;AAAA,MACnB;AAEQ,UAAI,CAAC,MAAMA,EAAC,KAAK,KAAK,OAAO;AACzB,QAAAA,KAAI,UAAUA,EAAC;AAEf,YAAIA,KAAI0G,YAAY,CAAA1G,KAAI0G;AACxB,YAAI1G,KAAI,WAAY,CAAAA,KAAI;AACxB,eAAOA;AAAA,MACnB;AAEQ,UAAI,CAAC,OAAO,SAASA,EAAC,KAAKA,OAAM,GAAG;AAChC,eAAO;AAAA,MACnB;AAEQ,MAAAA,KAAI,KAAKA,EAAC,IAAI,KAAK,MAAM,KAAK,IAAIA,EAAC,CAAC;AACpC,MAAAA,KAAIA,KAAI;AAER,UAAI,CAAC,SAAS,YAAYA,MAAK,aAAa;AACxC,eAAOA,KAAI;AAAA,MACvB,WAAmB,SAAS,UAAU;AAC1B,YAAIA,KAAI,GAAG;AACT,UAAAA,MAAK;AAAA,QACnB,WAAuBA,OAAM,IAAI;AACnB,iBAAO;AAAA,QACrB;AAAA,MACA;AAEQ,aAAOA;AAAA,IACf;AAAA,EACA;AAEA,cAAY,MAAM,IAAI,WAAY;AAC9B,WAAO;AAAA,EACV;AAED,cAAY,SAAS,IAAI,SAAU,KAAK;AACpC,WAAO,CAAC,CAAC;AAAA,EACZ;AAED,cAAY,MAAM,IAAI,uBAAuB,GAAG,EAAE,UAAU,OAAO;AACnE,cAAY,OAAO,IAAI,uBAAuB,GAAG,EAAE,UAAU,MAAM;AAEnE,cAAY,OAAO,IAAI,uBAAuB,IAAI,EAAE,UAAU,OAAO;AACrE,cAAY,gBAAgB,IAAI,uBAAuB,IAAI,EAAE,UAAU,MAAM;AAE7E,cAAY,MAAM,IAAI,uBAAuB,IAAI,EAAE,UAAU,OAAO;AACpE,cAAY,eAAe,IAAI,uBAAuB,IAAI,EAAE,UAAU,MAAM;AAE5E,cAAY,WAAW,IAAI,uBAAuB,IAAI,EAAE,UAAU,OAAO,iBAAiB,IAAI;AAC9F,cAAY,oBAAoB,IAAI,uBAAuB,IAAI,EAAE,UAAU,MAAM,iBAAiB,IAAI;AAEtG,cAAY,QAAQ,IAAI,SAAU4N,IAAG;AACjC,UAAM5N,KAAI,CAAC4N;AAEX,QAAI,CAAC,OAAO,SAAS5N,EAAC,GAAG;AACrB,YAAM,IAAI,UAAU,+CAA+C;AAAA,IAC3E;AAEI,WAAOA;AAAA,EACV;AAED,cAAY,qBAAqB,IAAI,SAAU4N,IAAG;AAC9C,UAAM5N,KAAI,CAAC4N;AAEX,QAAI,MAAM5N,EAAC,GAAG;AACV,YAAM,IAAI,UAAU,iBAAiB;AAAA,IAC7C;AAEI,WAAOA;AAAA,EACV;AAGD,cAAY,OAAO,IAAI,YAAY,QAAQ;AAC3C,cAAY,oBAAoB,IAAI,YAAY,qBAAqB;AAErE,cAAY,WAAW,IAAI,SAAU4N,IAAG,MAAM;AAC1C,QAAI,CAAC,KAAM,QAAO,CAAE;AAEpB,QAAI,KAAK,0BAA0BA,OAAM,MAAM;AAC3C,aAAO;AAAA,IACf;AAEI,WAAO,OAAOA,EAAC;AAAA,EAClB;AAED,cAAY,YAAY,IAAI,SAAUA,IAAG,MAAM;AAC3C,UAAM5N,KAAI,OAAO4N,EAAC;AAClB,QAAIlE,KAAI;AACR,aAAS9J,KAAI,IAAI8J,KAAI1J,GAAE,YAAYJ,EAAC,OAAO,QAAW,EAAEA,IAAG;AACvD,UAAI8J,KAAI,KAAK;AACT,cAAM,IAAI,UAAU,oCAAoC;AAAA,MACpE;AAAA,IACA;AAEI,WAAO1J;AAAA,EACV;AAED,cAAY,WAAW,IAAI,SAAU4N,IAAG;AACpC,UAAMC,KAAI,OAAOD,EAAC;AAClB,UAAMpJ,KAAIqJ,GAAE;AACZ,UAAMC,KAAI,CAAE;AACZ,aAASlO,KAAI,GAAGA,KAAI4E,IAAG,EAAE5E,IAAG;AACxB,YAAM8J,KAAImE,GAAE,WAAWjO,EAAC;AACxB,UAAI8J,KAAI,SAAUA,KAAI,OAAQ;AAC1B,QAAAoE,GAAE,KAAK,OAAO,cAAcpE,EAAC,CAAC;AAAA,MACjC,WAAU,SAAUA,MAAKA,MAAK,OAAQ;AACnC,QAAAoE,GAAE,KAAK,OAAO,cAAc,KAAM,CAAC;AAAA,MAC/C,OAAe;AACH,YAAIlO,OAAM4E,KAAI,GAAG;AACb,UAAAsJ,GAAE,KAAK,OAAO,cAAc,KAAM,CAAC;AAAA,QACnD,OAAmB;AACH,gBAAM/B,KAAI8B,GAAE,WAAWjO,KAAI,CAAC;AAC5B,cAAI,SAAUmM,MAAKA,MAAK,OAAQ;AAC5B,kBAAM9I,KAAIyG,KAAI;AACd,kBAAMxG,KAAI6I,KAAI;AACd,YAAA+B,GAAE,KAAK,OAAO,eAAe,KAAK,OAAO,KAAK,KAAK7K,KAAIC,EAAC,CAAC;AACzD,cAAEtD;AAAA,UACtB,OAAuB;AACH,YAAAkO,GAAE,KAAK,OAAO,cAAc,KAAM,CAAC;AAAA,UACvD;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAEI,WAAOA,GAAE,KAAK,EAAE;AAAA,EACnB;AAED,cAAY,MAAM,IAAI,SAAUF,IAAG,MAAM;AACrC,QAAI,EAAEA,cAAa,OAAO;AACtB,YAAM,IAAI,UAAU,+BAA+B;AAAA,IAC3D;AACI,QAAI,MAAMA,EAAC,GAAG;AACV,aAAO;AAAA,IACf;AAEI,WAAOA;AAAA,EACV;AAED,cAAY,QAAQ,IAAI,SAAUA,IAAG,MAAM;AACvC,QAAI,EAAEA,cAAa,SAAS;AACxB,MAAAA,KAAI,IAAI,OAAOA,EAAC;AAAA,IACxB;AAEI,WAAOA;AAAA,EACV;;;;;;;;;AC1LD,WAAA,QAAA,QAAuB,SAAS,MAAM,QAAQ,QAAQ;AACpD,YAAM,OAAO,OAAO,oBAAoB,MAAM;AAC9C,eAAShO,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AACpC,eAAO,eAAe,QAAQ,KAAKA,EAAC,GAAG,OAAO,yBAAyB,QAAQ,KAAKA,EAAC,CAAC,CAAC;AAAA,MAC3F;AAAA,IACC;AAED,WAA+B,QAAA,gBAAA,OAAO,SAAS;AAC/C,WAA4B,QAAA,aAAA,OAAO,MAAM;AAEzC,WAAgC,QAAA,iBAAA,SAAU,MAAM;AAC9C,aAAO,KAAK,OAAO,QAAQ,aAAa;AAAA,IACzC;AAED,WAAgC,QAAA,iBAAA,SAAU,SAAS;AACjD,aAAO,QAAQ,OAAO,QAAQ,UAAU;AAAA;;;;;;;;;;;;ACf1C,MAAI,WAAWoD;AACf,MAAI,eAAe;AAEnB,MAAI,qBAAqB;AAAA,IACvB,cAAc;AAAA,IACd,iBAAiB;AAAA,EAClB;AAED,WAAS,UAAUnD,MAAK;AACtB,WAAOA,KAAI,MAAM,IAAQ,EAAE,IAAI,SAAUF,IAAG;AAAE,aAAOA,GAAE,UAAU,KAAK;AAAA,IAAI,CAAA,EAAE,KAAK,IAAQ;AAAA,EAC3F;AAEA,WAAS,WAAW,KAAK;AACvB,QAAI,QAAQ;AACZ,QAAI,MAAM,aAAa,SAAS;AAEhC,WAAO,SAAS,KAAK;AACnB,UAAI,MAAM,KAAK,OAAO,QAAQ,OAAO,CAAC;AAEtC,UAAI,SAAS,aAAa,GAAG;AAC7B,UAAI,OAAO,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC,EAAE,CAAC,KAAK,KAAK;AAC9C,eAAO;AAAA,MACR,WAAU,OAAO,CAAC,EAAE,CAAC,IAAI,KAAK;AAC7B,cAAM,MAAM;AAAA,MAClB,OAAW;AACL,gBAAQ,MAAM;AAAA,MACpB;AAAA,IACA;AAEE,WAAO;AAAA,EACT;AAEA,MAAI,qBAAqB;AAEzB,WAAS,aAAa,QAAQ;AAC5B,WAAO,OAEJ,QAAQ,oBAAoB,GAAG,EAE/B;AAAA,EACL;AAEA,WAAS,SAAS,aAAa,SAAS,mBAAmB;AACzD,QAAI,WAAW;AACf,QAAI,YAAY;AAEhB,QAAI,MAAM,aAAa,WAAW;AAClC,aAASC,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC5B,UAAI,YAAY,YAAY,YAAYA,EAAC;AACzC,UAAI,SAAS,WAAW,SAAS;AAEjC,cAAQ,OAAO,CAAC,GAAC;AAAA,QACf,KAAK;AACH,qBAAW;AACX,uBAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,QACF,KAAK;AACH;AAAA,QACF,KAAK;AACH,uBAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AACzD;AAAA,QACF,KAAK;AACH,cAAI,sBAAsB,mBAAmB,cAAc;AACzD,yBAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AAAA,UACnE,OAAe;AACL,yBAAa,OAAO,cAAc,SAAS;AAAA,UACrD;AACQ;AAAA,QACF,KAAK;AACH,uBAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,QACF,KAAK;AACH,cAAI,SAAS;AACX,uBAAW;AACX,yBAAa,OAAO,cAAc,SAAS;AAAA,UACrD,OAAe;AACL,yBAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AAAA,UACnE;AACQ;AAAA,QACF,KAAK;AACH,cAAI,SAAS;AACX,uBAAW;AAAA,UACrB;AAEQ,uBAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,MACR;AAAA,IACA;AAEE,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,OAAO;AAAA,IACR;AAAA,EACH;AAEA,MAAI,sBAAsB;AAE1B,WAAS,cAAc,OAAO,mBAAmB;AAC/C,QAAI,MAAM,OAAO,GAAG,CAAC,MAAM,QAAQ;AACjC,cAAQ,SAAS,UAAU,KAAK;AACZ,yBAAmB;AAAA,IAC3C;AAEE,QAAI,QAAQ;AAEZ,QAAI,UAAU,KAAK,MAAM,SACpB,MAAM,CAAC,MAAM,OAAO,MAAM,CAAC,MAAM,OAClC,MAAM,CAAC,MAAM,OAAO,MAAM,MAAM,SAAS,CAAC,MAAM,OAChD,MAAM,QAAQ,GAAG,MAAM,MACvB,MAAM,OAAO,mBAAmB,MAAM,GAAG;AAC3C,cAAQ;AAAA,IACZ;AAEE,QAAI,MAAM,aAAa,KAAK;AAC5B,aAASA,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC5B,UAAI,SAAS,WAAW,MAAM,YAAYA,EAAC,CAAC;AAC5C,UAAK,eAAe,mBAAmB,gBAAgB,OAAO,CAAC,MAAM,WAChE,eAAe,mBAAmB,mBAClC,OAAO,CAAC,MAAM,WAAW,OAAO,CAAC,MAAM,aAAc;AACxD,gBAAQ;AACR;AAAA,MACN;AAAA,IACA;AAEE,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACD;AAAA,EACH;AAEA,WAAS,WAAW,aAAa,SAAS,mBAAmB;AAC3D,QAAI,SAAS,SAAS,aAAa,SAAS,iBAAiB;AAC7D,WAAO,SAAS,UAAU,OAAO,MAAM;AAEvC,QAAI,SAAS,OAAO,OAAO,MAAM,GAAG;AACpC,aAASA,KAAI,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACtC,UAAI;AACF,YAAI,aAAa,cAAc,OAAOA,EAAC,CAAC;AACxC,eAAOA,EAAC,IAAI,WAAW;AACvB,eAAO,QAAQ,OAAO,SAAS,WAAW;AAAA,MAC3C,SAAOW,IAAG;AACT,eAAO,QAAQ;AAAA,MACrB;AAAA,IACA;AAEE,WAAO;AAAA,MACL,QAAQ,OAAO,KAAK,GAAG;AAAA,MACvB,OAAO,OAAO;AAAA,IACf;AAAA,EACH;AAEsB,OAAA,UAAG,SAAS,aAAa,SAAS,mBAAmB,iBAAiB;AAC1F,QAAI,SAAS,WAAW,aAAa,SAAS,iBAAiB;AAC/D,QAAI,SAAS,OAAO,OAAO,MAAM,GAAG;AACpC,aAAS,OAAO,IAAI,SAAS4F,IAAG;AAC9B,UAAI;AACF,eAAO,SAAS,QAAQA,EAAC;AAAA,MAC1B,SAAO5F,IAAG;AACT,eAAO,QAAQ;AACf,eAAO4F;AAAA,MACb;AAAA,IACA,CAAG;AAED,QAAI,iBAAiB;AACnB,UAAI,QAAQ,OAAO,MAAM,GAAG,OAAO,SAAS,CAAC,EAAE,KAAK,GAAG,EAAE;AACzD,UAAI,MAAM,SAAS,OAAO,MAAM,WAAW,GAAG;AAC5C,eAAO,QAAQ;AAAA,MACrB;AAEI,eAASvG,KAAE,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACpC,YAAI,OAAO,SAAS,MAAM,OAAO,WAAW,GAAG;AAC7C,iBAAO,QAAQ;AACf;AAAA,QACR;AAAA,MACA;AAAA,IACA;AAEE,QAAI,OAAO,MAAO,QAAO;AACzB,WAAO,OAAO,KAAK,GAAG;AAAA,EACvB;AAED,OAAA,YAA2B,SAAS,aAAa,SAAS;AACxD,QAAI,SAAS,WAAW,aAAa,SAAS,mBAAmB,eAAe;AAEhF,WAAO;AAAA,MACL,QAAQ,OAAO;AAAA,MACf,OAAO,OAAO;AAAA,IACf;AAAA,EACF;AAED,OAAA,qBAAoC;;;;;;;;AC/LpC,UAAM,WAAWoD;AACjB,UAAM+K,QAAO1J;AAEb,UAAM,iBAAiB;AAAA,MACrB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,KAAK;AAAA,IACP;AAEA,UAAM,UAAU,OAAO,SAAS;AAEhC,aAAS,aAAaxE,MAAK;AACzB,aAAO,SAAS,KAAK,OAAOA,IAAG,EAAE;AAAA,IAClC;AAED,aAASmO,IAAG,OAAO,KAAK;AACtB,YAAMtE,KAAI,MAAM,GAAG;AACnB,aAAO,MAAMA,EAAC,IAAI,SAAY,OAAO,cAAcA,EAAC;AAAA,IACrD;AAED,aAAS,aAAaA,IAAG;AACvB,aAAOA,MAAK,MAAQA,MAAK;AAAA,IAC1B;AAED,aAAS,aAAaA,IAAG;AACvB,aAAQA,MAAK,MAAQA,MAAK,MAAUA,MAAK,MAAQA,MAAK;AAAA,IACvD;AAED,aAAS,oBAAoBA,IAAG;AAC9B,aAAO,aAAaA,EAAC,KAAK,aAAaA,EAAC;AAAA,IACzC;AAED,aAAS,WAAWA,IAAG;AACrB,aAAO,aAAaA,EAAC,KAAMA,MAAK,MAAQA,MAAK,MAAUA,MAAK,MAAQA,MAAK;AAAA,IAC1E;AAED,aAAS,YAAY,QAAQ;AAC3B,aAAO,WAAW,OAAO,OAAO,YAAW,MAAO;AAAA,IACnD;AAED,aAAS,YAAY,QAAQ;AAC3B,eAAS,OAAO;AAChB,aAAO,WAAW,QAAQ,WAAW,UAAU,WAAW,UAAU,WAAW;AAAA,IAChF;AAED,aAAS,+BAA+B,KAAK,KAAK;AAChD,aAAO,aAAa,GAAG,MAAM,QAAQ,MAAM,QAAQ;AAAA,IACpD;AAED,aAAS,2BAA2B,QAAQ;AAC1C,aAAO,OAAO,WAAW,KAAK,aAAa,OAAO,YAAY,CAAC,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,OAAO,CAAC,MAAM;AAAA,IAC1G;AAED,aAAS,qCAAqC,QAAQ;AACpD,aAAO,OAAO,WAAW,KAAK,aAAa,OAAO,YAAY,CAAC,CAAC,KAAK,OAAO,CAAC,MAAM;AAAA,IACpF;AAED,aAAS,+BAA+B,QAAQ;AAC9C,aAAO,OAAO,OAAO,2DAA2D,MAAM;AAAA,IACvF;AAED,aAAS,+CAA+C,QAAQ;AAC9D,aAAO,OAAO,OAAO,yDAAyD,MAAM;AAAA,IACrF;AAED,aAAS,gBAAgB,QAAQ;AAC/B,aAAO,eAAe,MAAM,MAAM;AAAA,IACnC;AAED,aAAS,UAAU,KAAK;AACtB,aAAO,gBAAgB,IAAI,MAAM;AAAA,IAClC;AAED,aAAS,YAAY,QAAQ;AAC3B,aAAO,eAAe,MAAM;AAAA,IAC7B;AAED,aAAS,cAAcA,IAAG;AACxB,UAAI,MAAMA,GAAE,SAAS,EAAE,EAAE,YAAW;AACpC,UAAI,IAAI,WAAW,GAAG;AACpB,cAAM,MAAM;AAAA,MACb;AAED,aAAO,MAAM;AAAA,IACd;AAED,aAAS,kBAAkBA,IAAG;AAC5B,YAAM,MAAM,IAAI,OAAOA,EAAC;AAExB,UAAI7J,OAAM;AAEV,eAASD,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AACnC,QAAAC,QAAO,cAAc,IAAID,EAAC,CAAC;AAAA,MAC5B;AAED,aAAOC;AAAA,IACR;AAED,aAAS,kBAAkBA,MAAK;AAC9B,YAAM,QAAQ,IAAI,OAAOA,IAAG;AAC5B,YAAM,SAAS,CAAA;AACf,eAASD,KAAI,GAAGA,KAAI,MAAM,QAAQ,EAAEA,IAAG;AACrC,YAAI,MAAMA,EAAC,MAAM,IAAI;AACnB,iBAAO,KAAK,MAAMA,EAAC,CAAC;AAAA,QAC1B,WAAe,MAAMA,EAAC,MAAM,MAAM,WAAW,MAAMA,KAAI,CAAC,CAAC,KAAK,WAAW,MAAMA,KAAI,CAAC,CAAC,GAAG;AAClF,iBAAO,KAAK,SAAS,MAAM,MAAMA,KAAI,GAAGA,KAAI,CAAC,EAAE,SAAQ,GAAI,EAAE,CAAC;AAC9D,UAAAA,MAAK;AAAA,QACX,OAAW;AACL,iBAAO,KAAK,MAAMA,EAAC,CAAC;AAAA,QACrB;AAAA,MACF;AACD,aAAO,IAAI,OAAO,MAAM,EAAE,SAAQ;AAAA,IACnC;AAED,aAAS,yBAAyB8J,IAAG;AACnC,aAAOA,MAAK,MAAQA,KAAI;AAAA,IACzB;AAED,UAAM,4BAA4B,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC;AAChF,aAAS,oBAAoBA,IAAG;AAC9B,aAAO,yBAAyBA,EAAC,KAAK,0BAA0B,IAAIA,EAAC;AAAA,IACtE;AAED,UAAM,gCACJ,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC;AACnD,aAAS,wBAAwBA,IAAG;AAClC,aAAO,oBAAoBA,EAAC,KAAK,8BAA8B,IAAIA,EAAC;AAAA,IACrE;AAED,aAAS,kBAAkBA,IAAG,oBAAoB;AAChD,YAAM,OAAO,OAAO,cAAcA,EAAC;AAEnC,UAAI,mBAAmBA,EAAC,GAAG;AACzB,eAAO,kBAAkB,IAAI;AAAA,MAC9B;AAED,aAAO;AAAA,IACR;AAED,aAAS,gBAAgB,OAAO;AAC9B,UAAIuE,KAAI;AAER,UAAI,MAAM,UAAU,KAAK,MAAM,OAAO,CAAC,MAAM,OAAO,MAAM,OAAO,CAAC,EAAE,YAAW,MAAO,KAAK;AACzF,gBAAQ,MAAM,UAAU,CAAC;AACzB,QAAAA,KAAI;AAAA,MACR,WAAa,MAAM,UAAU,KAAK,MAAM,OAAO,CAAC,MAAM,KAAK;AACvD,gBAAQ,MAAM,UAAU,CAAC;AACzB,QAAAA,KAAI;AAAA,MACL;AAED,UAAI,UAAU,IAAI;AAChB,eAAO;AAAA,MACR;AAED,YAAMpE,SAAQoE,OAAM,KAAK,WAAYA,OAAM,KAAK,iBAAiB;AACjE,UAAIpE,OAAM,KAAK,KAAK,GAAG;AACrB,eAAO;AAAA,MACR;AAED,aAAO,SAAS,OAAOoE,EAAC;AAAA,IACzB;AAED,aAAS,UAAU,OAAO;AACxB,YAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,UAAI,MAAM,MAAM,SAAS,CAAC,MAAM,IAAI;AAClC,YAAI,MAAM,SAAS,GAAG;AACpB,gBAAM,IAAG;AAAA,QACV;AAAA,MACF;AAED,UAAI,MAAM,SAAS,GAAG;AACpB,eAAO;AAAA,MACR;AAED,YAAM,UAAU,CAAA;AAChB,iBAAW,QAAQ,OAAO;AACxB,YAAI,SAAS,IAAI;AACf,iBAAO;AAAA,QACR;AACD,cAAMzJ,KAAI,gBAAgB,IAAI;AAC9B,YAAIA,OAAM,SAAS;AACjB,iBAAO;AAAA,QACR;AAED,gBAAQ,KAAKA,EAAC;AAAA,MACf;AAED,eAAS5E,KAAI,GAAGA,KAAI,QAAQ,SAAS,GAAG,EAAEA,IAAG;AAC3C,YAAI,QAAQA,EAAC,IAAI,KAAK;AACpB,iBAAO;AAAA,QACR;AAAA,MACF;AACD,UAAI,QAAQ,QAAQ,SAAS,CAAC,KAAK,KAAK,IAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AACpE,eAAO;AAAA,MACR;AAED,UAAI,OAAO,QAAQ;AACnB,UAAI,UAAU;AAEd,iBAAW4E,MAAK,SAAS;AACvB,gBAAQA,KAAI,KAAK,IAAI,KAAK,IAAI,OAAO;AACrC,UAAE;AAAA,MACH;AAED,aAAO;AAAA,IACR;AAED,aAAS,cAAc,SAAS;AAC9B,UAAI,SAAS;AACb,UAAIA,KAAI;AAER,eAAS5E,KAAI,GAAGA,MAAK,GAAG,EAAEA,IAAG;AAC3B,iBAAS,OAAO4E,KAAI,GAAG,IAAI;AAC3B,YAAI5E,OAAM,GAAG;AACX,mBAAS,MAAM;AAAA,QAChB;AACD,QAAA4E,KAAI,KAAK,MAAMA,KAAI,GAAG;AAAA,MACvB;AAED,aAAO;AAAA,IACR;AAED,aAAS,UAAU,OAAO;AACxB,YAAM,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACvC,UAAI,aAAa;AACjB,UAAI,WAAW;AACf,UAAI,UAAU;AAEd,cAAQ,SAAS,KAAK,OAAO,KAAK;AAElC,UAAI,MAAM,OAAO,MAAM,IAAI;AACzB,YAAI,MAAM,UAAU,CAAC,MAAM,IAAI;AAC7B,iBAAO;AAAA,QACR;AAED,mBAAW;AACX,UAAE;AACF,mBAAW;AAAA,MACZ;AAED,aAAO,UAAU,MAAM,QAAQ;AAC7B,YAAI,eAAe,GAAG;AACpB,iBAAO;AAAA,QACR;AAED,YAAI,MAAM,OAAO,MAAM,IAAI;AACzB,cAAI,aAAa,MAAM;AACrB,mBAAO;AAAA,UACR;AACD,YAAE;AACF,YAAE;AACF,qBAAW;AACX;AAAA,QACD;AAED,YAAI,QAAQ;AACZ,YAAI,SAAS;AAEb,eAAO,SAAS,KAAK,WAAW,MAAM,OAAO,CAAC,GAAG;AAC/C,kBAAQ,QAAQ,KAAO,SAASwJ,IAAG,OAAO,OAAO,GAAG,EAAE;AACtD,YAAE;AACF,YAAE;AAAA,QACH;AAED,YAAI,MAAM,OAAO,MAAM,IAAI;AACzB,cAAI,WAAW,GAAG;AAChB,mBAAO;AAAA,UACR;AAED,qBAAW;AAEX,cAAI,aAAa,GAAG;AAClB,mBAAO;AAAA,UACR;AAED,cAAI,cAAc;AAElB,iBAAO,MAAM,OAAO,MAAM,QAAW;AACnC,gBAAI,YAAY;AAEhB,gBAAI,cAAc,GAAG;AACnB,kBAAI,MAAM,OAAO,MAAM,MAAM,cAAc,GAAG;AAC5C,kBAAE;AAAA,cACd,OAAiB;AACL,uBAAO;AAAA,cACR;AAAA,YACF;AAED,gBAAI,CAAC,aAAa,MAAM,OAAO,CAAC,GAAG;AACjC,qBAAO;AAAA,YACR;AAED,mBAAO,aAAa,MAAM,OAAO,CAAC,GAAG;AACnC,oBAAM,SAAS,SAASA,IAAG,OAAO,OAAO,CAAC;AAC1C,kBAAI,cAAc,MAAM;AACtB,4BAAY;AAAA,cACxB,WAAqB,cAAc,GAAG;AAC1B,uBAAO;AAAA,cACnB,OAAiB;AACL,4BAAY,YAAY,KAAK;AAAA,cAC9B;AACD,kBAAI,YAAY,KAAK;AACnB,uBAAO;AAAA,cACR;AACD,gBAAE;AAAA,YACH;AAED,oBAAQ,UAAU,IAAI,QAAQ,UAAU,IAAI,MAAQ;AAEpD,cAAE;AAEF,gBAAI,gBAAgB,KAAK,gBAAgB,GAAG;AAC1C,gBAAE;AAAA,YACH;AAAA,UACF;AAED,cAAI,gBAAgB,GAAG;AACrB,mBAAO;AAAA,UACR;AAED;AAAA,QACD,WAAU,MAAM,OAAO,MAAM,IAAI;AAChC,YAAE;AACF,cAAI,MAAM,OAAO,MAAM,QAAW;AAChC,mBAAO;AAAA,UACR;AAAA,QACF,WAAU,MAAM,OAAO,MAAM,QAAW;AACvC,iBAAO;AAAA,QACR;AAED,gBAAQ,UAAU,IAAI;AACtB,UAAE;AAAA,MACH;AAED,UAAI,aAAa,MAAM;AACrB,YAAI,QAAQ,aAAa;AACzB,qBAAa;AACb,eAAO,eAAe,KAAK,QAAQ,GAAG;AACpC,gBAAM,OAAO,QAAQ,WAAW,QAAQ,CAAC;AACzC,kBAAQ,WAAW,QAAQ,CAAC,IAAI,QAAQ,UAAU;AAClD,kBAAQ,UAAU,IAAI;AACtB,YAAE;AACF,YAAE;AAAA,QACH;AAAA,MACF,WAAU,aAAa,QAAQ,eAAe,GAAG;AAChD,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACR;AAED,aAAS,cAAc,SAAS;AAC9B,UAAI,SAAS;AACb,YAAM,YAAY,wBAAwB,OAAO;AACjD,YAAM,WAAW,UAAU;AAC3B,UAAI,UAAU;AAEd,eAAS,aAAa,GAAG,cAAc,GAAG,EAAE,YAAY;AACtD,YAAI,WAAW,QAAQ,UAAU,MAAM,GAAG;AACxC;AAAA,QACD,WAAU,SAAS;AAClB,oBAAU;AAAA,QACX;AAED,YAAI,aAAa,YAAY;AAC3B,gBAAM,YAAY,eAAe,IAAI,OAAO;AAC5C,oBAAU;AACV,oBAAU;AACV;AAAA,QACD;AAED,kBAAU,QAAQ,UAAU,EAAE,SAAS,EAAE;AAEzC,YAAI,eAAe,GAAG;AACpB,oBAAU;AAAA,QACX;AAAA,MACF;AAED,aAAO;AAAA,IACR;AAED,aAAS,UAAU,OAAO,cAAc;AACtC,UAAI,MAAM,CAAC,MAAM,KAAK;AACpB,YAAI,MAAM,MAAM,SAAS,CAAC,MAAM,KAAK;AACnC,iBAAO;AAAA,QACR;AAED,eAAO,UAAU,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,CAAC;AAAA,MACtD;AAED,UAAI,CAAC,cAAc;AACjB,eAAO,gBAAgB,KAAK;AAAA,MAC7B;AAED,YAAM,SAAS,kBAAkB,KAAK;AACtC,YAAM,cAAcD,MAAK,QAAQ,QAAQ,OAAOA,MAAK,mBAAmB,iBAAiB,KAAK;AAC9F,UAAI,gBAAgB,MAAM;AACxB,eAAO;AAAA,MACR;AAED,UAAI,+BAA+B,WAAW,GAAG;AAC/C,eAAO;AAAA,MACR;AAED,YAAM,WAAW,UAAU,WAAW;AACtC,UAAI,OAAO,aAAa,YAAY,aAAa,SAAS;AACxD,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACR;AAED,aAAS,gBAAgB,OAAO;AAC9B,UAAI,+CAA+C,KAAK,GAAG;AACzD,eAAO;AAAA,MACR;AAED,UAAI,SAAS;AACb,YAAM,UAAU,SAAS,KAAK,OAAO,KAAK;AAC1C,eAASnO,KAAI,GAAGA,KAAI,QAAQ,QAAQ,EAAEA,IAAG;AACvC,kBAAU,kBAAkB,QAAQA,EAAC,GAAG,wBAAwB;AAAA,MACjE;AACD,aAAO;AAAA,IACR;AAED,aAAS,wBAAwBmE,MAAK;AACpC,UAAI,SAAS;AACb,UAAI,SAAS;AACb,UAAI,YAAY;AAChB,UAAI,UAAU;AAEd,eAASnE,KAAI,GAAGA,KAAImE,KAAI,QAAQ,EAAEnE,IAAG;AACnC,YAAImE,KAAInE,EAAC,MAAM,GAAG;AAChB,cAAI,UAAU,QAAQ;AACpB,qBAAS;AACT,qBAAS;AAAA,UACV;AAED,sBAAY;AACZ,oBAAU;AAAA,QAChB,OAAW;AACL,cAAI,cAAc,MAAM;AACtB,wBAAYA;AAAA,UACb;AACD,YAAE;AAAA,QACH;AAAA,MACF;AAGD,UAAI,UAAU,QAAQ;AACpB,iBAAS;AACT,iBAAS;AAAA,MACV;AAED,aAAO;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACT;AAAA,IACC;AAED,aAAS,cAAc,MAAM;AAC3B,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,cAAc,IAAI;AAAA,MAC1B;AAGD,UAAI,gBAAgB,OAAO;AACzB,eAAO,MAAM,cAAc,IAAI,IAAI;AAAA,MACpC;AAED,aAAO;AAAA,IACR;AAED,aAAS,iBAAiB,KAAK;AAC7B,aAAO,IAAI,QAAQ,oDAAoD,EAAE;AAAA,IAC1E;AAED,aAAS,kBAAkB,KAAK;AAC9B,aAAO,IAAI,QAAQ,yBAAyB,EAAE;AAAA,IAC/C;AAED,aAAS,YAAY,KAAK;AACxB,YAAMO,QAAO,IAAI;AACjB,UAAIA,MAAK,WAAW,GAAG;AACrB;AAAA,MACD;AACD,UAAI,IAAI,WAAW,UAAUA,MAAK,WAAW,KAAK,+BAA+BA,MAAK,CAAC,CAAC,GAAG;AACzF;AAAA,MACD;AAED,MAAAA,MAAK,IAAG;AAAA,IACT;AAED,aAAS,oBAAoB,KAAK;AAChC,aAAO,IAAI,aAAa,MAAM,IAAI,aAAa;AAAA,IAChD;AAED,aAAS,gCAAgC,KAAK;AAC5C,aAAO,IAAI,SAAS,QAAQ,IAAI,SAAS,MAAM,IAAI,oBAAoB,IAAI,WAAW;AAAA,IACvF;AAED,aAAS,+BAA+B,QAAQ;AAC9C,aAAO,cAAc,KAAK,MAAM;AAAA,IACjC;AAED,aAAS,gBAAgB,OAAO,MAAM,kBAAkB,KAAK,eAAe;AAC1E,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,WAAK,OAAO,QAAQ;AACpB,WAAK,mBAAmB,oBAAoB;AAC5C,WAAK,gBAAgB;AACrB,WAAK,MAAM;AACX,WAAK,UAAU;AACf,WAAK,aAAa;AAElB,UAAI,CAAC,KAAK,KAAK;AACb,aAAK,MAAM;AAAA,UACT,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,UAAU;AAAA,UACV,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM,CAAE;AAAA,UACR,OAAO;AAAA,UACP,UAAU;AAAA,UAEV,kBAAkB;AAAA,QACxB;AAEI,cAAM+N,OAAM,iBAAiB,KAAK,KAAK;AACvC,YAAIA,SAAQ,KAAK,OAAO;AACtB,eAAK,aAAa;AAAA,QACnB;AACD,aAAK,QAAQA;AAAA,MACd;AAED,YAAM,MAAM,kBAAkB,KAAK,KAAK;AACxC,UAAI,QAAQ,KAAK,OAAO;AACtB,aAAK,aAAa;AAAA,MACnB;AACD,WAAK,QAAQ;AAEb,WAAK,QAAQ,iBAAiB;AAE9B,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,UAAU;AACf,WAAK,wBAAwB;AAE7B,WAAK,QAAQ,SAAS,KAAK,OAAO,KAAK,KAAK;AAE5C,aAAO,KAAK,WAAW,KAAK,MAAM,QAAQ,EAAE,KAAK,SAAS;AACxD,cAAMxE,KAAI,KAAK,MAAM,KAAK,OAAO;AACjC,cAAM,OAAO,MAAMA,EAAC,IAAI,SAAY,OAAO,cAAcA,EAAC;AAG1D,cAAM,MAAM,KAAK,WAAW,KAAK,KAAK,EAAEA,IAAG,IAAI;AAC/C,YAAI,CAAC,KAAK;AACR;AAAA,QACN,WAAe,QAAQ,SAAS;AAC1B,eAAK,UAAU;AACf;AAAA,QACD;AAAA,MACF;AAAA,IACF;AAED,oBAAgB,UAAU,oBAAoB,IAAI,SAAS,iBAAiBA,IAAG,MAAM;AACnF,UAAI,aAAaA,EAAC,GAAG;AACnB,aAAK,UAAU,KAAK;AACpB,aAAK,QAAQ;AAAA,MACjB,WAAa,CAAC,KAAK,eAAe;AAC9B,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,aAAa;AAClB,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,cAAc,IAAI,SAAS,YAAYA,IAAG,MAAM;AACxE,UAAI,oBAAoBA,EAAC,KAAKA,OAAM,MAAMA,OAAM,MAAMA,OAAM,IAAI;AAC9D,aAAK,UAAU,KAAK;MACxB,WAAaA,OAAM,IAAI;AACnB,YAAI,KAAK,eAAe;AACtB,cAAI,UAAU,KAAK,GAAG,KAAK,CAAC,gBAAgB,KAAK,MAAM,GAAG;AACxD,mBAAO;AAAA,UACR;AAED,cAAI,CAAC,UAAU,KAAK,GAAG,KAAK,gBAAgB,KAAK,MAAM,GAAG;AACxD,mBAAO;AAAA,UACR;AAED,eAAK,oBAAoB,KAAK,GAAG,KAAK,KAAK,IAAI,SAAS,SAAS,KAAK,WAAW,QAAQ;AACvF,mBAAO;AAAA,UACR;AAED,cAAI,KAAK,IAAI,WAAW,WAAW,KAAK,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,OAAO;AAClF,mBAAO;AAAA,UACR;AAAA,QACF;AACD,aAAK,IAAI,SAAS,KAAK;AACvB,aAAK,SAAS;AACd,YAAI,KAAK,eAAe;AACtB,iBAAO;AAAA,QACR;AACD,YAAI,KAAK,IAAI,WAAW,QAAQ;AAC9B,cAAI,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AAC9E,iBAAK,aAAa;AAAA,UACnB;AACD,eAAK,QAAQ;AAAA,QACd,WAAU,UAAU,KAAK,GAAG,KAAK,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,KAAK,IAAI,QAAQ;AAC5F,eAAK,QAAQ;AAAA,QACd,WAAU,UAAU,KAAK,GAAG,GAAG;AAC9B,eAAK,QAAQ;AAAA,QACnB,WAAe,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AAC9C,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACb,OAAW;AACL,eAAK,IAAI,mBAAmB;AAC5B,eAAK,IAAI,KAAK,KAAK,EAAE;AACrB,eAAK,QAAQ;AAAA,QACd;AAAA,MACL,WAAa,CAAC,KAAK,eAAe;AAC9B,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,aAAK,UAAU;AAAA,MACnB,OAAS;AACL,aAAK,aAAa;AAClB,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,iBAAiB,IAAI,SAAS,cAAcA,IAAG;AACvE,UAAI,KAAK,SAAS,QAAS,KAAK,KAAK,oBAAoBA,OAAM,IAAK;AAClE,eAAO;AAAA,MACR,WAAU,KAAK,KAAK,oBAAoBA,OAAM,IAAI;AACjD,aAAK,IAAI,SAAS,KAAK,KAAK;AAC5B,aAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,aAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,aAAK,IAAI,WAAW;AACpB,aAAK,IAAI,mBAAmB;AAC5B,aAAK,QAAQ;AAAA,MACd,WAAU,KAAK,KAAK,WAAW,QAAQ;AACtC,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,qCAAqC,IAAI,SAAS,gCAAgCA,IAAG;AAC7G,UAAIA,OAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AACnD,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,aAAa;AAClB,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,yBAAyB,IAAI,SAAS,qBAAqBA,IAAG;AACtF,UAAIA,OAAM,IAAI;AACZ,aAAK,QAAQ;AAAA,MACjB,OAAS;AACL,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,gBAAgB,IAAI,SAAS,cAAcA,IAAG;AACtE,WAAK,IAAI,SAAS,KAAK,KAAK;AAC5B,UAAI,MAAMA,EAAC,GAAG;AACZ,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,aAAK,IAAI,QAAQ,KAAK,KAAK;AAAA,MAC/B,WAAaA,OAAM,IAAI;AACnB,aAAK,QAAQ;AAAA,MACjB,WAAaA,OAAM,IAAI;AACnB,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,aAAK,IAAI,QAAQ;AACjB,aAAK,QAAQ;AAAA,MACjB,WAAaA,OAAM,IAAI;AACnB,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,aAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,aAAK,IAAI,WAAW;AACpB,aAAK,QAAQ;AAAA,MACjB,WAAa,UAAU,KAAK,GAAG,KAAKA,OAAM,IAAI;AAC1C,aAAK,aAAa;AAClB,aAAK,QAAQ;AAAA,MACjB,OAAS;AACL,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,KAAK,SAAS,CAAC;AAEjE,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,sBAAsB,IAAI,SAAS,mBAAmBA,IAAG;AACjF,UAAI,UAAU,KAAK,GAAG,MAAMA,OAAM,MAAMA,OAAM,KAAK;AACjD,YAAIA,OAAM,IAAI;AACZ,eAAK,aAAa;AAAA,QACnB;AACD,aAAK,QAAQ;AAAA,MACjB,WAAaA,OAAM,IAAI;AACnB,aAAK,QAAQ;AAAA,MACjB,OAAS;AACL,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,iCAAiC,IAAI,SAAS,6BAA6BA,IAAG;AACtG,UAAIA,OAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AACnD,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,aAAa;AAClB,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,wCAAwC,IAAI,SAAS,mCAAmCA,IAAG;AACnH,UAAIA,OAAM,MAAMA,OAAM,IAAI;AACxB,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,aAAa;AAAA,MACnB;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,iBAAiB,IAAI,SAAS,eAAeA,IAAG,MAAM;AAC9E,UAAIA,OAAM,IAAI;AACZ,aAAK,aAAa;AAClB,YAAI,KAAK,QAAQ;AACf,eAAK,SAAS,QAAQ,KAAK;AAAA,QAC5B;AACD,aAAK,SAAS;AAGd,cAAM,MAAM,aAAa,KAAK,MAAM;AACpC,iBAAS,UAAU,GAAG,UAAU,KAAK,EAAE,SAAS;AAC9C,gBAAM,YAAY,KAAK,OAAO,YAAY,OAAO;AAEjD,cAAI,cAAc,MAAM,CAAC,KAAK,uBAAuB;AACnD,iBAAK,wBAAwB;AAC7B;AAAA,UACD;AACD,gBAAM,oBAAoB,kBAAkB,WAAW,uBAAuB;AAC9E,cAAI,KAAK,uBAAuB;AAC9B,iBAAK,IAAI,YAAY;AAAA,UAC7B,OAAa;AACL,iBAAK,IAAI,YAAY;AAAA,UACtB;AAAA,QACF;AACD,aAAK,SAAS;AAAA,MAClB,WAAa,MAAMA,EAAC,KAAKA,OAAM,MAAMA,OAAM,MAAMA,OAAM,MACzC,UAAU,KAAK,GAAG,KAAKA,OAAM,IAAK;AAC5C,YAAI,KAAK,UAAU,KAAK,WAAW,IAAI;AACrC,eAAK,aAAa;AAClB,iBAAO;AAAA,QACR;AACD,aAAK,WAAW,aAAa,KAAK,MAAM,IAAI;AAC5C,aAAK,SAAS;AACd,aAAK,QAAQ;AAAA,MACjB,OAAS;AACL,aAAK,UAAU;AAAA,MAChB;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,gBAAgB,IAC1C,gBAAgB,UAAU,YAAY,IAAI,SAAS,cAAcA,IAAG,MAAM;AACxE,UAAI,KAAK,iBAAiB,KAAK,IAAI,WAAW,QAAQ;AACpD,UAAE,KAAK;AACP,aAAK,QAAQ;AAAA,MACd,WAAUA,OAAM,MAAM,CAAC,KAAK,SAAS;AACpC,YAAI,KAAK,WAAW,IAAI;AACtB,eAAK,aAAa;AAClB,iBAAO;AAAA,QACR;AAED,cAAM,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACvD,YAAI,SAAS,SAAS;AACpB,iBAAO;AAAA,QACR;AAED,aAAK,IAAI,OAAO;AAChB,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,YAAI,KAAK,kBAAkB,YAAY;AACrC,iBAAO;AAAA,QACR;AAAA,MACL,WAAa,MAAMA,EAAC,KAAKA,OAAM,MAAMA,OAAM,MAAMA,OAAM,MACzC,UAAU,KAAK,GAAG,KAAKA,OAAM,IAAK;AAC5C,UAAE,KAAK;AACP,YAAI,UAAU,KAAK,GAAG,KAAK,KAAK,WAAW,IAAI;AAC7C,eAAK,aAAa;AAClB,iBAAO;AAAA,QACR,WAAU,KAAK,iBAAiB,KAAK,WAAW,OACrC,oBAAoB,KAAK,GAAG,KAAK,KAAK,IAAI,SAAS,OAAO;AACpE,eAAK,aAAa;AAClB,iBAAO;AAAA,QACR;AAED,cAAM,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACvD,YAAI,SAAS,SAAS;AACpB,iBAAO;AAAA,QACR;AAED,aAAK,IAAI,OAAO;AAChB,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,YAAI,KAAK,eAAe;AACtB,iBAAO;AAAA,QACR;AAAA,MACL,OAAS;AACL,YAAIA,OAAM,IAAI;AACZ,eAAK,UAAU;AAAA,QACrB,WAAeA,OAAM,IAAI;AACnB,eAAK,UAAU;AAAA,QAChB;AACD,aAAK,UAAU;AAAA,MAChB;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,YAAY,IAAI,SAAS,UAAUA,IAAG,MAAM;AACpE,UAAI,aAAaA,EAAC,GAAG;AACnB,aAAK,UAAU;AAAA,MACnB,WAAa,MAAMA,EAAC,KAAKA,OAAM,MAAMA,OAAM,MAAMA,OAAM,MACzC,UAAU,KAAK,GAAG,KAAKA,OAAM,MAC9B,KAAK,eAAe;AAC7B,YAAI,KAAK,WAAW,IAAI;AACtB,gBAAMmD,QAAO,SAAS,KAAK,MAAM;AACjC,cAAIA,QAAO,KAAK,IAAI,GAAG,EAAE,IAAI,GAAG;AAC9B,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACR;AACD,eAAK,IAAI,OAAOA,UAAS,YAAY,KAAK,IAAI,MAAM,IAAI,OAAOA;AAC/D,eAAK,SAAS;AAAA,QACf;AACD,YAAI,KAAK,eAAe;AACtB,iBAAO;AAAA,QACR;AACD,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACX,OAAS;AACL,aAAK,aAAa;AAClB,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,UAAM,0BAA0B,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;AAExD,oBAAgB,UAAU,YAAY,IAAI,SAAS,UAAUnD,IAAG;AAC9D,WAAK,IAAI,SAAS;AAElB,UAAIA,OAAM,MAAMA,OAAM,IAAI;AACxB,YAAIA,OAAM,IAAI;AACZ,eAAK,aAAa;AAAA,QACnB;AACD,aAAK,QAAQ;AAAA,MACjB,WAAa,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,QAAQ;AAC5D,YAAI,MAAMA,EAAC,GAAG;AACZ,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,eAAK,IAAI,QAAQ,KAAK,KAAK;AAAA,QACjC,WAAeA,OAAM,IAAI;AACnB,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,eAAK,IAAI,QAAQ;AACjB,eAAK,QAAQ;AAAA,QACnB,WAAeA,OAAM,IAAI;AACnB,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,eAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACnB,OAAW;AACL,cAAI,KAAK,MAAM,SAAS,KAAK,UAAU,MAAM;AAAA,UACzC,CAAC,+BAA+BA,IAAG,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KAC9D,KAAK,MAAM,SAAS,KAAK,UAAU,KAAK;AAAA,UACxC,CAAC,wBAAwB,IAAI,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,GAAI;AAChE,iBAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,iBAAK,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,wBAAY,KAAK,GAAG;AAAA,UAC5B,OAAa;AACL,iBAAK,aAAa;AAAA,UACnB;AAED,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACR;AAAA,MACL,OAAS;AACL,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,kBAAkB,IAAI,SAAS,eAAeA,IAAG;AACzE,UAAIA,OAAM,MAAMA,OAAM,IAAI;AACxB,YAAIA,OAAM,IAAI;AACZ,eAAK,aAAa;AAAA,QACnB;AACD,aAAK,QAAQ;AAAA,MACjB,OAAS;AACL,YAAI,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,QAAQ;AACrD,cAAI,qCAAqC,KAAK,KAAK,KAAK,CAAC,CAAC,GAAG;AAC3D,iBAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,UAC5C,OAAa;AACL,iBAAK,IAAI,OAAO,KAAK,KAAK;AAAA,UAC3B;AAAA,QACF;AACD,aAAK,QAAQ;AACb,UAAE,KAAK;AAAA,MACR;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,iBAAiB,IAAI,SAAS,cAAcA,IAAG,MAAM;AAC7E,UAAI,MAAMA,EAAC,KAAKA,OAAM,MAAMA,OAAM,MAAMA,OAAM,MAAMA,OAAM,IAAI;AAC5D,UAAE,KAAK;AACP,YAAI,CAAC,KAAK,iBAAiB,2BAA2B,KAAK,MAAM,GAAG;AAClE,eAAK,aAAa;AAClB,eAAK,QAAQ;AAAA,QACnB,WAAe,KAAK,WAAW,IAAI;AAC7B,eAAK,IAAI,OAAO;AAChB,cAAI,KAAK,eAAe;AACtB,mBAAO;AAAA,UACR;AACD,eAAK,QAAQ;AAAA,QACnB,OAAW;AACL,cAAI,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACrD,cAAI,SAAS,SAAS;AACpB,mBAAO;AAAA,UACR;AACD,cAAI,SAAS,aAAa;AACxB,mBAAO;AAAA,UACR;AACD,eAAK,IAAI,OAAO;AAEhB,cAAI,KAAK,eAAe;AACtB,mBAAO;AAAA,UACR;AAED,eAAK,SAAS;AACd,eAAK,QAAQ;AAAA,QACd;AAAA,MACL,OAAS;AACL,aAAK,UAAU;AAAA,MAChB;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,kBAAkB,IAAI,SAAS,eAAeA,IAAG;AACzE,UAAI,UAAU,KAAK,GAAG,GAAG;AACvB,YAAIA,OAAM,IAAI;AACZ,eAAK,aAAa;AAAA,QACnB;AACD,aAAK,QAAQ;AAEb,YAAIA,OAAM,MAAMA,OAAM,IAAI;AACxB,YAAE,KAAK;AAAA,QACR;AAAA,MACF,WAAU,CAAC,KAAK,iBAAiBA,OAAM,IAAI;AAC1C,aAAK,IAAI,QAAQ;AACjB,aAAK,QAAQ;AAAA,MACd,WAAU,CAAC,KAAK,iBAAiBA,OAAM,IAAI;AAC1C,aAAK,IAAI,WAAW;AACpB,aAAK,QAAQ;AAAA,MACjB,WAAaA,OAAM,QAAW;AAC1B,aAAK,QAAQ;AACb,YAAIA,OAAM,IAAI;AACZ,YAAE,KAAK;AAAA,QACR;AAAA,MACF;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,YAAY,IAAI,SAAS,UAAUA,IAAG;AAC9D,UAAI,MAAMA,EAAC,KAAKA,OAAM,MAAO,UAAU,KAAK,GAAG,KAAKA,OAAM,MACrD,CAAC,KAAK,kBAAkBA,OAAM,MAAMA,OAAM,KAAM;AACnD,YAAI,UAAU,KAAK,GAAG,KAAKA,OAAM,IAAI;AACnC,eAAK,aAAa;AAAA,QACnB;AAED,YAAI,YAAY,KAAK,MAAM,GAAG;AAC5B,sBAAY,KAAK,GAAG;AACpB,cAAIA,OAAM,MAAM,EAAE,UAAU,KAAK,GAAG,KAAKA,OAAM,KAAK;AAClD,iBAAK,IAAI,KAAK,KAAK,EAAE;AAAA,UACtB;AAAA,QACF,WAAU,YAAY,KAAK,MAAM,KAAKA,OAAM,MAClC,EAAE,UAAU,KAAK,GAAG,KAAKA,OAAM,KAAK;AAC7C,eAAK,IAAI,KAAK,KAAK,EAAE;AAAA,QACtB,WAAU,CAAC,YAAY,KAAK,MAAM,GAAG;AACpC,cAAI,KAAK,IAAI,WAAW,UAAU,KAAK,IAAI,KAAK,WAAW,KAAK,2BAA2B,KAAK,MAAM,GAAG;AACvG,gBAAI,KAAK,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,MAAM;AAClD,mBAAK,aAAa;AAClB,mBAAK,IAAI,OAAO;AAAA,YACjB;AACD,iBAAK,SAAS,KAAK,OAAO,CAAC,IAAI;AAAA,UAChC;AACD,eAAK,IAAI,KAAK,KAAK,KAAK,MAAM;AAAA,QAC/B;AACD,aAAK,SAAS;AACd,YAAI,KAAK,IAAI,WAAW,WAAWA,OAAM,UAAaA,OAAM,MAAMA,OAAM,KAAK;AAC3E,iBAAO,KAAK,IAAI,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI;AAC1D,iBAAK,aAAa;AAClB,iBAAK,IAAI,KAAK;UACf;AAAA,QACF;AACD,YAAIA,OAAM,IAAI;AACZ,eAAK,IAAI,QAAQ;AACjB,eAAK,QAAQ;AAAA,QACd;AACD,YAAIA,OAAM,IAAI;AACZ,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACd;AAAA,MACL,OAAS;AAGL,YAAIA,OAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,eAAK,aAAa;AAAA,QACnB;AAED,aAAK,UAAU,kBAAkBA,IAAG,mBAAmB;AAAA,MACxD;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,iCAAiC,IAAI,SAAS,0BAA0BA,IAAG;AACnG,UAAIA,OAAM,IAAI;AACZ,aAAK,IAAI,QAAQ;AACjB,aAAK,QAAQ;AAAA,MACjB,WAAaA,OAAM,IAAI;AACnB,aAAK,IAAI,WAAW;AACpB,aAAK,QAAQ;AAAA,MACjB,OAAS;AAEL,YAAI,CAAC,MAAMA,EAAC,KAAKA,OAAM,IAAI;AACzB,eAAK,aAAa;AAAA,QACnB;AAED,YAAIA,OAAM,OACL,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACxC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC/C,eAAK,aAAa;AAAA,QACnB;AAED,YAAI,CAAC,MAAMA,EAAC,GAAG;AACb,eAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,kBAAkBA,IAAG,wBAAwB;AAAA,QACpF;AAAA,MACF;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,aAAa,IAAI,SAAS,WAAWA,IAAG,MAAM;AACtE,UAAI,MAAMA,EAAC,KAAM,CAAC,KAAK,iBAAiBA,OAAM,IAAK;AACjD,YAAI,CAAC,UAAU,KAAK,GAAG,KAAK,KAAK,IAAI,WAAW,QAAQ,KAAK,IAAI,WAAW,OAAO;AACjF,eAAK,mBAAmB;AAAA,QACzB;AAED,cAAM,SAAS,IAAI,OAAO,KAAK,MAAM;AACrC,iBAAS9J,KAAI,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACtC,cAAI,OAAOA,EAAC,IAAI,MAAQ,OAAOA,EAAC,IAAI,OAAQ,OAAOA,EAAC,MAAM,MAAQ,OAAOA,EAAC,MAAM,MAC5E,OAAOA,EAAC,MAAM,MAAQ,OAAOA,EAAC,MAAM,IAAM;AAC5C,iBAAK,IAAI,SAAS,cAAc,OAAOA,EAAC,CAAC;AAAA,UACjD,OAAa;AACL,iBAAK,IAAI,SAAS,OAAO,cAAc,OAAOA,EAAC,CAAC;AAAA,UACjD;AAAA,QACF;AAED,aAAK,SAAS;AACd,YAAI8J,OAAM,IAAI;AACZ,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACd;AAAA,MACL,OAAS;AAEL,YAAIA,OAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,eAAK,aAAa;AAAA,QACnB;AAED,aAAK,UAAU;AAAA,MAChB;AAED,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,gBAAgB,IAAI,SAAS,cAAcA,IAAG;AACtE,UAAI,MAAMA,EAAC,EAAG;AAAA,eACHA,OAAM,GAAK;AACpB,aAAK,aAAa;AAAA,MACtB,OAAS;AAEL,YAAIA,OAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,eAAK,aAAa;AAAA,QACnB;AAED,aAAK,IAAI,YAAY,kBAAkBA,IAAG,wBAAwB;AAAA,MACnE;AAED,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,KAAK,iBAAiB;AAC1C,UAAI,SAAS,IAAI,SAAS;AAC1B,UAAI,IAAI,SAAS,MAAM;AACrB,kBAAU;AAEV,YAAI,IAAI,aAAa,MAAM,IAAI,aAAa,IAAI;AAC9C,oBAAU,IAAI;AACd,cAAI,IAAI,aAAa,IAAI;AACvB,sBAAU,MAAM,IAAI;AAAA,UACrB;AACD,oBAAU;AAAA,QACX;AAED,kBAAU,cAAc,IAAI,IAAI;AAEhC,YAAI,IAAI,SAAS,MAAM;AACrB,oBAAU,MAAM,IAAI;AAAA,QACrB;AAAA,MACL,WAAa,IAAI,SAAS,QAAQ,IAAI,WAAW,QAAQ;AACrD,kBAAU;AAAA,MACX;AAED,UAAI,IAAI,kBAAkB;AACxB,kBAAU,IAAI,KAAK,CAAC;AAAA,MACxB,OAAS;AACL,mBAAW,UAAU,IAAI,MAAM;AAC7B,oBAAU,MAAM;AAAA,QACjB;AAAA,MACF;AAED,UAAI,IAAI,UAAU,MAAM;AACtB,kBAAU,MAAM,IAAI;AAAA,MACrB;AAED,UAAI,CAAC,mBAAmB,IAAI,aAAa,MAAM;AAC7C,kBAAU,MAAM,IAAI;AAAA,MACrB;AAED,aAAO;AAAA,IACR;AAED,aAAS,gBAAgB,OAAO;AAC9B,UAAI,SAAS,MAAM,SAAS;AAC5B,gBAAU,cAAc,MAAM,IAAI;AAElC,UAAI,MAAM,SAAS,MAAM;AACvB,kBAAU,MAAM,MAAM;AAAA,MACvB;AAED,aAAO;AAAA,IACR;AAED,WAAA,QAAA,eAA8B;AAE9B,WAAoC,QAAA,qBAAA,SAAU,KAAK;AAEjD,cAAQ,IAAI,QAAM;AAAA,QAChB,KAAK;AACH,cAAI;AACF,mBAAO,OAAO,QAAQ,mBAAmB,OAAO,QAAQ,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC;AAAA,UAC9E,SAAQnJ,IAAG;AAEV,mBAAO;AAAA,UACR;AAAA,QACH,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,gBAAgB;AAAA,YACrB,QAAQ,IAAI;AAAA,YACZ,MAAM,IAAI;AAAA,YACV,MAAM,IAAI;AAAA,UAClB,CAAO;AAAA,QACH,KAAK;AAEH,iBAAO;AAAA,QACT;AAEE,iBAAO;AAAA,MACV;AAAA,IACH;AAEA,WAAA,QAAA,gBAA+B,SAAU,OAAO,SAAS;AACvD,UAAI,YAAY,QAAW;AACzB,kBAAU,CAAA;AAAA,MACX;AAED,YAAM,MAAM,IAAI,gBAAgB,OAAO,QAAQ,SAAS,QAAQ,kBAAkB,QAAQ,KAAK,QAAQ,aAAa;AACpH,UAAI,IAAI,SAAS;AACf,eAAO;AAAA,MACR;AAED,aAAO,IAAI;AAAA,IACb;AAEA,WAAA,QAAA,iBAAgC,SAAU,KAAK,UAAU;AACvD,UAAI,WAAW;AACf,YAAM,UAAU,SAAS,KAAK,OAAO,QAAQ;AAC7C,eAASX,KAAI,GAAGA,KAAI,QAAQ,QAAQ,EAAEA,IAAG;AACvC,YAAI,YAAY,kBAAkB,QAAQA,EAAC,GAAG,uBAAuB;AAAA,MACtE;AAAA,IACH;AAEA,WAAA,QAAA,iBAAgC,SAAU,KAAK,UAAU;AACvD,UAAI,WAAW;AACf,YAAM,UAAU,SAAS,KAAK,OAAO,QAAQ;AAC7C,eAASA,KAAI,GAAGA,KAAI,QAAQ,QAAQ,EAAEA,IAAG;AACvC,YAAI,YAAY,kBAAkB,QAAQA,EAAC,GAAG,uBAAuB;AAAA,MACtE;AAAA,IACH;AAEA,WAAA,QAAA,gBAA+B;AAE/B,WAAA,QAAA,kCAAiD;AAEjD,WAAkC,QAAA,mBAAA,SAAUsJ,UAAS;AACnD,aAAO,OAAOA,QAAO;AAAA,IACvB;AAEA,WAAA,QAAA,WAA0B,SAAU,OAAO,SAAS;AAClD,UAAI,YAAY,QAAW;AACzB,kBAAU,CAAA;AAAA,MACX;AAGD,aAAO,OAAO,QAAQ,cAAc,OAAO,EAAE,SAAS,QAAQ,SAAS,kBAAkB,QAAQ,iBAAkB,CAAA;AAAA;;;;;;;;AC9wCrH,QAAM,MAAMlG,uBAA8B;AAEpBmL,UAAA,iBAAG,MAAM,QAAQ;AAAA,IACrC,YAAY,iBAAiB;AAC3B,YAAM,MAAM,gBAAgB,CAAC;AAC7B,YAAM,OAAO,gBAAgB,CAAC;AAE9B,UAAI,aAAa;AACjB,UAAI,SAAS,QAAW;AACtB,qBAAa,IAAI,cAAc,IAAI;AACnC,YAAI,eAAe,WAAW;AAC5B,gBAAM,IAAI,UAAU,kBAAkB;AAAA,QAC9C;AAAA,MACA;AAEI,YAAM,YAAY,IAAI,cAAc,KAAK,EAAE,SAAS,YAAY;AAChE,UAAI,cAAc,WAAW;AAC3B,cAAM,IAAI,UAAU,aAAa;AAAA,MACvC;AAEI,WAAK,OAAO;AAAA,IAGhB;AAAA,IAEE,IAAI,OAAO;AACT,aAAO,IAAI,aAAa,KAAK,IAAI;AAAA,IACrC;AAAA,IAEE,IAAI,KAAKrK,IAAG;AACV,YAAM,YAAY,IAAI,cAAcA,EAAC;AACrC,UAAI,cAAc,WAAW;AAC3B,cAAM,IAAI,UAAU,aAAa;AAAA,MACvC;AAEI,WAAK,OAAO;AAAA,IAChB;AAAA,IAEE,IAAI,SAAS;AACX,aAAO,IAAI,mBAAmB,KAAK,IAAI;AAAA,IAC3C;AAAA,IAEE,IAAI,WAAW;AACb,aAAO,KAAK,KAAK,SAAS;AAAA,IAC9B;AAAA,IAEE,IAAI,SAASA,IAAG;AACd,UAAI,cAAcA,KAAI,KAAK,EAAE,KAAK,KAAK,MAAM,eAAe,gBAAgB;AAAA,IAChF;AAAA,IAEE,IAAI,WAAW;AACb,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IAEE,IAAI,SAASA,IAAG;AACd,UAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,MACN;AAEI,UAAI,eAAe,KAAK,MAAMA,EAAC;AAAA,IACnC;AAAA,IAEE,IAAI,WAAW;AACb,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IAEE,IAAI,SAASA,IAAG;AACd,UAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,MACN;AAEI,UAAI,eAAe,KAAK,MAAMA,EAAC;AAAA,IACnC;AAAA,IAEE,IAAI,OAAO;AACT,YAAM,MAAM,KAAK;AAEjB,UAAI,IAAI,SAAS,MAAM;AACrB,eAAO;AAAA,MACb;AAEI,UAAI,IAAI,SAAS,MAAM;AACrB,eAAO,IAAI,cAAc,IAAI,IAAI;AAAA,MACvC;AAEI,aAAO,IAAI,cAAc,IAAI,IAAI,IAAI,MAAM,IAAI,iBAAiB,IAAI,IAAI;AAAA,IAC5E;AAAA,IAEE,IAAI,KAAKA,IAAG;AACV,UAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,MACN;AAEI,UAAI,cAAcA,IAAG,EAAE,KAAK,KAAK,MAAM,eAAe,QAAQ;AAAA,IAClE;AAAA,IAEE,IAAI,WAAW;AACb,UAAI,KAAK,KAAK,SAAS,MAAM;AAC3B,eAAO;AAAA,MACb;AAEI,aAAO,IAAI,cAAc,KAAK,KAAK,IAAI;AAAA,IAC3C;AAAA,IAEE,IAAI,SAASA,IAAG;AACd,UAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,MACN;AAEI,UAAI,cAAcA,IAAG,EAAE,KAAK,KAAK,MAAM,eAAe,YAAY;AAAA,IACtE;AAAA,IAEE,IAAI,OAAO;AACT,UAAI,KAAK,KAAK,SAAS,MAAM;AAC3B,eAAO;AAAA,MACb;AAEI,aAAO,IAAI,iBAAiB,KAAK,KAAK,IAAI;AAAA,IAC9C;AAAA,IAEE,IAAI,KAAKA,IAAG;AACV,UAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,MACN;AAEI,UAAIA,OAAM,IAAI;AACZ,aAAK,KAAK,OAAO;AAAA,MACvB,OAAW;AACL,YAAI,cAAcA,IAAG,EAAE,KAAK,KAAK,MAAM,eAAe,QAAQ;AAAA,MACpE;AAAA,IACA;AAAA,IAEE,IAAI,WAAW;AACb,UAAI,KAAK,KAAK,kBAAkB;AAC9B,eAAO,KAAK,KAAK,KAAK,CAAC;AAAA,MAC7B;AAEI,UAAI,KAAK,KAAK,KAAK,WAAW,GAAG;AAC/B,eAAO;AAAA,MACb;AAEI,aAAO,MAAM,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,IACxC;AAAA,IAEE,IAAI,SAASA,IAAG;AACd,UAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,MACN;AAEI,WAAK,KAAK,OAAO,CAAE;AACnB,UAAI,cAAcA,IAAG,EAAE,KAAK,KAAK,MAAM,eAAe,cAAc;AAAA,IACxE;AAAA,IAEE,IAAI,SAAS;AACX,UAAI,KAAK,KAAK,UAAU,QAAQ,KAAK,KAAK,UAAU,IAAI;AACtD,eAAO;AAAA,MACb;AAEI,aAAO,MAAM,KAAK,KAAK;AAAA,IAC3B;AAAA,IAEE,IAAI,OAAOA,IAAG;AAGZ,YAAM,MAAM,KAAK;AAEjB,UAAIA,OAAM,IAAI;AACZ,YAAI,QAAQ;AACZ;AAAA,MACN;AAEI,YAAM,QAAQA,GAAE,CAAC,MAAM,MAAMA,GAAE,UAAU,CAAC,IAAIA;AAC9C,UAAI,QAAQ;AACZ,UAAI,cAAc,OAAO,EAAE,KAAK,eAAe,SAAS;AAAA,IAC5D;AAAA,IAEE,IAAI,OAAO;AACT,UAAI,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,aAAa,IAAI;AAC5D,eAAO;AAAA,MACb;AAEI,aAAO,MAAM,KAAK,KAAK;AAAA,IAC3B;AAAA,IAEE,IAAI,KAAKA,IAAG;AACV,UAAIA,OAAM,IAAI;AACZ,aAAK,KAAK,WAAW;AACrB;AAAA,MACN;AAEI,YAAM,QAAQA,GAAE,CAAC,MAAM,MAAMA,GAAE,UAAU,CAAC,IAAIA;AAC9C,WAAK,KAAK,WAAW;AACrB,UAAI,cAAc,OAAO,EAAE,KAAK,KAAK,MAAM,eAAe,YAAY;AAAA,IAC1E;AAAA,IAEE,SAAS;AACP,aAAO,KAAK;AAAA,IAChB;AAAA,EACC;;;;;;;;ACrMD,UAAM,cAAcd,WAA6B;AACjD,UAAMoL,SAAQ/J,aAAqB;AACnC,UAAM,OAAOe,eAAyB;AAEtC,UAAM,OAAOgJ,OAAM;AAEnB,aAASvJ,KAAI,KAAK;AAChB,UAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,EAAE,gBAAgBA,OAAM;AACjD,cAAM,IAAI,UAAU,uHAAuH;AAAA,MAC/I;AACE,UAAI,UAAU,SAAS,GAAG;AACxB,cAAM,IAAI,UAAU,8DAA8D,UAAU,SAAS,WAAW;AAAA,MACpH;AACE,YAAM,OAAO,CAAE;AACf,eAASjF,KAAI,GAAGA,KAAI,UAAU,UAAUA,KAAI,GAAG,EAAEA,IAAG;AAClD,aAAKA,EAAC,IAAI,UAAUA,EAAC;AAAA,MACzB;AACE,WAAK,CAAC,IAAI,YAAY,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,UAAI,KAAK,CAAC,MAAM,QAAW;AAC3B,aAAK,CAAC,IAAI,YAAY,WAAW,EAAE,KAAK,CAAC,CAAC;AAAA,MAC5C;AAEE,aAAO,QAAQ,MAAM,MAAM,IAAI;AAAA,IACjC;AAEA,IAAAiF,KAAI,UAAU,SAAS,SAAS,SAAS;AACvC,UAAI,CAAC,QAAQ,CAAC,OAAO,QAAQ,GAAG,IAAI,GAAG;AACrC,cAAM,IAAI,UAAU,oBAAoB;AAAA,MAC5C;AACE,YAAM,OAAO,CAAE;AACf,eAASjF,KAAI,GAAGA,KAAI,UAAU,UAAUA,KAAI,GAAG,EAAEA,IAAG;AAClD,aAAKA,EAAC,IAAI,UAAUA,EAAC;AAAA,MACzB;AACE,aAAO,KAAK,IAAI,EAAE,OAAO,MAAM,KAAK,IAAI,GAAG,IAAI;AAAA,IAChD;AACD,WAAO,eAAeiF,KAAI,WAAW,QAAQ;AAAA,MAC3C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,OAAOA;AAAA,MACnB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,IAAA/I,KAAI,UAAU,WAAW,WAAY;AACnC,UAAI,CAAC,QAAQ,CAAC,OAAO,QAAQ,GAAG,IAAI,GAAG;AACrC,cAAM,IAAI,UAAU,oBAAoB;AAAA,MAC5C;AACE,aAAO,KAAK;AAAA,IACb;AAED,WAAO,eAAeA,KAAI,WAAW,UAAU;AAAA,MAC7C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,WAAWA;AAAA,MACvB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,WAAWA;AAAA,MACvB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,WAAWA;AAAA,MACvB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,QAAQ;AAAA,MAC3C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,OAAOA;AAAA,MACnB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,WAAWA;AAAA,MACvB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,QAAQ;AAAA,MAC3C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,OAAOA;AAAA,MACnB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,WAAWA;AAAA,MACvB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,UAAU;AAAA,MAC7C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,SAASA;AAAA,MACrB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAED,WAAO,eAAe/I,KAAI,WAAW,QAAQ;AAAA,MAC3C,MAAM;AACJ,eAAO,KAAK,IAAI,EAAE;AAAA,MACnB;AAAA,MACD,IAAI+I,IAAG;AACL,QAAAA,KAAI,YAAY,WAAW,EAAEA,EAAC;AAC9B,aAAK,IAAI,EAAE,OAAOA;AAAA,MACnB;AAAA,MACD,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AAGD,WAAiB,UAAA;AAAA,MACf,GAAG,KAAK;AACN,eAAO,CAAC,CAAC,OAAO,IAAI,IAAI,aAAa,KAAK;AAAA,MAC3C;AAAA,MACD,OAAO,iBAAiBS,cAAa;AACnC,YAAI,MAAM,OAAO,OAAOxJ,KAAI,SAAS;AACrC,aAAK,MAAM,KAAK,iBAAiBwJ,YAAW;AAC5C,eAAO;AAAA,MACR;AAAA,MACD,MAAM,KAAK,iBAAiBA,cAAa;AACvC,YAAI,CAACA,aAAa,CAAAA,eAAc,CAAE;AAClC,QAAAA,aAAY,UAAU;AAEtB,YAAI,IAAI,IAAI,IAAI,KAAK,eAAe,iBAAiBA,YAAW;AAChE,YAAI,IAAI,EAAED,OAAM,aAAa,IAAI;AAAA,MAClC;AAAA,MACD,WAAWvJ;AAAA,MACX,QAAQ;AAAA,QACN,QAAQ,EAAE,KAAKA,KAAK;AAAA,QACpB,QAAQ,EAAE,KAAKA,KAAG;AAAA,MACtB;AAAA;;;;;;;;AC/LW,YAAA,MAAG7B,WAAgB,EAAC;AACX,YAAA,eAAGqB,uBAA8B,EAAC;AAC5B,YAAA,qBAAGA,uBAA8B,EAAC;AACvC,YAAA,gBAAGA,uBAA8B,EAAC;AACjC,YAAA,iBAAGA,uBAA8B,EAAC;AAClC,YAAA,iBAAGA,uBAA8B,EAAC;AACnC,YAAA,gBAAGA,uBAA8B,EAAC;AAC/B,YAAA,mBAAGA,uBAA8B,EAAC;AAC1C,YAAA,WAAGA,uBAA8B,EAAC;;;;;ACAlD,MAAM,WAAWiK,SAAO;AAExB,MAAM,SAAS,OAAO,QAAQ;AAC9B,MAAM,OAAO,OAAO,MAAM;AAE1B,IAAA,SAAA,MAAMC,MAAK;AAAA,EACV,cAAc;AACb,SAAK,IAAI,IAAI;AAEb,UAAM,YAAY,UAAU,CAAC;AAC7B,UAAM,UAAU,UAAU,CAAC;AAE3B,UAAM,UAAU,CAAE;AAClB,QAAI,OAAO;AAEX,QAAI,WAAW;AACd,YAAMtL,KAAI;AACV,YAAM,SAAS,OAAOA,GAAE,MAAM;AAC9B,eAASrD,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAChC,cAAM,UAAUqD,GAAErD,EAAC;AACnB,YAAI;AACJ,YAAI,mBAAmB,QAAQ;AAC9B,mBAAS;AAAA,QACT,WAAU,YAAY,OAAO,OAAO,GAAG;AACvC,mBAAS,OAAO,KAAK,QAAQ,QAAQ,QAAQ,YAAY,QAAQ,UAAU;AAAA,QAChF,WAAe,mBAAmB,aAAa;AAC1C,mBAAS,OAAO,KAAK,OAAO;AAAA,QACjC,WAAe,mBAAmB2O,OAAM;AACnC,mBAAS,QAAQ,MAAM;AAAA,QAC5B,OAAW;AACN,mBAAS,OAAO,KAAK,OAAO,YAAY,WAAW,UAAU,OAAO,OAAO,CAAC;AAAA,QACjF;AACI,gBAAQ,OAAO;AACf,gBAAQ,KAAK,MAAM;AAAA,MACvB;AAAA,IACA;AAEE,SAAK,MAAM,IAAI,OAAO,OAAO,OAAO;AAEpC,QAAI,OAAO,WAAW,QAAQ,SAAS,UAAa,OAAO,QAAQ,IAAI,EAAE,YAAa;AACtF,QAAI,QAAQ,CAAC,mBAAmB,KAAK,IAAI,GAAG;AAC3C,WAAK,IAAI,IAAI;AAAA,IAChB;AAAA,EACA;AAAA,EACC,IAAI,OAAO;AACV,WAAO,KAAK,MAAM,EAAE;AAAA,EACtB;AAAA,EACC,IAAI,OAAO;AACV,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACC,OAAO;AACN,WAAO,QAAQ,QAAQ,KAAK,MAAM,EAAE,SAAQ,CAAE;AAAA,EAChD;AAAA,EACC,cAAc;AACb,UAAM,MAAM,KAAK,MAAM;AACvB,UAAM,KAAK,IAAI,OAAO,MAAM,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU;AAC3E,WAAO,QAAQ,QAAQ,EAAE;AAAA,EAC3B;AAAA,EACC,SAAS;AACR,UAAM,WAAW,IAAI,SAAU;AAC/B,aAAS,QAAQ,WAAY;AAAA,IAAE;AAC/B,aAAS,KAAK,KAAK,MAAM,CAAC;AAC1B,aAAS,KAAK,IAAI;AAClB,WAAO;AAAA,EACT;AAAA,EACC,WAAW;AACV,WAAO;AAAA,EACT;AAAA,EACC,QAAQ;AACP,UAAM,OAAO,KAAK;AAElB,UAAM,QAAQ,UAAU,CAAC;AACzB,UAAM,MAAM,UAAU,CAAC;AACvB,QAAI,eAAe;AACnB,QAAI,UAAU,QAAW;AACxB,sBAAgB;AAAA,IACnB,WAAa,QAAQ,GAAG;AACrB,sBAAgB,KAAK,IAAI,OAAO,OAAO,CAAC;AAAA,IAC3C,OAAS;AACN,sBAAgB,KAAK,IAAI,OAAO,IAAI;AAAA,IACvC;AACE,QAAI,QAAQ,QAAW;AACtB,oBAAc;AAAA,IACjB,WAAa,MAAM,GAAG;AACnB,oBAAc,KAAK,IAAI,OAAO,KAAK,CAAC;AAAA,IACvC,OAAS;AACN,oBAAc,KAAK,IAAI,KAAK,IAAI;AAAA,IACnC;AACE,UAAM,OAAO,KAAK,IAAI,cAAc,eAAe,CAAC;AAEpD,UAAM,SAAS,KAAK,MAAM;AAC1B,UAAM,eAAe,OAAO,MAAM,eAAe,gBAAgB,IAAI;AACrE,UAAMC,QAAO,IAAID,MAAK,CAAE,GAAE,EAAE,MAAM,UAAU,CAAC,GAAG;AAChD,IAAAC,MAAK,MAAM,IAAI;AACf,WAAOA;AAAA,EACT;AACA;AAEA,OAAO,iBAAiBD,OAAK,WAAW;AAAA,EACvC,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,OAAO,EAAE,YAAY,KAAI;AAC1B,CAAC;AAED,OAAO,eAAeA,OAAK,WAAW,OAAO,aAAa;AAAA,EACzD,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AACf,CAAC;AAgBD,SAAS,WAAW,SAAS,MAAM,aAAa;AAC9C,QAAM,KAAK,MAAM,OAAO;AAExB,OAAK,UAAU;AACf,OAAK,OAAO;AAGZ,MAAI,aAAa;AACf,SAAK,OAAO,KAAK,QAAQ,YAAY;AAAA,EACzC;AAGE,QAAM,kBAAkB,MAAM,KAAK,WAAW;AAChD;AAEA,WAAW,YAAY,OAAO,OAAO,MAAM,SAAS;AACpD,WAAW,UAAU,cAAc;AACnC,WAAW,UAAU,OAAO;AAE5B,IAAI;AACJ,IAAI;AACH,YAAU,QAAQ,UAAU,EAAE;AAC/B,SAAShO,IAAG;AAAA;AAEZ,MAAM,YAAY,OAAO,gBAAgB;AAGzC,MAAM,cAAc+N,SAAO;AAW3B,SAAS,KAAK,MAAM;AACnB,MAAI,QAAQ;AAEZ,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE,GAC7E,YAAY,KAAK;AAErB,MAAI,OAAO,cAAc,SAAY,IAAI;AACzC,MAAI,eAAe,KAAK;AACxB,MAAI,UAAU,iBAAiB,SAAY,IAAI;AAE/C,MAAI,QAAQ,MAAM;AAEjB,WAAO;AAAA,EACT,WAAY,kBAAkB,IAAI,GAAG;AAEnC,WAAO,OAAO,KAAK,KAAK,SAAQ,CAAE;AAAA,EACpC,WAAYG,SAAO,IAAI,EAAG;AAAA,WAAW,OAAO,SAAS,IAAI,EAAG;AAAA,WAAW,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM,wBAAwB;AAEtI,WAAO,OAAO,KAAK,IAAI;AAAA,EACvB,WAAU,YAAY,OAAO,IAAI,GAAG;AAEpC,WAAO,OAAO,KAAK,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,EAClE,WAAY,gBAAgBH,SAAQ;AAAA,OAAO;AAGzC,WAAO,OAAO,KAAK,OAAO,IAAI,CAAC;AAAA,EACjC;AACC,OAAK,SAAS,IAAI;AAAA,IACjB;AAAA,IACA,WAAW;AAAA,IACX,OAAO;AAAA,EACP;AACD,OAAK,OAAO;AACZ,OAAK,UAAU;AAEf,MAAI,gBAAgBA,UAAQ;AAC3B,SAAK,GAAG,SAAS,SAAU,KAAK;AAC/B,YAAM,QAAQ,IAAI,SAAS,eAAe,MAAM,IAAI,WAAW,+CAA+C,MAAM,GAAG,KAAK,IAAI,OAAO,IAAI,UAAU,GAAG;AACxJ,YAAM,SAAS,EAAE,QAAQ;AAAA,IAC5B,CAAG;AAAA,EACH;AACA;AAEA,KAAK,YAAY;AAAA,EAChB,IAAI,OAAO;AACV,WAAO,KAAK,SAAS,EAAE;AAAA,EACvB;AAAA,EAED,IAAI,WAAW;AACd,WAAO,KAAK,SAAS,EAAE;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc;AACb,WAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,KAAK;AACjD,aAAO,IAAI,OAAO,MAAM,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU;AAAA,IAC1E,CAAG;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO;AACN,QAAII,MAAK,KAAK,WAAW,KAAK,QAAQ,IAAI,cAAc,KAAK;AAC7D,WAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,KAAK;AACjD,aAAO,OAAO;AAAA;AAAA,QAEd,IAAIH,OAAK,CAAA,GAAI;AAAA,UACZ,MAAMG,IAAG,YAAW;AAAA,QACxB,CAAI;AAAA,QAAG;AAAA,UACH,CAAC,MAAM,GAAG;AAAA,QACd;AAAA,MAAI;AAAA,IACJ,CAAG;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO;AACN,QAAI,SAAS;AAEb,WAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,UAAI;AACH,eAAO,KAAK,MAAM,OAAO,SAAQ,CAAE;AAAA,MACnC,SAAQ,KAAK;AACb,eAAO,KAAK,QAAQ,OAAO,IAAI,WAAW,iCAAiC,OAAO,GAAG,YAAY,IAAI,OAAO,IAAI,cAAc,CAAC;AAAA,MACnI;AAAA,IACA,CAAG;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO;AACN,WAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,aAAO,OAAO,SAAU;AAAA,IAC3B,CAAG;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,SAAS;AACR,WAAO,YAAY,KAAK,IAAI;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,gBAAgB;AACf,QAAI,SAAS;AAEb,WAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,aAAO,YAAY,QAAQ,OAAO,OAAO;AAAA,IAC5C,CAAG;AAAA,EACH;AACA;AAGA,OAAO,iBAAiB,KAAK,WAAW;AAAA,EACvC,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,UAAU,EAAE,YAAY,KAAM;AAAA,EAC9B,aAAa,EAAE,YAAY,KAAM;AAAA,EACjC,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,MAAM,EAAE,YAAY,KAAI;AACzB,CAAC;AAED,KAAK,QAAQ,SAAU,OAAO;AAC7B,aAAW,QAAQ,OAAO,oBAAoB,KAAK,SAAS,GAAG;AAE9D,QAAI,EAAE,QAAQ,QAAQ;AACrB,YAAMC,QAAO,OAAO,yBAAyB,KAAK,WAAW,IAAI;AACjE,aAAO,eAAe,OAAO,MAAMA,KAAI;AAAA,IAC1C;AAAA,EACA;AACA;AASA,SAAS,cAAc;AACtB,MAAI,SAAS;AAEb,MAAI,KAAK,SAAS,EAAE,WAAW;AAC9B,WAAO,KAAK,QAAQ,OAAO,IAAI,UAAU,0BAA0B,KAAK,GAAG,EAAE,CAAC;AAAA,EAChF;AAEC,OAAK,SAAS,EAAE,YAAY;AAE5B,MAAI,KAAK,SAAS,EAAE,OAAO;AAC1B,WAAO,KAAK,QAAQ,OAAO,KAAK,SAAS,EAAE,KAAK;AAAA,EAClD;AAEC,MAAI,OAAO,KAAK;AAGhB,MAAI,SAAS,MAAM;AAClB,WAAO,KAAK,QAAQ,QAAQ,OAAO,MAAM,CAAC,CAAC;AAAA,EAC7C;AAGC,MAAIF,SAAO,IAAI,GAAG;AACjB,WAAO,KAAK,OAAQ;AAAA,EACtB;AAGC,MAAI,OAAO,SAAS,IAAI,GAAG;AAC1B,WAAO,KAAK,QAAQ,QAAQ,IAAI;AAAA,EAClC;AAGC,MAAI,EAAE,gBAAgBH,WAAS;AAC9B,WAAO,KAAK,QAAQ,QAAQ,OAAO,MAAM,CAAC,CAAC;AAAA,EAC7C;AAIC,MAAI,QAAQ,CAAE;AACd,MAAI,aAAa;AACjB,MAAI,QAAQ;AAEZ,SAAO,IAAI,KAAK,QAAQ,SAAU,SAAS,QAAQ;AAClD,QAAI;AAGJ,QAAI,OAAO,SAAS;AACnB,mBAAa,WAAW,WAAY;AACnC,gBAAQ;AACR,eAAO,IAAI,WAAW,0CAA0C,OAAO,GAAG,UAAU,OAAO,OAAO,OAAO,cAAc,CAAC;AAAA,MAC5H,GAAM,OAAO,OAAO;AAAA,IACpB;AAGE,SAAK,GAAG,SAAS,SAAU,KAAK;AAC/B,UAAI,IAAI,SAAS,cAAc;AAE9B,gBAAQ;AACR,eAAO,GAAG;AAAA,MACd,OAAU;AAEN,eAAO,IAAI,WAAW,+CAA+C,OAAO,GAAG,KAAK,IAAI,OAAO,IAAI,UAAU,GAAG,CAAC;AAAA,MACrH;AAAA,IACA,CAAG;AAED,SAAK,GAAG,QAAQ,SAAU,OAAO;AAChC,UAAI,SAAS,UAAU,MAAM;AAC5B;AAAA,MACJ;AAEG,UAAI,OAAO,QAAQ,aAAa,MAAM,SAAS,OAAO,MAAM;AAC3D,gBAAQ;AACR,eAAO,IAAI,WAAW,mBAAmB,OAAO,GAAG,gBAAgB,OAAO,IAAI,IAAI,UAAU,CAAC;AAC7F;AAAA,MACJ;AAEG,oBAAc,MAAM;AACpB,YAAM,KAAK,KAAK;AAAA,IACnB,CAAG;AAED,SAAK,GAAG,OAAO,WAAY;AAC1B,UAAI,OAAO;AACV;AAAA,MACJ;AAEG,mBAAa,UAAU;AAEvB,UAAI;AACH,gBAAQ,OAAO,OAAO,OAAO,UAAU,CAAC;AAAA,MACxC,SAAQ,KAAK;AAEb,eAAO,IAAI,WAAW,kDAAkD,OAAO,GAAG,KAAK,IAAI,OAAO,IAAI,UAAU,GAAG,CAAC;AAAA,MACxH;AAAA,IACA,CAAG;AAAA,EACH,CAAE;AACF;AAUA,SAAS,YAAY,QAAQ,SAAS;AACrC,MAAI,OAAO,YAAY,YAAY;AAClC,UAAM,IAAI,MAAM,8EAA8E;AAAA,EAChG;AAEC,QAAMI,MAAK,QAAQ,IAAI,cAAc;AACrC,MAAI,UAAU;AACd,MAAI,KAAK7O;AAGT,MAAI6O,KAAI;AACP,UAAM,mBAAmB,KAAKA,GAAE;AAAA,EAClC;AAGC,EAAA7O,OAAM,OAAO,MAAM,GAAG,IAAI,EAAE,SAAU;AAGtC,MAAI,CAAC,OAAOA,MAAK;AAChB,UAAM,iCAAiC,KAAKA,IAAG;AAAA,EACjD;AAGC,MAAI,CAAC,OAAOA,MAAK;AAChB,UAAM,yEAAyE,KAAKA,IAAG;AACvF,QAAI,CAAC,KAAK;AACT,YAAM,yEAAyE,KAAKA,IAAG;AACvF,UAAI,KAAK;AACR,YAAI,IAAG;AAAA,MACX;AAAA,IACA;AAEE,QAAI,KAAK;AACR,YAAM,gBAAgB,KAAK,IAAI,IAAG,CAAE;AAAA,IACvC;AAAA,EACA;AAGC,MAAI,CAAC,OAAOA,MAAK;AAChB,UAAM,mCAAmC,KAAKA,IAAG;AAAA,EACnD;AAGC,MAAI,KAAK;AACR,cAAU,IAAI,IAAK;AAInB,QAAI,YAAY,YAAY,YAAY,OAAO;AAC9C,gBAAU;AAAA,IACb;AAAA,EACA;AAGC,SAAO,QAAQ,QAAQ,SAAS,OAAO,EAAE,SAAU;AACpD;AASA,SAAS,kBAAkB,KAAK;AAE/B,MAAI,OAAO,QAAQ,YAAY,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,QAAQ,cAAc,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,QAAQ,cAAc,OAAO,IAAI,QAAQ,YAAY;AAC3O,WAAO;AAAA,EACT;AAGC,SAAO,IAAI,YAAY,SAAS,qBAAqB,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,8BAA8B,OAAO,IAAI,SAAS;AAChJ;AAOA,SAAS4O,SAAO,KAAK;AACpB,SAAO,OAAO,QAAQ,YAAY,OAAO,IAAI,gBAAgB,cAAc,OAAO,IAAI,SAAS,YAAY,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,gBAAgB,cAAc,OAAO,IAAI,YAAY,SAAS,YAAY,gBAAgB,KAAK,IAAI,YAAY,IAAI,KAAK,gBAAgB,KAAK,IAAI,OAAO,WAAW,CAAC;AAC/T;AAQA,SAAS,MAAM,UAAU;AACxB,MAAI,IAAI;AACR,MAAI,OAAO,SAAS;AAGpB,MAAI,SAAS,UAAU;AACtB,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AAIC,MAAI,gBAAgBH,YAAU,OAAO,KAAK,gBAAgB,YAAY;AAErE,SAAK,IAAI,YAAa;AACtB,SAAK,IAAI,YAAa;AACtB,SAAK,KAAK,EAAE;AACZ,SAAK,KAAK,EAAE;AAEZ,aAAS,SAAS,EAAE,OAAO;AAC3B,WAAO;AAAA,EACT;AAEC,SAAO;AACR;AAWA,SAAS,mBAAmB,MAAM;AACjC,MAAI,SAAS,MAAM;AAElB,WAAO;AAAA,EACT,WAAY,OAAO,SAAS,UAAU;AAEpC,WAAO;AAAA,EACT,WAAY,kBAAkB,IAAI,GAAG;AAEnC,WAAO;AAAA,EACT,WAAYG,SAAO,IAAI,GAAG;AAExB,WAAO,KAAK,QAAQ;AAAA,EACpB,WAAU,OAAO,SAAS,IAAI,GAAG;AAEjC,WAAO;AAAA,EACT,WAAY,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM,wBAAwB;AAE3E,WAAO;AAAA,EACP,WAAU,YAAY,OAAO,IAAI,GAAG;AAEpC,WAAO;AAAA,EACP,WAAU,OAAO,KAAK,gBAAgB,YAAY;AAElD,WAAO,gCAAgC,KAAK,YAAa,CAAA;AAAA,EAC3D,WAAY,gBAAgBH,UAAQ;AAGlC,WAAO;AAAA,EACT,OAAQ;AAEN,WAAO;AAAA,EACT;AACA;AAWA,SAAS,cAAc,UAAU;AAChC,QAAM,OAAO,SAAS;AAGtB,MAAI,SAAS,MAAM;AAElB,WAAO;AAAA,EACT,WAAYG,SAAO,IAAI,GAAG;AACxB,WAAO,KAAK;AAAA,EACZ,WAAU,OAAO,SAAS,IAAI,GAAG;AAEjC,WAAO,KAAK;AAAA,EACZ,WAAU,QAAQ,OAAO,KAAK,kBAAkB,YAAY;AAE5D,QAAI,KAAK,qBAAqB,KAAK,kBAAkB,UAAU;AAAA,IAC/D,KAAK,kBAAkB,KAAK,kBAAkB;AAE7C,aAAO,KAAK,cAAe;AAAA,IAC9B;AACE,WAAO;AAAA,EACT,OAAQ;AAEN,WAAO;AAAA,EACT;AACA;AAQA,SAAS,cAAc,MAAM,UAAU;AACtC,QAAM,OAAO,SAAS;AAGtB,MAAI,SAAS,MAAM;AAElB,SAAK,IAAK;AAAA,EACZ,WAAYA,SAAO,IAAI,GAAG;AACxB,SAAK,OAAM,EAAG,KAAK,IAAI;AAAA,EACvB,WAAU,OAAO,SAAS,IAAI,GAAG;AAEjC,SAAK,MAAM,IAAI;AACf,SAAK,IAAK;AAAA,EACZ,OAAQ;AAEN,SAAK,KAAK,IAAI;AAAA,EAChB;AACA;AAGA,KAAK,UAAU,OAAO;AAQtB,MAAM,oBAAoB;AAC1B,MAAM,yBAAyB;AAE/B,SAAS,aAAa,MAAM;AAC3B,SAAO,GAAG,IAAI;AACd,MAAI,kBAAkB,KAAK,IAAI,KAAK,SAAS,IAAI;AAChD,UAAM,IAAI,UAAU,GAAG,IAAI,kCAAkC;AAAA,EAC/D;AACA;AAEA,SAAS,cAAc,OAAO;AAC7B,UAAQ,GAAG,KAAK;AAChB,MAAI,uBAAuB,KAAK,KAAK,GAAG;AACvC,UAAM,IAAI,UAAU,GAAG,KAAK,mCAAmC;AAAA,EACjE;AACA;AAUA,SAAS,KAAK,KAAK,MAAM;AACxB,SAAO,KAAK,YAAa;AACzB,aAAW,OAAO,KAAK;AACtB,QAAI,IAAI,YAAa,MAAK,MAAM;AAC/B,aAAO;AAAA,IACV;AAAA,EACA;AACC,SAAO;AACR;AAEA,MAAM,MAAM,OAAO,KAAK;AACxB,IAAA,YAAA,MAAMG,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOb,cAAc;AACb,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAE/E,SAAK,GAAG,IAAI,uBAAO,OAAO,IAAI;AAE9B,QAAI,gBAAgBA,UAAS;AAC5B,YAAM,aAAa,KAAK,IAAK;AAC7B,YAAM,cAAc,OAAO,KAAK,UAAU;AAE1C,iBAAW,cAAc,aAAa;AACrC,mBAAW,SAAS,WAAW,UAAU,GAAG;AAC3C,eAAK,OAAO,YAAY,KAAK;AAAA,QAClC;AAAA,MACA;AAEG;AAAA,IACH;AAIE,QAAI,QAAQ,KAAM;AAAA,aAAW,OAAO,SAAS,UAAU;AACtD,YAAM,SAAS,KAAK,OAAO,QAAQ;AACnC,UAAI,UAAU,MAAM;AACnB,YAAI,OAAO,WAAW,YAAY;AACjC,gBAAM,IAAI,UAAU,+BAA+B;AAAA,QACxD;AAII,cAAM,QAAQ,CAAE;AAChB,mBAAW,QAAQ,MAAM;AACxB,cAAI,OAAO,SAAS,YAAY,OAAO,KAAK,OAAO,QAAQ,MAAM,YAAY;AAC5E,kBAAM,IAAI,UAAU,mCAAmC;AAAA,UAC7D;AACK,gBAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,QAChC;AAEI,mBAAW,QAAQ,OAAO;AACzB,cAAI,KAAK,WAAW,GAAG;AACtB,kBAAM,IAAI,UAAU,6CAA6C;AAAA,UACvE;AACK,eAAK,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QACjC;AAAA,MACA,OAAU;AAEN,mBAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACpC,gBAAM,QAAQ,KAAK,GAAG;AACtB,eAAK,OAAO,KAAK,KAAK;AAAA,QAC3B;AAAA,MACA;AAAA,IACA,OAAS;AACN,YAAM,IAAI,UAAU,wCAAwC;AAAA,IAC/D;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQC,IAAI,MAAM;AACT,WAAO,GAAG,IAAI;AACd,iBAAa,IAAI;AACjB,UAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,QAAI,QAAQ,QAAW;AACtB,aAAO;AAAA,IACV;AAEE,WAAO,KAAK,GAAG,EAAE,GAAG,EAAE,KAAK,IAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASC,QAAQ,UAAU;AACjB,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAElF,QAAI,QAAQ,WAAW,IAAI;AAC3B,QAAIhP,KAAI;AACR,WAAOA,KAAI,MAAM,QAAQ;AACxB,UAAI,WAAW,MAAMA,EAAC;AACtB,YAAM,OAAO,SAAS,CAAC,GACjB,QAAQ,SAAS,CAAC;AAExB,eAAS,KAAK,SAAS,OAAO,MAAM,IAAI;AACxC,cAAQ,WAAW,IAAI;AACvB,MAAAA;AAAA,IACH;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASC,IAAI,MAAM,OAAO;AAChB,WAAO,GAAG,IAAI;AACd,YAAQ,GAAG,KAAK;AAChB,iBAAa,IAAI;AACjB,kBAAc,KAAK;AACnB,UAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,SAAK,GAAG,EAAE,QAAQ,SAAY,MAAM,IAAI,IAAI,CAAC,KAAK;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASC,OAAO,MAAM,OAAO;AACnB,WAAO,GAAG,IAAI;AACd,YAAQ,GAAG,KAAK;AAChB,iBAAa,IAAI;AACjB,kBAAc,KAAK;AACnB,UAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,QAAI,QAAQ,QAAW;AACtB,WAAK,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK;AAAA,IAC5B,OAAS;AACN,WAAK,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK;AAAA,IAC3B;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQC,IAAI,MAAM;AACT,WAAO,GAAG,IAAI;AACd,iBAAa,IAAI;AACjB,WAAO,KAAK,KAAK,GAAG,GAAG,IAAI,MAAM;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQC,OAAO,MAAM;AACZ,WAAO,GAAG,IAAI;AACd,iBAAa,IAAI;AACjB,UAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,QAAI,QAAQ,QAAW;AACtB,aAAO,KAAK,GAAG,EAAE,GAAG;AAAA,IACvB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,MAAM;AACL,WAAO,KAAK,GAAG;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,OAAO;AACN,WAAO,sBAAsB,MAAM,KAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,SAAS;AACR,WAAO,sBAAsB,MAAM,OAAO;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASC,CAAC,OAAO,QAAQ,IAAI;AACnB,WAAO,sBAAsB,MAAM,WAAW;AAAA,EAChD;AACA;AACAgP,UAAQ,UAAU,UAAUA,UAAQ,UAAU,OAAO,QAAQ;AAE7D,OAAO,eAAeA,UAAQ,WAAW,OAAO,aAAa;AAAA,EAC5D,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AACf,CAAC;AAED,OAAO,iBAAiBA,UAAQ,WAAW;AAAA,EAC1C,KAAK,EAAE,YAAY,KAAM;AAAA,EACzB,SAAS,EAAE,YAAY,KAAM;AAAA,EAC7B,KAAK,EAAE,YAAY,KAAM;AAAA,EACzB,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,KAAK,EAAE,YAAY,KAAM;AAAA,EACzB,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,SAAS,EAAE,YAAY,KAAI;AAC5B,CAAC;AAED,SAAS,WAAW,SAAS;AAC5B,MAAIlH,QAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAE/E,QAAM,OAAO,OAAO,KAAK,QAAQ,GAAG,CAAC,EAAE,KAAM;AAC7C,SAAO,KAAK,IAAIA,UAAS,QAAQ,SAAUX,IAAG;AAC7C,WAAOA,GAAE,YAAa;AAAA,EACxB,IAAKW,UAAS,UAAU,SAAUX,IAAG;AACnC,WAAO,QAAQ,GAAG,EAAEA,EAAC,EAAE,KAAK,IAAI;AAAA,EAChC,IAAG,SAAUA,IAAG;AAChB,WAAO,CAACA,GAAE,YAAW,GAAI,QAAQ,GAAG,EAAEA,EAAC,EAAE,KAAK,IAAI,CAAC;AAAA,EACrD,CAAE;AACF;AAEA,MAAM,WAAW,OAAO,UAAU;AAElC,SAAS,sBAAsB,QAAQW,OAAM;AAC5C,QAAM,WAAW,OAAO,OAAO,wBAAwB;AACvD,WAAS,QAAQ,IAAI;AAAA,IACpB;AAAA,IACA,MAAAA;AAAA,IACA,OAAO;AAAA,EACP;AACD,SAAO;AACR;AAEA,MAAM,2BAA2B,OAAO,eAAe;AAAA,EACtD,OAAO;AAEN,QAAI,CAAC,QAAQ,OAAO,eAAe,IAAI,MAAM,0BAA0B;AACtE,YAAM,IAAI,UAAU,0CAA0C;AAAA,IACjE;AAEE,QAAI,YAAY,KAAK,QAAQ;AAC7B,UAAM,SAAS,UAAU,QACnBA,QAAO,UAAU,MACjB,QAAQ,UAAU;AAExB,UAAM,SAAS,WAAW,QAAQA,KAAI;AACtC,UAAM,MAAM,OAAO;AACnB,QAAI,SAAS,KAAK;AACjB,aAAO;AAAA,QACN,OAAO;AAAA,QACP,MAAM;AAAA,MACN;AAAA,IACJ;AAEE,SAAK,QAAQ,EAAE,QAAQ,QAAQ;AAE/B,WAAO;AAAA,MACN,OAAO,OAAO,KAAK;AAAA,MACnB,MAAM;AAAA,IACN;AAAA,EACH;AACA,GAAG,OAAO,eAAe,OAAO,eAAe,CAAE,EAAC,OAAO,QAAQ,EAAG,CAAA,CAAC,CAAC;AAEtE,OAAO,eAAe,0BAA0B,OAAO,aAAa;AAAA,EACnE,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AACf,CAAC;AAQD,SAAS,4BAA4B,SAAS;AAC7C,QAAM,MAAM,OAAO,OAAO,EAAE,WAAW,KAAM,GAAE,QAAQ,GAAG,CAAC;AAI3D,QAAM,gBAAgB,KAAK,QAAQ,GAAG,GAAG,MAAM;AAC/C,MAAI,kBAAkB,QAAW;AAChC,QAAI,aAAa,IAAI,IAAI,aAAa,EAAE,CAAC;AAAA,EAC3C;AAEC,SAAO;AACR;AASA,SAAS,qBAAqB,KAAK;AAClC,QAAM,UAAU,IAAIkH,UAAS;AAC7B,aAAW,QAAQ,OAAO,KAAK,GAAG,GAAG;AACpC,QAAI,kBAAkB,KAAK,IAAI,GAAG;AACjC;AAAA,IACH;AACE,QAAI,MAAM,QAAQ,IAAI,IAAI,CAAC,GAAG;AAC7B,iBAAW,OAAO,IAAI,IAAI,GAAG;AAC5B,YAAI,uBAAuB,KAAK,GAAG,GAAG;AACrC;AAAA,QACL;AACI,YAAI,QAAQ,GAAG,EAAE,IAAI,MAAM,QAAW;AACrC,kBAAQ,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG;AAAA,QAC9B,OAAW;AACN,kBAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG;AAAA,QAChC;AAAA,MACA;AAAA,IACA,WAAa,CAAC,uBAAuB,KAAK,IAAI,IAAI,CAAC,GAAG;AACnD,cAAQ,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAClC;AAAA,EACA;AACC,SAAO;AACR;AAEA,MAAM,cAAc,OAAO,oBAAoB;AAG/C,MAAM,eAAe,KAAK;AAS1B,MAAM,SAAS;AAAA,EACd,cAAc;AACb,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAC/E,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AAEjF,SAAK,KAAK,MAAM,MAAM,IAAI;AAE1B,UAAM,SAAS,KAAK,UAAU;AAC9B,UAAM,UAAU,IAAIA,UAAQ,KAAK,OAAO;AAExC,QAAI,QAAQ,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AACjD,YAAM,cAAc,mBAAmB,IAAI;AAC3C,UAAI,aAAa;AAChB,gBAAQ,OAAO,gBAAgB,WAAW;AAAA,MAC9C;AAAA,IACA;AAEE,SAAK,WAAW,IAAI;AAAA,MACnB,KAAK,KAAK;AAAA,MACV;AAAA,MACA,YAAY,KAAK,cAAc,aAAa,MAAM;AAAA,MAClD;AAAA,MACA,SAAS,KAAK;AAAA,IACd;AAAA,EACH;AAAA,EAEC,IAAI,MAAM;AACT,WAAO,KAAK,WAAW,EAAE,OAAO;AAAA,EAClC;AAAA,EAEC,IAAI,SAAS;AACZ,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKC,IAAI,KAAK;AACR,WAAO,KAAK,WAAW,EAAE,UAAU,OAAO,KAAK,WAAW,EAAE,SAAS;AAAA,EACvE;AAAA,EAEC,IAAI,aAAa;AAChB,WAAO,KAAK,WAAW,EAAE,UAAU;AAAA,EACrC;AAAA,EAEC,IAAI,aAAa;AAChB,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA,EAEC,IAAI,UAAU;AACb,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,QAAQ;AACP,WAAO,IAAI,SAAS,MAAM,IAAI,GAAG;AAAA,MAChC,KAAK,KAAK;AAAA,MACV,QAAQ,KAAK;AAAA,MACb,YAAY,KAAK;AAAA,MACjB,SAAS,KAAK;AAAA,MACd,IAAI,KAAK;AAAA,MACT,YAAY,KAAK;AAAA,IACpB,CAAG;AAAA,EACH;AACA;AAEA,KAAK,MAAM,SAAS,SAAS;AAE7B,OAAO,iBAAiB,SAAS,WAAW;AAAA,EAC3C,KAAK,EAAE,YAAY,KAAM;AAAA,EACzB,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,IAAI,EAAE,YAAY,KAAM;AAAA,EACxB,YAAY,EAAE,YAAY,KAAM;AAAA,EAChC,YAAY,EAAE,YAAY,KAAM;AAAA,EAChC,SAAS,EAAE,YAAY,KAAM;AAAA,EAC7B,OAAO,EAAE,YAAY,KAAI;AAC1B,CAAC;AAED,OAAO,eAAe,SAAS,WAAW,OAAO,aAAa;AAAA,EAC7D,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AACf,CAAC;AAED,MAAM,cAAc,OAAO,mBAAmB;AAC9C,MAAM/J,QAAM,IAAI,OAAO,UAAU;AAGjC,MAAM,YAAY,IAAI;AACtB,MAAM,aAAa,IAAI;AAQvB,SAAS,SAAS,QAAQ;AAMzB,MAAI,4BAA4B,KAAK,MAAM,GAAG;AAC7C,aAAS,IAAIA,MAAI,MAAM,EAAE,SAAU;AAAA,EACrC;AAGC,SAAO,UAAU,MAAM;AACxB;AAEA,MAAM,6BAA6B,aAAayJ,SAAO,SAAS;AAQhE,SAAS,UAAU,OAAO;AACzB,SAAO,OAAO,UAAU,YAAY,OAAO,MAAM,WAAW,MAAM;AACnE;AAEA,SAAS,cAAc,QAAQ;AAC9B,QAAM,QAAQ,UAAU,OAAO,WAAW,YAAY,OAAO,eAAe,MAAM;AAClF,SAAO,CAAC,EAAE,SAAS,MAAM,YAAY,SAAS;AAC/C;AASA,MAAM,QAAQ;AAAA,EACb,YAAY,OAAO;AAClB,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAE;AAEjF,QAAI;AAGJ,QAAI,CAAC,UAAU,KAAK,GAAG;AACtB,UAAI,SAAS,MAAM,MAAM;AAIxB,oBAAY,SAAS,MAAM,IAAI;AAAA,MACnC,OAAU;AAEN,oBAAY,SAAS,GAAG,KAAK,EAAE;AAAA,MACnC;AACG,cAAQ,CAAE;AAAA,IACb,OAAS;AACN,kBAAY,SAAS,MAAM,GAAG;AAAA,IACjC;AAEE,QAAI,SAAS,KAAK,UAAU,MAAM,UAAU;AAC5C,aAAS,OAAO,YAAa;AAE7B,SAAK,KAAK,QAAQ,QAAQ,UAAU,KAAK,KAAK,MAAM,SAAS,UAAU,WAAW,SAAS,WAAW,SAAS;AAC9G,YAAM,IAAI,UAAU,+CAA+C;AAAA,IACtE;AAEE,QAAI,YAAY,KAAK,QAAQ,OAAO,KAAK,OAAO,UAAU,KAAK,KAAK,MAAM,SAAS,OAAO,MAAM,KAAK,IAAI;AAEzG,SAAK,KAAK,MAAM,WAAW;AAAA,MAC1B,SAAS,KAAK,WAAW,MAAM,WAAW;AAAA,MAC1C,MAAM,KAAK,QAAQ,MAAM,QAAQ;AAAA,IACpC,CAAG;AAED,UAAM,UAAU,IAAIM,UAAQ,KAAK,WAAW,MAAM,WAAW,EAAE;AAE/D,QAAI,aAAa,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AACtD,YAAM,cAAc,mBAAmB,SAAS;AAChD,UAAI,aAAa;AAChB,gBAAQ,OAAO,gBAAgB,WAAW;AAAA,MAC9C;AAAA,IACA;AAEE,QAAI,SAAS,UAAU,KAAK,IAAI,MAAM,SAAS;AAC/C,QAAI,YAAY,KAAM,UAAS,KAAK;AAEpC,QAAI,UAAU,QAAQ,CAAC,cAAc,MAAM,GAAG;AAC7C,YAAM,IAAI,UAAU,iDAAiD;AAAA,IACxE;AAEE,SAAK,WAAW,IAAI;AAAA,MACnB;AAAA,MACA,UAAU,KAAK,YAAY,MAAM,YAAY;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,IACA;AAGD,SAAK,SAAS,KAAK,WAAW,SAAY,KAAK,SAAS,MAAM,WAAW,SAAY,MAAM,SAAS;AACpG,SAAK,WAAW,KAAK,aAAa,SAAY,KAAK,WAAW,MAAM,aAAa,SAAY,MAAM,WAAW;AAC9G,SAAK,UAAU,KAAK,WAAW,MAAM,WAAW;AAChD,SAAK,QAAQ,KAAK,SAAS,MAAM;AAAA,EACnC;AAAA,EAEC,IAAI,SAAS;AACZ,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA,EAEC,IAAI,MAAM;AACT,WAAO,WAAW,KAAK,WAAW,EAAE,SAAS;AAAA,EAC/C;AAAA,EAEC,IAAI,UAAU;AACb,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA,EAEC,IAAI,WAAW;AACd,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA,EAEC,IAAI,SAAS;AACZ,WAAO,KAAK,WAAW,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,QAAQ;AACP,WAAO,IAAI,QAAQ,IAAI;AAAA,EACzB;AACA;AAEA,KAAK,MAAM,QAAQ,SAAS;AAE5B,OAAO,eAAe,QAAQ,WAAW,OAAO,aAAa;AAAA,EAC5D,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AACf,CAAC;AAED,OAAO,iBAAiB,QAAQ,WAAW;AAAA,EAC1C,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,KAAK,EAAE,YAAY,KAAM;AAAA,EACzB,SAAS,EAAE,YAAY,KAAM;AAAA,EAC7B,UAAU,EAAE,YAAY,KAAM;AAAA,EAC9B,OAAO,EAAE,YAAY,KAAM;AAAA,EAC3B,QAAQ,EAAE,YAAY,KAAI;AAC3B,CAAC;AAQD,SAAS,sBAAsB,SAAS;AACvC,QAAM,YAAY,QAAQ,WAAW,EAAE;AACvC,QAAM,UAAU,IAAIA,UAAQ,QAAQ,WAAW,EAAE,OAAO;AAGxD,MAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC3B,YAAQ,IAAI,UAAU,KAAK;AAAA,EAC7B;AAGC,MAAI,CAAC,UAAU,YAAY,CAAC,UAAU,UAAU;AAC/C,UAAM,IAAI,UAAU,kCAAkC;AAAA,EACxD;AAEC,MAAI,CAAC,YAAY,KAAK,UAAU,QAAQ,GAAG;AAC1C,UAAM,IAAI,UAAU,sCAAsC;AAAA,EAC5D;AAEC,MAAI,QAAQ,UAAU,QAAQ,gBAAgBN,SAAO,YAAY,CAAC,4BAA4B;AAC7F,UAAM,IAAI,MAAM,iFAAiF;AAAA,EACnG;AAGC,MAAI,qBAAqB;AACzB,MAAI,QAAQ,QAAQ,QAAQ,gBAAgB,KAAK,QAAQ,MAAM,GAAG;AACjE,yBAAqB;AAAA,EACvB;AACC,MAAI,QAAQ,QAAQ,MAAM;AACzB,UAAM,aAAa,cAAc,OAAO;AACxC,QAAI,OAAO,eAAe,UAAU;AACnC,2BAAqB,OAAO,UAAU;AAAA,IACzC;AAAA,EACA;AACC,MAAI,oBAAoB;AACvB,YAAQ,IAAI,kBAAkB,kBAAkB;AAAA,EAClD;AAGC,MAAI,CAAC,QAAQ,IAAI,YAAY,GAAG;AAC/B,YAAQ,IAAI,cAAc,wDAAwD;AAAA,EACpF;AAGC,MAAI,QAAQ,YAAY,CAAC,QAAQ,IAAI,iBAAiB,GAAG;AACxD,YAAQ,IAAI,mBAAmB,cAAc;AAAA,EAC/C;AAEC,MAAIO,SAAQ,QAAQ;AACpB,MAAI,OAAOA,WAAU,YAAY;AAChC,IAAAA,SAAQA,OAAM,SAAS;AAAA,EACzB;AAKC,SAAO,OAAO,OAAO,CAAE,GAAE,WAAW;AAAA,IACnC,QAAQ,QAAQ;AAAA,IAChB,SAAS,4BAA4B,OAAO;AAAA,IAC5C,OAAAA;AAAA,EACF,CAAE;AACF;AAcA,SAAS,WAAW,SAAS;AAC3B,QAAM,KAAK,MAAM,OAAO;AAExB,OAAK,OAAO;AACZ,OAAK,UAAU;AAGf,QAAM,kBAAkB,MAAM,KAAK,WAAW;AAChD;AAEA,WAAW,YAAY,OAAO,OAAO,MAAM,SAAS;AACpD,WAAW,UAAU,cAAc;AACnC,WAAW,UAAU,OAAO;AAE5B,MAAMC,UAAQ,IAAI,OAAO,UAAU;AAGnC,MAAM,gBAAgBR,SAAO;AAE7B,MAAM,sBAAsB,SAASS,qBAAoB,aAAa,UAAU;AAC/E,QAAM,OAAO,IAAID,QAAM,QAAQ,EAAE;AACjC,QAAM,OAAO,IAAIA,QAAM,WAAW,EAAE;AAEpC,SAAO,SAAS,QAAQ,KAAK,KAAK,SAAS,KAAK,SAAS,CAAC,MAAM,OAAO,KAAK,SAAS,IAAI;AAC1F;AASA,MAAM,iBAAiB,SAASE,gBAAe,aAAa,UAAU;AACrE,QAAM,OAAO,IAAIF,QAAM,QAAQ,EAAE;AACjC,QAAM,OAAO,IAAIA,QAAM,WAAW,EAAE;AAEpC,SAAO,SAAS;AACjB;AASA,SAASxB,QAAM,KAAK,MAAM;AAGzB,MAAI,CAACA,QAAM,SAAS;AACnB,UAAM,IAAI,MAAM,wEAAwE;AAAA,EAC1F;AAEC,OAAK,UAAUA,QAAM;AAGrB,SAAO,IAAIA,QAAM,QAAQ,SAAU,SAAS,QAAQ;AAEnD,UAAM,UAAU,IAAI,QAAQ,KAAK,IAAI;AACrC,UAAM,UAAU,sBAAsB,OAAO;AAE7C,UAAM,QAAQ,QAAQ,aAAa,WAAW,QAAQ,MAAM;AAC5D,UAAM,SAAS,QAAQ;AAEvB,QAAI,WAAW;AAEf,UAAM,QAAQ,SAAS2B,SAAQ;AAC9B,UAAI,QAAQ,IAAI,WAAW,6BAA6B;AACxD,aAAO,KAAK;AACZ,UAAI,QAAQ,QAAQ,QAAQ,gBAAgBX,SAAO,UAAU;AAC5D,sBAAc,QAAQ,MAAM,KAAK;AAAA,MACrC;AACG,UAAI,CAAC,YAAY,CAAC,SAAS,KAAM;AACjC,eAAS,KAAK,KAAK,SAAS,KAAK;AAAA,IACjC;AAED,QAAI,UAAU,OAAO,SAAS;AAC7B,YAAO;AACP;AAAA,IACH;AAEE,UAAM,mBAAmB,SAASY,oBAAmB;AACpD,YAAO;AACP,eAAU;AAAA,IACV;AAGD,UAAM,MAAM,KAAK,OAAO;AACxB,QAAI;AAEJ,QAAI,QAAQ;AACX,aAAO,iBAAiB,SAAS,gBAAgB;AAAA,IACpD;AAEE,aAAS,WAAW;AACnB,UAAI,MAAO;AACX,UAAI,OAAQ,QAAO,oBAAoB,SAAS,gBAAgB;AAChE,mBAAa,UAAU;AAAA,IAC1B;AAEE,QAAI,QAAQ,SAAS;AACpB,UAAI,KAAK,UAAU,SAAU,QAAQ;AACpC,qBAAa,WAAW,WAAY;AACnC,iBAAO,IAAI,WAAW,uBAAuB,QAAQ,GAAG,IAAI,iBAAiB,CAAC;AAC9E,mBAAU;AAAA,QACf,GAAO,QAAQ,OAAO;AAAA,MACtB,CAAI;AAAA,IACJ;AAEE,QAAI,GAAG,SAAS,SAAU,KAAK;AAC9B,aAAO,IAAI,WAAW,cAAc,QAAQ,GAAG,oBAAoB,IAAI,OAAO,IAAI,UAAU,GAAG,CAAC;AAEhG,UAAI,YAAY,SAAS,MAAM;AAC9B,sBAAc,SAAS,MAAM,GAAG;AAAA,MACpC;AAEG,eAAU;AAAA,IACb,CAAG;AAED,wCAAoC,KAAK,SAAU,KAAK;AACvD,UAAI,UAAU,OAAO,SAAS;AAC7B;AAAA,MACJ;AAEG,UAAI,YAAY,SAAS,MAAM;AAC9B,sBAAc,SAAS,MAAM,GAAG;AAAA,MACpC;AAAA,IACA,CAAG;AAGD,QAAI,SAAS,QAAQ,QAAQ,UAAU,CAAC,CAAC,IAAI,IAAI;AAGhD,UAAI,GAAG,UAAU,SAAUvP,IAAG;AAC7B,QAAAA,GAAE,YAAY,SAAS,SAAU,UAAU;AAE1C,gBAAM,kBAAkBA,GAAE,cAAc,MAAM,IAAI;AAGlD,cAAI,YAAY,mBAAmB,CAAC,YAAY,EAAE,UAAU,OAAO,UAAU;AAC5E,kBAAM,MAAM,IAAI,MAAM,iBAAiB;AACvC,gBAAI,OAAO;AACX,qBAAS,KAAK,KAAK,SAAS,GAAG;AAAA,UACrC;AAAA,QACA,CAAK;AAAA,MACL,CAAI;AAAA,IACJ;AAEE,QAAI,GAAG,YAAY,SAAU,KAAK;AACjC,mBAAa,UAAU;AAEvB,YAAM,UAAU,qBAAqB,IAAI,OAAO;AAGhD,UAAI2N,QAAM,WAAW,IAAI,UAAU,GAAG;AAErC,cAAM,WAAW,QAAQ,IAAI,UAAU;AAGvC,YAAI,cAAc;AAClB,YAAI;AACH,wBAAc,aAAa,OAAO,OAAO,IAAIwB,QAAM,UAAU,QAAQ,GAAG,EAAE,SAAU;AAAA,QACpF,SAAQ,KAAK;AAIb,cAAI,QAAQ,aAAa,UAAU;AAClC,mBAAO,IAAI,WAAW,wDAAwD,QAAQ,IAAI,kBAAkB,CAAC;AAC7G,qBAAU;AACV;AAAA,UACN;AAAA,QACA;AAGI,gBAAQ,QAAQ,UAAQ;AAAA,UACvB,KAAK;AACJ,mBAAO,IAAI,WAAW,0EAA0E,QAAQ,GAAG,IAAI,aAAa,CAAC;AAC7H,qBAAU;AACV;AAAA,UACD,KAAK;AAEJ,gBAAI,gBAAgB,MAAM;AAEzB,kBAAI;AACH,wBAAQ,IAAI,YAAY,WAAW;AAAA,cACnC,SAAQ,KAAK;AAEb,uBAAO,GAAG;AAAA,cAClB;AAAA,YACA;AACM;AAAA,UACD,KAAK;AAEJ,gBAAI,gBAAgB,MAAM;AACzB;AAAA,YACP;AAGM,gBAAI,QAAQ,WAAW,QAAQ,QAAQ;AACtC,qBAAO,IAAI,WAAW,gCAAgC,QAAQ,GAAG,IAAI,cAAc,CAAC;AACpF,uBAAU;AACV;AAAA,YACP;AAIM,kBAAM,cAAc;AAAA,cACnB,SAAS,IAAIF,UAAQ,QAAQ,OAAO;AAAA,cACpC,QAAQ,QAAQ;AAAA,cAChB,SAAS,QAAQ,UAAU;AAAA,cAC3B,OAAO,QAAQ;AAAA,cACf,UAAU,QAAQ;AAAA,cAClB,QAAQ,QAAQ;AAAA,cAChB,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,cAChB,SAAS,QAAQ;AAAA,cACjB,MAAM,QAAQ;AAAA,YACd;AAED,gBAAI,CAAC,oBAAoB,QAAQ,KAAK,WAAW,KAAK,CAAC,eAAe,QAAQ,KAAK,WAAW,GAAG;AAChG,yBAAW,QAAQ,CAAC,iBAAiB,oBAAoB,UAAU,SAAS,GAAG;AAC9E,4BAAY,QAAQ,OAAO,IAAI;AAAA,cACvC;AAAA,YACA;AAGM,gBAAI,IAAI,eAAe,OAAO,QAAQ,QAAQ,cAAc,OAAO,MAAM,MAAM;AAC9E,qBAAO,IAAI,WAAW,4DAA4D,sBAAsB,CAAC;AACzG,uBAAU;AACV;AAAA,YACP;AAGM,gBAAI,IAAI,eAAe,QAAQ,IAAI,eAAe,OAAO,IAAI,eAAe,QAAQ,QAAQ,WAAW,QAAQ;AAC9G,0BAAY,SAAS;AACrB,0BAAY,OAAO;AACnB,0BAAY,QAAQ,OAAO,gBAAgB;AAAA,YAClD;AAGM,oBAAQtB,QAAM,IAAI,QAAQ,aAAa,WAAW,CAAC,CAAC;AACpD,qBAAU;AACV;AAAA,QACN;AAAA,MACA;AAGG,UAAI,KAAK,OAAO,WAAY;AAC3B,YAAI,OAAQ,QAAO,oBAAoB,SAAS,gBAAgB;AAAA,MACpE,CAAI;AACD,UAAI,OAAO,IAAI,KAAK,IAAI,cAAa,CAAE;AAEvC,YAAM,mBAAmB;AAAA,QACxB,KAAK,QAAQ;AAAA,QACb,QAAQ,IAAI;AAAA,QACZ,YAAY,IAAI;AAAA,QAChB;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,MACjB;AAGD,YAAM,UAAU,QAAQ,IAAI,kBAAkB;AAU9C,UAAI,CAAC,QAAQ,YAAY,QAAQ,WAAW,UAAU,YAAY,QAAQ,IAAI,eAAe,OAAO,IAAI,eAAe,KAAK;AAC3H,mBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAOG,YAAM,cAAc;AAAA,QACnB,OAAO,KAAK;AAAA,QACZ,aAAa,KAAK;AAAA,MAClB;AAGD,UAAI,WAAW,UAAU,WAAW,UAAU;AAC7C,eAAO,KAAK,KAAK,KAAK,aAAa,WAAW,CAAC;AAC/C,mBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAGG,UAAI,WAAW,aAAa,WAAW,aAAa;AAGnD,cAAM,MAAM,IAAI,KAAK,IAAI,cAAa,CAAE;AACxC,YAAI,KAAK,QAAQ,SAAU,OAAO;AAEjC,eAAK,MAAM,CAAC,IAAI,QAAU,GAAM;AAC/B,mBAAO,KAAK,KAAK,KAAK,cAAa,CAAE;AAAA,UAC3C,OAAY;AACN,mBAAO,KAAK,KAAK,KAAK,iBAAgB,CAAE;AAAA,UAC9C;AACK,qBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,kBAAQ,QAAQ;AAAA,QACrB,CAAK;AACD,YAAI,GAAG,OAAO,WAAY;AAEzB,cAAI,CAAC,UAAU;AACd,uBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,oBAAQ,QAAQ;AAAA,UACtB;AAAA,QACA,CAAK;AACD;AAAA,MACJ;AAGG,UAAI,WAAW,QAAQ,OAAO,KAAK,2BAA2B,YAAY;AACzE,eAAO,KAAK,KAAK,KAAK,uBAAsB,CAAE;AAC9C,mBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAGG,iBAAW,IAAI,SAAS,MAAM,gBAAgB;AAC9C,cAAQ,QAAQ;AAAA,IACnB,CAAG;AAED,kBAAc,KAAK,OAAO;AAAA,EAC5B,CAAE;AACF;AACA,SAAS,oCAAoC,SAAS,eAAe;AACpE,MAAI;AAEJ,UAAQ,GAAG,UAAU,SAAU3N,IAAG;AACjC,aAASA;AAAA,EACX,CAAE;AAED,UAAQ,GAAG,YAAY,SAAU,UAAU;AAC1C,UAAM,UAAU,SAAS;AAEzB,QAAI,QAAQ,mBAAmB,MAAM,aAAa,CAAC,QAAQ,gBAAgB,GAAG;AAC7E,eAAS,KAAK,SAAS,SAAU,UAAU;AAK1C,cAAM,kBAAkB,UAAU,OAAO,cAAc,MAAM,IAAI;AAEjE,YAAI,mBAAmB,CAAC,UAAU;AACjC,gBAAM,MAAM,IAAI,MAAM,iBAAiB;AACvC,cAAI,OAAO;AACX,wBAAc,GAAG;AAAA,QACtB;AAAA,MACA,CAAI;AAAA,IACJ;AAAA,EACA,CAAE;AACF;AAEA,SAAS,cAAc,QAAQ,KAAK;AACnC,MAAI,OAAO,SAAS;AACnB,WAAO,QAAQ,GAAG;AAAA,EACpB,OAAQ;AAEN,WAAO,KAAK,SAAS,GAAG;AACxB,WAAO,IAAK;AAAA,EACd;AACA;AAQA2N,QAAM,aAAa,SAAU,MAAM;AAClC,SAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS;AACjF;AAGAA,QAAM,UAAU,OAAO;AC3uDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,MAAM,IAAE,cAAY,OAAO,UAAQ,YAAU,OAAO,OAAO,WAAS,SAAO,CAAA/M,OAAG,UAAUA,EAAC;AAAI,SAAS,IAAG;AAAE;AAAA,SAAS,EAAEA,IAAE;AAAC,SAAM,YAAU,OAAOA,MAAG,SAAOA,MAAG,cAAY,OAAOA;AAAC;AAAC,MAAM,IAAE;AAAE,SAAS,EAAEA,IAAEuI,IAAE;AAAC,MAAG;AAAC,WAAO,eAAevI,IAAE,QAAO,EAAC,OAAMuI,IAAE,cAAa,KAAE,CAAC;AAAA,EAAC,SAAOvI,IAAE;AAAA,EAAA;AAAE;AAAC,MAAM,IAAE,SAAQ,IAAE,QAAQ,UAAU,MAAK,IAAE,QAAQ,QAAQ,KAAK,CAAC,GAAE,IAAE,QAAQ,OAAO,KAAK,CAAC;AAAE,SAAS,EAAEA,IAAE;AAAC,SAAO,IAAI,EAAEA,EAAC;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,SAAO,EAAEA,EAAC;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,SAAO,EAAEA,EAAC;AAAC;AAAC,SAAS,EAAEA,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAE,KAAKlM,IAAEuI,IAAE2D,EAAC;AAAC;AAAC,SAAS,EAAElM,IAAEuI,IAAE2D,IAAE;AAAC,IAAE,EAAElM,IAAEuI,IAAE2D,EAAC,GAAE,QAAO,CAAC;AAAC;AAAC,SAAS,EAAElM,IAAEuI,IAAE;AAAC,IAAEvI,IAAEuI,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,IAAEvI,IAAE,QAAOuI,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEuI,IAAE2D,EAAC;AAAC;AAAC,SAAS,EAAElM,IAAE;AAAC,IAAEA,IAAE,QAAO,CAAC;AAAC;AAAC,IAAI,IAAE,CAAAA,OAAG;AAAC,MAAG,cAAY,OAAO,eAAe,KAAE;AAAA,OAAmB;AAAC,UAAMA,KAAE,EAAE,MAAM;AAAE,QAAE,CAAAuI,OAAG,EAAEvI,IAAEuI,EAAC;AAAA,EAAC;AAAC,SAAO,EAAEvI,EAAC;AAAC;AAAE,SAAS,EAAEA,IAAEuI,IAAE2D,IAAE;AAAC,MAAG,cAAY,OAAOlM,GAAE,OAAM,IAAI,UAAU,4BAA4B;AAAE,SAAO,SAAS,UAAU,MAAM,KAAKA,IAAEuI,IAAE2D,EAAC;AAAC;AAAC,SAAS,EAAElM,IAAEuI,IAAE2D,IAAE;AAAC,MAAG;AAAC,WAAO,EAAE,EAAElM,IAAEuI,IAAE2D,EAAC,CAAC;AAAA,EAAC,SAAOlM,IAAE;AAAC,WAAO,EAAEA,EAAC;AAAA,EAAC;AAAC;AAAC,MAAM,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,UAAQ,GAAE,KAAK,QAAM,GAAE,KAAK,SAAO,EAAC,WAAU,CAAA,GAAG,OAAM,OAAM,GAAE,KAAK,QAAM,KAAK,QAAO,KAAK,UAAQ,GAAE,KAAK,QAAM;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK;AAAA,EAAK;AAAA,EAAC,KAAKA,IAAE;AAAC,UAAMuI,KAAE,KAAK;AAAM,QAAI2D,KAAE3D;AAAE,cAAQA,GAAE,UAAU,WAAS2D,KAAE,EAAC,WAAU,CAAA,GAAG,OAAM,OAAM,IAAG3D,GAAE,UAAU,KAAKvI,EAAC,GAAEkM,OAAI3D,OAAI,KAAK,QAAM2D,IAAE3D,GAAE,QAAM2D,KAAG,EAAE,KAAK;AAAA,EAAK;AAAA,EAAC,QAAO;AAAC,UAAMlM,KAAE,KAAK;AAAO,QAAIuI,KAAEvI;AAAE,UAAMkM,KAAE,KAAK;AAAQ,QAAI0C,KAAE1C,KAAE;AAAE,UAAMjI,KAAEjE,GAAE,WAAU0C,KAAEuB,GAAEiI,EAAC;AAAE,WAAO,UAAQ0C,OAAIrG,KAAEvI,GAAE,OAAM4O,KAAE,IAAG,EAAE,KAAK,OAAM,KAAK,UAAQA,IAAE5O,OAAIuI,OAAI,KAAK,SAAOA,KAAGtE,GAAEiI,EAAC,IAAE,QAAOxJ;AAAA,EAAC;AAAA,EAAC,QAAQ1C,IAAE;AAAC,QAAIuI,KAAE,KAAK,SAAQ2D,KAAE,KAAK,QAAO0C,KAAE1C,GAAE;AAAU,WAAK,EAAE3D,OAAIqG,GAAE,UAAQ,WAAS1C,GAAE,SAAO3D,OAAIqG,GAAE,WAAS1C,KAAEA,GAAE,OAAM0C,KAAE1C,GAAE,WAAU3D,KAAE,GAAE,MAAIqG,GAAE,WAAU,CAAA5O,GAAE4O,GAAErG,EAAC,CAAC,GAAE,EAAEA;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,UAAMvI,KAAE,KAAK,QAAOuI,KAAE,KAAK;AAAQ,WAAOvI,GAAE,UAAUuI,EAAC;AAAA,EAAC;AAAC;AAAC,MAAM,IAAE,EAAE,gBAAgB,GAAE,IAAE,EAAE,gBAAgB,GAAE,IAAE,EAAE,iBAAiB,GAAE,IAAE,EAAE,eAAe,GAAE,IAAE,EAAE,kBAAkB;AAAE,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,EAAAvI,GAAE,uBAAqBuI,IAAEA,GAAE,UAAQvI,IAAE,eAAauI,GAAE,SAAO,EAAEvI,EAAC,IAAE,aAAWuI,GAAE,SAAO,SAASvI,IAAE;AAAC,MAAEA,EAAC,GAAE,EAAEA,EAAC;AAAA,EAAC,EAAEA,EAAC,IAAE,EAAEA,IAAEuI,GAAE,YAAY;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,SAAO,GAAGvI,GAAE,sBAAqBuI,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAE;AAAC,QAAMuI,KAAEvI,GAAE;AAAqB,iBAAauI,GAAE,SAAO,EAAEvI,IAAE,IAAI,UAAU,kFAAkF,CAAC,IAAE,SAASA,IAAEuI,IAAE;AAAC,MAAEvI,IAAEuI,EAAC;AAAA,EAAC,EAAEvI,IAAE,IAAI,UAAU,kFAAkF,CAAC,GAAEuI,GAAE,0BAA0B,CAAC,EAAC,GAAGA,GAAE,UAAQ,QAAOvI,GAAE,uBAAqB;AAAM;AAAC,SAAS,EAAEA,IAAE;AAAC,SAAO,IAAI,UAAU,YAAUA,KAAE,mCAAmC;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,EAAAA,GAAE,iBAAe,EAAG,CAACuI,IAAE2D,OAAI;AAAC,IAAAlM,GAAE,yBAAuBuI,IAAEvI,GAAE,wBAAsBkM;AAAA,EAAC;AAAG;AAAC,SAAS,EAAElM,IAAEuI,IAAE;AAAC,IAAEvI,EAAC,GAAE,EAAEA,IAAEuI,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,aAASvI,GAAE,0BAAwB,EAAEA,GAAE,cAAc,GAAEA,GAAE,sBAAsBuI,EAAC,GAAEvI,GAAE,yBAAuB,QAAOA,GAAE,wBAAsB;AAAO;AAAC,SAAS,EAAEA,IAAE;AAAO,aAAGA,GAAE,2BAAyBA,GAAE,uBAAuB,MAAM,GAAEA,GAAE,yBAAuB,QAAOA,GAAE,wBAAsB;AAAO;AAAC,MAAM,IAAE,OAAO,YAAU,SAASA,IAAE;AAAC,SAAM,YAAU,OAAOA,MAAG,SAASA,EAAC;AAAC,GAAE,IAAE,KAAK,SAAO,SAASA,IAAE;AAAC,SAAOA,KAAE,IAAE,KAAK,KAAKA,EAAC,IAAE,KAAK,MAAMA,EAAC;AAAC;AAAE,SAAS,EAAEA,IAAEuI,IAAE;AAAC,MAAG,WAASvI,OAAI,YAAU,QAAOkM,KAAElM,OAAI,cAAY,OAAOkM,IAAG,OAAM,IAAI,UAAU,GAAG3D,EAAC,oBAAoB;AAAE,MAAI2D;AAAC;AAAC,SAAS,EAAElM,IAAEuI,IAAE;AAAC,MAAG,cAAY,OAAOvI,GAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,qBAAqB;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,MAAG,CAAC,yBAASvI,IAAE;AAAC,WAAM,YAAU,OAAOA,MAAG,SAAOA,MAAG,cAAY,OAAOA;AAAA,EAAC,EAAEA,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,oBAAoB;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE2D,IAAE;AAAC,MAAG,WAASlM,GAAE,OAAM,IAAI,UAAU,aAAauI,EAAC,oBAAoB2D,EAAC,IAAI;AAAC;AAAC,SAAS,EAAElM,IAAEuI,IAAE2D,IAAE;AAAC,MAAG,WAASlM,GAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,oBAAoB2D,EAAC,IAAI;AAAC;AAAC,SAAS,EAAElM,IAAE;AAAC,SAAO,OAAOA,EAAC;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,SAAO,MAAIA,KAAE,IAAEA;AAAC;AAAC,SAAS,EAAEA,IAAEuI,IAAE;AAAC,QAAM2D,KAAE,OAAO;AAAiB,MAAI0C,KAAE,OAAO5O,EAAC;AAAE,MAAG4O,KAAE,EAAEA,EAAC,GAAE,CAAC,EAAEA,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGrG,EAAC,yBAAyB;AAAE,MAAGqG,KAAE,SAAS5O,IAAE;AAAC,WAAO,EAAE,EAAEA,EAAC,CAAC;AAAA,EAAC,EAAE4O,EAAC,GAAEA,KAAE,KAAGA,KAAE1C,GAAE,OAAM,IAAI,UAAU,GAAG3D,EAAC,0CAA0C2D,EAAC,aAAa;AAAE,SAAO,EAAE0C,EAAC,KAAG,MAAIA,KAAEA,KAAE;AAAC;AAAC,SAAS,EAAE5O,IAAE;AAAC,MAAG,CAAC,EAAEA,EAAC,EAAE,QAAQ;AAAC,MAAG,cAAY,OAAOA,GAAE,UAAU,QAAQ;AAAC,MAAG;AAAC,WAAM,aAAW,OAAOA,GAAE;AAAA,EAAM,SAAOA,IAAE;AAAC,WAAQ;AAAA,EAAA;AAAC;AAAC,SAAS,EAAEA,IAAE;AAAC,MAAG,CAAC,EAAEA,EAAC,EAAE,QAAM;AAAG,MAAG,cAAY,OAAOA,GAAE,UAAU,QAAQ;AAAC,MAAG;AAAC,WAAM,aAAW,OAAOA,GAAE;AAAA,EAAM,SAAOA,IAAE;AAAC,WAAQ;AAAA,EAAA;AAAC;AAAC,SAAS,EAAEA,IAAEuI,IAAE;AAAC,MAAG,CAAC,GAAGvI,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,2BAA2B;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE;AAAC,EAAAvI,GAAE,QAAQ,cAAc,KAAKuI,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAEuI,IAAE2D,IAAE;AAAC,QAAM0C,KAAE5O,GAAE,QAAQ,cAAc,MAAK;AAAG,EAAAkM,KAAE0C,GAAE,YAAW,IAAGA,GAAE,YAAYrG,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAE;AAAC,SAAOA,GAAE,QAAQ,cAAc;AAAM;AAAC,SAAS,EAAEA,IAAE;AAAC,QAAMuI,KAAEvI,GAAE;AAAQ,SAAO,WAASuI,MAAG,CAAC,CAAC,EAAEA,EAAC;AAAC;AAAC,MAAM,4BAA2B;AAAA,EAAC,YAAYvI,IAAE;AAAC,QAAG,EAAEA,IAAE,GAAE,6BAA6B,GAAE,EAAEA,IAAE,iBAAiB,GAAE,GAAGA,EAAC,EAAE,OAAM,IAAI,UAAU,6EAA6E;AAAE,MAAE,MAAKA,EAAC,GAAE,KAAK,gBAAc,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,EAAE,IAAI,IAAE,KAAK,iBAAe,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,OAAOA,IAAE;AAAC,WAAO,EAAE,IAAI,IAAE,WAAS,KAAK,uBAAqB,EAAE,EAAE,QAAQ,CAAC,IAAE,EAAE,MAAKA,EAAC,IAAE,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,QAAO,EAAE,GAAG,MAAM,CAAC;AAAE,QAAG,WAAS,KAAK,qBAAqB,QAAO,EAAE,EAAE,WAAW,CAAC;AAAE,QAAIA,IAAEuI;AAAE,UAAM2D,KAAE,EAAG,CAACA,IAAE0C,OAAI;AAAC,MAAA5O,KAAEkM,IAAE3D,KAAEqG;AAAA,IAAC,CAAG;AAAC,WAAO,SAAS5O,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE;AAAqB,MAAAkM,GAAE,aAAW,MAAG,aAAWA,GAAE,SAAO3D,GAAE,YAAa,IAAC,cAAY2D,GAAE,SAAO3D,GAAE,YAAY2D,GAAE,YAAY,IAAEA,GAAE,0BAA0B,CAAC,EAAE3D,EAAC;AAAA,IAAC,EAAE,MAAK,EAAC,aAAY,CAAAA,OAAGvI,GAAE,EAAC,OAAMuI,IAAE,MAAK,MAAE,CAAC,GAAE,aAAY,MAAIvI,GAAE,EAAC,OAAM,QAAO,MAAK,KAAE,CAAC,GAAE,aAAY,CAAAA,OAAGuI,GAAEvI,EAAC,EAAC,CAAC,GAAEkM;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,eAAS,KAAK,wBAAsB,SAASlM,IAAE;AAAC,QAAEA,EAAC;AAAE,YAAMuI,KAAE,IAAI,UAAU,qBAAqB;AAAE,QAAEvI,IAAEuI,EAAC;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAC;AAAC,SAAS,EAAEvI,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,eAAe,KAAGA,cAAa;AAA4B;AAAC,SAAS,EAAEA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAAc,EAAAA,GAAE,gBAAc,IAAI,KAAEkM,GAAE,QAAS,CAAAlM,OAAG;AAAC,IAAAA,GAAE,YAAYuI,EAAC;AAAA,EAAC,CAAC;AAAE;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAO,IAAI,UAAU,yCAAyCA,EAAC,oDAAoD;AAAC;AAAC,OAAO,iBAAiB,4BAA4B,WAAU,EAAC,QAAO,EAAC,YAAW,KAAE,GAAE,MAAK,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,4BAA4B,UAAU,QAAO,QAAQ,GAAE,EAAE,4BAA4B,UAAU,MAAK,MAAM,GAAE,EAAE,4BAA4B,UAAU,aAAY,aAAa,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,4BAA4B,WAAU,EAAE,aAAY,EAAC,OAAM,+BAA8B,cAAa,KAAE,CAAC;AAAE,MAAM,GAAE;AAAA,EAAC,YAAYA,IAAEuI,IAAE;AAAC,SAAK,kBAAgB,QAAO,KAAK,cAAY,OAAG,KAAK,UAAQvI,IAAE,KAAK,iBAAeuI;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,UAAMvI,KAAE,MAAI,KAAK,WAAU;AAAG,WAAO,KAAK,kBAAgB,KAAK,kBAAgB,EAAE,KAAK,iBAAgBA,IAAEA,EAAC,IAAEA,GAAC,GAAG,KAAK;AAAA,EAAe;AAAA,EAAC,OAAOA,IAAE;AAAC,UAAMuI,KAAE,MAAI,KAAK,aAAavI,EAAC;AAAE,WAAO,KAAK,kBAAgB,EAAE,KAAK,iBAAgBuI,IAAEA,EAAC,IAAEA,GAAG;AAAA,EAAA;AAAA,EAAC,aAAY;AAAC,QAAG,KAAK,YAAY,QAAO,QAAQ,QAAQ,EAAC,OAAM,QAAO,MAAK,KAAE,CAAC;AAAE,UAAMvI,KAAE,KAAK;AAAQ,WAAO,WAASA,KAAE,EAAE,EAAE,SAAS,CAAC,IAAE,EAAEA,GAAE,KAAM,GAAE,CAAAA,OAAG;AAAC,UAAIuI;AAAE,aAAO,KAAK,kBAAgB,QAAOvI,GAAE,SAAO,KAAK,cAAY,MAAG,UAAQuI,KAAE,KAAK,YAAU,WAASA,MAAGA,GAAE,eAAc,KAAK,UAAQ,SAAQvI;AAAA,IAAC,GAAI,CAAAA,OAAG;AAAC,UAAIuI;AAAE,YAAM,KAAK,kBAAgB,QAAO,KAAK,cAAY,MAAG,UAAQA,KAAE,KAAK,YAAU,WAASA,MAAGA,GAAE,YAAa,GAAC,KAAK,UAAQ,QAAOvI;AAAA,IAAC,CAAG;AAAA,EAAA;AAAA,EAAC,aAAaA,IAAE;AAAC,QAAG,KAAK,YAAY,QAAO,QAAQ,QAAQ,EAAC,OAAMA,IAAE,MAAK,KAAE,CAAC;AAAE,SAAK,cAAY;AAAG,UAAMuI,KAAE,KAAK;AAAQ,QAAG,WAASA,GAAE,QAAO,EAAE,EAAE,kBAAkB,CAAC;AAAE,QAAG,KAAK,UAAQ,QAAO,CAAC,KAAK,gBAAe;AAAC,YAAM2D,KAAE3D,GAAE,OAAOvI,EAAC;AAAE,aAAOuI,GAAE,YAAW,GAAG,EAAE2D,IAAG,OAAK,EAAC,OAAMlM,IAAE,MAAK,KAAE,EAAE;AAAA,IAAE;AAAC,WAAOuI,GAAE,YAAW,GAAG,EAAE,EAAC,OAAMvI,IAAE,MAAK,KAAE,CAAC;AAAA,EAAC;AAAC;AAAC,MAAM,KAAG,EAAC,OAAM;AAAC,SAAO,GAAG,IAAI,IAAE,KAAK,mBAAmB,KAAM,IAAC,EAAE,GAAG,MAAM,CAAC;AAAC,GAAE,OAAOA,IAAE;AAAC,SAAO,GAAG,IAAI,IAAE,KAAK,mBAAmB,OAAOA,EAAC,IAAE,EAAE,GAAG,QAAQ,CAAC;AAAC,EAAC;AAAE,SAAS,GAAGA,IAAE;AAAC,MAAG,CAAC,EAAEA,EAAC,EAAE,QAAM;AAAG,MAAG,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,oBAAoB,EAAE,QAAQ;AAAC,MAAG;AAAC,WAAOA,GAAE,8BAA8B;AAAA,EAAE,SAAOA,IAAE;AAAC,WAAM;AAAA,EAAE;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,IAAI,UAAU,+BAA+BA,EAAC,mDAAmD;AAAC;AAAC,YAAU,OAAO,EAAE,iBAAe,OAAO,eAAe,IAAG,EAAE,eAAc,EAAC,QAAO;AAAC,SAAO;AAAI,GAAE,UAAS,MAAG,cAAa,KAAE,CAAC;AAAE,MAAM,KAAG,OAAO,SAAO,SAASA,IAAE;AAAC,SAAOA,MAAGA;AAAC;AAAE,SAAS,GAAGA,IAAEuI,IAAE2D,IAAE0C,IAAE3K,IAAE;AAAC,MAAI,WAAWjE,EAAC,EAAE,IAAI,IAAI,WAAWkM,IAAE0C,IAAE3K,EAAC,GAAEsE,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,QAAMuI,KAAE,SAASvI,IAAEuI,IAAE2D,IAAE;AAAC,QAAGlM,GAAE,MAAM,QAAOA,GAAE,MAAMuI,IAAE2D,EAAC;AAAE,UAAM0C,KAAE1C,KAAE3D,IAAEtE,KAAE,IAAI,YAAY2K,EAAC;AAAE,WAAO,GAAG3K,IAAE,GAAEjE,IAAEuI,IAAEqG,EAAC,GAAE3K;AAAA,EAAC,EAAEjE,GAAE,QAAOA,GAAE,YAAWA,GAAE,aAAWA,GAAE,UAAU;AAAE,SAAO,IAAI,WAAWuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,QAAMuI,KAAEvI,GAAE,OAAO,MAAK;AAAG,SAAOA,GAAE,mBAAiBuI,GAAE,MAAKvI,GAAE,kBAAgB,MAAIA,GAAE,kBAAgB,IAAGuI,GAAE;AAAK;AAAC,SAAS,GAAGvI,IAAEuI,IAAE2D,IAAE;AAAC,MAAG,YAAU,QAAO0C,KAAE1C,OAAI,GAAG0C,EAAC,KAAGA,KAAE,KAAG1C,OAAI,IAAE,EAAE,OAAM,IAAI,WAAW,sDAAsD;AAAE,MAAI0C;AAAE,EAAA5O,GAAE,OAAO,KAAK,EAAC,OAAMuI,IAAE,MAAK2D,GAAC,CAAC,GAAElM,GAAE,mBAAiBkM;AAAC;AAAC,SAAS,GAAGlM,IAAE;AAAC,EAAAA,GAAE,SAAO,IAAI,KAAEA,GAAE,kBAAgB;AAAC;AAAC,MAAM,0BAAyB;AAAA,EAAC,cAAa;AAAC,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,MAAM;AAAE,WAAO,KAAK;AAAA,EAAK;AAAA,EAAC,QAAQA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,SAAS;AAAE,QAAG,EAAEA,IAAE,GAAE,SAAS,GAAEA,KAAE,EAAEA,IAAE,iBAAiB,GAAE,WAAS,KAAK,wCAAwC,OAAM,IAAI,UAAU,wCAAwC;AAAE,SAAK,MAAM,QAAO,SAASA,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE,kBAAkB,KAAI;AAAG,UAAG,aAAWA,GAAE,8BAA8B,QAAO;AAAC,YAAG,MAAIuI,GAAE,OAAM,IAAI,UAAU,kEAAkE;AAAA,MAAC,OAAK;AAAC,YAAG,MAAIA,GAAE,OAAM,IAAI,UAAU,iFAAiF;AAAE,YAAG2D,GAAE,cAAY3D,KAAE2D,GAAE,WAAW,OAAM,IAAI,WAAW,2BAA2B;AAAA,MAAC;AAAC,MAAAA,GAAE,SAAOA,GAAE,QAAO,GAAGlM,IAAEuI,EAAC;AAAA,IAAC,EAAE,KAAK,yCAAwCvI,EAAC;AAAA,EAAC;AAAA,EAAC,mBAAmBA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,oBAAoB;AAAE,QAAG,EAAEA,IAAE,GAAE,oBAAoB,GAAE,CAAC,YAAY,OAAOA,EAAC,EAAE,OAAM,IAAI,UAAU,8CAA8C;AAAE,QAAG,WAAS,KAAK,wCAAwC,OAAM,IAAI,UAAU,wCAAwC;AAAE,IAAAA,GAAE,QAAO,SAASA,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE,kBAAkB,KAAI;AAAG,UAAG,aAAWA,GAAE,8BAA8B,QAAO;AAAC,YAAG,MAAIuI,GAAE,WAAW,OAAM,IAAI,UAAU,kFAAkF;AAAA,MAAC,WAAS,MAAIA,GAAE,WAAW,OAAM,IAAI,UAAU,iGAAiG;AAAE,UAAG2D,GAAE,aAAWA,GAAE,gBAAc3D,GAAE,WAAW,OAAM,IAAI,WAAW,yDAAyD;AAAE,UAAG2D,GAAE,qBAAmB3D,GAAE,OAAO,WAAW,OAAM,IAAI,WAAW,4DAA4D;AAAE,UAAG2D,GAAE,cAAY3D,GAAE,aAAW2D,GAAE,WAAW,OAAM,IAAI,WAAW,yDAAyD;AAAE,YAAM0C,KAAErG,GAAE;AAAW,MAAA2D,GAAE,SAAO3D,GAAE,QAAO,GAAGvI,IAAE4O,EAAC;AAAA,IAAC,EAAE,KAAK,yCAAwC5O,EAAC;AAAA,EAAC;AAAC;AAAC,OAAO,iBAAiB,0BAA0B,WAAU,EAAC,SAAQ,EAAC,YAAW,KAAE,GAAE,oBAAmB,EAAC,YAAW,KAAE,GAAE,MAAK,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,0BAA0B,UAAU,SAAQ,SAAS,GAAE,EAAE,0BAA0B,UAAU,oBAAmB,oBAAoB,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,0BAA0B,WAAU,EAAE,aAAY,EAAC,OAAM,6BAA4B,cAAa,KAAE,CAAC;AAAE,MAAM,6BAA4B;AAAA,EAAC,cAAa;AAAC,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,WAAO,SAASA,IAAE;AAAC,UAAG,SAAOA,GAAE,gBAAcA,GAAE,kBAAkB,SAAO,GAAE;AAAC,cAAMuI,KAAEvI,GAAE,kBAAkB,KAAI,GAAGkM,KAAE,IAAI,WAAW3D,GAAE,QAAOA,GAAE,aAAWA,GAAE,aAAYA,GAAE,aAAWA,GAAE,WAAW,GAAEqG,KAAE,OAAO,OAAO,0BAA0B,SAAS;AAAE,SAAC,SAAS5O,IAAEuI,IAAE2D,IAAE;AAAC,UAAAlM,GAAE,0CAAwCuI,IAAEvI,GAAE,QAAMkM;AAAA,QAAC,EAAE0C,IAAE5O,IAAEkM,EAAC,GAAElM,GAAE,eAAa4O;AAAA,MAAC;AAAC,aAAO5O,GAAE;AAAA,IAAY,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,WAAO,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,QAAO;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,QAAG,KAAK,gBAAgB,OAAM,IAAI,UAAU,4DAA4D;AAAE,UAAMA,KAAE,KAAK,8BAA8B;AAAO,QAAG,eAAaA,GAAE,OAAM,IAAI,UAAU,kBAAkBA,EAAC,2DAA2D;AAAE,KAAC,SAASA,IAAE;AAAC,YAAMuI,KAAEvI,GAAE;AAA8B,UAAGA,GAAE,mBAAiB,eAAauI,GAAE,OAAO;AAAO,UAAGvI,GAAE,kBAAgB,EAAE,QAAO,MAAKA,GAAE,kBAAgB;AAAI,UAAGA,GAAE,kBAAkB,SAAO,GAAE;AAAC,YAAGA,GAAE,kBAAkB,KAAM,EAAC,cAAY,GAAE;AAAC,gBAAMuI,KAAE,IAAI,UAAU,yDAAyD;AAAE,gBAAM,GAAGvI,IAAEuI,EAAC,GAAEA;AAAA,QAAC;AAAA,MAAC;AAAC,SAAGvI,EAAC,GAAE,GAAGuI,EAAC;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,QAAQvI,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,SAAS;AAAE,QAAG,EAAEA,IAAE,GAAE,SAAS,GAAE,CAAC,YAAY,OAAOA,EAAC,EAAE,OAAM,IAAI,UAAU,oCAAoC;AAAE,QAAG,MAAIA,GAAE,WAAW,OAAM,IAAI,UAAU,qCAAqC;AAAE,QAAG,MAAIA,GAAE,OAAO,WAAW,OAAM,IAAI,UAAU,8CAA8C;AAAE,QAAG,KAAK,gBAAgB,OAAM,IAAI,UAAU,8BAA8B;AAAE,UAAMuI,KAAE,KAAK,8BAA8B;AAAO,QAAG,eAAaA,GAAE,OAAM,IAAI,UAAU,kBAAkBA,EAAC,gEAAgE;AAAE,KAAC,SAASvI,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE;AAA8B,UAAGA,GAAE,mBAAiB,eAAakM,GAAE,OAAO;AAAO,YAAM0C,KAAErG,GAAE,QAAOtE,KAAEsE,GAAE,YAAW7F,KAAE6F,GAAE,YAAWlJ,KAAEuP;AAAE,UAAG5O,GAAE,kBAAkB,SAAO,GAAE;AAAC,cAAMuI,KAAEvI,GAAE,kBAAkB,KAAM;AAAC,QAAAuI,GAAE,QAAS,GAAGvI,EAAC,GAAEuI,GAAE,SAAOA,GAAE,QAAO,WAASA,GAAE,cAAY,GAAGvI,IAAEuI,EAAC;AAAA,MAAC;AAAC,UAAG,EAAE2D,EAAC,EAAE,KAAG,SAASlM,IAAE;AAAC,cAAMuI,KAAEvI,GAAE,8BAA8B;AAAQ,eAAKuI,GAAE,cAAc,SAAO,KAAG;AAAC,cAAG,MAAIvI,GAAE,gBAAgB;AAAO,aAAGA,IAAEuI,GAAE,cAAc,MAAO,CAAA;AAAA,QAAC;AAAA,MAAC,EAAEvI,EAAC,GAAE,MAAI,EAAEkM,EAAC,EAAE,IAAGlM,IAAEX,IAAE4E,IAAEvB,EAAC;AAAA,WAAM;AAAC,QAAA1C,GAAE,kBAAkB,SAAO,KAAG,GAAGA,EAAC;AAAE,UAAEkM,IAAE,IAAI,WAAW7M,IAAE4E,IAAEvB,EAAC,GAAE,KAAE;AAAA,MAAC;AAAA,UAAM,IAAGwJ,EAAC,KAAG,GAAGlM,IAAEX,IAAE4E,IAAEvB,EAAC,GAAE,GAAG1C,EAAC,KAAG,GAAGA,IAAEX,IAAE4E,IAAEvB,EAAC;AAAE,SAAG1C,EAAC;AAAA,IAAC,EAAE,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAMA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,OAAG,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,EAAEA,IAAE;AAAC,OAAG,IAAI,GAAE,GAAG,IAAI;AAAE,UAAMuI,KAAE,KAAK,iBAAiBvI,EAAC;AAAE,WAAO,GAAG,IAAI,GAAEuI;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,EAAEvI,IAAE;AAAC,UAAMuI,KAAE,KAAK;AAA8B,QAAG,KAAK,kBAAgB,EAAE,QAAO,KAAK,GAAG,MAAKvI,EAAC;AAAE,UAAMkM,KAAE,KAAK;AAAuB,QAAG,WAASA,IAAE;AAAC,UAAI3D;AAAE,UAAG;AAAC,QAAAA,KAAE,IAAI,YAAY2D,EAAC;AAAA,MAAC,SAAO3D,IAAE;AAAC,eAAO,KAAKvI,GAAE,YAAYuI,EAAC;AAAA,MAAC;AAAC,YAAMqG,KAAE,EAAC,QAAOrG,IAAE,kBAAiB2D,IAAE,YAAW,GAAE,YAAWA,IAAE,aAAY,GAAE,aAAY,GAAE,iBAAgB,YAAW,YAAW,UAAS;AAAE,WAAK,kBAAkB,KAAK0C,EAAC;AAAA,IAAC;AAAC,MAAErG,IAAEvI,EAAC,GAAE,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,IAAG;AAAC,QAAG,KAAK,kBAAkB,SAAO,GAAE;AAAC,YAAMA,KAAE,KAAK,kBAAkB,KAAI;AAAG,MAAAA,GAAE,aAAW,QAAO,KAAK,oBAAkB,IAAI,KAAE,KAAK,kBAAkB,KAAKA,EAAC;AAAA,IAAC;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,+BAA+B,KAAGA,cAAa;AAA6B;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,yCAAyC,KAAGA,cAAa;AAA0B;AAAC,SAAS,GAAGA,IAAE;AAAC,QAAMuI,KAAE,SAASvI,IAAE;AAAC,UAAMuI,KAAEvI,GAAE;AAA8B,QAAG,eAAauI,GAAE,OAAO,QAAM;AAAG,QAAGvI,GAAE,gBAAgB,QAAQ;AAAC,QAAG,CAACA,GAAE,SAAS,QAAM;AAAG,QAAG,EAAEuI,EAAC,KAAG,EAAEA,EAAC,IAAE,EAAE,QAAM;AAAG,QAAG,GAAGA,EAAC,KAAG,GAAGA,EAAC,IAAE,EAAE,QAAQ;AAAC,QAAG,GAAGvI,EAAC,IAAE,EAAE,QAAQ;AAAC,WAAM;AAAA,EAAE,EAAEA,EAAC;AAAE,MAAG,CAACuI,GAAE;AAAO,MAAGvI,GAAE,SAAS,QAAO,MAAKA,GAAE,aAAW;AAAI,EAAAA,GAAE,WAAS;AAAG,IAAEA,GAAE,eAAgB,GAAE,OAAKA,GAAE,WAAS,OAAGA,GAAE,eAAaA,GAAE,aAAW,OAAG,GAAGA,EAAC,IAAG,OAAQ,CAAAuI,QAAI,GAAGvI,IAAEuI,EAAC,GAAE,KAAK;AAAE;AAAC,SAAS,GAAGvI,IAAE;AAAC,KAAGA,EAAC,GAAEA,GAAE,oBAAkB,IAAI;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,MAAI2D,KAAE;AAAG,eAAWlM,GAAE,WAASkM,KAAE;AAAI,QAAM0C,KAAE,GAAGrG,EAAC;AAAE,gBAAYA,GAAE,aAAW,EAAEvI,IAAE4O,IAAE1C,EAAC,IAAE,SAASlM,IAAEuI,IAAE2D,IAAE;AAAC,UAAM0C,KAAE5O,GAAE,QAAQ,kBAAkB,MAAK;AAAG,IAAAkM,KAAE0C,GAAE,YAAYrG,EAAC,IAAEqG,GAAE,YAAYrG,EAAC;AAAA,EAAC,EAAEvI,IAAE4O,IAAE1C,EAAC;AAAC;AAAC,SAAS,GAAGlM,IAAE;AAAC,QAAMuI,KAAEvI,GAAE,aAAYkM,KAAElM,GAAE;AAAY,SAAO,IAAIA,GAAE,gBAAgBA,GAAE,QAAOA,GAAE,YAAWuI,KAAE2D,EAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE2D,IAAE0C,IAAE;AAAC,EAAA5O,GAAE,OAAO,KAAK,EAAC,QAAOuI,IAAE,YAAW2D,IAAE,YAAW0C,GAAC,CAAC,GAAE5O,GAAE,mBAAiB4O;AAAC;AAAC,SAAS,GAAG5O,IAAEuI,IAAE2D,IAAE0C,IAAE;AAAC,MAAI3K;AAAE,MAAG;AAAC,IAAAA,KAAEsE,GAAE,MAAM2D,IAAEA,KAAE0C,EAAC;AAAA,EAAC,SAAOrG,IAAE;AAAC,UAAM,GAAGvI,IAAEuI,EAAC,GAAEA;AAAA,EAAC;AAAC,KAAGvI,IAAEiE,IAAE,GAAE2K,EAAC;AAAC;AAAC,SAAS,GAAG5O,IAAEuI,IAAE;AAAC,EAAAA,GAAE,cAAY,KAAG,GAAGvI,IAAEuI,GAAE,QAAOA,GAAE,YAAWA,GAAE,WAAW,GAAE,GAAGvI,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAE3D,GAAE,aAAYqG,KAAErG,GAAE,cAAYA,GAAE,cAAY2D,IAAEjI,KAAE,KAAK,IAAIjE,GAAE,iBAAgBuI,GAAE,aAAWA,GAAE,WAAW,GAAE7F,KAAE6F,GAAE,cAAYtE,IAAE5E,KAAEqD,KAAEA,KAAEwJ;AAAE,MAAItG,KAAE3B,IAAE7E,KAAE;AAAG,EAAAC,KAAEuP,OAAIhJ,KAAEvG,KAAEkJ,GAAE,aAAYnJ,KAAE;AAAI,QAAMyP,KAAE7O,GAAE;AAAO,SAAK4F,KAAE,KAAG;AAAC,UAAMsG,KAAE2C,GAAE,KAAI,GAAGD,KAAE,KAAK,IAAIhJ,IAAEsG,GAAE,UAAU,GAAEjI,KAAEsE,GAAE,aAAWA,GAAE;AAAY,OAAGA,GAAE,QAAOtE,IAAEiI,GAAE,QAAOA,GAAE,YAAW0C,EAAC,GAAE1C,GAAE,eAAa0C,KAAEC,GAAE,MAAO,KAAE3C,GAAE,cAAY0C,IAAE1C,GAAE,cAAY0C,KAAG5O,GAAE,mBAAiB4O,IAAE,GAAG5O,IAAE4O,IAAErG,EAAC,GAAE3C,MAAGgJ;AAAA,EAAC;AAAC,SAAOxP;AAAC;AAAC,SAAS,GAAGY,IAAEuI,IAAE2D,IAAE;AAAC,EAAAA,GAAE,eAAa3D;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,QAAIA,GAAE,mBAAiBA,GAAE,mBAAiB,GAAGA,EAAC,GAAE,GAAGA,GAAE,6BAA6B,KAAG,GAAGA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,WAAOA,GAAE,iBAAeA,GAAE,aAAa,0CAAwC,QAAOA,GAAE,aAAa,QAAM,MAAKA,GAAE,eAAa;AAAK;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAKA,GAAE,kBAAkB,SAAO,KAAG;AAAC,QAAG,MAAIA,GAAE,gBAAgB;AAAO,UAAMuI,KAAEvI,GAAE,kBAAkB,KAAI;AAAG,OAAGA,IAAEuI,EAAC,MAAI,GAAGvI,EAAC,GAAE,GAAGA,GAAE,+BAA8BuI,EAAC;AAAA,EAAE;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE,kBAAkB,KAAM;AAAC,KAAGA,EAAC;AAAE,eAAWA,GAAE,8BAA8B,SAAO,SAASA,IAAEuI,IAAE;AAAC,eAASA,GAAE,cAAY,GAAGvI,EAAC;AAAE,UAAMkM,KAAElM,GAAE;AAA8B,QAAG,GAAGkM,EAAC,EAAE,QAAK,GAAGA,EAAC,IAAE,IAAG,IAAGA,IAAE,GAAGlM,EAAC,CAAC;AAAA,EAAC,EAAEA,IAAEkM,EAAC,IAAE,SAASlM,IAAEuI,IAAE2D,IAAE;AAAC,QAAG,GAAG,GAAE3D,IAAE2D,EAAC,GAAE,WAASA,GAAE,WAAW,QAAO,GAAGlM,IAAEkM,EAAC,GAAE,KAAK,GAAGlM,EAAC;AAAE,QAAGkM,GAAE,cAAYA,GAAE,YAAY;AAAO,OAAGlM,EAAC;AAAE,UAAM4O,KAAE1C,GAAE,cAAYA,GAAE;AAAY,QAAG0C,KAAE,GAAE;AAAC,YAAMrG,KAAE2D,GAAE,aAAWA,GAAE;AAAY,SAAGlM,IAAEkM,GAAE,QAAO3D,KAAEqG,IAAEA,EAAC;AAAA,IAAC;AAAC,IAAA1C,GAAE,eAAa0C,IAAE,GAAG5O,GAAE,+BAA8BkM,EAAC,GAAE,GAAGlM,EAAC;AAAA,EAAC,EAAEA,IAAEuI,IAAE2D,EAAC,GAAE,GAAGlM,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAOA,GAAE,kBAAkB,MAAK;AAAE;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,iBAAe,QAAOA,GAAE,mBAAiB;AAAM;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAA8B,iBAAakM,GAAE,WAAS,GAAGlM,EAAC,GAAE,GAAGA,EAAC,GAAE,GAAGA,EAAC,GAAE,GAAGkM,IAAE3D,EAAC;AAAE;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE,OAAO,MAAO;AAAC,EAAAA,GAAE,mBAAiBkM,GAAE,YAAW,GAAGlM,EAAC;AAAE,QAAM4O,KAAE,IAAI,WAAW1C,GAAE,QAAOA,GAAE,YAAWA,GAAE,UAAU;AAAE,EAAA3D,GAAE,YAAYqG,EAAC;AAAC;AAAC,SAAS,GAAG5O,IAAE;AAAC,QAAMuI,KAAEvI,GAAE,8BAA8B;AAAO,SAAM,cAAYuI,KAAE,OAAK,aAAWA,KAAE,IAAEvI,GAAE,eAAaA,GAAE;AAAe;AAAC,SAAS,GAAGA,IAAEuI,IAAE2D,IAAE;AAAC,QAAM0C,KAAE,OAAO,OAAO,6BAA6B,SAAS;AAAE,MAAI3K,IAAEvB,IAAErD;AAAE,EAAA4E,KAAE,WAASsE,GAAE,QAAM,MAAIA,GAAE,MAAMqG,EAAC,IAAE,MAAI;AAAA,EAAE,GAAClM,KAAE,WAAS6F,GAAE,OAAK,MAAIA,GAAE,KAAKqG,EAAC,IAAE,MAAI,EAAE,MAAM,GAAEvP,KAAE,WAASkJ,GAAE,SAAO,CAAAvI,OAAGuI,GAAE,OAAOvI,EAAC,IAAE,MAAI,EAAE,MAAM;AAAE,QAAM4F,KAAE2C,GAAE;AAAsB,MAAG,MAAI3C,GAAE,OAAM,IAAI,UAAU,8CAA8C;AAAE,GAAC,SAAS5F,IAAEuI,IAAE2D,IAAE0C,IAAE3K,IAAEvB,IAAErD,IAAE;AAAC,IAAAkJ,GAAE,gCAA8BvI,IAAEuI,GAAE,aAAW,OAAGA,GAAE,WAAS,OAAGA,GAAE,eAAa,MAAKA,GAAE,SAAOA,GAAE,kBAAgB,QAAO,GAAGA,EAAC,GAAEA,GAAE,kBAAgB,OAAGA,GAAE,WAAS,OAAGA,GAAE,eAAa7F,IAAE6F,GAAE,iBAAeqG,IAAErG,GAAE,mBAAiBtE,IAAEsE,GAAE,yBAAuBlJ,IAAEkJ,GAAE,oBAAkB,IAAI,KAAEvI,GAAE,4BAA0BuI,IAAE,EAAE,EAAE2D,GAAG,CAAA,GAAG,OAAK3D,GAAE,WAAS,MAAG,GAAGA,EAAC,GAAE,OAAQ,CAAAvI,QAAI,GAAGuI,IAAEvI,EAAC,GAAE,KAAK;AAAA,EAAE,EAAEA,IAAE4O,IAAE3K,IAAEvB,IAAErD,IAAE6M,IAAEtG,EAAC;AAAC;AAAC,SAAS,GAAG5F,IAAE;AAAC,SAAO,IAAI,UAAU,uCAAuCA,EAAC,kDAAkD;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,IAAI,UAAU,0CAA0CA,EAAC,qDAAqD;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,EAAAvI,GAAE,QAAQ,kBAAkB,KAAKuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAOA,GAAE,QAAQ,kBAAkB;AAAM;AAAC,SAAS,GAAGA,IAAE;AAAC,QAAMuI,KAAEvI,GAAE;AAAQ,SAAO,WAASuI,MAAG,CAAC,CAAC,GAAGA,EAAC;AAAC;AAAC,OAAO,iBAAiB,6BAA6B,WAAU,EAAC,OAAM,EAAC,YAAW,KAAE,GAAE,SAAQ,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,6BAA6B,UAAU,OAAM,OAAO,GAAE,EAAE,6BAA6B,UAAU,SAAQ,SAAS,GAAE,EAAE,6BAA6B,UAAU,OAAM,OAAO,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,6BAA6B,WAAU,EAAE,aAAY,EAAC,OAAM,gCAA+B,cAAa,KAAE,CAAC;AAAE,MAAM,yBAAwB;AAAA,EAAC,YAAYvI,IAAE;AAAC,QAAG,EAAEA,IAAE,GAAE,0BAA0B,GAAE,EAAEA,IAAE,iBAAiB,GAAE,GAAGA,EAAC,EAAE,OAAM,IAAI,UAAU,6EAA6E;AAAE,QAAG,CAAC,GAAGA,GAAE,yBAAyB,EAAE,OAAM,IAAI,UAAU,6FAA6F;AAAE,MAAE,MAAKA,EAAC,GAAE,KAAK,oBAAkB,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,GAAG,IAAI,IAAE,KAAK,iBAAe,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,OAAOA,IAAE;AAAC,WAAO,GAAG,IAAI,IAAE,WAAS,KAAK,uBAAqB,EAAE,EAAE,QAAQ,CAAC,IAAE,EAAE,MAAKA,EAAC,IAAE,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,KAAKA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,QAAO,EAAE,GAAG,MAAM,CAAC;AAAE,QAAG,CAAC,YAAY,OAAOA,EAAC,EAAE,QAAO,EAAE,IAAI,UAAU,mCAAmC,CAAC;AAAE,QAAG,MAAIA,GAAE,WAAW,QAAO,EAAE,IAAI,UAAU,oCAAoC,CAAC;AAAE,QAAG,MAAIA,GAAE,OAAO,WAAW,QAAO,EAAE,IAAI,UAAU,6CAA6C,CAAC;AAAE,QAAGA,GAAE,QAAO,WAAS,KAAK,qBAAqB,QAAO,EAAE,EAAE,WAAW,CAAC;AAAE,QAAIuI,IAAE2D;AAAE,UAAM0C,KAAE,EAAG,CAAC5O,IAAE4O,OAAI;AAAC,MAAArG,KAAEvI,IAAEkM,KAAE0C;AAAA,IAAC,CAAG;AAAC,WAAO,SAAS5O,IAAEuI,IAAE2D,IAAE;AAAC,YAAM0C,KAAE5O,GAAE;AAAqB,MAAA4O,GAAE,aAAW,MAAG,cAAYA,GAAE,SAAO1C,GAAE,YAAY0C,GAAE,YAAY,IAAE,SAAS5O,IAAEuI,IAAE2D,IAAE;AAAC,cAAM0C,KAAE5O,GAAE;AAA8B,YAAIiE,KAAE;AAAE,QAAAsE,GAAE,gBAAc,aAAWtE,KAAEsE,GAAE,YAAY;AAAmB,cAAM7F,KAAE6F,GAAE,aAAYlJ,KAAEkJ,GAAE,QAAO3C,KAAE,EAAC,QAAOvG,IAAE,kBAAiBA,GAAE,YAAW,YAAWkJ,GAAE,YAAW,YAAWA,GAAE,YAAW,aAAY,GAAE,aAAYtE,IAAE,iBAAgBvB,IAAE,YAAW,OAAM;AAAE,YAAG1C,GAAE,kBAAkB,SAAO,EAAE,QAAOA,GAAE,kBAAkB,KAAK4F,EAAC,GAAE,KAAK,GAAGgJ,IAAE1C,EAAC;AAAE,YAAG,aAAW0C,GAAE,QAAO;AAAC,cAAG5O,GAAE,kBAAgB,GAAE;AAAC,gBAAG,GAAGA,IAAE4F,EAAC,GAAE;AAAC,oBAAM2C,KAAE,GAAG3C,EAAC;AAAE,qBAAO,GAAG5F,EAAC,GAAE,KAAKkM,GAAE,YAAY3D,EAAC;AAAA,YAAC;AAAC,gBAAGvI,GAAE,iBAAgB;AAAC,oBAAMuI,KAAE,IAAI,UAAU,yDAAyD;AAAE,qBAAO,GAAGvI,IAAEuI,EAAC,GAAE,KAAK2D,GAAE,YAAY3D,EAAC;AAAA,YAAC;AAAA,UAAC;AAAC,UAAAvI,GAAE,kBAAkB,KAAK4F,EAAC,GAAE,GAAGgJ,IAAE1C,EAAC,GAAE,GAAGlM,EAAC;AAAA,QAAC,OAAK;AAAC,gBAAMA,KAAE,IAAI0C,GAAEkD,GAAE,QAAOA,GAAE,YAAW,CAAC;AAAE,UAAAsG,GAAE,YAAYlM,EAAC;AAAA,QAAC;AAAA,MAAC,EAAE4O,GAAE,2BAA0BrG,IAAE2D,EAAC;AAAA,IAAC,EAAE,MAAKlM,IAAE,EAAC,aAAY,CAAAA,OAAGuI,GAAE,EAAC,OAAMvI,IAAE,MAAK,MAAE,CAAC,GAAE,aAAY,CAAAA,OAAGuI,GAAE,EAAC,OAAMvI,IAAE,MAAK,KAAE,CAAC,GAAE,aAAY,CAAAA,OAAGkM,GAAElM,EAAC,EAAC,CAAC,GAAE4O;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,eAAS,KAAK,wBAAsB,SAAS5O,IAAE;AAAC,QAAEA,EAAC;AAAE,YAAMuI,KAAE,IAAI,UAAU,qBAAqB;AAAE,SAAGvI,IAAEuI,EAAC;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,mBAAmB,KAAGA,cAAa;AAAyB;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAAkB,EAAAA,GAAE,oBAAkB,IAAI,KAAEkM,GAAE,QAAS,CAAAlM,OAAG;AAAC,IAAAA,GAAE,YAAYuI,EAAC;AAAA,EAAC,CAAG;AAAA;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAO,IAAI,UAAU,sCAAsCA,EAAC,iDAAiD;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAK,EAAC,eAAc2D,GAAC,IAAElM;AAAE,MAAG,WAASkM,GAAE,QAAO3D;AAAE,MAAG,GAAG2D,EAAC,KAAGA,KAAE,EAAE,OAAM,IAAI,WAAW,uBAAuB;AAAE,SAAOA;AAAC;AAAC,SAAS,GAAGlM,IAAE;AAAC,QAAK,EAAC,MAAKuI,GAAC,IAAEvI;AAAE,SAAOuI,OAAI,MAAI;AAAE;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,IAAEvI,IAAEuI,EAAC;AAAE,QAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE,eAAc4O,KAAE,QAAM5O,KAAE,SAAOA,GAAE;AAAK,SAAM,EAAC,eAAc,WAASkM,KAAE,SAAO,EAAEA,EAAC,GAAE,MAAK,WAAS0C,KAAE,SAAO,GAAGA,IAAE,GAAGrG,EAAC,yBAAyB,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,SAAO,EAAEvI,IAAEuI,EAAC,GAAE,CAAAA,OAAG,EAAEvI,GAAEuI,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAAAA,OAAG,EAAElM,IAAEuI,IAAE,CAAC2D,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,MAAI,EAAElM,IAAEuI,IAAE,CAAA,CAAE;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAAAA,OAAG,EAAElM,IAAEuI,IAAE,CAAC2D,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAACA,IAAE0C,OAAI,EAAE5O,IAAEuI,IAAE,CAAC2D,IAAE0C,EAAC,CAAC;AAAC;AAAC,OAAO,iBAAiB,yBAAyB,WAAU,EAAC,QAAO,EAAC,YAAW,KAAE,GAAE,MAAK,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,yBAAyB,UAAU,QAAO,QAAQ,GAAE,EAAE,yBAAyB,UAAU,MAAK,MAAM,GAAE,EAAE,yBAAyB,UAAU,aAAY,aAAa,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,yBAAyB,WAAU,EAAE,aAAY,EAAC,OAAM,4BAA2B,cAAa,KAAE,CAAC;AAAE,MAAM,KAAG,cAAY,OAAO;AAAgB,MAAM,eAAc;AAAA,EAAC,YAAY5O,KAAE,CAAA,GAAGuI,KAAE,CAAA,GAAG;AAAO,eAAGvI,KAAEA,KAAE,OAAK,EAAEA,IAAE,iBAAiB;AAAE,UAAMkM,KAAE,GAAG3D,IAAE,kBAAkB,GAAEqG,KAAE,SAAS5O,IAAEuI,IAAE;AAAC,QAAEvI,IAAEuI,EAAC;AAAE,YAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE,OAAM4O,KAAE,QAAM5O,KAAE,SAAOA,GAAE,OAAMiE,KAAE,QAAMjE,KAAE,SAAOA,GAAE,OAAM0C,KAAE,QAAM1C,KAAE,SAAOA,GAAE,MAAKX,KAAE,QAAMW,KAAE,SAAOA,GAAE;AAAM,aAAM,EAAC,OAAM,WAASkM,KAAE,SAAO,GAAGA,IAAElM,IAAE,GAAGuI,EAAC,0BAA0B,GAAE,OAAM,WAASqG,KAAE,SAAO,GAAGA,IAAE5O,IAAE,GAAGuI,EAAC,0BAA0B,GAAE,OAAM,WAAStE,KAAE,SAAO,GAAGA,IAAEjE,IAAE,GAAGuI,EAAC,0BAA0B,GAAE,OAAM,WAASlJ,KAAE,SAAO,GAAGA,IAAEW,IAAE,GAAGuI,EAAC,0BAA0B,GAAE,MAAK7F,GAAC;AAAA,IAAC,EAAE1C,IAAE,iBAAiB;AAAE,QAAIiE;AAAE,KAACA,KAAE,MAAM,SAAO,YAAWA,GAAE,eAAa,QAAOA,GAAE,UAAQ,QAAOA,GAAE,4BAA0B,QAAOA,GAAE,iBAAe,IAAI,KAAEA,GAAE,wBAAsB,QAAOA,GAAE,gBAAc,QAAOA,GAAE,wBAAsB,QAAOA,GAAE,uBAAqB,QAAOA,GAAE,gBAAc;AAAG,QAAG,WAAS2K,GAAE,KAAK,OAAM,IAAI,WAAW,2BAA2B;AAAE,UAAMlM,KAAE,GAAGwJ,EAAC;AAAE,KAAC,SAASlM,IAAEuI,IAAE2D,IAAE0C,IAAE;AAAC,YAAM3K,KAAE,OAAO,OAAO,gCAAgC,SAAS;AAAE,UAAIvB,IAAErD,IAAEuG,IAAExG;AAAE,MAAAsD,KAAE,WAAS6F,GAAE,QAAM,MAAIA,GAAE,MAAMtE,EAAC,IAAE,MAAI;AAAA,MAAE;AAAC,MAAA5E,KAAE,WAASkJ,GAAE,QAAM,CAAAvI,OAAGuI,GAAE,MAAMvI,IAAEiE,EAAC,IAAE,MAAI,EAAE,MAAM;AAAE,MAAA2B,KAAE,WAAS2C,GAAE,QAAM,MAAIA,GAAE,MAAO,IAAC,MAAI,EAAE,MAAM;AAAE,MAAAnJ,KAAE,WAASmJ,GAAE,QAAM,CAAAvI,OAAGuI,GAAE,MAAMvI,EAAC,IAAE,MAAI,EAAE,MAAM;AAAE,OAAC,SAASA,IAAEuI,IAAE2D,IAAE0C,IAAE3K,IAAEvB,IAAErD,IAAEuG,IAAE;AAAC,QAAA2C,GAAE,4BAA0BvI,IAAEA,GAAE,4BAA0BuI,IAAEA,GAAE,SAAO,QAAOA,GAAE,kBAAgB,QAAO,GAAGA,EAAC,GAAEA,GAAE,eAAa,QAAOA,GAAE,mBAAiB,WAAU;AAAC,cAAG,GAAG,QAAO,IAAI;AAAA,QAAe,EAAG,GAACA,GAAE,WAAS,OAAGA,GAAE,yBAAuB3C,IAAE2C,GAAE,eAAalJ,IAAEkJ,GAAE,kBAAgBqG,IAAErG,GAAE,kBAAgBtE,IAAEsE,GAAE,kBAAgB7F;AAAE,cAAMtD,KAAE,GAAGmJ,EAAC;AAAE,WAAGvI,IAAEZ,EAAC;AAAE,cAAMyP,KAAE3C,GAAC;AAAG,UAAE,EAAE2C,EAAC,GAAG,OAAKtG,GAAE,WAAS,MAAG,GAAGA,EAAC,GAAE,OAAQ,CAAA2D,QAAI3D,GAAE,WAAS,MAAG,GAAGvI,IAAEkM,EAAC,GAAE,KAAK;AAAA,MAAE,EAAElM,IAAEiE,IAAEvB,IAAErD,IAAEuG,IAAExG,IAAE8M,IAAE0C,EAAC;AAAA,IAAC,EAAE,MAAKA,IAAE,GAAG1C,IAAE,CAAC,GAAExJ,EAAC;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,QAAQ;AAAE,WAAO,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,MAAM1C,IAAE;AAAC,WAAO,GAAG,IAAI,IAAE,GAAG,IAAI,IAAE,EAAE,IAAI,UAAU,iDAAiD,CAAC,IAAE,GAAG,MAAKA,EAAC,IAAE,EAAE,GAAG,OAAO,CAAC;AAAA,EAAC;AAAA,EAAC,QAAO;AAAC,WAAO,GAAG,IAAI,IAAE,GAAG,IAAI,IAAE,EAAE,IAAI,UAAU,iDAAiD,CAAC,IAAE,GAAG,IAAI,IAAE,EAAE,IAAI,UAAU,wCAAwC,CAAC,IAAE,GAAG,IAAI,IAAE,EAAE,GAAG,OAAO,CAAC;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,WAAW;AAAE,WAAO,IAAI,4BAA4B,IAAI;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,2BAA2B,KAAGA,cAAa;AAAe;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,WAASA,GAAE;AAAO;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,MAAI2D;AAAE,MAAG,aAAWlM,GAAE,UAAQ,cAAYA,GAAE,OAAO,QAAO,EAAE,MAAM;AAAE,EAAAA,GAAE,0BAA0B,eAAauI,IAAE,UAAQ2D,KAAElM,GAAE,0BAA0B,qBAAmB,WAASkM,MAAGA,GAAE,MAAM3D,EAAC;AAAE,QAAMqG,KAAE5O,GAAE;AAAO,MAAG,aAAW4O,MAAG,cAAYA,GAAE,QAAO,EAAE,MAAM;AAAE,MAAG,WAAS5O,GAAE,qBAAqB,QAAOA,GAAE,qBAAqB;AAAS,MAAIiE,KAAE;AAAG,iBAAa2K,OAAI3K,KAAE,MAAGsE,KAAE;AAAQ,QAAM7F,KAAE,EAAG,CAACwJ,IAAE0C,OAAI;AAAC,IAAA5O,GAAE,uBAAqB,EAAC,UAAS,QAAO,UAASkM,IAAE,SAAQ0C,IAAE,SAAQrG,IAAE,qBAAoBtE,GAAC;AAAA,EAAC,CAAC;AAAG,SAAOjE,GAAE,qBAAqB,WAAS0C,IAAEuB,MAAG,GAAGjE,IAAEuI,EAAC,GAAE7F;AAAC;AAAC,SAAS,GAAG1C,IAAE;AAAC,QAAMuI,KAAEvI,GAAE;AAAO,MAAG,aAAWuI,MAAG,cAAYA,GAAE,QAAO,EAAE,IAAI,UAAU,kBAAkBA,EAAC,2DAA2D,CAAC;AAAE,QAAM2D,KAAE,EAAG,CAAC3D,IAAE2D,OAAI;AAAC,UAAM0C,KAAE,EAAC,UAASrG,IAAE,SAAQ2D,GAAC;AAAE,IAAAlM,GAAE,gBAAc4O;AAAA,EAAC,CAAC,GAAGA,KAAE5O,GAAE;AAAQ,MAAIiE;AAAE,SAAO,WAAS2K,MAAG5O,GAAE,iBAAe,eAAauI,MAAG,GAAGqG,EAAC,GAAE,GAAG3K,KAAEjE,GAAE,2BAA0B,IAAG,CAAC,GAAE,GAAGiE,EAAC,GAAEiI;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE;AAAC,iBAAavI,GAAE,SAAO,GAAGA,EAAC,IAAE,GAAGA,IAAEuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAA0B,EAAAA,GAAE,SAAO,YAAWA,GAAE,eAAauI;AAAE,QAAMqG,KAAE5O,GAAE;AAAQ,aAAS4O,MAAG,GAAGA,IAAErG,EAAC,GAAE,CAAC,SAASvI,IAAE;AAAC,QAAG,WAASA,GAAE,yBAAuB,WAASA,GAAE,sBAAsB,QAAM;AAAG,WAAQ;AAAA,EAAA,EAAEA,EAAC,KAAGkM,GAAE,YAAU,GAAGlM,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,SAAO,WAAUA,GAAE,0BAA0B,CAAC,EAAC;AAAG,QAAMuI,KAAEvI,GAAE;AAAa,MAAGA,GAAE,eAAe,QAAS,CAAAA,OAAG;AAAC,IAAAA,GAAE,QAAQuI,EAAC;AAAA,EAAC,CAAG,GAACvI,GAAE,iBAAe,IAAI,KAAE,WAASA,GAAE,qBAAqB,QAAO,KAAK,GAAGA,EAAC;AAAE,QAAMkM,KAAElM,GAAE;AAAqB,MAAGA,GAAE,uBAAqB,QAAOkM,GAAE,oBAAoB,QAAOA,GAAE,QAAQ3D,EAAC,GAAE,KAAK,GAAGvI,EAAC;AAAE,IAAEA,GAAE,0BAA0B,CAAC,EAAEkM,GAAE,OAAO,GAAG,OAAKA,GAAE,SAAQ,GAAG,GAAGlM,EAAC,GAAE,OAAQ,CAAAuI,QAAI2D,GAAE,QAAQ3D,EAAC,GAAE,GAAGvI,EAAC,GAAE,KAAO;AAAA;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,WAASA,GAAE,iBAAe,WAASA,GAAE;AAAqB;AAAC,SAAS,GAAGA,IAAE;AAAO,aAAGA,GAAE,kBAAgBA,GAAE,cAAc,QAAQA,GAAE,YAAY,GAAEA,GAAE,gBAAc;AAAQ,QAAMuI,KAAEvI,GAAE;AAAQ,aAASuI,MAAG,GAAGA,IAAEvI,GAAE,YAAY;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAAQ,aAASkM,MAAG3D,OAAIvI,GAAE,kBAAgBuI,KAAE,SAASvI,IAAE;AAAC,OAAGA,EAAC;AAAA,EAAC,EAAEkM,EAAC,IAAE,GAAGA,EAAC,IAAGlM,GAAE,gBAAcuI;AAAC;AAAC,OAAO,iBAAiB,eAAe,WAAU,EAAC,OAAM,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,WAAU,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,eAAe,UAAU,OAAM,OAAO,GAAE,EAAE,eAAe,UAAU,OAAM,OAAO,GAAE,EAAE,eAAe,UAAU,WAAU,WAAW,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,eAAe,WAAU,EAAE,aAAY,EAAC,OAAM,kBAAiB,cAAa,KAAE,CAAC;AAAE,MAAM,4BAA2B;AAAA,EAAC,YAAYvI,IAAE;AAAC,QAAG,EAAEA,IAAE,GAAE,6BAA6B,GAAE,SAASA,IAAEuI,IAAE;AAAC,UAAG,CAAC,GAAGvI,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,2BAA2B;AAAA,IAAC,EAAEvI,IAAE,iBAAiB,GAAE,GAAGA,EAAC,EAAE,OAAM,IAAI,UAAU,6EAA6E;AAAE,SAAK,uBAAqBA,IAAEA,GAAE,UAAQ;AAAK,UAAMuI,KAAEvI,GAAE;AAAO,QAAG,eAAauI,GAAE,EAAC,GAAGvI,EAAC,KAAGA,GAAE,gBAAc,GAAG,IAAI,IAAE,GAAG,IAAI,GAAE,GAAG,IAAI;AAAA,aAAU,eAAauI,GAAE,IAAG,MAAKvI,GAAE,YAAY,GAAE,GAAG,IAAI;AAAA,aAAU,aAAWuI,GAAE,IAAG,IAAI,GAAE,GAAG2D,KAAE,IAAI,GAAE,GAAGA,EAAC;AAAA,SAAM;AAAC,YAAM3D,KAAEvI,GAAE;AAAa,SAAG,MAAKuI,EAAC,GAAE,GAAG,MAAKA,EAAC;AAAA,IAAC;AAAC,QAAI2D;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,GAAG,IAAI,IAAE,KAAK,iBAAe,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,QAAG,WAAS,KAAK,qBAAqB,OAAM,GAAG,aAAa;AAAE,WAAO,SAASlM,IAAE;AAAC,YAAMuI,KAAEvI,GAAE,sBAAqBkM,KAAE3D,GAAE;AAAO,UAAG,cAAY2D,MAAG,eAAaA,GAAE,QAAO;AAAK,UAAG,aAAWA,GAAE,QAAO;AAAE,aAAO,GAAG3D,GAAE,yBAAyB;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,QAAO;AAAC,WAAO,GAAG,IAAI,IAAE,KAAK,gBAAc,EAAE,GAAG,OAAO,CAAC;AAAA,EAAC;AAAA,EAAC,MAAMvI,IAAE;AAAC,WAAO,GAAG,IAAI,IAAE,WAAS,KAAK,uBAAqB,EAAE,GAAG,OAAO,CAAC,IAAE,SAASA,IAAEuI,IAAE;AAAC,aAAO,GAAGvI,GAAE,sBAAqBuI,EAAC;AAAA,IAAC,EAAE,MAAKvI,EAAC,IAAE,EAAE,GAAG,OAAO,CAAC;AAAA,EAAC;AAAA,EAAC,QAAO;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,QAAO,EAAE,GAAG,OAAO,CAAC;AAAE,UAAMA,KAAE,KAAK;AAAqB,WAAO,WAASA,KAAE,EAAE,GAAG,OAAO,CAAC,IAAE,GAAGA,EAAC,IAAE,EAAE,IAAI,UAAU,wCAAwC,CAAC,IAAE,GAAG,KAAK,oBAAoB;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,eAAS,KAAK,wBAAsB,SAASA,IAAE;AAAC,YAAMuI,KAAEvI,GAAE,sBAAqBkM,KAAE,IAAI,UAAU,kFAAkF;AAAE,SAAGlM,IAAEkM,EAAC,GAAE,SAASlM,IAAEuI,IAAE;AAAC,sBAAYvI,GAAE,sBAAoB,GAAGA,IAAEuI,EAAC,IAAE,SAASvI,IAAEuI,IAAE;AAAC,aAAGvI,IAAEuI,EAAC;AAAA,QAAC,EAAEvI,IAAEuI,EAAC;AAAA,MAAC,EAAEvI,IAAEkM,EAAC,GAAE3D,GAAE,UAAQ,QAAOvI,GAAE,uBAAqB;AAAA,IAAM,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,MAAMA,IAAE;AAAC,WAAO,GAAG,IAAI,IAAE,WAAS,KAAK,uBAAqB,EAAE,GAAG,UAAU,CAAC,IAAE,SAASA,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE,sBAAqB4O,KAAE1C,GAAE,2BAA0BjI,KAAE,SAASjE,IAAEuI,IAAE;AAAC,YAAG;AAAC,iBAAOvI,GAAE,uBAAuBuI,EAAC;AAAA,QAAC,SAAOA,IAAE;AAAC,iBAAO,GAAGvI,IAAEuI,EAAC,GAAE;AAAA,QAAC;AAAA,MAAC,EAAEqG,IAAErG,EAAC;AAAE,UAAG2D,OAAIlM,GAAE,qBAAqB,QAAO,EAAE,GAAG,UAAU,CAAC;AAAE,YAAM0C,KAAEwJ,GAAE;AAAO,UAAG,cAAYxJ,GAAE,QAAO,EAAEwJ,GAAE,YAAY;AAAE,UAAG,GAAGA,EAAC,KAAG,aAAWxJ,GAAE,QAAO,EAAE,IAAI,UAAU,0DAA0D,CAAC;AAAE,UAAG,eAAaA,GAAE,QAAO,EAAEwJ,GAAE,YAAY;AAAE,YAAM7M,KAAE,SAASW,IAAE;AAAC,eAAO,EAAG,CAACuI,IAAE2D,OAAI;AAAC,gBAAM0C,KAAE,EAAC,UAASrG,IAAE,SAAQ2D,GAAC;AAAE,UAAAlM,GAAE,eAAe,KAAK4O,EAAC;AAAA,QAAC;MAAG,EAAE1C,EAAC;AAAE,aAAO,SAASlM,IAAEuI,IAAE2D,IAAE;AAAC,YAAG;AAAC,aAAGlM,IAAEuI,IAAE2D,EAAC;AAAA,QAAC,SAAO3D,IAAE;AAAC,iBAAO,KAAK,GAAGvI,IAAEuI,EAAC;AAAA,QAAC;AAAC,cAAMqG,KAAE5O,GAAE;AAA0B,YAAG,CAAC,GAAG4O,EAAC,KAAG,eAAaA,GAAE,QAAO;AAAC,aAAGA,IAAE,GAAG5O,EAAC,CAAC;AAAA,QAAC;AAAC,WAAGA,EAAC;AAAA,MAAC,EAAE4O,IAAErG,IAAEtE,EAAC,GAAE5E;AAAA,IAAC,EAAE,MAAKW,EAAC,IAAE,EAAE,GAAG,OAAO,CAAC;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,sBAAsB,KAAGA,cAAa;AAA4B;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,gBAAYvI,GAAE,qBAAmB,GAAGA,IAAEuI,EAAC,IAAE,SAASvI,IAAEuI,IAAE;AAAC,OAAGvI,IAAEuI,EAAC;AAAA,EAAC,EAAEvI,IAAEuI,EAAC;AAAC;AAAC,OAAO,iBAAiB,4BAA4B,WAAU,EAAC,OAAM,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,4BAA4B,UAAU,OAAM,OAAO,GAAE,EAAE,4BAA4B,UAAU,OAAM,OAAO,GAAE,EAAE,4BAA4B,UAAU,aAAY,aAAa,GAAE,EAAE,4BAA4B,UAAU,OAAM,OAAO,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,4BAA4B,WAAU,EAAE,aAAY,EAAC,OAAM,+BAA8B,cAAa,KAAE,CAAC;AAAE,MAAM,KAAG,CAAA;AAAG,MAAM,gCAA+B;AAAA,EAAC,cAAa;AAAC,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,WAAO,KAAK;AAAA,EAAY;AAAA,EAAC,IAAI,SAAQ;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,QAAQ;AAAE,QAAG,WAAS,KAAK,iBAAiB,OAAM,IAAI,UAAU,mEAAmE;AAAE,WAAO,KAAK,iBAAiB;AAAA,EAAM;AAAA,EAAC,MAAMvI,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,mBAAa,KAAK,0BAA0B,UAAQ,GAAG,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,EAAEA,IAAE;AAAC,UAAMuI,KAAE,KAAK,gBAAgBvI,EAAC;AAAE,WAAO,GAAG,IAAI,GAAEuI;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,IAAG;AAAC,OAAG,IAAI;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,2BAA2B,KAAGA,cAAa;AAAgC;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,kBAAgB,QAAOA,GAAE,kBAAgB,QAAOA,GAAE,kBAAgB,QAAOA,GAAE,yBAAuB;AAAM;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAOA,GAAE,eAAaA,GAAE;AAAe;AAAC,SAAS,GAAGA,IAAE;AAAC,QAAMuI,KAAEvI,GAAE;AAA0B,MAAG,CAACA,GAAE,SAAS;AAAO,MAAG,WAASuI,GAAE,sBAAsB;AAAO,MAAG,eAAaA,GAAE,OAAO,QAAO,KAAK,GAAGA,EAAC;AAAE,MAAG,MAAIvI,GAAE,OAAO,OAAO;AAAO,QAAMkM,KAAElM,GAAE,OAAO,KAAI,EAAG;AAAM,EAAAkM,OAAI,KAAG,SAASlM,IAAE;AAAC,UAAMuI,KAAEvI,GAAE;AAA0B,KAAC,SAASA,IAAE;AAAC,MAAAA,GAAE,wBAAsBA,GAAE,eAAcA,GAAE,gBAAc;AAAA,IAAM,GAAGuI,EAAC,GAAE,GAAGvI,EAAC;AAAE,UAAMkM,KAAElM,GAAE,gBAAe;AAAG,OAAGA,EAAC,GAAE,EAAEkM,IAAG,OAAK,SAASlM,IAAE;AAAC,MAAAA,GAAE,sBAAsB,SAAS,MAAM,GAAEA,GAAE,wBAAsB,QAAO,eAAaA,GAAE,WAASA,GAAE,eAAa,QAAO,WAASA,GAAE,yBAAuBA,GAAE,qBAAqB,SAAQ,GAAGA,GAAE,uBAAqB,UAASA,GAAE,SAAO;AAAS,YAAMuI,KAAEvI,GAAE;AAAQ,iBAASuI,MAAG,GAAGA,EAAC;AAAA,IAAC,EAAEA,EAAC,GAAE,OAAQ,CAAAvI,QAAI,SAASA,IAAEuI,IAAE;AAAC,MAAAvI,GAAE,sBAAsB,QAAQuI,EAAC,GAAEvI,GAAE,wBAAsB,QAAO,WAASA,GAAE,yBAAuBA,GAAE,qBAAqB,QAAQuI,EAAC,GAAEvI,GAAE,uBAAqB,SAAQ,GAAGA,IAAEuI,EAAC;AAAA,IAAC,EAAEA,IAAEvI,EAAC,GAAE,KAAO;AAAA,EAAA,EAAEA,EAAC,IAAE,SAASA,IAAEuI,IAAE;AAAC,UAAM2D,KAAElM,GAAE;AAA0B,KAAC,SAASA,IAAE;AAAC,MAAAA,GAAE,wBAAsBA,GAAE,eAAe,MAAO;AAAA,IAAA,EAAEkM,EAAC;AAAE,MAAElM,GAAE,gBAAgBuI,EAAC,GAAG,MAAI;AAAC,OAAC,SAASvI,IAAE;AAAC,QAAAA,GAAE,sBAAsB,SAAS,MAAM,GAAEA,GAAE,wBAAsB;AAAA,MAAM,EAAEkM,EAAC;AAAE,YAAM3D,KAAE2D,GAAE;AAAO,UAAG,GAAGlM,EAAC,GAAE,CAAC,GAAGkM,EAAC,KAAG,eAAa3D,IAAE;AAAC,cAAMA,KAAE,GAAGvI,EAAC;AAAE,WAAGkM,IAAE3D,EAAC;AAAA,MAAC;AAAC,aAAO,GAAGvI,EAAC,GAAE;AAAA,IAAI,GAAI,CAAAuI,QAAI,eAAa2D,GAAE,UAAQ,GAAGlM,EAAC,GAAE,SAASA,IAAEuI,IAAE;AAAC,MAAAvI,GAAE,sBAAsB,QAAQuI,EAAC,GAAEvI,GAAE,wBAAsB,QAAO,GAAGA,IAAEuI,EAAC;AAAA,IAAC,EAAE2D,IAAE3D,EAAC,GAAE,KAAK;AAAA,EAAE,EAAEvI,IAAEkM,EAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE;AAAC,iBAAavI,GAAE,0BAA0B,UAAQ,GAAGA,IAAEuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAO,GAAGA,EAAC,KAAG;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAA0B,KAAGA,EAAC,GAAE,GAAGkM,IAAE3D,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAO,IAAI,UAAU,4BAA4BA,EAAC,uCAAuC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,IAAI,UAAU,6CAA6CA,EAAC,wDAAwD;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,IAAI,UAAU,yCAAyCA,EAAC,oDAAoD;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAO,IAAI,UAAU,YAAUA,KAAE,mCAAmC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,iBAAe,EAAG,CAACuI,IAAE2D,OAAI;AAAC,IAAAlM,GAAE,yBAAuBuI,IAAEvI,GAAE,wBAAsBkM,IAAElM,GAAE,sBAAoB;AAAA,EAAS,CAAC;AAAE;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,KAAGvI,EAAC,GAAE,GAAGA,IAAEuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAO,aAAGvI,GAAE,0BAAwB,EAAEA,GAAE,cAAc,GAAEA,GAAE,sBAAsBuI,EAAC,GAAEvI,GAAE,yBAAuB,QAAOA,GAAE,wBAAsB,QAAOA,GAAE,sBAAoB;AAAW;AAAC,SAAS,GAAGA,IAAE;AAAC,aAASA,GAAE,2BAAyBA,GAAE,uBAAuB,MAAM,GAAEA,GAAE,yBAAuB,QAAOA,GAAE,wBAAsB,QAAOA,GAAE,sBAAoB;AAAW;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,gBAAc,EAAG,CAACuI,IAAE2D,OAAI;AAAC,IAAAlM,GAAE,wBAAsBuI,IAAEvI,GAAE,uBAAqBkM;AAAA,EAAC,CAAC,GAAGlM,GAAE,qBAAmB;AAAS;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,KAAGvI,EAAC,GAAE,GAAGA,IAAEuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,KAAGA,EAAC,GAAE,GAAGA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,aAASvI,GAAE,yBAAuB,EAAEA,GAAE,aAAa,GAAEA,GAAE,qBAAqBuI,EAAC,GAAEvI,GAAE,wBAAsB,QAAOA,GAAE,uBAAqB,QAAOA,GAAE,qBAAmB;AAAW;AAAC,SAAS,GAAGA,IAAE;AAAO,aAAGA,GAAE,0BAAwBA,GAAE,sBAAsB,MAAM,GAAEA,GAAE,wBAAsB,QAAOA,GAAE,uBAAqB,QAAOA,GAAE,qBAAmB;AAAY;AAAC,OAAO,iBAAiB,gCAAgC,WAAU,EAAC,aAAY,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,gCAAgC,WAAU,EAAE,aAAY,EAAC,OAAM,mCAAkC,cAAa,KAAE,CAAC;AAAE,MAAM,KAAG,eAAa,OAAO,eAAa,eAAa;AAAO,MAAM,KAAG,SAASA,IAAE;AAAC,MAAG,cAAY,OAAOA,MAAG,YAAU,OAAOA,GAAE,QAAM;AAAG,MAAG;AAAC,WAAO,IAAIA,MAAE;AAAA,EAAE,SAAOA,IAAE;AAAC,WAAQ;AAAA,EAAA;AAAC,EAAE,EAAE,IAAE,KAAG,WAAU;AAAC,QAAMA,KAAE,SAASA,IAAEuI,IAAE;AAAC,SAAK,UAAQvI,MAAG,IAAG,KAAK,OAAKuI,MAAG,SAAQ,MAAM,qBAAmB,MAAM,kBAAkB,MAAK,KAAK,WAAW;AAAA,EAAC;AAAE,SAAOvI,GAAE,YAAU,OAAO,OAAO,MAAM,SAAS,GAAE,OAAO,eAAeA,GAAE,WAAU,eAAc,EAAC,OAAMA,IAAE,UAAS,MAAG,cAAa,KAAE,CAAC,GAAEA;AAAC,EAAG;AAAC,SAAS,GAAGA,IAAEuI,IAAE2D,IAAE0C,IAAE3K,IAAEvB,IAAE;AAAC,QAAMrD,KAAEW,GAAE,UAAS,GAAG4F,KAAE2C,GAAE,UAAW;AAAC,KAAGvI,EAAC,MAAIA,GAAE,aAAW;AAAI,MAAIZ,IAAEG,IAAEuP,IAAErE,KAAE,OAAG6C,KAAE,OAAG/J,KAAE,YAAWmK,KAAE,YAAWqB,KAAE,OAAGC,KAAE;AAAG,QAAMC,KAAE,EAAG,CAAAjP,OAAG;AAAC,IAAA8O,KAAE9O;AAAA,EAAC,CAAC;AAAG,MAAIkP,KAAE,QAAQ,QAAQ,MAAM;AAAE,SAAO,EAAG,CAACC,IAAEC,OAAI;AAAC,QAAI5I;AAAE,aAAS6I,KAAG;AAAC,UAAG5E,GAAE;AAAO,YAAMzK,KAAE,EAAG,CAACA,IAAEuI,OAAI;AAAC,SAAC,SAAS2D,GAAE0C,IAAE;AAAC,UAAAA,KAAE5O,GAAG,IAAC,EAAE,WAAU;AAAC,gBAAGyK,GAAE,QAAO,EAAE,IAAE;AAAE,mBAAO,EAAE7E,GAAE,OAAO,MAAI,EAAEvG,GAAE,KAAM,GAAE,CAAAW,OAAG,CAAC,CAACA,GAAE,SAAOkP,KAAEtJ,GAAE,MAAM5F,GAAE,KAAK,GAAE,EAAEkP,EAAC,GAAE,MAAK,CAAA;AAAA,UAAE,EAAG,GAAChD,IAAE3D,EAAC;AAAA,QAAC,EAAE,KAAE;AAAA,MAAC,CAAC;AAAG,QAAEvI,EAAC;AAAA,IAAC;AAAC,aAASsP,KAAG;AAAC,aAAO/L,KAAE,UAAS2I,KAAEqD,GAAG,IAAC1F,GAAG,OAAK,GAAGtB,EAAC,MAAIwG,KAAE,GAAGxG,EAAC,GAAEmF,KAAEnF,GAAE,SAAQwG,MAAG,aAAWrB,KAAE,EAAE,MAAM,IAAE,eAAaA,MAAG,cAAYA,KAAE,EAAEnO,EAAC,KAAGwP,KAAE,MAAGnJ,GAAE,MAAO,KAAI,OAAG,MAAM,GAAE;AAAA,IAAI;AAAC,aAAS4J,GAAExP,IAAE;AAAC,aAAOyK,OAAIlH,KAAE,WAAUnE,KAAEY,IAAE4O,KAAEW,GAAE,MAAGvP,EAAC,IAAE6J,GAAG,MAAIjE,GAAE,MAAM5F,EAAC,GAAG,MAAGA,EAAC,IAAG;AAAA,IAAI;AAAC,aAAS8F,GAAE9F,IAAE;AAAC,aAAOsN,OAAII,KAAE,WAAUnO,KAAES,IAAEiE,KAAEsL,GAAE,MAAGvP,EAAC,IAAE6J,GAAG,MAAIxK,GAAE,OAAOW,EAAC,GAAG,MAAGA,EAAC,IAAG;AAAA,IAAI;AAAC,QAAG,WAAS0C,OAAI8D,KAAE,MAAI;AAAC,YAAMxG,KAAE,WAAS0C,GAAE,SAAOA,GAAE,SAAO,IAAI,GAAG,WAAU,YAAY,GAAE6F,KAAE,CAAE;AAAC,MAAAqG,MAAGrG,GAAE,KAAM,MAAI,eAAamF,KAAE9H,GAAE,MAAM5F,EAAC,IAAE,EAAE,MAAM,CAAC,GAAGiE,MAAGsE,GAAE,KAAM,MAAI,eAAahF,KAAElE,GAAE,OAAOW,EAAC,IAAE,EAAE,MAAM,CAAC,GAAG6J,GAAG,MAAI,QAAQ,IAAItB,GAAE,IAAK,CAAAvI,OAAGA,GAAG,CAAA,CAAE,GAAG,MAAGA,EAAC;AAAA,IAAC,GAAE0C,GAAE,UAAQ8D,GAAC,IAAG9D,GAAE,iBAAiB,SAAQ8D,EAAC,IAAG,GAAGxG,EAAC,MAAIuD,KAAEvD,GAAE,QAAOZ,KAAEY,GAAE,eAAc,GAAGuI,EAAC,MAAImF,KAAEnF,GAAE,QAAOhJ,KAAEgJ,GAAE,cAAawG,KAAE,GAAGxG,EAAC,IAAG,GAAGvI,EAAC,KAAG,GAAGuI,EAAC,MAAIyG,KAAE,MAAGF,OAAK,cAAYvL,GAAE,CAAAiM,GAAEpQ,EAAC;AAAA,aAAU,eAAasO,MAAG,cAAYA,GAAE,CAAA5H,GAAEvG,EAAC;AAAA,aAAU,aAAWgE,GAAE,CAAA+L,GAAG;AAAA,aAASP,MAAG,aAAWrB,IAAE;AAAC,YAAM1N,KAAE,IAAI,UAAU,6EAA6E;AAAE,MAAAiE,KAAEsL,GAAE,MAAGvP,EAAC,IAAE6J,GAAG,MAAIxK,GAAE,OAAOW,EAAC,GAAG,MAAGA,EAAC;AAAA,IAAC;AAAC,aAAS6J,GAAE7J,IAAEuI,IAAE2D,IAAE;AAAC,eAAS0C,KAAG;AAAC,eAAM,eAAalB,MAAGqB,KAAE9K,GAAG,IAAC,EAAE,WAAU;AAAC,cAAIjE;AAAE,iBAAO,EAAE,SAASuI,KAAG;AAAC,gBAAGvI,OAAIkP,GAAE,QAAOlP,KAAEkP,IAAE,EAAEA,IAAE3G,IAAEA,EAAC;AAAA,UAAC,EAAC,CAAE;AAAA,QAAC,EAAG,GAACtE,EAAC,GAAE;AAAA,MAAI;AAAC,eAASA,KAAG;AAAC,eAAOjE,KAAE,EAAEA,GAAC,GAAI,MAAIyP,GAAElH,IAAE2D,EAAC,GAAI,CAAAlM,OAAGyP,GAAE,MAAGzP,EAAC,CAAG,IAACyP,GAAElH,IAAE2D,EAAC,GAAE;AAAA,MAAI;AAAC,MAAAzB,OAAIA,KAAE,MAAGuE,KAAEJ,GAAG,IAAC,EAAEK,IAAEL,EAAC;AAAA,IAAE;AAAC,aAASW,GAAEvP,IAAEuI,IAAE;AAAC,MAAAsB,GAAE,QAAO7J,IAAEuI,EAAC;AAAA,IAAC;AAAC,aAASkH,GAAEzP,IAAEuI,IAAE;AAAC,aAAO+E,KAAE,MAAG1H,GAAE,YAAW,GAAGvG,GAAE,YAAa,GAAC,WAASqD,MAAGA,GAAE,oBAAoB,SAAQ8D,EAAC,GAAExG,KAAEoP,GAAE7G,EAAC,IAAE4G,GAAE,MAAM,GAAE;AAAA,IAAI;AAAC,IAAA1E,OAAI,EAAEpL,GAAE,QAAOiQ,IAAEE,EAAC,GAAE,EAAE5J,GAAE,QAAQ,WAAU;AAAC,aAAO0H,OAAII,KAAE,WAAU;AAAA,IAAI,GAAG5H,EAAC,IAAGkJ,KAAEK,GAAC,IAAG,EAAG,MAAI;AAAC,MAAAL,KAAE,MAAGF,GAAG,GAACO,GAAC;AAAA,IAAE,CAAC;AAAA,EAAE,CAAC;AAAE;AAAC,SAAS,GAAGrP,IAAEuI,IAAE;AAAC,SAAO,SAASvI,IAAE;AAAC,QAAG;AAAC,aAAOA,GAAE,UAAU,EAAC,MAAK,OAAM,CAAC,EAAE,YAAa,GAAC;AAAA,IAAE,SAAOA,IAAE;AAAC,aAAM;AAAA,IAAE;AAAA,EAAC,EAAEA,EAAC,IAAE,SAASA,IAAE;AAAC,QAAIuI,IAAE2D,IAAE0C,IAAE3K,IAAEvB,IAAErD,KAAEW,GAAE,UAAS,GAAG4F,KAAE,OAAGxG,KAAE,OAAGoM,KAAE,OAAGhB,KAAE,OAAGtB,KAAE,OAAGL,KAAE;AAAG,UAAMrJ,KAAE,EAAG,CAAAQ,OAAG;AAAC,MAAA0C,KAAE1C;AAAA,IAAC;AAAI,aAAS0P,GAAE1P,IAAE;AAAC,QAAEA,GAAE,QAAQ,CAAAuI,QAAIvI,OAAIX,OAAIuP,GAAE,MAAMrG,EAAC,GAAEtE,GAAE,MAAMsE,EAAC,GAAEW,MAAGL,MAAGnG,GAAE,MAAM,IAAG,KAAO;AAAA,IAAA;AAAC,aAASoM,KAAG;AAAC,MAAAlJ,OAAIvG,GAAE,YAAW,GAAGA,KAAEW,GAAE,UAAW,GAAC0P,GAAErQ,EAAC,GAAEuG,KAAE,QAAI,EAAEvG,GAAE,KAAM,GAAE,CAAAW,OAAG;AAAC,YAAIuI,IAAE2D;AAAE,YAAGV,KAAE,OAAGhB,KAAE,OAAGxK,GAAE,KAAK,QAAOkJ,MAAG0F,GAAE,MAAK,GAAG/F,MAAG5E,GAAE,MAAO,GAAC,UAAQsE,KAAEqG,GAAE,gBAAc,WAASrG,MAAGA,GAAE,QAAQ,CAAC,GAAE,UAAQ2D,KAAEjI,GAAE,gBAAc,WAASiI,MAAGA,GAAE,QAAQ,CAAC,GAAEhD,MAAGL,MAAGnG,GAAE,MAAM,GAAE;AAAK,cAAMkD,KAAE5F,GAAE,OAAM6O,KAAEjJ;AAAE,YAAIuD,KAAEvD;AAAE,YAAG,CAACsD,MAAG,CAACL,GAAE,KAAG;AAAC,UAAAM,KAAE,GAAGvD,EAAC;AAAA,QAAC,SAAO5F,IAAE;AAAC,iBAAO4O,GAAE,MAAM5O,EAAC,GAAEiE,GAAE,MAAMjE,EAAC,GAAE0C,GAAErD,GAAE,OAAOW,EAAC,CAAC,GAAE;AAAA,QAAI;AAAC,eAAOkJ,MAAG0F,GAAE,QAAQC,EAAC,GAAEhG,MAAG5E,GAAE,QAAQkF,EAAC,GAAE/J,KAAE,OAAGoM,KAAE8B,GAAC,IAAG9C,MAAGjH,GAAG,GAAC;AAAA,MAAI,GAAI,OAAKnE,KAAE,OAAG,KAAK;AAAA,IAAE;AAAC,aAASqL,GAAElC,IAAE2D,IAAE;AAAC,MAAAtG,OAAIvG,GAAE,YAAa,GAACA,KAAEW,GAAE,UAAU,EAAC,MAAK,OAAM,CAAC,GAAE0P,GAAErQ,EAAC,GAAEuG,KAAE;AAAI,YAAMiJ,KAAE3C,KAAEjI,KAAE2K,IAAEzF,KAAE+C,KAAE0C,KAAE3K;AAAE,QAAE5E,GAAE,KAAKkJ,EAAC,GAAG,CAAAvI,OAAG;AAAC,YAAIuI;AAAE,QAAAiD,KAAE,OAAGhB,KAAE;AAAG,cAAMoE,KAAE1C,KAAErD,KAAEK,IAAEjF,KAAEiI,KAAEhD,KAAEL;AAAE,YAAG7I,GAAE,MAAK;AAAC,UAAA4O,MAAGC,GAAE,MAAK,GAAG5K,MAAGkF,GAAE,MAAO;AAAC,gBAAM+C,KAAElM,GAAE;AAAM,iBAAO,WAASkM,OAAI0C,MAAGC,GAAE,YAAY,mBAAmB3C,EAAC,GAAEjI,MAAG,UAAQsE,KAAEY,GAAE,gBAAc,WAASZ,MAAGA,GAAE,QAAQ,CAAC,IAAGqG,MAAG3K,MAAGvB,GAAE,MAAM,GAAE;AAAA,QAAI;AAAC,cAAMkD,KAAE5F,GAAE;AAAM,YAAGiE,GAAE,CAAA2K,MAAGC,GAAE,YAAY,mBAAmBjJ,EAAC;AAAA,aAAM;AAAC,cAAI5F;AAAE,cAAG;AAAC,YAAAA,KAAE,GAAG4F,EAAC;AAAA,UAAC,SAAO5F,IAAE;AAAC,mBAAO6O,GAAE,MAAM7O,EAAC,GAAEmJ,GAAE,MAAMnJ,EAAC,GAAE0C,GAAErD,GAAE,OAAOW,EAAC,CAAC,GAAE;AAAA,UAAI;AAAC,UAAA4O,MAAGC,GAAE,YAAY,mBAAmBjJ,EAAC,GAAEuD,GAAE,QAAQnJ,EAAC;AAAA,QAAC;AAAC,eAAOZ,KAAE,OAAGoM,KAAE8B,GAAC,IAAG9C,MAAGjH,GAAG,GAAC;AAAA,MAAI,GAAI,OAAKnE,KAAE,OAAG,KAAK;AAAA,IAAE;AAAC,aAASkO,KAAG;AAAC,UAAGlO,GAAE,QAAOoM,KAAE,MAAG,EAAE,MAAM;AAAE,MAAApM,KAAE;AAAG,YAAMY,KAAE4O,GAAE;AAAY,aAAO,SAAO5O,KAAE8O,GAAG,IAACrE,GAAEzK,GAAE,MAAK,KAAE,GAAE,EAAE,MAAM;AAAA,IAAC;AAAC,aAASuD,KAAG;AAAC,UAAGnE,GAAE,QAAOoL,KAAE,MAAG,EAAE,MAAM;AAAE,MAAApL,KAAE;AAAG,YAAMY,KAAEiE,GAAE;AAAY,aAAO,SAAOjE,KAAE8O,GAAC,IAAGrE,GAAEzK,GAAE,MAAK,IAAE,GAAE,EAAE,MAAM;AAAA,IAAC;AAAC,aAAS0N,GAAE1N,IAAE;AAAC,UAAGkJ,KAAE,MAAGX,KAAEvI,IAAE6I,IAAE;AAAC,cAAM7I,KAAE,CAACuI,IAAE2D,EAAC,GAAE0C,KAAEvP,GAAE,OAAOW,EAAC;AAAE,QAAA0C,GAAEkM,EAAC;AAAA,MAAC;AAAC,aAAOpP;AAAA,IAAC;AAAC,aAASuP,GAAE/O,IAAE;AAAC,UAAG6I,KAAE,MAAGqD,KAAElM,IAAEkJ,IAAE;AAAC,cAAMlJ,KAAE,CAACuI,IAAE2D,EAAC,GAAE0C,KAAEvP,GAAE,OAAOW,EAAC;AAAE,QAAA0C,GAAEkM,EAAC;AAAA,MAAC;AAAC,aAAOpP;AAAA,IAAC;AAAC,UAAMwP,KAAE,IAAI9B,iBAAe,EAAC,MAAK,SAAQ,MAAMlN,IAAE;AAAC,MAAA4O,KAAE5O;AAAA,IAAC,GAAE,MAAKsN,IAAE,QAAOI,GAAC,CAAC,GAAEuB,KAAE,IAAI/B,iBAAe,EAAC,MAAK,SAAQ,MAAMlN,IAAE;AAAC,MAAAiE,KAAEjE;AAAA,IAAC,GAAE,MAAKuD,IAAE,QAAOwL,GAAC,CAAC;AAAE,WAAOW,GAAErQ,EAAC,GAAE,CAAC2P,IAAEC,EAAC;AAAA,EAAC,EAAEjP,EAAC,IAAE,SAASA,IAAEuI,IAAE;AAAC,UAAM2D,KAAElM,GAAE,UAAS;AAAG,QAAI4O,IAAE3K,IAAEvB,IAAErD,IAAEuG,IAAExG,KAAE,OAAGoM,KAAE,OAAGhB,KAAE,OAAGtB,KAAE;AAAG,UAAML,KAAE,EAAG,CAAA7I,OAAG;AAAC,MAAA4F,KAAE5F;AAAA,IAAC,CAAC;AAAG,aAASR,KAAG;AAAC,aAAOJ,MAAGoM,KAAE,MAAG,EAAE,MAAM,MAAIpM,KAAE,MAAG,EAAE8M,GAAE,KAAM,GAAE,CAAAlM,OAAG;AAAC,YAAGwL,KAAE,OAAGxL,GAAE,KAAK,QAAOwK,MAAG9H,GAAE,MAAO,GAACwG,MAAG7J,GAAE,MAAO,GAACmL,MAAGtB,MAAGtD,GAAE,MAAM,GAAE;AAAK,cAAM2C,KAAEvI,GAAE,OAAMkM,KAAE3D,IAAEqG,KAAErG;AAAE,eAAOiC,MAAG9H,GAAE,QAAQwJ,EAAC,GAAEhD,MAAG7J,GAAE,QAAQuP,EAAC,GAAExP,KAAE,OAAGoM,MAAGhM,GAAC,GAAG;AAAA,MAAI,GAAI,OAAKJ,KAAE,OAAG,KAAO,GAAC,EAAE,MAAM;AAAA,IAAE;AAAC,aAASsQ,GAAE1P,IAAE;AAAC,UAAGwK,KAAE,MAAGoE,KAAE5O,IAAEkJ,IAAE;AAAC,cAAMlJ,KAAE,CAAC4O,IAAE3K,EAAC,GAAEsE,KAAE2D,GAAE,OAAOlM,EAAC;AAAE,QAAA4F,GAAE2C,EAAC;AAAA,MAAC;AAAC,aAAOM;AAAA,IAAC;AAAC,aAASiG,GAAE9O,IAAE;AAAC,UAAGkJ,KAAE,MAAGjF,KAAEjE,IAAEwK,IAAE;AAAC,cAAMxK,KAAE,CAAC4O,IAAE3K,EAAC,GAAEsE,KAAE2D,GAAE,OAAOlM,EAAC;AAAE,QAAA4F,GAAE2C,EAAC;AAAA,MAAC;AAAC,aAAOM;AAAA,IAAC;AAAC,UAAM4B,KAAE,IAAIyC,iBAAe,EAAC,MAAMlN,IAAE;AAAC,MAAA0C,KAAE1C;AAAA,IAAC,GAAE,MAAKR,IAAE,QAAOkQ,GAAC,CAAC,GAAEpC,KAAE,IAAIJ,iBAAe,EAAC,MAAMlN,IAAE;AAAC,MAAAX,KAAEW;AAAA,IAAC,GAAE,MAAKR,IAAE,QAAOsP,GAAC,CAAC;AAAE,WAAO,EAAE5C,GAAE,QAAQ,CAAAlM,QAAI0C,GAAE,MAAM1C,EAAC,GAAEX,GAAE,MAAMW,EAAC,GAAEwK,MAAGtB,MAAGtD,GAAE,MAAM,GAAE,KAAO,GAAC,CAAC6E,IAAE6C,EAAC;AAAA,EAAC,EAAEtN,EAAC;AAAC;AAAC,MAAM,gCAA+B;AAAA,EAAC,cAAa;AAAC,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,WAAO,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,QAAO;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,IAAI,UAAU,iDAAiD;AAAE,KAAC,SAASA,IAAE;AAAC,UAAG,CAAC,GAAGA,EAAC,EAAE;AAAO,YAAMuI,KAAEvI,GAAE;AAA0B,MAAAA,GAAE,kBAAgB,MAAG,MAAIA,GAAE,OAAO,WAAS,GAAGA,EAAC,GAAE,GAAGuI,EAAC;AAAA,IAAE,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,QAAQvI,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,SAAS;AAAE,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,IAAI,UAAU,mDAAmD;AAAE,WAAO,SAASA,IAAEuI,IAAE;AAAC,UAAG,CAAC,GAAGvI,EAAC,EAAE;AAAO,YAAMkM,KAAElM,GAAE;AAA0B,UAAG,GAAGkM,EAAC,KAAG,EAAEA,EAAC,IAAE,EAAE,GAAEA,IAAE3D,IAAE,KAAE;AAAA,WAAM;AAAC,YAAI2D;AAAE,YAAG;AAAC,UAAAA,KAAElM,GAAE,uBAAuBuI,EAAC;AAAA,QAAC,SAAOA,IAAE;AAAC,gBAAM,GAAGvI,IAAEuI,EAAC,GAAEA;AAAA,QAAC;AAAC,YAAG;AAAC,aAAGvI,IAAEuI,IAAE2D,EAAC;AAAA,QAAC,SAAO3D,IAAE;AAAC,gBAAM,GAAGvI,IAAEuI,EAAC,GAAEA;AAAA,QAAC;AAAA,MAAC;AAAC,SAAGvI,EAAC;AAAA,IAAC,EAAE,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAMA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,OAAG,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,EAAEA,IAAE;AAAC,OAAG,IAAI;AAAE,UAAMuI,KAAE,KAAK,iBAAiBvI,EAAC;AAAE,WAAO,GAAG,IAAI,GAAEuI;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,EAAEvI,IAAE;AAAC,UAAMuI,KAAE,KAAK;AAA0B,QAAG,KAAK,OAAO,SAAO,GAAE;AAAC,YAAM2D,KAAE,GAAG,IAAI;AAAE,WAAK,mBAAiB,MAAI,KAAK,OAAO,UAAQ,GAAG,IAAI,GAAE,GAAG3D,EAAC,KAAG,GAAG,IAAI,GAAEvI,GAAE,YAAYkM,EAAC;AAAA,IAAC,MAAM,GAAE3D,IAAEvI,EAAC,GAAE,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,CAAC,CAAC,IAAG;AAAA,EAAA;AAAE;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,2BAA2B,KAAGA,cAAa;AAAgC;AAAC,SAAS,GAAGA,IAAE;AAAC,QAAMuI,KAAE,SAASvI,IAAE;AAAC,UAAMuI,KAAEvI,GAAE;AAA0B,QAAG,CAAC,GAAGA,EAAC,EAAE,QAAM;AAAG,QAAG,CAACA,GAAE,SAAS;AAAS,QAAG,GAAGuI,EAAC,KAAG,EAAEA,EAAC,IAAE,EAAE,QAAM;AAAG,QAAG,GAAGvI,EAAC,IAAE,EAAE,QAAM;AAAG,WAAQ;AAAA,EAAA,EAAEA,EAAC;AAAE,MAAG,CAACuI,GAAE;AAAO,MAAGvI,GAAE,SAAS,QAAO,MAAKA,GAAE,aAAW;AAAI,EAAAA,GAAE,WAAS;AAAG,IAAEA,GAAE,eAAc,GAAI,OAAKA,GAAE,WAAS,OAAGA,GAAE,eAAaA,GAAE,aAAW,OAAG,GAAGA,EAAC,IAAG,OAAQ,CAAAuI,QAAI,GAAGvI,IAAEuI,EAAC,GAAE,KAAO;AAAA;AAAC,SAAS,GAAGvI,IAAE;AAAC,EAAAA,GAAE,iBAAe,QAAOA,GAAE,mBAAiB,QAAOA,GAAE,yBAAuB;AAAM;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAA0B,iBAAakM,GAAE,WAAS,GAAGlM,EAAC,GAAE,GAAGA,EAAC,GAAE,GAAGkM,IAAE3D,EAAC;AAAE;AAAC,SAAS,GAAGvI,IAAE;AAAC,QAAMuI,KAAEvI,GAAE,0BAA0B;AAAO,SAAM,cAAYuI,KAAE,OAAK,aAAWA,KAAE,IAAEvI,GAAE,eAAaA,GAAE;AAAe;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAACA,GAAE,mBAAiB,eAAaA,GAAE,0BAA0B;AAAM;AAAC,SAAS,GAAGA,IAAEuI,IAAE2D,IAAE0C,IAAE;AAAC,QAAM3K,KAAE,OAAO,OAAO,gCAAgC,SAAS;AAAE,MAAIvB,IAAErD,IAAEuG;AAAE,EAAAlD,KAAE,WAAS6F,GAAE,QAAM,MAAIA,GAAE,MAAMtE,EAAC,IAAE,MAAI;AAAA,EAAA,GAAG5E,KAAE,WAASkJ,GAAE,OAAK,MAAIA,GAAE,KAAKtE,EAAC,IAAE,MAAI,EAAE,MAAM,GAAE2B,KAAE,WAAS2C,GAAE,SAAO,CAAAvI,OAAGuI,GAAE,OAAOvI,EAAC,IAAE,MAAI,EAAE,MAAM,GAAE,SAASA,IAAEuI,IAAE2D,IAAE0C,IAAE3K,IAAEvB,IAAErD,IAAE;AAAC,IAAAkJ,GAAE,4BAA0BvI,IAAEuI,GAAE,SAAO,QAAOA,GAAE,kBAAgB,QAAO,GAAGA,EAAC,GAAEA,GAAE,WAAS,OAAGA,GAAE,kBAAgB,OAAGA,GAAE,aAAW,OAAGA,GAAE,WAAS,OAAGA,GAAE,yBAAuBlJ,IAAEkJ,GAAE,eAAa7F,IAAE6F,GAAE,iBAAeqG,IAAErG,GAAE,mBAAiBtE,IAAEjE,GAAE,4BAA0BuI,IAAE,EAAE,EAAE2D,GAAG,CAAA,GAAG,OAAK3D,GAAE,WAAS,MAAG,GAAGA,EAAC,GAAE,OAAQ,CAAAvI,QAAI,GAAGuI,IAAEvI,EAAC,GAAE,KAAO;AAAA,EAAA,EAAEA,IAAEiE,IAAEvB,IAAErD,IAAEuG,IAAEsG,IAAE0C,EAAC;AAAC;AAAC,SAAS,GAAG5O,IAAE;AAAC,SAAO,IAAI,UAAU,6CAA6CA,EAAC,wDAAwD;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAAAA,OAAG,EAAElM,IAAEuI,IAAE,CAAC2D,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAAAA,OAAG,EAAElM,IAAEuI,IAAE,CAAC2D,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE2D,IAAE;AAAC,SAAO,EAAElM,IAAEkM,EAAC,GAAE,CAAAA,OAAG,EAAElM,IAAEuI,IAAE,CAAC2D,EAAC,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAEuI,IAAE;AAAC,MAAG,aAAWvI,KAAE,GAAGA,EAAC,IAAI,OAAM,IAAI,UAAU,GAAGuI,EAAC,KAAKvI,EAAC,2DAA2D;AAAE,SAAOA;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,MAAG,YAAUvI,KAAE,GAAGA,EAAC,IAAI,OAAM,IAAI,UAAU,GAAGuI,EAAC,KAAKvI,EAAC,iEAAiE;AAAE,SAAOA;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,IAAEvI,IAAEuI,EAAC;AAAE,QAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE,cAAa4O,KAAE,QAAM5O,KAAE,SAAOA,GAAE,eAAciE,KAAE,QAAMjE,KAAE,SAAOA,GAAE,cAAa0C,KAAE,QAAM1C,KAAE,SAAOA,GAAE;AAAO,SAAO,WAAS0C,MAAG,SAAS1C,IAAEuI,IAAE;AAAC,QAAG,CAAC,SAASvI,IAAE;AAAC,UAAG,YAAU,OAAOA,MAAG,SAAOA,GAAE,QAAM;AAAG,UAAG;AAAC,eAAM,aAAW,OAAOA,GAAE;AAAA,MAAO,SAAOA,IAAE;AAAC;MAAQ;AAAA,IAAC,EAAEA,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,yBAAyB;AAAA,EAAC,EAAE7F,IAAE,GAAG6F,EAAC,2BAA2B,GAAE,EAAC,cAAa,QAAQ2D,EAAC,GAAE,eAAc,QAAQ0C,EAAC,GAAE,cAAa,QAAQ3K,EAAC,GAAE,QAAOvB,GAAC;AAAC;AAAC,SAAS,GAAG1C,IAAEuI,IAAE;AAAC,IAAEvI,IAAEuI,EAAC;AAAE,QAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE;AAAS,IAAEkM,IAAE,YAAW,sBAAsB,GAAE,SAASlM,IAAEuI,IAAE;AAAC,QAAG,CAAC,EAAEvI,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,2BAA2B;AAAA,EAAC,EAAE2D,IAAE,GAAG3D,EAAC,6BAA6B;AAAE,QAAMqG,KAAE,QAAM5O,KAAE,SAAOA,GAAE;AAAS,SAAO,EAAE4O,IAAE,YAAW,sBAAsB,GAAE,SAAS5O,IAAEuI,IAAE;AAAC,QAAG,CAAC,EAAEvI,EAAC,EAAE,OAAM,IAAI,UAAU,GAAGuI,EAAC,2BAA2B;AAAA,EAAC,EAAEqG,IAAE,GAAGrG,EAAC,6BAA6B,GAAE,EAAC,UAAS2D,IAAE,UAAS0C,GAAC;AAAC;AAAC,OAAO,iBAAiB,gCAAgC,WAAU,EAAC,OAAM,EAAC,YAAW,KAAE,GAAE,SAAQ,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,gCAAgC,UAAU,OAAM,OAAO,GAAE,EAAE,gCAAgC,UAAU,SAAQ,SAAS,GAAE,EAAE,gCAAgC,UAAU,OAAM,OAAO,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,gCAAgC,WAAU,EAAE,aAAY,EAAC,OAAM,mCAAkC,cAAa,KAAE,CAAC;AAAC,IAAA,mBAAC,MAAM1B,gBAAc;AAAA,EAAC,YAAYlN,KAAE,CAAA,GAAGuI,KAAE,CAAA,GAAG;AAAC,eAASvI,KAAEA,KAAE,OAAK,EAAEA,IAAE,iBAAiB;AAAE,UAAMkM,KAAE,GAAG3D,IAAE,kBAAkB,GAAEqG,KAAE,SAAS5O,IAAEuI,IAAE;AAAC,QAAEvI,IAAEuI,EAAC;AAAE,YAAM2D,KAAElM,IAAE4O,KAAE,QAAM1C,KAAE,SAAOA,GAAE,uBAAsBjI,KAAE,QAAMiI,KAAE,SAAOA,GAAE,QAAOxJ,KAAE,QAAMwJ,KAAE,SAAOA,GAAE,MAAK7M,KAAE,QAAM6M,KAAE,SAAOA,GAAE,OAAMtG,KAAE,QAAMsG,KAAE,SAAOA,GAAE;AAAK,aAAM,EAAC,uBAAsB,WAAS0C,KAAE,SAAO,EAAEA,IAAE,GAAGrG,EAAC,0CAA0C,GAAE,QAAO,WAAStE,KAAE,SAAO,GAAGA,IAAEiI,IAAE,GAAG3D,EAAC,2BAA2B,GAAE,MAAK,WAAS7F,KAAE,SAAO,GAAGA,IAAEwJ,IAAE,GAAG3D,EAAC,yBAAyB,GAAE,OAAM,WAASlJ,KAAE,SAAO,GAAGA,IAAE6M,IAAE,GAAG3D,EAAC,0BAA0B,GAAE,MAAK,WAAS3C,KAAE,SAAO,GAAGA,IAAE,GAAG2C,EAAC,yBAAyB,EAAC;AAAA,IAAC,EAAEvI,IAAE,iBAAiB;AAAE,QAAIiE;AAAE,SAAIA,KAAE,MAAM,SAAO,YAAWA,GAAE,UAAQ,QAAOA,GAAE,eAAa,QAAOA,GAAE,aAAW,OAAG,YAAU2K,GAAE,MAAK;AAAC,UAAG,WAAS1C,GAAE,KAAK,OAAM,IAAI,WAAW,4DAA4D;AAAE,SAAG,MAAK0C,IAAE,GAAG1C,IAAE,CAAC,CAAC;AAAA,IAAC,OAAK;AAAC,YAAMlM,KAAE,GAAGkM,EAAC;AAAE,SAAG,MAAK0C,IAAE,GAAG1C,IAAE,CAAC,GAAElM,EAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,QAAQ;AAAE,WAAO,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,OAAOA,IAAE;AAAC,WAAO,GAAG,IAAI,IAAE,GAAG,IAAI,IAAE,EAAE,IAAI,UAAU,kDAAkD,CAAC,IAAE,GAAG,MAAKA,EAAC,IAAE,EAAE,GAAG,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,UAAUA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,WAAW;AAAE,WAAO,WAAS,SAASA,IAAEuI,IAAE;AAAC,QAAEvI,IAAEuI,EAAC;AAAE,YAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE;AAAK,aAAM,EAAC,MAAK,WAASkM,KAAE,SAAO,GAAGA,IAAE,GAAG3D,EAAC,yBAAyB,EAAC;AAAA,IAAC,EAAEvI,IAAE,iBAAiB,EAAE,OAAK,IAAI,4BAA4B,IAAI,IAAE,SAASA,IAAE;AAAC,aAAO,IAAI,yBAAyBA,EAAC;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAA,EAAC,YAAYA,IAAEuI,KAAE,CAAE,GAAC;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,MAAEvI,IAAE,GAAE,aAAa;AAAE,UAAMkM,KAAE,GAAGlM,IAAE,iBAAiB,GAAE4O,KAAE,GAAGrG,IAAE,kBAAkB;AAAE,QAAG,KAAK,OAAO,OAAM,IAAI,UAAU,gFAAgF;AAAE,QAAG2D,GAAE,SAAS,OAAO,OAAM,IAAI,UAAU,gFAAgF;AAAE,WAAO,EAAE,GAAG,MAAKA,GAAE,UAAS0C,GAAE,cAAaA,GAAE,cAAaA,GAAE,eAAcA,GAAE,MAAM,CAAC,GAAE1C,GAAE;AAAA,EAAQ;AAAA,EAAC,OAAOlM,IAAEuI,KAAE,CAAA,GAAG;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,QAAO,EAAE,GAAG,QAAQ,CAAC;AAAE,QAAG,WAASvI,GAAE,QAAO,EAAE,sCAAsC;AAAE,QAAG,CAAC,EAAEA,EAAC,EAAE,QAAO,EAAE,IAAI,UAAU,2EAA2E,CAAC;AAAE,QAAIkM;AAAE,QAAG;AAAC,MAAAA,KAAE,GAAG3D,IAAE,kBAAkB;AAAA,IAAC,SAAOvI,IAAE;AAAC,aAAO,EAAEA,EAAC;AAAA,IAAC;AAAC,WAAO,KAAK,SAAO,EAAE,IAAI,UAAU,2EAA2E,CAAC,IAAEA,GAAE,SAAO,EAAE,IAAI,UAAU,2EAA2E,CAAC,IAAE,GAAG,MAAKA,IAAEkM,GAAE,cAAaA,GAAE,cAAaA,GAAE,eAAcA,GAAE,MAAM;AAAA,EAAC;AAAA,EAAC,MAAK;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,OAAM,GAAG,KAAK;AAAE,QAAG,KAAK,OAAO,OAAM,IAAI,UAAU,+CAA+C;AAAE,WAAO,GAAG,IAAI;AAAA,EAAC;AAAA,EAAC,OAAOlM,IAAE;AAAC,QAAG,CAAC,EAAE,IAAI,EAAE,OAAM,GAAG,QAAQ;AAAE,WAAO,SAASA,IAAEuI,IAAE;AAAC,YAAM2D,KAAElM,GAAE,UAAS,GAAG4O,KAAE,IAAI,GAAG1C,IAAE3D,EAAC,GAAEtE,KAAE,OAAO,OAAO,EAAE;AAAE,aAAOA,GAAE,qBAAmB2K,IAAE3K;AAAA,IAAC,EAAE,MAAK,SAASjE,IAAEuI,IAAE;AAAC,QAAEvI,IAAEuI,EAAC;AAAE,YAAM2D,KAAE,QAAMlM,KAAE,SAAOA,GAAE;AAAc,aAAM,EAAC,eAAc,QAAQkM,EAAC,EAAC;AAAA,IAAC,EAAElM,IAAE,iBAAiB,EAAE,aAAa;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,2BAA2B,KAAGA,cAAakN;AAAe;AAAC,SAAS,GAAGlN,IAAE;AAAC,SAAO,WAASA,GAAE;AAAO;AAAC,SAAS,GAAGA,IAAEkM,IAAE;AAAC,MAAGlM,GAAE,aAAW,MAAG,aAAWA,GAAE,OAAO,QAAO,EAAE,MAAM;AAAE,MAAG,cAAYA,GAAE,OAAO,QAAO,EAAEA,GAAE,YAAY;AAAE,KAAGA,EAAC;AAAE,QAAM4O,KAAE5O,GAAE;AAAQ,MAAG,WAAS4O,MAAG,GAAGA,EAAC,GAAE;AAAC,UAAM5O,KAAE4O,GAAE;AAAkB,IAAAA,GAAE,oBAAkB,IAAI,KAAE5O,GAAE,QAAS,CAAAA,OAAG;AAAC,MAAAA,GAAE,YAAY,MAAM;AAAA,IAAC,CAAC;AAAA,EAAE;AAAC,SAAO,EAAEA,GAAE,0BAA0B,CAAC,EAAEkM,EAAC,GAAE,CAAC;AAAC;AAAC,SAAS,GAAGlM,IAAE;AAAC,EAAAA,GAAE,SAAO;AAAS,QAAMuI,KAAEvI,GAAE;AAAQ,MAAG,WAASuI,OAAI,EAAEA,EAAC,GAAE,EAAEA,EAAC,IAAG;AAAC,UAAMvI,KAAEuI,GAAE;AAAc,IAAAA,GAAE,gBAAc,IAAI,KAAEvI,GAAE,QAAS,CAAAA,OAAG;AAAC,MAAAA,GAAE,YAAW;AAAA,IAAE,CAAC;AAAA,EAAE;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,EAAAvI,GAAE,SAAO,WAAUA,GAAE,eAAauI;AAAE,QAAM2D,KAAElM,GAAE;AAAQ,aAASkM,OAAI,EAAEA,IAAE3D,EAAC,GAAE,EAAE2D,EAAC,IAAE,EAAEA,IAAE3D,EAAC,IAAE,GAAG2D,IAAE3D,EAAC;AAAE;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAO,IAAI,UAAU,4BAA4BA,EAAC,uCAAuC;AAAC;AAAuI,OAAO,iBAAiBkN,iBAAe,WAAU,EAAC,QAAO,EAAC,YAAW,KAAE,GAAE,WAAU,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,GAAE,KAAI,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,GAAE,QAAO,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAEA,iBAAe,UAAU,QAAO,QAAQ,GAAE,EAAEA,iBAAe,UAAU,WAAU,WAAW,GAAE,EAAEA,iBAAe,UAAU,aAAY,aAAa,GAAE,EAAEA,iBAAe,UAAU,QAAO,QAAQ,GAAE,EAAEA,iBAAe,UAAU,KAAI,KAAK,GAAE,EAAEA,iBAAe,UAAU,QAAO,QAAQ,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAeA,iBAAe,WAAU,EAAE,aAAY,EAAC,OAAM,kBAAiB,cAAa,KAAE,CAAC,GAAE,YAAU,OAAO,EAAE,iBAAe,OAAO,eAAeA,iBAAe,WAAU,EAAE,eAAc,EAAC,OAAMA,iBAAe,UAAU,QAAO,UAAS,MAAG,cAAa,KAAE,CAAC;AAAE,MAAM,KAAG,CAAAlN,OAAGA,GAAE;AAAW,EAAE,IAAG,MAAM;AAAw3B,MAAM,KAAG,MAAI;AAAE,EAAE,IAAG,MAAM;AAA21J,SAAS,GAAGA,IAAEuI,IAAE;AAAC,KAAGvI,IAAEuI,EAAC,GAAE,GAAGvI,IAAEuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAEuI,IAAE;AAAC,KAAGvI,GAAE,0BAA0B,GAAE,SAASA,IAAEuI,IAAE;AAAC,IAAAvI,GAAE,oBAAoB,MAAMuI,EAAC;AAAE,mBAAavI,GAAE,kBAAgB,GAAGA,IAAEuI,EAAC;AAAA,EAAC,EAAEvI,IAAEuI,EAAC,GAAEvI,GAAE,iBAAe,GAAGA,IAAE,KAAE;AAAC;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAO,aAAGvI,GAAE,8BAA4BA,GAAE,mCAAoC,GAACA,GAAE,6BAA2B,EAAG,CAAAuI,OAAG;AAAC,IAAAvI,GAAE,qCAAmCuI;AAAA,EAAC,CAAC,GAAGvI,GAAE,gBAAcuI;AAAC;AAAiP,MAAM,iCAAgC;AAAA,EAAC,cAAa;AAAC,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,aAAa;AAAE,WAAO,GAAG,KAAK,0BAA0B;AAAA,EAAC;AAAA,EAAC,QAAQvI,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,SAAS;AAAE,OAAG,MAAKA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAMA,IAAE;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,OAAO;AAAE,QAAIuI;AAAE,IAAAA,KAAEvI,IAAE,GAAG,KAAK,4BAA2BuI,EAAC;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,QAAG,CAAC,GAAG,IAAI,EAAE,OAAM,GAAG,WAAW;AAAE,KAAC,SAASvI,IAAE;AAAC,YAAMuI,KAAEvI,GAAE;AAA2B,SAAGuI,EAAC,KAAG,GAAGA,EAAC;AAAE,YAAM2D,KAAE,IAAI,UAAU,4BAA4B;AAAE,SAAG3D,IAAE2D,EAAC;AAAA,IAAC,EAAE,IAAI;AAAA,EAAC;AAAC;AAAC,SAAS,GAAGlM,IAAE;AAAC,SAAM,CAAC,CAAC,EAAEA,EAAC,MAAI,CAAC,CAAC,OAAO,UAAU,eAAe,KAAKA,IAAE,4BAA4B,KAAGA,cAAa;AAAiC;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,sBAAoB,QAAOA,GAAE,kBAAgB;AAAM;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,QAAM2D,KAAElM,GAAE;AAA2B,MAAG,CAAC,GAAGkM,EAAC,EAAE,OAAM,IAAI,UAAU,sDAAsD;AAAE,MAAG;AAAC,KAAC,SAASlM,IAAEuI,IAAE;AAAC,MAAAvI,GAAE,mBAAiB;AAAG,UAAG;AAAC,QAAAA,GAAE,oBAAoB,QAAQuI,EAAC;AAAA,MAAC,SAAOA,IAAE;AAAC,cAAM,GAAGvI,IAAEuI,EAAC,GAAEA;AAAA,MAAC;AAAA,IAAC,EAAE2D,IAAE3D,EAAC;AAAA,EAAC,SAAOvI,IAAE;AAAC,UAAM,GAAGkM,IAAElM,EAAC,GAAEkM,GAAE;AAAA,EAAoB;AAAC,QAAM0C,KAAE,SAAS5O,IAAE;AAAC,WAAM,CAAC,SAASA,IAAE;AAAC,UAAG,CAAC,GAAGA,EAAC,EAAE,QAAM;AAAG,UAAGA,GAAE,iBAAiB,QAAM;AAAG,UAAG,GAAGA,EAAC,IAAE,EAAE,QAAM;AAAG,aAAQ;AAAA,IAAA,EAAEA,EAAC;AAAA,EAAC,EAAEkM,EAAC;AAAE,EAAA0C,OAAI1C,GAAE,iBAAe,GAAGA,IAAE,IAAE;AAAC;AAA8G,SAAS,GAAGlM,IAAE;AAAC,SAAO,IAAI,UAAU,8CAA8CA,EAAC,yDAAyD;AAAC;AAA6G,SAAS,GAAGA,IAAE;AAAC,SAAM,CAACA,GAAE,2BAAyB,eAAaA,GAAE;AAAc;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,iBAAe,UAASA,GAAE,0BAAwB,MAAGA,GAAE,oBAAoB,MAAO;AAAA;AAAC,SAAS,GAAGA,IAAEuI,IAAE;AAAC,iBAAavI,GAAE,mBAAiBA,GAAE,iBAAe,WAAUA,GAAE,uBAAqBuI,KAAGvI,GAAE,oBAAoB,MAAMuI,EAAC;AAAC;AAAC,SAAS,GAAGvI,IAAE;AAAC,SAAOA,GAAE,oBAAoB;AAAW;AAA8D,SAAS,GAAGA,IAAEuI,IAAE;AAAC,EAAAvI,GAAE,iBAAe,YAAWA,GAAE,uBAAqBuI,IAAE,CAAC,SAASvI,IAAE;AAAC,WAAOA,GAAE;AAAA,EAA6B,EAAEA,EAAC,KAAGA,GAAE,oBAAkB,GAAGA,EAAC;AAAC;AAAC,SAAS,GAAGA,IAAE;AAAC,EAAAA,GAAE,iBAAe;AAAS;AAAqD,OAAO,iBAAiB,iCAAiC,WAAU,EAAC,SAAQ,EAAC,YAAW,KAAE,GAAE,OAAM,EAAC,YAAW,KAAE,GAAE,WAAU,EAAC,YAAW,KAAE,GAAE,aAAY,EAAC,YAAW,KAAE,EAAC,CAAC,GAAE,EAAE,iCAAiC,UAAU,SAAQ,SAAS,GAAE,EAAE,iCAAiC,UAAU,OAAM,OAAO,GAAE,EAAE,iCAAiC,UAAU,WAAU,WAAW,GAAE,YAAU,OAAO,EAAE,eAAa,OAAO,eAAe,iCAAiC,WAAU,EAAE,aAAY,EAAC,OAAM,oCAAmC,cAAa,KAAE,CAAC;ACPvgzD,MAAM2P,eAAa,CAAC,UAAW,OAAO,UAAU;ACAvD;AAEA,MAAM,aAAa;AACnB,gBAAgB,UAAU,MAAM;AAC5B,QAAM,MAAM,KAAK,aAAa,KAAK;AACnC,MAAI,WAAW,KAAK;AACpB,SAAO,aAAa,KAAK;AACrB,UAAM,OAAO,KAAK,IAAI,MAAM,UAAU,UAAU;AAChD,UAAM,QAAQ,KAAK,OAAO,MAAM,UAAU,WAAW,IAAI;AACzD,gBAAY,MAAM;AAClB,UAAM,IAAI,WAAW,KAAK;AAAA,EAClC;AACA;AACA,gBAAgB,gBAAgB1B,OAAM;AAClC,MAAI,WAAW;AACf,SAAO,aAAaA,MAAK,MAAM;AAC3B,UAAM,QAAQA,MAAK,MAAM,UAAU,KAAK,IAAIA,MAAK,MAAM,WAAW,UAAU,CAAC;AAC7E,UAAM,SAAS,MAAM,MAAM,YAAa;AACxC,gBAAY,OAAO;AACnB,UAAM,IAAI,WAAW,MAAM;AAAA,EACnC;AACA;AACO,gBAAgB,iBAAiB,OAAO2B,SAAQ,OAAO;AAC1D,aAAW,QAAQ,OAAO;AACtB,QAAI,YAAY,OAAO,IAAI,GAAG;AAC1B,UAAIA,QAAO;AACP,eAAO,UAAU,IAAI;AAAA,MACrC,OACiB;AACD,cAAM;AAAA,MACtB;AAAA,IACA,WACiBD,aAAW,KAAK,MAAM,GAAG;AAC9B,aAAO,KAAK,OAAQ;AAAA,IAChC,OACa;AACD,aAAO,gBAAgB,IAAI;AAAA,IACvC;AAAA,EACA;AACA;AACO,UAAU,UAAU,WAAW,UAAU,QAAQ,GAAG,KAAK;AAC5D,UAAQ,QAAQ,QAAQ,SAAS,MAAO,MAAM;AAC9C,MAAI,gBAAgB,QAAQ,IACtB,KAAK,IAAI,WAAW,OAAO,CAAC,IAC5B,KAAK,IAAI,OAAO,QAAQ;AAC9B,MAAI,cAAc,MAAM,IAClB,KAAK,IAAI,WAAW,KAAK,CAAC,IAC1B,KAAK,IAAI,KAAK,QAAQ;AAC5B,QAAM,OAAO,KAAK,IAAI,cAAc,eAAe,CAAC;AACpD,MAAI,QAAQ;AACZ,aAAW,QAAQ,WAAW;AAC1B,QAAI,SAAS,MAAM;AACf;AAAA,IACZ;AACQ,UAAM,WAAW,YAAY,OAAO,IAAI,IAAI,KAAK,aAAa,KAAK;AACnE,QAAI,iBAAiB,YAAY,eAAe;AAC5C,uBAAiB;AACjB,qBAAe;AAAA,IAC3B,OACa;AACD,UAAI;AACJ,UAAI,YAAY,OAAO,IAAI,GAAG;AAC1B,gBAAQ,KAAK,SAAS,eAAe,KAAK,IAAI,UAAU,WAAW,CAAC;AACpE,iBAAS,MAAM;AAAA,MAC/B,OACiB;AACD,gBAAQ,KAAK,MAAM,eAAe,KAAK,IAAI,UAAU,WAAW,CAAC;AACjE,iBAAS,MAAM;AAAA,MAC/B;AACY,qBAAe;AACf,sBAAgB;AAChB,YAAM;AAAA,IAClB;AAAA,EACA;AACA;AC1EA;AACA,IAAIE,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAIsF,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAI,aAAa,YAAY;AAItB,IAAA,SAAA,MAAMwD,MAAK;AAAA,EACd,YAAY,YAAY,IAAI,UAAU,CAAA,GAAI;AACtC,gBAAY,IAAI,MAAM,EAAE;AACxB,eAAW,IAAI,MAAM,EAAE;AACvB,eAAW,IAAI,MAAM,CAAC;AACtB,gBAAY,QAAQ,YAAY,SAAS,UAAW,UAAU;AAC9D,QAAI,OAAO,cAAc,YAAY,cAAc,MAAM;AACrD,YAAM,IAAI,UAAU,mFACyC;AAAA,IACzE;AACQ,QAAI,CAAC2B,aAAW,UAAU,OAAO,QAAQ,CAAC,GAAG;AACzC,YAAM,IAAI,UAAU,kFACwC;AAAA,IACxE;AACQ,QAAI,OAAO,YAAY,YAAY,CAACA,aAAW,OAAO,GAAG;AACrD,YAAM,IAAI,UAAU,uEAAuE;AAAA,IACvG;AACQ,UAAM,UAAU,IAAI,YAAa;AACjC,eAAW,OAAO,WAAW;AACzB,UAAI;AACJ,UAAI,YAAY,OAAO,GAAG,GAAG;AACzB,eAAO,IAAI,WAAW,IAAI,OAAO,MAAM,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU,CAAC;AAAA,MACvG,WACqB,eAAe,aAAa;AACjC,eAAO,IAAI,WAAW,IAAI,MAAM,CAAC,CAAC;AAAA,MAClD,WACqB,eAAe3B,OAAM;AAC1B,eAAO;AAAA,MACvB,OACiB;AACD,eAAO,QAAQ,OAAO,OAAO,GAAG,CAAC;AAAA,MACjD;AACY8B,+BAAuB,MAAM,YAAYD,yBAAuB,MAAM,YAAY,GAAG,KAAK,YAAY,OAAO,IAAI,IAAI,KAAK,aAAa,KAAK,OAAO,GAAG;AACtJA,+BAAuB,MAAM,aAAa,GAAG,EAAE,KAAK,IAAI;AAAA,IACpE;AACQ,UAAM,OAAO,QAAQ,SAAS,SAAY,KAAK,OAAO,QAAQ,IAAI;AAClEC,6BAAuB,MAAM,YAAY,iBAAiB,KAAK,IAAI,IAAI,OAAO,IAAI,GAAG;AAAA,EAC7F;AAAA,EACI,SAAS,cAAc,oBAAI,WAAW,aAAa,oBAAI,QAAO,GAAI,aAAa,oBAAI,QAAS,GAAE,OAAO,YAAW,EAAG,OAAO;AACtH,WAAO,QAAQ,SACR,OAAO,UAAU,YACjBH,aAAW,MAAM,WAAW,MAC3BA,aAAW,MAAM,MAAM,KACpBA,aAAW,MAAM,WAAW,MAChC,gBAAgB,KAAK,MAAM,OAAO,WAAW,CAAC,CAAC;AAAA,EAC9D;AAAA,EACI,IAAI,OAAO;AACP,WAAOE,yBAAuB,MAAM,YAAY,GAAG;AAAA,EAC3D;AAAA,EACI,IAAI,OAAO;AACP,WAAOA,yBAAuB,MAAM,YAAY,GAAG;AAAA,EAC3D;AAAA,EACI,MAAM,OAAO,KAAK,aAAa;AAC3B,WAAO,IAAI7B,MAAK,UAAU6B,yBAAuB,MAAM,aAAa,GAAG,GAAG,KAAK,MAAM,OAAO,GAAG,GAAG;AAAA,MAC9F,MAAM;AAAA,IAClB,CAAS;AAAA,EACT;AAAA,EACI,MAAM,OAAO;AACT,UAAM,UAAU,IAAI,YAAa;AACjC,QAAI,SAAS;AACb,qBAAiB,SAAS,iBAAiBA,yBAAuB,MAAM,aAAa,GAAG,CAAC,GAAG;AACxF,gBAAU,QAAQ,OAAO,OAAO,EAAE,QAAQ,MAAM;AAAA,IAC5D;AACQ,cAAU,QAAQ,OAAQ;AAC1B,WAAO;AAAA,EACf;AAAA,EACI,MAAM,cAAc;AAChB,UAAM,OAAO,IAAI,WAAW,KAAK,IAAI;AACrC,QAAI,SAAS;AACb,qBAAiB,SAAS,iBAAiBA,yBAAuB,MAAM,aAAa,GAAG,CAAC,GAAG;AACxF,WAAK,IAAI,OAAO,MAAM;AACtB,gBAAU,MAAM;AAAA,IAC5B;AACQ,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,SAAS;AACL,UAAM,WAAW,iBAAiBA,yBAAuB,MAAM,aAAa,GAAG,GAAG,IAAI;AACtF,WAAO,IAAI3C,iBAAe;AAAA,MACtB,MAAM,KAAK,YAAY;AACnB,cAAM,EAAE,OAAO,KAAM,IAAG,MAAM,SAAS,KAAM;AAC7C,YAAI,MAAM;AACN,iBAAO,eAAe,MAAM,WAAW,OAAO;AAAA,QAClE;AACgB,mBAAW,QAAQ,KAAK;AAAA,MAC3B;AAAA,MACD,MAAM,SAAS;AACX,cAAM,SAAS,OAAQ;AAAA,MACvC;AAAA,IACA,CAAS;AAAA,EACT;AAAA,EACI,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACf;AACA;AACA,OAAO,iBAAiBc,OAAK,WAAW;AAAA,EACpC,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,OAAO,EAAE,YAAY,KAAM;AAAA,EAC3B,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,MAAM,EAAE,YAAY,KAAM;AAAA,EAC1B,aAAa,EAAE,YAAY,KAAI;AACnC,CAAC;ACrHD,IAAI8B,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIqF,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,YAAY;AAET,MAAM,aAAawD,OAAK;AAAA,EAC3B,YAAY,UAAU,MAAM,UAAU,CAAA,GAAI;AACtC,UAAM,UAAU,OAAO;AACvB,eAAW,IAAI,MAAM,MAAM;AAC3B,uBAAmB,IAAI,MAAM,CAAC;AAC9B,QAAI,UAAU,SAAS,GAAG;AACtB,YAAM,IAAI,UAAU,8DACF,UAAU,MAAM,WAAW;AAAA,IACzD;AACQ8B,6BAAuB,MAAM,YAAY,OAAO,IAAI,GAAG,GAAG;AAC1D,UAAM,eAAe,QAAQ,iBAAiB,SACxC,KAAK,IAAG,IACR,OAAO,QAAQ,YAAY;AACjC,QAAI,CAAC,OAAO,MAAM,YAAY,GAAG;AAC7BA,+BAAuB,MAAM,oBAAoB,cAAc,GAAG;AAAA,IAC9E;AAAA,EACA;AAAA,EACI,SAAS,aAAa,oBAAI,QAAO,GAAI,qBAAqB,oBAAI,QAAO,GAAI,OAAO,YAAa,EAAC,OAAO;AACjG,WAAO,iBAAiB9B,UACjB,MAAM,OAAO,WAAW,MAAM,UAC9B,OAAO,MAAM,SAAS;AAAA,EACrC;AAAA,EACI,IAAI,OAAO;AACP,WAAO6B,yBAAuB,MAAM,YAAY,GAAG;AAAA,EAC3D;AAAA,EACI,IAAI,eAAe;AACf,WAAOA,yBAAuB,MAAM,oBAAoB,GAAG;AAAA,EACnE;AAAA,EACI,IAAI,qBAAqB;AACrB,WAAO;AAAA,EACf;AAAA,EACI,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACf;AACA;AC9CY,MAAC,SAAS,CAAC,UAAU,iBAAiB;ACA3C,MAAM,SAAS,CAAC,UAAU,iBAAiB7B;ACA3C,MAAM,8BAA8B,UAAU,MAAM;GAAK,iGACd;ACFlD,IAAI6B,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,qBAAqB,mBAAmB;AAOrC,IAAA,aAAA,MAAMwC,UAAS;AAAA,EAClB,YAAY,SAAS;AACjB,wBAAoB,IAAI,IAAI;AAC5B,sBAAkB,IAAI,MAAM,oBAAI,IAAG,CAAE;AACrC,QAAI,SAAS;AACT,kCAA6B;AAC7B,cAAQ,QAAQ,CAAC,EAAE,MAAM,OAAO,eAAe,KAAK,OAAO,MAAM,OAAO,QAAQ,CAAC;AAAA,IAC7F;AAAA,EACA;AAAA,EACI,SAAS,oBAAoB,oBAAI,QAAO,GAAI,sBAAsB,oBAAI,QAAO,GAAI,OAAO,YAAa,EAAC,OAAO;AACzG,WAAO,QAAQ,SACR2C,aAAW,MAAM,WAAW,KAC5B,MAAM,OAAO,WAAW,MAAM,cAC9BA,aAAW,MAAM,MAAM,KACvBA,aAAW,MAAM,GAAG,KACpBA,aAAW,MAAM,GAAG,KACpBA,aAAW,MAAM,MAAM,KACvBA,aAAW,MAAM,GAAG,KACpBA,aAAW,MAAM,MAAM,KACvBA,aAAW,MAAM,OAAO,KACxBA,aAAW,MAAM,MAAM,KACvBA,aAAW,MAAM,IAAI,KACrBA,aAAW,MAAM,OAAO,QAAQ,CAAC,KACjCA,aAAW,MAAM,OAAO,CAAC;AAAA,EACxC;AAAA,EACI,OAAO,MAAM,OAAO,UAAU;AAC1BE,6BAAuB,MAAM,qBAAqB,KAAK,kBAAkB,EAAE,KAAK,MAAM;AAAA,MAClF;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,UAAU;AAAA,IAClC,CAAS;AAAA,EACT;AAAA,EACI,IAAI,MAAM,OAAO,UAAU;AACvBA,6BAAuB,MAAM,qBAAqB,KAAK,kBAAkB,EAAE,KAAK,MAAM;AAAA,MAClF;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,UAAU;AAAA,IAClC,CAAS;AAAA,EACT;AAAA,EACI,IAAI,MAAM;AACN,UAAM,QAAQA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,OAAO,IAAI,CAAC;AACnF,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACnB;AACQ,WAAO,MAAM,CAAC;AAAA,EACtB;AAAA,EACI,OAAO,MAAM;AACT,UAAM,QAAQA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,OAAO,IAAI,CAAC;AACnF,QAAI,CAAC,OAAO;AACR,aAAO,CAAE;AAAA,IACrB;AACQ,WAAO,MAAM,MAAO;AAAA,EAC5B;AAAA,EACI,IAAI,MAAM;AACN,WAAOA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,OAAO,IAAI,CAAC;AAAA,EACpF;AAAA,EACI,OAAO,MAAM;AACTA,6BAAuB,MAAM,mBAAmB,GAAG,EAAE,OAAO,OAAO,IAAI,CAAC;AAAA,EAChF;AAAA,EACI,CAAC,OAAO;AACJ,eAAW,OAAOA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,QAAQ;AAC3E,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,CAAC,UAAU;AACP,eAAW,QAAQ,KAAK,QAAQ;AAC5B,YAAM,SAAS,KAAK,OAAO,IAAI;AAC/B,iBAAW,SAAS,QAAQ;AACxB,cAAM,CAAC,MAAM,KAAK;AAAA,MAClC;AAAA,IACA;AAAA,EACA;AAAA,EACI,CAAC,SAAS;AACN,eAAW,CAAA,EAAG,KAAK,KAAK,MAAM;AAC1B,YAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,EAAE,qBAAqB,SAASE,oBAAmB,EAAE,MAAM,UAAU,QAAQ,UAAU,cAAc;AACjG,UAAM,aAAa,SAAS,WAAW;AACvC,QAAI,aAAa,GAAG;AAChB,YAAM,IAAI,UAAU,sBAAsB,UAAU,mDACZ,UAAU,WAAW;AAAA,IACzE;AACQ,WAAO,OAAO,IAAI;AAClB,QAAI;AACJ,QAAI,OAAO,QAAQ,GAAG;AAClB,cAAQ,aAAa,SACf,WACA,IAAI,KAAK,CAAC,QAAQ,GAAG,UAAU;AAAA,QAC7B,MAAM,SAAS;AAAA,QACf,cAAc,SAAS;AAAA,MAC3C,CAAiB;AAAA,IACjB,WACiB,OAAO,QAAQ,GAAG;AACvB,cAAQ,IAAI,KAAK,CAAC,QAAQ,GAAG,aAAa,SAAY,SAAS,UAAU;AAAA,QACrE,MAAM,SAAS;AAAA,MAC/B,CAAa;AAAA,IACb,WACiB,UAAU;AACf,YAAM,IAAI,UAAU,sBAAsB,UAAU,qDACV;AAAA,IACtD,OACa;AACD,cAAQ,OAAO,QAAQ;AAAA,IACnC;AACQ,UAAM,SAASF,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,IAAI;AAC5E,QAAI,CAAC,QAAQ;AACT,aAAO,KAAKA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC;AAAA,IAC9F;AACQ,QAAI,CAAC,QAAQ;AACT,aAAO,KAAKA,yBAAuB,MAAM,mBAAmB,GAAG,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC;AAAA,IAC9F;AACQ,WAAO,KAAK,KAAK;AAAA,EACzB,GAAO,OAAO,aAAa;AACnB,WAAO,KAAK,QAAS;AAAA,EAC7B;AAAA,EACI,QAAQ,UAAU,SAAS;AACvB,eAAW,CAAC,MAAM,KAAK,KAAK,MAAM;AAC9B,eAAS,KAAK,SAAS,OAAO,MAAM,IAAI;AAAA,IACpD;AAAA,EACA;AAAA,EACI,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACf;AAAA,EACI,CAAC,QAAQ,MAAM,IAAI;AACf,WAAO,KAAK,OAAO,WAAW;AAAA,EACtC;AACA;;;;;;;AC3IA,MAAIzQ,KAAI;AACR,MAAII,KAAIJ,KAAI;AACZ,MAAI8J,KAAI1J,KAAI;AACZ,MAAIgM,KAAItC,KAAI;AACZ,MAAIuB,KAAIe,KAAI;AACZ,MAAIkE,KAAIlE,KAAI;AAgBZ,OAAiB,SAAU,KAAK,SAAS;AACvC,cAAU,WAAW,CAAE;AACvB,QAAI,OAAO,OAAO;AAClB,QAAI,SAAS,YAAY,IAAI,SAAS,GAAG;AACvC,aAAOlI,OAAM,GAAG;AAAA,IACjB,WAAU,SAAS,YAAY,SAAS,GAAG,GAAG;AAC7C,aAAO,QAAQ,OAAO,QAAQ,GAAG,IAAI,SAAS,GAAG;AAAA,IACrD;AACE,UAAM,IAAI;AAAA,MACR,0DACE,KAAK,UAAU,GAAG;AAAA,IACrB;AAAA,EACF;AAUD,WAASA,OAAMhE,MAAK;AAClB,IAAAA,OAAM,OAAOA,IAAG;AAChB,QAAIA,KAAI,SAAS,KAAK;AACpB;AAAA,IACJ;AACE,QAAI,QAAQ,mIAAmI;AAAA,MAC7IA;AAAA,IACD;AACD,QAAI,CAAC,OAAO;AACV;AAAA,IACJ;AACE,QAAI2E,KAAI,WAAW,MAAM,CAAC,CAAC;AAC3B,QAAI,QAAQ,MAAM,CAAC,KAAK,MAAM,YAAa;AAC3C,YAAQ,MAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOA,KAAIyL;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOzL,KAAIwG;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOxG,KAAIuH;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOvH,KAAIiF;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOjF,KAAIzE;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOyE,KAAI7E;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO6E;AAAA,MACT;AACE,eAAO;AAAA,IACb;AAAA,EACA;AAUA,WAAS,SAAS+L,KAAI;AACpB,QAAI,QAAQ,KAAK,IAAIA,GAAE;AACvB,QAAI,SAASxE,IAAG;AACd,aAAO,KAAK,MAAMwE,MAAKxE,EAAC,IAAI;AAAA,IAChC;AACE,QAAI,SAAStC,IAAG;AACd,aAAO,KAAK,MAAM8G,MAAK9G,EAAC,IAAI;AAAA,IAChC;AACE,QAAI,SAAS1J,IAAG;AACd,aAAO,KAAK,MAAMwQ,MAAKxQ,EAAC,IAAI;AAAA,IAChC;AACE,QAAI,SAASJ,IAAG;AACd,aAAO,KAAK,MAAM4Q,MAAK5Q,EAAC,IAAI;AAAA,IAChC;AACE,WAAO4Q,MAAK;AAAA,EACd;AAUA,WAAS,QAAQA,KAAI;AACnB,QAAI,QAAQ,KAAK,IAAIA,GAAE;AACvB,QAAI,SAASxE,IAAG;AACd,aAAO,OAAOwE,KAAI,OAAOxE,IAAG,KAAK;AAAA,IACrC;AACE,QAAI,SAAStC,IAAG;AACd,aAAO,OAAO8G,KAAI,OAAO9G,IAAG,MAAM;AAAA,IACtC;AACE,QAAI,SAAS1J,IAAG;AACd,aAAO,OAAOwQ,KAAI,OAAOxQ,IAAG,QAAQ;AAAA,IACxC;AACE,QAAI,SAASJ,IAAG;AACd,aAAO,OAAO4Q,KAAI,OAAO5Q,IAAG,QAAQ;AAAA,IACxC;AACE,WAAO4Q,MAAK;AAAA,EACd;AAMA,WAAS,OAAOA,KAAI,OAAO/L,IAAG,MAAM;AAClC,QAAI,WAAW,SAASA,KAAI;AAC5B,WAAO,KAAK,MAAM+L,MAAK/L,EAAC,IAAI,MAAM,QAAQ,WAAW,MAAM;AAAA,EAC7D;;;;;;;;;;;;;ACrJA,MAAI,OAAOxB;AACX,MAAIuN,MAAKlM,UAAa;AAER,eAAG,SAAUyE,IAAG;AAC5B,QAAI,OAAOA,OAAM,SAAU,QAAOA;AAClC,QAAI2D,KAAI8D,IAAGzH,EAAC;AACZ,QAAI2D,OAAM,QAAW;AACnB,UAAI,MAAM,IAAI,MAAM,KAAK,OAAO,oCAAoC3D,EAAC,CAAC;AACtE,cAAQ,KAAK,IAAI,KAAK;AAAA,IAC1B;AACE,WAAO2D;AAAA,EACR;;;;;;;;ACrBD,cAAiB;AAAA;AAAA,IAEf,YAAY,OAAO,0BAA0B;AAAA,IAC7C,WAAW,OAAO,yBAAyB;AAAA,IAC3C,aAAa,OAAO,2BAA2B;AAAA,IAC/C,yBAAyB,OAAO,sCAAsC;AAAA;AAAA,IAEtE,qBAAqB,OAAO,kCAAkC;AAAA,IAC9D,aAAa,OAAO,2BAA2B;AAAA,IAC/C,sBAAsB,OAAO,mCAAmC;AAAA,IAChE,+BAA+B,OAAO,2CAA2C;AAAA,EAClF;;;;;;;;ACXD,QAAM,gBAAgBzJ,KAAgB;AACtC,QAAMuN,MAAKlM,kBAAsB;AACjC,QAAMmM,SAAQpL,aAAgB,SAAS,gBAAgB;AACvD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAGqL,iBAAsB;AAO1B,MAAI,8BAA8B;AAClC,QAAM,eAAe,SAAS,QAAQ,QAAQ,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC3E,MAAI,gBAAgB,MAAM,gBAAgB,IAAI;AAC5C,kCAA8B;AAAA,EAChC,WAAW,gBAAgB,IAAI;AAC7B,kCAA8B;AAAA,EAChC;AAEA,WAASC,WAAU,SAAS;AAC1B,YAAQ,IAAI,kCAAkC,OAAO;AAAA,EACvD;AAAA,EAEA,MAAM,cAAc,cAAc;AAAA,IAChC,YAAY,SAAS;AACnB,gBAAU,WAAW,CAAE;AACvB,cAAQ,YAAY,QAAQ,cAAc;AAG1C,UAAI,QAAQ,sBAAsB,QAAW;AAC3C,gBAAQ,oBAAoB;AAAA,MAClC;AAEI,UAAI,QAAQ,kBAAkB;AAC5B,QAAAA,WAAU,sFAAsF;AAChG,gBAAQ,oBAAoB,QAAQ;AACpC,eAAO,QAAQ;AAAA,MACrB;AAEI,UAAI,QAAQ,4BAA4B;AACtC,QAAAA,WAAU,gGAAgG;AAC1G,gBAAQ,oBAAoB,QAAQ;AACpC,eAAO,QAAQ;AAAA,MACrB;AAII,UAAI,QAAQ,YAAY,QAAW;AAEjC,gBAAQ,UAAU,KAAK,IAAI,QAAQ,oBAAoB,GAAG,GAAI;AAAA,MACpE;AAGI,cAAQ,UAAUH,IAAG,QAAQ,OAAO;AACpC,cAAQ,oBAAoBA,IAAG,QAAQ,iBAAiB;AACxD,cAAQ,kBAAkB,QAAQ,kBAAkBA,IAAG,QAAQ,eAAe,IAAI;AAElF,YAAM,OAAO;AAEb,WAAK,UAAU,IAAI;AAGnB,WAAK,oBAAoB;AACzB,WAAK,6BAA6B;AAElC,WAAK,yBAAyB;AAC9B,WAAK,kCAAkC;AAEvC,WAAK,mBAAmB;AACxB,WAAK,4BAA4B;AAGjC,WAAK,mBAAmB;AACxB,WAAK,4BAA4B;AAGjC,WAAK,eAAe;AACpB,WAAK,wBAAwB;AAG7B,WAAK,qBAAqB;AAC1B,WAAK,8BAA8B;AAEnC,WAAK,GAAG,QAAQ,YAAU;AAIxB,cAAM,UAAU,KAAK,kBAAkB,MAAM;AAC7C,YAAI,UAAU,KAAK,OAAO,YAAY,SAAS;AAC7C,iBAAO,WAAW,OAAO;AAAA,QACjC;AAAA,MACA,CAAK;AAAA,IACL;AAAA,IAEE,IAAI,6BAA6B;AAC/B,MAAAG,WAAU,oGAAoG;AAC9G,aAAO,KAAK,QAAQ;AAAA,IACxB;AAAA,IAEE,IAAI,UAAU;AACZ,MAAAA,WAAU,uEAAuE;AACjF,aAAO,KAAK,QAAQ;AAAA,IACxB;AAAA,IAEE,IAAI,kBAAkB;AACpB,MAAAA,WAAU,uFAAuF;AACjG,aAAO,KAAK,QAAQ;AAAA,IACxB;AAAA,IAEE,kBAAkB,QAAQ;AAMxB,UAAI,oBAAoB,KAAK,QAAQ;AACrC,YAAM,kBAAkB,KAAK,QAAQ;AACrC,UAAI,iBAAiB;AAEnB,cAAM,YAAY,KAAK,IAAG,IAAK,OAAO,mBAAmB;AACzD,cAAM,OAAO,kBAAkB;AAC/B,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACf;AACM,YAAI,qBAAqB,OAAO,mBAAmB;AACjD,8BAAoB;AAAA,QAC5B;AAAA,MACA;AAEI,UAAI,mBAAmB;AAIrB,cAAM,0BAA0B,OAAO,qBAAqB,OAAO;AACnE,eAAO,2BAA2B;AAAA,MACxC;AAAA,IACA;AAAA,IAEE,gBAAgB,QAAQ;AACtB,YAAM,SAAS,MAAM,gBAAgB,MAAM;AAE3C,UAAI,CAAC,OAAQ,QAAO;AAEpB,YAAM,gBAAgB,KAAK,kBAAkB,MAAM;AACnD,UAAI,OAAO,kBAAkB,aAAa;AACxC,eAAO;AAAA,MACb;AACI,UAAI,iBAAiB,GAAG;AACtB,QAAAF;AAAA,UAAM;AAAA,UACJ,OAAO,WAAW;AAAA,UAAG,OAAO,oBAAoB;AAAA,UAAG,OAAO,6BAA6B;AAAA,UAAG;AAAA,QAAa;AACzG,eAAO;AAAA,MACb;AACI,UAAI,OAAO,YAAY,eAAe;AACpC,eAAO,WAAW,aAAa;AAAA,MACrC;AACI,aAAO;AAAA,IACX;AAAA;AAAA,IAGE,eAAe,MAAM;AAEnB,YAAM,YAAY,GAAG,IAAI;AACzB,YAAM,SAAS,KAAK,CAAC;AACrB,YAAM,MAAM,KAAK,CAAC;AAClB,UAAI,eAAe;AACnB,YAAM,eAAe,KAAK,QAAQ;AAClC,UAAI,iBAAiB,MAAM,MAAM,cAAc;AAE7C,eAAO,WAAW,YAAY;AAC9B,QAAAA,OAAM,4BAA4B,OAAO,WAAW,GAAG,YAAY;AAAA,MACzE;AACI,aAAO,oBAAoB;AAC3B,MAAAA;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAAG,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,QACvF,iBAAiB,MAAM;AAAA,MAAC;AAAA,IAC9B;AAAA,IAEE,CAAC,SAAS,IAAI;AACZ,YAAM,KAAK,KAAK,UAAU;AAC1B,UAAI,KAAK,UAAU,MAAM,OAAO,iBAAkB,MAAK,UAAU,IAAI;AACrE,aAAO;AAAA,IACX;AAAA,IAEE,CAAC,WAAW,EAAE,QAAQ,SAAS;AAI7B,UAAI,QAAQ,SAAS;AACnB,cAAM,UAAU,iBAAiB,MAAM;AACvC,YAAI,CAAC,SAAS;AACZ,iBAAO,WAAW,QAAQ,OAAO;AAAA,QACzC;AAAA,MACA;AAEI,UAAI,KAAK,QAAQ,WAAW;AAG1B,eAAO,WAAW,IAAI;AAAA,MAC5B;AACI,WAAK;AACL,UAAI,KAAK,QAAQ,iBAAiB;AAChC,eAAO,mBAAmB,IAAI,KAAK,IAAK;AAAA,MAC9C;AAEI,aAAO,WAAW,IAAI,QAAQ,KAAK,SAAS,GAAG,IAAI,QAAQ,SAAS,IAAI,MAAM,cAAc,CAAC,EAAE,CAAC;AAChG,aAAO,oBAAoB,IAAI;AAC/B,aAAO,6BAA6B,IAAI;AACxC,uBAAiB,MAAM,QAAQ,OAAO;AAAA,IAC1C;AAAA,IAEE,iBAAiB,SAAS,UAAU;AAClC,UAAI,SAAS;AACb,YAAM,cAAc,CAAC,KAAK,WAAW;AACnC,YAAI,OAAQ;AACZ,iBAAS;AAET,YAAI,KAAK;AACP,eAAK;AACL,iBAAO,SAAS,GAAG;AAAA,QAC3B;AACM,aAAK,WAAW,EAAE,QAAQ,OAAO;AACjC,iBAAS,KAAK,MAAM;AAAA,MACrB;AAED,YAAM,YAAY,MAAM,iBAAiB,SAAS,WAAW;AAC7D,UAAI,UAAW,aAAY,MAAM,SAAS;AAC1C,aAAO;AAAA,IACX;AAAA,IAEE,IAAI,gBAAgB;AAClB,YAAM,UAAU,KAAK,sBAAsB,KAAK,8BAC9C,KAAK,2BAA2B,KAAK,mCACrC,KAAK,qBAAqB,KAAK,6BAC/B,KAAK,qBAAqB,KAAK,6BAC/B,KAAK,uBAAuB,KAAK,+BACjC,KAAK,iBAAiB,KAAK;AAC7B,UAAI,SAAS;AACX,aAAK,6BAA6B,KAAK;AACvC,aAAK,kCAAkC,KAAK;AAC5C,aAAK,4BAA4B,KAAK;AACtC,aAAK,4BAA4B,KAAK;AACtC,aAAK,8BAA8B,KAAK;AACxC,aAAK,wBAAwB,KAAK;AAAA,MACxC;AACI,aAAO;AAAA,IACX;AAAA,IAEE,mBAAmB;AACjB,aAAO;AAAA,QACL,mBAAmB,KAAK;AAAA,QACxB,wBAAwB,KAAK;AAAA,QAC7B,kBAAkB,KAAK;AAAA,QACvB,kBAAkB,KAAK;AAAA,QACvB,oBAAoB,KAAK;AAAA,QACzB,cAAc,KAAK;AAAA,QACnB,aAAaG,SAAQ,KAAK,WAAW;AAAA,QACrC,SAASA,SAAQ,KAAK,OAAO;AAAA,QAC7B,UAAUA,SAAQ,KAAK,QAAQ;AAAA,MAChC;AAAA,IACL;AAAA,EACA;AAIA,WAAS,iBAAiB,QAAQ;AAChC,WAAO,OAAO,WAAW,OAAO;AAAA,EAClC;AAEA,WAAS,iBAAiB9B,QAAO,QAAQ,SAAS;AAChD,IAAA2B,OAAM,2BAA2B,OAAO,WAAW,GAAG,iBAAiB,MAAM,CAAC;AAG9E,aAAS,SAAS;AAIhB,UAAI,CAAC,OAAO,gBAAgB,OAAO,oBAAoB,MAAM,EAAG;AAEhE,aAAO,6BAA6B;AACpC,MAAA3B,OAAM;AACN,MAAA2B;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAAG,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,MAAC;AAG1F,YAAM,OAAO3B,OAAM,QAAQ,OAAO;AAClC,UAAI,OAAO,YAAYA,OAAM,SAAS,IAAI,KAAKA,OAAM,SAAS,IAAI,EAAE,QAAQ;AAE1E,eAAO,oBAAoB;AAC3B,QAAA2B;AAAA,UAAM;AAAA,UACJ,OAAO,WAAW;AAAA,UAAG,OAAO,oBAAoB;AAAA,UAAG,OAAO,6BAA6B;AAAA,QAAC;AAAA,MAChG;AAAA,IACA;AACE,WAAO,GAAG,QAAQ,MAAM;AAExB,aAAS,QAAQ,SAAS;AACxB,MAAAA;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAAG,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,QAAG;AAAA,MAAO;AACnG,MAAA3B,OAAM;AAAA,IACV;AACE,WAAO,GAAG,SAAS,OAAO;AAG1B,aAAS,YAAY;AAGnB,YAAM,gBAAgB,OAAO,UAAU,SAAS,EAAE;AAMlD,YAAM,UAAU,iBAAiB,MAAM;AACvC,YAAM,MAAM,OAAO;AACnB,YAAM,0BAA0B,OAAO,IAAI,UAAU,SAAS,EAAE,UAAU;AAC1E,MAAA2B;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAAG,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,QACvF;AAAA,QAAS;AAAA,QAAe;AAAA,QAA6B,CAAC,CAAC;AAAA,QAAK;AAAA,MAAuB;AACrF,UAAIA,OAAM,SAAS;AACjB,QAAAA,OAAM,yBAAyB,OAAO,UAAU,SAAS,EAAE,IAAI,CAAAzF,OAAKA,GAAE,IAAI,EAAE,KAAK,IAAI,CAAC;AAAA,MAC5F;AACI,MAAA8D,OAAM;AACN,YAAM,OAAOA,OAAM,QAAQ,OAAO;AAClC,UAAIA,OAAM,YAAY,IAAI,KAAKA,OAAM,YAAY,IAAI,EAAE,QAAQ,MAAM,MAAM,IAAI;AAE7E,eAAO,QAAS;AAGhB,QAAAA,OAAM,aAAa,QAAQ,OAAO;AAClC,QAAA2B,OAAM,+BAA+B,OAAO,WAAW,CAAC;AAAA,MAC9D,OAAW;AAUL,YAAI,4BAA4B,GAAG;AACjC,gBAAM,QAAQ,IAAI,MAAM,gBAAgB;AACxC,gBAAM,OAAO;AACb,gBAAM,UAAU;AAGhB,iBAAO,QAAQ,KAAK;AACpB,UAAA3B,OAAM,aAAa,QAAQ,OAAO;AAClC,UAAA2B,OAAM,iCAAiC,OAAO,WAAW,CAAC;AAAA,QAClE;AAAA,MACA;AAAA,IACA;AACE,WAAO,GAAG,WAAW,SAAS;AAE9B,aAAS,QAAQ,KAAK;AACpB,YAAM,gBAAgB,OAAO,UAAU,OAAO,EAAE;AAChD,MAAAA;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAAG,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,QACvF;AAAA,QAAK;AAAA,MAAa;AACpB,MAAA3B,OAAM;AACN,UAAI,kBAAkB,GAAG;AAEvB,QAAA2B,OAAM,gCAAgC,OAAO,WAAW,CAAC;AACzD,eAAO,eAAe,SAAS,OAAO;AACtC,eAAO,KAAK,SAAS,GAAG;AAAA,MAC9B;AAAA,IACA;AACE,WAAO,GAAG,SAAS,OAAO;AAE1B,aAAS,WAAW;AAClB,MAAAA;AAAA,QAAM;AAAA,QACJ,OAAO,WAAW;AAAA,QAClB,OAAO,oBAAoB;AAAA,QAAG,OAAO,6BAA6B;AAAA,MAAC;AAIrE,aAAO,eAAe,SAAS,OAAO;AACtC,aAAO,eAAe,SAAS,OAAO;AACtC,aAAO,eAAe,QAAQ,MAAM;AACpC,aAAO,eAAe,WAAW,SAAS;AAC1C,aAAO,eAAe,eAAe,QAAQ;AAAA,IACjD;AACE,WAAO,GAAG,eAAe,QAAQ;AAAA,EACnC;AAEA,UAAiB;AAEjB,WAASG,SAAQ,KAAK;AACpB,UAAM,MAAM,CAAE;AACd,eAAW,OAAO,KAAK;AACrB,UAAI,GAAG,IAAI,IAAI,GAAG,EAAE;AAAA,IACxB;AACE,WAAO;AAAA,EACT;;;;;;;;AC/YA,QAAM,qBAAqB3N,MAAiB;AAC5C,QAAM,YAAYqB,aAAkB;AACpC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACD,IAAGe,iBAAsB;AAAA,EAE1B,MAAM,mBAAmB,UAAU;AAAA,IACjC,YAAY,SAAS;AACnB,YAAM,OAAO;AAEb,WAAK,cAAc;AACnB,WAAK,WAAW;AAChB,WAAK,oBAAoB,KAAK,QAAQ;AAEtC,UAAI,KAAK,sBAAsB,QAAW;AACxC,aAAK,oBAAoB;AAAA,MAC/B;AAEI,WAAK,gBAAgB;AAAA,QACnB,KAAK,CAAE;AAAA,QACP,MAAM,CAAE;AAAA,MACT;AAAA,IACL;AAAA,IAEE,iBAAiB,SAAS,UAAU;AAClC,YAAM,SAAS,KAAK,uBAAuB,EAAE,SAAS,QAAQ;AAC9D,WAAK,WAAW,EAAE,QAAQ,OAAO;AACjC,aAAO;AAAA,IACX;AAAA,EACA;AAGA,aAAW,UAAU,uBAAuB,IAAI,mBAAmB,UAAU;AAE7E;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,EACF,EAAE,QAAQ,SAAS,QAAQ;AAEzB,QAAI,OAAO,mBAAmB,UAAU,MAAM,MAAM,YAAY;AAC9D,iBAAW,UAAU,MAAM,IAAI,mBAAmB,UAAU,MAAM;AAAA,IACtE;AAAA,EACA,CAAC;AAED,gBAAiB;;;;;;;AChDjB,QAAM,YAAYpC,aAAsB;AACxC4N,iBAAA,UAAiB;AACjBA,iBAAA,QAAA,YAA2B;AAC3BA,iBAAA,QAAA,aAA4BvM,mBAA4B;AACxDuM,iBAAA,QAAA,YAA2BxL,iBAA0B;;;;;ACkBrD,MAAM,cAAc,oBAAI,QAAS;AAOjC,MAAM,WAAW,oBAAI,QAAS;AAQ9B,SAAS,GAAG,OAAO;AACf,QAAM,OAAO,YAAY,IAAI,KAAK;AAClC,UAAQ;AAAA,IACJ,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,EACH;AACD,SAAO;AACX;AAMA,SAAS,cAAc,MAAM;AACzB,MAAI,KAAK,mBAAmB,MAAM;AAC9B,QACI,OAAO,YAAY,eACnB,OAAO,QAAQ,UAAU,YAC3B;AACE,cAAQ;AAAA,QACJ;AAAA,QACA,KAAK;AAAA,MACR;AAAA,IACb;AACQ;AAAA,EACR;AACI,MAAI,CAAC,KAAK,MAAM,YAAY;AACxB;AAAA,EACR;AAEI,OAAK,WAAW;AAChB,MAAI,OAAO,KAAK,MAAM,mBAAmB,YAAY;AACjD,SAAK,MAAM,eAAgB;AAAA,EACnC;AACA;AAYA,SAAS,MAAM,aAAa,OAAO;AAC/B,cAAY,IAAI,MAAM;AAAA,IAClB;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,UAAU;AAAA,IACV,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,WAAW,MAAM,aAAa,KAAK,IAAK;AAAA,EAChD,CAAK;AAGD,SAAO,eAAe,MAAM,aAAa,EAAE,OAAO,OAAO,YAAY,MAAM;AAG3E,QAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,WAASxF,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AAClC,UAAM,MAAM,KAAKA,EAAC;AAClB,QAAI,EAAE,OAAO,OAAO;AAChB,aAAO,eAAe,MAAM,KAAK,yBAAyB,GAAG,CAAC;AAAA,IAC1E;AAAA,EACA;AACA;AAGA,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKd,IAAI,OAAO;AACP,WAAO,GAAG,IAAI,EAAE,MAAM;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,SAAS;AACT,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,gBAAgB;AAChB,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKD,eAAe;AACX,UAAM,gBAAgB,GAAG,IAAI,EAAE;AAC/B,QAAI,iBAAiB,MAAM;AACvB,aAAO,CAAA;AAAA,IACnB;AACQ,WAAO,CAAC,aAAa;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,OAAO;AACP,WAAO;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,kBAAkB;AAClB,WAAO;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,YAAY;AACZ,WAAO;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,iBAAiB;AACjB,WAAO;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,aAAa;AACb,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,kBAAkB;AACd,UAAM,OAAO,GAAG,IAAI;AAEpB,SAAK,UAAU;AACf,QAAI,OAAO,KAAK,MAAM,oBAAoB,YAAY;AAClD,WAAK,MAAM,gBAAiB;AAAA,IACxC;AAAA,EACK;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,2BAA2B;AACvB,UAAM,OAAO,GAAG,IAAI;AAEpB,SAAK,UAAU;AACf,SAAK,mBAAmB;AACxB,QAAI,OAAO,KAAK,MAAM,6BAA6B,YAAY;AAC3D,WAAK,MAAM,yBAA0B;AAAA,IACjD;AAAA,EACK;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,UAAU;AACV,WAAO,QAAQ,GAAG,IAAI,EAAE,MAAM,OAAO;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,aAAa;AACb,WAAO,QAAQ,GAAG,IAAI,EAAE,MAAM,UAAU;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,iBAAiB;AACb,kBAAc,GAAG,IAAI,CAAC;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,mBAAmB;AACnB,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,WAAW;AACX,WAAO,QAAQ,GAAG,IAAI,EAAE,MAAM,QAAQ;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,IAAI,YAAY;AACZ,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,IAAI,aAAa;AACb,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,IAAI,eAAe;AACf,WAAO,GAAG,IAAI,EAAE;AAAA,EACnB;AAAA,EACD,IAAI,aAAa,OAAO;AACpB,QAAI,CAAC,OAAO;AACR;AAAA,IACZ;AACQ,UAAM,OAAO,GAAG,IAAI;AAEpB,SAAK,UAAU;AACf,QAAI,OAAO,KAAK,MAAM,iBAAiB,WAAW;AAC9C,WAAK,MAAM,eAAe;AAAA,IACtC;AAAA,EACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,IAAI,cAAc;AACd,WAAO,CAAC,GAAG,IAAI,EAAE;AAAA,EACpB;AAAA,EACD,IAAI,YAAY,OAAO;AACnB,QAAI,CAAC,OAAO;AACR,oBAAc,GAAG,IAAI,CAAC;AAAA,IAClC;AAAA,EACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,YAAY;AAAA,EAEX;AACL;AAGA,OAAO,eAAe,MAAM,WAAW,eAAe;AAAA,EAClD,OAAO;AAAA,EACP,cAAc;AAAA,EACd,UAAU;AACd,CAAC;AAGD,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,UAAU,aAAa;AACtE,SAAO,eAAe,MAAM,WAAW,OAAO,MAAM,SAAS;AAG7D,WAAS,IAAI,OAAO,MAAM,WAAW,KAAK;AAC9C;AAQA,SAAS,yBAAyB,KAAK;AACnC,SAAO;AAAA,IACH,MAAM;AACF,aAAO,GAAG,IAAI,EAAE,MAAM,GAAG;AAAA,IAC5B;AAAA,IACD,IAAI,OAAO;AACP,SAAG,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IACzB;AAAA,IACD,cAAc;AAAA,IACd,YAAY;AAAA,EACpB;AACA;AAQA,SAAS,qBAAqB,KAAK;AAC/B,SAAO;AAAA,IACH,QAAQ;AACJ,YAAM,QAAQ,GAAG,IAAI,EAAE;AACvB,aAAO,MAAM,GAAG,EAAE,MAAM,OAAO,SAAS;AAAA,IAC3C;AAAA,IACD,cAAc;AAAA,IACd,YAAY;AAAA,EACpB;AACA;AASA,SAAS,cAAc,WAAW,OAAO;AACrC,QAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,MAAI,KAAK,WAAW,GAAG;AACnB,WAAO;AAAA,EACf;AAGI,WAAS,YAAY,aAAa,OAAO;AACrC,cAAU,KAAK,MAAM,aAAa,KAAK;AAAA,EAC/C;AAEI,cAAY,YAAY,OAAO,OAAO,UAAU,WAAW;AAAA,IACvD,aAAa,EAAE,OAAO,aAAa,cAAc,MAAM,UAAU,KAAM;AAAA,EAC/E,CAAK;AAGD,WAASA,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AAClC,UAAM,MAAM,KAAKA,EAAC;AAClB,QAAI,EAAE,OAAO,UAAU,YAAY;AAC/B,YAAM,aAAa,OAAO,yBAAyB,OAAO,GAAG;AAC7D,YAAM,SAAS,OAAO,WAAW,UAAU;AAC3C,aAAO;AAAA,QACH,YAAY;AAAA,QACZ;AAAA,QACA,SACM,qBAAqB,GAAG,IACxB,yBAAyB,GAAG;AAAA,MACrC;AAAA,IACb;AAAA,EACA;AAEI,SAAO;AACX;AAQA,SAAS,WAAW,OAAO;AACvB,MAAI,SAAS,QAAQ,UAAU,OAAO,WAAW;AAC7C,WAAO;AAAA,EACf;AAEI,MAAI,UAAU,SAAS,IAAI,KAAK;AAChC,MAAI,WAAW,MAAM;AACjB,cAAU,cAAc,WAAW,OAAO,eAAe,KAAK,CAAC,GAAG,KAAK;AACvE,aAAS,IAAI,OAAO,OAAO;AAAA,EACnC;AACI,SAAO;AACX;AASA,SAAS,UAAU,aAAa,OAAO;AACnC,QAAM,UAAU,WAAW,OAAO,eAAe,KAAK,CAAC;AACvD,SAAO,IAAI,QAAQ,aAAa,KAAK;AACzC;AAQA,SAAS,UAAU,OAAO;AACtB,SAAO,GAAG,KAAK,EAAE;AACrB;AASA,SAAS,cAAc,OAAO,YAAY;AACtC,KAAG,KAAK,EAAE,aAAa;AAC3B;AASA,SAAS,iBAAiB,OAAO,eAAe;AAC5C,KAAG,KAAK,EAAE,gBAAgB;AAC9B;AASA,SAAS,mBAAmB,OAAO,iBAAiB;AAChD,KAAG,KAAK,EAAE,kBAAkB;AAChC;AAgBA,MAAM,eAAe,oBAAI,QAAS;AAGlC,MAAM,UAAU;AAChB,MAAM,SAAS;AACf,MAAM,YAAY;AAOlB,SAAS,SAASI,IAAG;AACjB,SAAOA,OAAM,QAAQ,OAAOA,OAAM;AACtC;AAQA,SAAS,aAAa,aAAa;AAC/B,QAAM,YAAY,aAAa,IAAI,WAAW;AAC9C,MAAI,aAAa,MAAM;AACnB,UAAM,IAAI;AAAA,MACN;AAAA,IACZ;AAAA,EACA;AACI,SAAO;AACX;AAQA,SAAS,+BAA+B,WAAW;AAC/C,SAAO;AAAA,IACH,MAAM;AACF,YAAM,YAAY,aAAa,IAAI;AACnC,UAAI,OAAO,UAAU,IAAI,SAAS;AAClC,aAAO,QAAQ,MAAM;AACjB,YAAI,KAAK,iBAAiB,WAAW;AACjC,iBAAO,KAAK;AAAA,QAChC;AACgB,eAAO,KAAK;AAAA,MAC5B;AACY,aAAO;AAAA,IACV;AAAA,IAED,IAAI,UAAU;AACV,UAAI,OAAO,aAAa,cAAc,CAAC,SAAS,QAAQ,GAAG;AACvD,mBAAW;AAAA,MAC3B;AACY,YAAM,YAAY,aAAa,IAAI;AAGnC,UAAI,OAAO;AACX,UAAI,OAAO,UAAU,IAAI,SAAS;AAClC,aAAO,QAAQ,MAAM;AACjB,YAAI,KAAK,iBAAiB,WAAW;AAEjC,cAAI,SAAS,MAAM;AACf,iBAAK,OAAO,KAAK;AAAA,UACzC,WAA+B,KAAK,SAAS,MAAM;AAC3B,sBAAU,IAAI,WAAW,KAAK,IAAI;AAAA,UAC1D,OAA2B;AACH,sBAAU,OAAO,SAAS;AAAA,UAClD;AAAA,QACA,OAAuB;AACH,iBAAO;AAAA,QAC3B;AAEgB,eAAO,KAAK;AAAA,MAC5B;AAGY,UAAI,aAAa,MAAM;AACnB,cAAM,UAAU;AAAA,UACZ;AAAA,UACA,cAAc;AAAA,UACd,SAAS;AAAA,UACT,MAAM;AAAA,UACN,MAAM;AAAA,QACT;AACD,YAAI,SAAS,MAAM;AACf,oBAAU,IAAI,WAAW,OAAO;AAAA,QACpD,OAAuB;AACH,eAAK,OAAO;AAAA,QAChC;AAAA,MACA;AAAA,IACS;AAAA,IACD,cAAc;AAAA,IACd,YAAY;AAAA,EACpB;AACA;AAQA,SAAS,qBAAqB,sBAAsB,WAAW;AAC3D,SAAO;AAAA,IACH;AAAA,IACA,KAAK,SAAS;AAAA,IACd,+BAA+B,SAAS;AAAA,EAC3C;AACL;AAQA,SAAS,wBAAwB,YAAY;AAEzC,WAAS,oBAAoB;AACzB,gBAAY,KAAK,IAAI;AAAA,EAC7B;AAEI,oBAAkB,YAAY,OAAO,OAAO,YAAY,WAAW;AAAA,IAC/D,aAAa;AAAA,MACT,OAAO;AAAA,MACP,cAAc;AAAA,MACd,UAAU;AAAA,IACb;AAAA,EACT,CAAK;AAED,WAASJ,KAAI,GAAGA,KAAI,WAAW,QAAQ,EAAEA,IAAG;AACxC,yBAAqB,kBAAkB,WAAW,WAAWA,EAAC,CAAC;AAAA,EACvE;AAEI,SAAO;AACX;AAeA,SAAS,cAAc;AAEnB,MAAI,gBAAgB,aAAa;AAC7B,iBAAa,IAAI,MAAM,oBAAI,IAAG,CAAE;AAChC;AAAA,EACR;AACI,MAAI,UAAU,WAAW,KAAK,MAAM,QAAQ,UAAU,CAAC,CAAC,GAAG;AACvD,WAAO,wBAAwB,UAAU,CAAC,CAAC;AAAA,EACnD;AACI,MAAI,UAAU,SAAS,GAAG;AACtB,UAAM,QAAQ,IAAI,MAAM,UAAU,MAAM;AACxC,aAASA,KAAI,GAAGA,KAAI,UAAU,QAAQ,EAAEA,IAAG;AACvC,YAAMA,EAAC,IAAI,UAAUA,EAAC;AAAA,IAClC;AACQ,WAAO,wBAAwB,KAAK;AAAA,EAC5C;AACI,QAAM,IAAI,UAAU,mCAAmC;AAE3D;AAGA,YAAY,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpB,iBAAiB,WAAW,UAAU,SAAS;AAC3C,QAAI,YAAY,MAAM;AAClB;AAAA,IACZ;AACQ,QAAI,OAAO,aAAa,cAAc,CAAC,SAAS,QAAQ,GAAG;AACvD,YAAM,IAAI,UAAU,+CAA+C;AAAA,IAC/E;AAEQ,UAAM,YAAY,aAAa,IAAI;AACnC,UAAM,eAAe,SAAS,OAAO;AACrC,UAAM,UAAU,eACV,QAAQ,QAAQ,OAAO,IACvB,QAAQ,OAAO;AACrB,UAAM,eAAe,UAAU,UAAU;AACzC,UAAM,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,MACA,SAAS,gBAAgB,QAAQ,QAAQ,OAAO;AAAA,MAChD,MAAM,gBAAgB,QAAQ,QAAQ,IAAI;AAAA,MAC1C,MAAM;AAAA,IACT;AAGD,QAAI,OAAO,UAAU,IAAI,SAAS;AAClC,QAAI,SAAS,QAAW;AACpB,gBAAU,IAAI,WAAW,OAAO;AAChC;AAAA,IACZ;AAGQ,QAAI,OAAO;AACX,WAAO,QAAQ,MAAM;AACjB,UACI,KAAK,aAAa,YAClB,KAAK,iBAAiB,cACxB;AAEE;AAAA,MAChB;AACY,aAAO;AACP,aAAO,KAAK;AAAA,IACxB;AAGQ,SAAK,OAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,oBAAoB,WAAW,UAAU,SAAS;AAC9C,QAAI,YAAY,MAAM;AAClB;AAAA,IACZ;AAEQ,UAAM,YAAY,aAAa,IAAI;AACnC,UAAM,UAAU,SAAS,OAAO,IAC1B,QAAQ,QAAQ,OAAO,IACvB,QAAQ,OAAO;AACrB,UAAM,eAAe,UAAU,UAAU;AAEzC,QAAI,OAAO;AACX,QAAI,OAAO,UAAU,IAAI,SAAS;AAClC,WAAO,QAAQ,MAAM;AACjB,UACI,KAAK,aAAa,YAClB,KAAK,iBAAiB,cACxB;AACE,YAAI,SAAS,MAAM;AACf,eAAK,OAAO,KAAK;AAAA,QACrC,WAA2B,KAAK,SAAS,MAAM;AAC3B,oBAAU,IAAI,WAAW,KAAK,IAAI;AAAA,QACtD,OAAuB;AACH,oBAAU,OAAO,SAAS;AAAA,QAC9C;AACgB;AAAA,MAChB;AAEY,aAAO;AACP,aAAO,KAAK;AAAA,IACxB;AAAA,EACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,cAAc,OAAO;AACjB,QAAI,SAAS,QAAQ,OAAO,MAAM,SAAS,UAAU;AACjD,YAAM,IAAI,UAAU,kCAAkC;AAAA,IAClE;AAGQ,UAAM,YAAY,aAAa,IAAI;AACnC,UAAM,YAAY,MAAM;AACxB,QAAI,OAAO,UAAU,IAAI,SAAS;AAClC,QAAI,QAAQ,MAAM;AACd,aAAO;AAAA,IACnB;AAGQ,UAAM,eAAe,UAAU,MAAM,KAAK;AAI1C,QAAI,OAAO;AACX,WAAO,QAAQ,MAAM;AAEjB,UAAI,KAAK,MAAM;AACX,YAAI,SAAS,MAAM;AACf,eAAK,OAAO,KAAK;AAAA,QACrC,WAA2B,KAAK,SAAS,MAAM;AAC3B,oBAAU,IAAI,WAAW,KAAK,IAAI;AAAA,QACtD,OAAuB;AACH,oBAAU,OAAO,SAAS;AAAA,QAC9C;AAAA,MACA,OAAmB;AACH,eAAO;AAAA,MACvB;AAGY;AAAA,QACI;AAAA,QACA,KAAK,UAAU,KAAK,WAAW;AAAA,MAClC;AACD,UAAI,OAAO,KAAK,aAAa,YAAY;AACrC,YAAI;AACA,eAAK,SAAS,KAAK,MAAM,YAAY;AAAA,QACxC,SAAQ,KAAK;AACV,cACI,OAAO,YAAY,eACnB,OAAO,QAAQ,UAAU,YAC3B;AACE,oBAAQ,MAAM,GAAG;AAAA,UACzC;AAAA,QACA;AAAA,MACA,WACgB,KAAK,iBAAiB,aACtB,OAAO,KAAK,SAAS,gBAAgB,YACvC;AACE,aAAK,SAAS,YAAY,YAAY;AAAA,MACtD;AAGY,UAAI,UAAU,YAAY,GAAG;AACzB;AAAA,MAChB;AAEY,aAAO,KAAK;AAAA,IACxB;AACQ,uBAAmB,cAAc,IAAI;AACrC,kBAAc,cAAc,CAAC;AAC7B,qBAAiB,cAAc,IAAI;AAEnC,WAAO,CAAC,aAAa;AAAA,EACxB;AACL;AAGA,OAAO,eAAe,YAAY,WAAW,eAAe;AAAA,EACxD,OAAO;AAAA,EACP,cAAc;AAAA,EACd,UAAU;AACd,CAAC;AAGD,IACI,OAAO,WAAW,eAClB,OAAO,OAAO,gBAAgB,aAChC;AACE,SAAO,eAAe,YAAY,WAAW,OAAO,YAAY,SAAS;AAC7E;oBC/0BA,MAAMiR,qBAAoB,YAAY;AAAA;AAAA;AAAA;AAAA,EAIlC,cAAc;AACV,UAAO;AACP,UAAM,IAAI,UAAU,4CAA4C;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU;AACV,UAAM,UAAU,aAAa,IAAI,IAAI;AACrC,QAAI,OAAO,YAAY,WAAW;AAC9B,YAAM,IAAI,UAAU,0DAA0D,SAAS,OAAO,SAAS,OAAO,IAAI,EAAE;AAAA,IAChI;AACQ,WAAO;AAAA,EACf;AACA;AACA,qBAAqBA,cAAY,WAAW,OAAO;AAInD,SAAS,oBAAoB;AACzB,QAAM,SAAS,OAAO,OAAOA,cAAY,SAAS;AAClD,cAAY,KAAK,MAAM;AACvB,eAAa,IAAI,QAAQ,KAAK;AAC9B,SAAO;AACX;AAIA,SAAS,YAAY,QAAQ;AACzB,MAAI,aAAa,IAAI,MAAM,MAAM,OAAO;AACpC;AAAA,EACR;AACI,eAAa,IAAI,QAAQ,IAAI;AAC7B,SAAO,cAAc,EAAE,MAAM,QAAO,CAAE;AAC1C;AAIA,MAAM,eAAe,oBAAI,QAAS;AAElC,OAAO,iBAAiBA,cAAY,WAAW;AAAA,EAC3C,SAAS,EAAE,YAAY,KAAM;AACjC,CAAC;AAED,IAAI,OAAO,WAAW,cAAc,OAAO,OAAO,gBAAgB,UAAU;AACxE,SAAO,eAAeA,cAAY,WAAW,OAAO,aAAa;AAAA,IAC7D,cAAc;AAAA,IACd,OAAO;AAAA,EACf,CAAK;AACL;AAMA,IAAA,oBAAA,MAAMC,iBAAgB;AAAA;AAAA;AAAA;AAAA,EAIlB,cAAc;AACV,YAAQ,IAAI,MAAM,mBAAmB;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,SAAS;AACT,WAAO,UAAU,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAII,QAAQ;AACJ,gBAAY,UAAU,IAAI,CAAC;AAAA,EACnC;AACA;AAIA,MAAM,UAAU,oBAAI,QAAS;AAI7B,SAAS,UAAU,YAAY;AAC3B,QAAM,SAAS,QAAQ,IAAI,UAAU;AACrC,MAAI,UAAU,MAAM;AAChB,UAAM,IAAI,UAAU,8DAA8D,eAAe,OAAO,SAAS,OAAO,UAAU,EAAE;AAAA,EAC5I;AACI,SAAO;AACX;AAEA,OAAO,iBAAiBA,kBAAgB,WAAW;AAAA,EAC/C,QAAQ,EAAE,YAAY,KAAM;AAAA,EAC5B,OAAO,EAAE,YAAY,KAAM;AAC/B,CAAC;AACD,IAAI,OAAO,WAAW,cAAc,OAAO,OAAO,gBAAgB,UAAU;AACxE,SAAO,eAAeA,kBAAgB,WAAW,OAAO,aAAa;AAAA,IACjE,cAAc;AAAA,IACd,OAAO;AAAA,EACf,CAAK;AACL;ACjHA,MAAM,WAAW;AACjB,SAAS,iBAAiB;AACtB,MAAI,OAAO;AACX,MAAI,MAAM;AACV,SAAO,QAAQ;AACX,WAAO,SAAU,KAAK,OAAM,IAAK,SAAS,UAAW,CAAC;AAAA,EAC9D;AACI,SAAO;AACX;ACRA,MAAM,UAAU,CAAC,UAAW,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,YAAW;AAC1F,SAAS,cAAc,OAAO;AAC1B,MAAI,QAAQ,KAAK,MAAM,UAAU;AAC7B,WAAO;AAAA,EACf;AACI,QAAM,KAAK,OAAO,eAAe,KAAK;AACtC,MAAI,OAAO,QAAQ,OAAO,QAAW;AACjC,WAAO;AAAA,EACf;AACI,QAAM,OAAO,GAAG,eAAe,GAAG,YAAY,SAAU;AACxD,SAAO,SAAS,OAAO,SAAU;AACrC;ACXA,MAAM,iBAAiB,CAAC,UAAU,OAAO,KAAK,EACzC,QAAQ,UAAU,CAAC,OAAOlR,IAAGC,SAAQ;AACtC,MAAK,UAAU,QAAQA,KAAID,KAAI,CAAC,MAAM,QAC9B,UAAU,QAAQC,KAAID,KAAI,CAAC,MAAM,MAAO;AAC5C,WAAO;AAAA,EACf;AACI,SAAO;AACX,CAAC;ACPD,MAAM,aAAa,CAAC,SAAS,OAAO,IAAI,EACnC,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,MAAM,KAAK;ACHxB,MAAM,aAAa,CAAC,UAAW,OAAO,UAAU;ACCzC,MAAMmR,eAAa,CAAC,UAAU,QAAQ,SACtC,OAAO,UAAU,YACjB,WAAW,MAAM,WAAW,KAC5B,MAAM,OAAO,WAAW,MAAM,UAC9B,WAAW,MAAM,MAAM,KACvB,MAAM,QAAQ,QACd,MAAM,QAAQ,QACd,MAAM,gBAAgB,IAAI;ACP1B,MAAM,aAAa,CAAC,UAAU,QAAQ,SACtC,WAAW,MAAM,WAAW,KAC5B,MAAM,OAAO,WAAW,MAAM,cAC9B,WAAW,MAAM,MAAM,KACvB,WAAW,MAAM,MAAM,KACvB,WAAW,MAAM,OAAO,KACxB,WAAW,MAAM,OAAO,QAAQ,CAAC,CAAC;ACPzC,IAAIV,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIqF,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,4BAA4B,uBAAuB,6BAA6B,oCAAoC,yBAAyB,0BAA0B,yBAAyB,uBAAuB,0BAA0B;AAOrP,MAAM,iBAAiB;AAAA,EACnB,yBAAyB;AAC7B;AACO,MAAM,gBAAgB;AAAA,EACzB,YAAY,MAAM,mBAAmB,SAAS;AAC1C,+BAA2B,IAAI,IAAI;AACnC,0BAAsB,IAAI,MAAM,MAAM;AACtC,gCAA4B,IAAI,MAAM,MAAM;AAC5C,uCAAmC,IAAI,MAAM,MAAM;AACnD,4BAAwB,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC;AAC/C,6BAAyB,IAAI,MAAM,IAAI,YAAW,CAAE;AACpD,4BAAwB,IAAI,MAAM,MAAM;AACxC,0BAAsB,IAAI,MAAM,MAAM;AACtC,6BAAyB,IAAI,MAAM,MAAM;AACzC,QAAI,CAAC,WAAW,IAAI,GAAG;AACnB,YAAM,IAAI,UAAU,oDAAoD;AAAA,IACpF;AACQ,QAAI;AACJ,QAAI,cAAc,iBAAiB,GAAG;AAClC,gBAAU;AAAA,IACtB,OACa;AACD,iBAAW;AAAA,IACvB;AACQ,QAAI,CAAC,UAAU;AACX,iBAAW,eAAgB;AAAA,IACvC;AACQ,QAAI,OAAO,aAAa,UAAU;AAC9B,YAAM,IAAI,UAAU,4CAA4C;AAAA,IAC5E;AACQ,QAAI,WAAW,CAAC,cAAc,OAAO,GAAG;AACpC,YAAM,IAAI,UAAU,4CAA4C;AAAA,IAC5E;AACQsF,6BAAuB,MAAM,uBAAuB,MAAM,GAAG;AAC7DA,6BAAuB,MAAM,0BAA0B,EAAE,GAAG,gBAAgB,GAAG,QAAS,GAAE,GAAG;AAC7FA,6BAAuB,MAAM,6BAA6BD,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,OAAOA,yBAAuB,MAAM,uBAAuB,GAAG,CAAC,GAAG,GAAG;AAC3LC,6BAAuB,MAAM,oCAAoCD,yBAAuB,MAAM,6BAA6B,GAAG,EAAE,YAAY,GAAG;AAC/I,SAAK,WAAW,sBAAsB,QAAQ;AAC9C,SAAK,cAAc,iCAAiC,KAAK,QAAQ;AACjEC,6BAAuB,MAAM,yBAAyBD,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,OAAO,GAAGA,yBAAuB,MAAM,yBAAyB,GAAG,CAAC,GAAG,KAAK,QAAQ,GAAGA,yBAAuB,MAAM,yBAAyB,GAAG,CAAC,GAAGA,yBAAuB,MAAM,uBAAuB,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG;AAChV,SAAK,gBAAgB,OAAO,KAAK,iBAAgB,CAAE;AACnD,SAAK,UAAU,OAAO,OAAO;AAAA,MACzB,gBAAgB,KAAK;AAAA,MACrB,kBAAkB,KAAK;AAAA,IACnC,CAAS;AACD,WAAO,iBAAiB,MAAM;AAAA,MAC1B,UAAU,EAAE,UAAU,OAAO,cAAc,MAAO;AAAA,MAClD,aAAa,EAAE,UAAU,OAAO,cAAc,MAAO;AAAA,MACrD,eAAe,EAAE,UAAU,OAAO,cAAc,MAAO;AAAA,MACvD,SAAS,EAAE,UAAU,OAAO,cAAc,MAAK;AAAA,IAC3D,CAAS;AAAA,EACT;AAAA,EACI,mBAAmB;AACf,QAAI,SAAS;AACb,eAAW,CAAC,MAAM,GAAG,KAAKA,yBAAuB,MAAM,uBAAuB,GAAG,GAAG;AAChF,YAAM,QAAQW,aAAW,GAAG,IAAI,MAAMX,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,OAAOY,eAAU,GAAG,CAAC;AACvH,gBAAUZ,yBAAuB,MAAM,4BAA4B,KAAK,+BAA+B,EAAE,KAAK,MAAM,MAAM,KAAK,EAAE;AACjI,gBAAUW,aAAW,KAAK,IAAI,MAAM,OAAO,MAAM;AACjD,gBAAUX,yBAAuB,MAAM,oCAAoC,GAAG;AAAA,IAC1F;AACQ,WAAO,SAASA,yBAAuB,MAAM,yBAAyB,GAAG,EAAE;AAAA,EACnF;AAAA,EACI,CAAC,SAAS;AACN,eAAW,CAAC,MAAM,GAAG,KAAKA,yBAAuB,MAAM,uBAAuB,GAAG,EAAE,WAAW;AAC1F,YAAM,QAAQW,aAAW,GAAG,IAAI,MAAMX,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,OAAOY,eAAU,GAAG,CAAC;AACvH,YAAMZ,yBAAuB,MAAM,4BAA4B,KAAK,+BAA+B,EAAE,KAAK,MAAM,MAAM,KAAK;AAC3H,YAAM;AACN,YAAMA,yBAAuB,MAAM,6BAA6B,GAAG;AAAA,IAC/E;AACQ,UAAMA,yBAAuB,MAAM,yBAAyB,GAAG;AAAA,EACvE;AAAA,EACI,OAAO,SAAS;AACZ,eAAW,QAAQ,KAAK,UAAU;AAC9B,UAAIW,aAAW,IAAI,GAAG;AAClB,eAAO,KAAK,OAAQ;AAAA,MACpC,OACiB;AACD,cAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACI,EAAE,wBAAwB,oBAAI,QAAO,GAAI,8BAA8B,oBAAI,QAAO,GAAI,qCAAqC,oBAAI,QAAO,GAAI,0BAA0B,oBAAI,QAAO,GAAI,2BAA2B,oBAAI,QAAS,GAAE,0BAA0B,oBAAI,QAAS,GAAE,wBAAwB,oBAAI,QAAS,GAAE,2BAA2B,oBAAI,QAAO,GAAI,6BAA6B,oBAAI,QAAO,GAAI,kCAAkC,SAASE,iCAAgC,MAAM,OAAO;AACvd,QAAI,SAAS;AACb,cAAU,GAAGb,yBAAuB,MAAM,yBAAyB,GAAG,CAAC,GAAG,KAAK,QAAQ,GAAGA,yBAAuB,MAAM,uBAAuB,GAAG,CAAC;AAClJ,cAAU,yCAAyCc,WAAO,IAAI,CAAC;AAC/D,QAAIH,aAAW,KAAK,GAAG;AACnB,gBAAU,eAAeG,WAAO,MAAM,IAAI,CAAC,IAAId,yBAAuB,MAAM,uBAAuB,GAAG,CAAC;AACvG,gBAAU,iBAAiB,MAAM,QAAQ,0BAA0B;AAAA,IAC/E;AACQ,QAAIA,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,4BAA4B,MAAM;AAC9F,gBAAU,GAAGA,yBAAuB,MAAM,uBAAuB,GAAG,CAAC,mBAAmBW,aAAW,KAAK,IAAI,MAAM,OAAO,MAAM,UAAU;AAAA,IACrJ;AACQ,WAAOX,yBAAuB,MAAM,0BAA0B,GAAG,EAAE,OAAO,GAAG,MAAM,GAAGA,yBAAuB,MAAM,uBAAuB,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;AAAA,EAClK,GAAO,OAAO,aAAa;AACnB,WAAO,KAAK,OAAQ;AAAA,EAC5B;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO,KAAK,OAAQ;AAAA,EAC5B;AACA;AClHO,MAAM,cAAc;AAAA,EACvB,YAAY,MAAM;AACd,SAAK,OAAO;AAAA,EACpB;AAAA,EACI,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACf;AACA;ACDA,IAAI,qBAAqB;AACzB,eAAe,aAAajQ,UAAS,MAAM;AAEvC,QAAM,EAAE,cAAc,kBAAkB,MAAM,OAAO,4BAA8B;AACnF,MAAI,CAAC,oBAAoB;AACrB,YAAQ,KAAK,uDAAuD,KAAK,UAAUA,KAAI,CAAC,WAAW;AACnG,yBAAqB;AAAA,EAC7B;AAEI,SAAO,MAAM,cAAcA,OAAM,GAAG,IAAI;AAC5C;AACA,MAAM,mBAAmB,IAAI,eAAe,EAAE,WAAW,MAAM,SAAS,IAAI,KAAK,KAAM;AACvF,MAAM,oBAAoB,IAAI,eAAe,WAAW,EAAE,WAAW,MAAM,SAAS,IAAI,KAAK,KAAM;AACnG,eAAe,2BAA2B,MAAM,MAAM;AAClD,QAAM,UAAU,IAAI,gBAAgB,IAAI;AACxC,QAAM,WAAWgR,WAAS,KAAK,OAAO;AACtC,QAAM,OAAO,IAAI,cAAc,QAAQ;AACvC,QAAM,UAAU;AAAA,IACZ,GAAG,KAAK;AAAA,IACR,GAAG,QAAQ;AAAA,IACX,kBAAkB,QAAQ;AAAA,EAC7B;AACD,SAAO,EAAE,GAAG,MAAM,MAAY,QAAS;AAC3C;AACO,SAAS,aAAa;AAEzB,MAAI,OAAO,oBAAoB,aAAa;AAExC,eAAW,kBAAkBC;AAAAA,EACrC;AACI,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAOC;AAAAA,IACP;AAAA,IACA;AAAA,IACA,SAASC;AAAAA,IACT,UAAUC;AAAAA,IACV,MAAMC;AAAAA,IACN;AAAA,IACR,gBAAQ/D;AAAAA,IACA;AAAA,IACA,iBAAiB,CAAC,QAAS,IAAI,WAAW,OAAO,IAAI,oBAAoB;AAAA,IACzE;AAAA,IACA,gBAAgB,CAAC,UAAU,iBAAiBgE;AAAAA,EAC/C;AACL;ACjDA,IAAI,CAACC,KAAYC,UAAeC,WAAiB,GAAE,EAAE,MAAM,MAAM;ACH1D,MAAM,oBAAoB,MAAM;AACvC;AACO,MAAM,iBAAiB,YAAY;AAAA,EACtC,YAAY,QAAQ,OAAO,SAAS,SAAS;AACzC,UAAM,GAAG,SAAS,YAAY,QAAQ,OAAO,OAAO,CAAC,EAAE;AACvD,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,aAAa,mCAAU;AAC5B,SAAK,QAAQ;AACb,UAAM,OAAO;AACb,SAAK,OAAO,6BAAO;AACnB,SAAK,QAAQ,6BAAO;AACpB,SAAK,OAAO,6BAAO;AAAA,EAC3B;AAAA,EACI,OAAO,YAAY,QAAQ,OAAO,SAAS;AACvC,UAAM,OAAM,+BAAO,WACf,OAAO,MAAM,YAAY,WACrB,MAAM,UACJ,KAAK,UAAU,MAAM,OAAO,IAChC,QAAQ,KAAK,UAAU,KAAK,IACxB;AACV,QAAI,UAAU,KAAK;AACf,aAAO,GAAG,MAAM,IAAI,GAAG;AAAA,IACnC;AACQ,QAAI,QAAQ;AACR,aAAO,GAAG,MAAM;AAAA,IAC5B;AACQ,QAAI,KAAK;AACL,aAAO;AAAA,IACnB;AACQ,WAAO;AAAA,EACf;AAAA,EACI,OAAO,SAAS,QAAQ,eAAe,SAAS,SAAS;AACrD,QAAI,CAAC,UAAU,CAAC,SAAS;AACrB,aAAO,IAAI,mBAAmB,EAAE,SAAS,OAAO,YAAY,aAAa,GAAG;AAAA,IACxF;AACQ,UAAM,QAAQ,+CAAgB;AAC9B,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,gBAAgB,QAAQ,OAAO,SAAS,OAAO;AAAA,IACtE;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,oBAAoB,QAAQ,OAAO,SAAS,OAAO;AAAA,IAC1E;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,sBAAsB,QAAQ,OAAO,SAAS,OAAO;AAAA,IAC5E;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,cAAc,QAAQ,OAAO,SAAS,OAAO;AAAA,IACpE;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,cAAc,QAAQ,OAAO,SAAS,OAAO;AAAA,IACpE;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,yBAAyB,QAAQ,OAAO,SAAS,OAAO;AAAA,IAC/E;AACQ,QAAI,WAAW,KAAK;AAChB,aAAO,IAAI,eAAe,QAAQ,OAAO,SAAS,OAAO;AAAA,IACrE;AACQ,QAAI,UAAU,KAAK;AACf,aAAO,IAAI,oBAAoB,QAAQ,OAAO,SAAS,OAAO;AAAA,IAC1E;AACQ,WAAO,IAAI,SAAS,QAAQ,OAAO,SAAS,OAAO;AAAA,EAC3D;AACA;AACO,MAAM,0BAA0B,SAAS;AAAA,EAC5C,YAAY,EAAE,QAAS,IAAG,IAAI;AAC1B,UAAM,QAAW,QAAW,WAAW,wBAAwB,MAAS;AAAA,EAChF;AACA;AACO,MAAM,2BAA2B,SAAS;AAAA,EAC7C,YAAY,EAAE,SAAS,SAAS;AAC5B,UAAM,QAAW,QAAW,WAAW,qBAAqB,MAAS;AAGrE,QAAI;AACA,WAAK,QAAQ;AAAA,EACzB;AACA;AACO,MAAM,kCAAkC,mBAAmB;AAAA,EAC9D,YAAY,EAAE,QAAS,IAAG,IAAI;AAC1B,UAAM,EAAE,SAAS,WAAW,qBAAoB,CAAE;AAAA,EAC1D;AACA;AACO,MAAM,wBAAwB,SAAS;AAC9C;AACO,MAAM,4BAA4B,SAAS;AAClD;AACO,MAAM,8BAA8B,SAAS;AACpD;AACO,MAAM,sBAAsB,SAAS;AAC5C;AACO,MAAM,sBAAsB,SAAS;AAC5C;AACO,MAAM,iCAAiC,SAAS;AACvD;AACO,MAAM,uBAAuB,SAAS;AAC7C;AACO,MAAM,4BAA4B,SAAS;AAClD;AACO,MAAM,gCAAgC,YAAY;AAAA,EACrD,cAAc;AACV,UAAM,kEAAkE;AAAA,EAChF;AACA;AACO,MAAM,uCAAuC,YAAY;AAAA,EAC5D,cAAc;AACV,UAAM,oFAAoF;AAAA,EAClG;AACA;ACvGO,MAAM,YAAY;AAAA,EACrB,cAAc;AACV,SAAK,SAAS,CAAE;AAChB,SAAK,aAAa;AAAA,EAC1B;AAAA,EACI,OAAO,OAAO;AACV,QAAI5I,QAAO,KAAK,WAAW,KAAK;AAChC,QAAI,KAAK,YAAY;AACjB,MAAAA,QAAO,OAAOA;AACd,WAAK,aAAa;AAAA,IAC9B;AACQ,QAAIA,MAAK,SAAS,IAAI,GAAG;AACrB,WAAK,aAAa;AAClB,MAAAA,QAAOA,MAAK,MAAM,GAAG,EAAE;AAAA,IACnC;AACQ,QAAI,CAACA,OAAM;AACP,aAAO,CAAE;AAAA,IACrB;AACQ,UAAM,kBAAkB,YAAY,cAAc,IAAIA,MAAKA,MAAK,SAAS,CAAC,KAAK,EAAE;AACjF,QAAI,QAAQA,MAAK,MAAM,YAAY,cAAc;AAGjD,QAAI,iBAAiB;AACjB,YAAM,IAAK;AAAA,IACvB;AACQ,QAAI,MAAM,WAAW,KAAK,CAAC,iBAAiB;AACxC,WAAK,OAAO,KAAK,MAAM,CAAC,CAAC;AACzB,aAAO,CAAE;AAAA,IACrB;AACQ,QAAI,KAAK,OAAO,SAAS,GAAG;AACxB,cAAQ,CAAC,KAAK,OAAO,KAAK,EAAE,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,MAAM,CAAC,CAAC;AAC3D,WAAK,SAAS,CAAE;AAAA,IAC5B;AACQ,QAAI,CAAC,iBAAiB;AAClB,WAAK,SAAS,CAAC,MAAM,IAAG,KAAM,EAAE;AAAA,IAC5C;AACQ,WAAO;AAAA,EACf;AAAA,EACI,WAAW,OAAO;AACd,QAAI,SAAS;AACT,aAAO;AACX,QAAI,OAAO,UAAU;AACjB,aAAO;AAEX,QAAI,OAAO,WAAW,aAAa;AAC/B,UAAI,iBAAiB,QAAQ;AACzB,eAAO,MAAM,SAAU;AAAA,MACvC;AACY,UAAI,iBAAiB,YAAY;AAC7B,eAAO,OAAO,KAAK,KAAK,EAAE,SAAU;AAAA,MACpD;AACY,YAAM,IAAI,YAAY,wCAAwC,MAAM,YAAY,IAAI,mIAAmI;AAAA,IACnO;AAEQ,QAAI,OAAO,gBAAgB,aAAa;AACpC,UAAI,iBAAiB,cAAc,iBAAiB,aAAa;AAC7D,aAAK,gBAAgB,KAAK,cAAc,IAAI,YAAY,MAAM;AAC9D,eAAO,KAAK,YAAY,OAAO,KAAK;AAAA,MACpD;AACY,YAAM,IAAI,YAAY,oDAAoD,MAAM,YAAY,IAAI,gDAAgD;AAAA,IAC5J;AACQ,UAAM,IAAI,YAAY,gGAAgG;AAAA,EAC9H;AAAA,EACI,QAAQ;AACJ,QAAI,CAAC,KAAK,OAAO,UAAU,CAAC,KAAK,YAAY;AACzC,aAAO,CAAE;AAAA,IACrB;AACQ,UAAM,QAAQ,CAAC,KAAK,OAAO,KAAK,EAAE,CAAC;AACnC,SAAK,SAAS,CAAE;AAChB,SAAK,aAAa;AAClB,WAAO;AAAA,EACf;AACA;AAEA,YAAY,gBAAgB,oBAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AAChD,YAAY,iBAAiB;AC5EtB,SAAS,8BAA8B,QAAQ;AAClD,MAAI,OAAO,OAAO,aAAa;AAC3B,WAAO;AACX,QAAM,SAAS,OAAO,UAAW;AACjC,SAAO;AAAA,IACH,MAAM,OAAO;AACT,UAAI;AACA,cAAM,SAAS,MAAM,OAAO,KAAM;AAClC,YAAI,iCAAQ;AACR,iBAAO,YAAW;AACtB,eAAO;AAAA,MACvB,SACmBzI,IAAG;AACN,eAAO,YAAW;AAClB,cAAMA;AAAA,MACtB;AAAA,IACS;AAAA,IACD,MAAM,SAAS;AACX,YAAM,gBAAgB,OAAO,OAAQ;AACrC,aAAO,YAAa;AACpB,YAAM;AACN,aAAO,EAAE,MAAM,MAAM,OAAO,OAAW;AAAA,IAC1C;AAAA,IACD,CAAC,OAAO,aAAa,IAAI;AACrB,aAAO;AAAA,IACV;AAAA,EACJ;AACL;AC5BO,MAAM,OAAO;AAAA,EAChB,YAAY,UAAU,YAAY;AAC9B,SAAK,WAAW;AAChB,SAAK,aAAa;AAAA,EAC1B;AAAA,EACI,OAAO,gBAAgB,UAAU,YAAY;AACzC,QAAI,WAAW;AACf,oBAAgB,WAAW;AACvB,UAAI,UAAU;AACV,cAAM,IAAI,MAAM,0EAA0E;AAAA,MAC1G;AACY,iBAAW;AACX,UAAI,OAAO;AACX,UAAI;AACA,yBAAiB,OAAO,iBAAiB,UAAU,UAAU,GAAG;AAC5D,cAAI;AACA;AACJ,cAAI,IAAI,KAAK,WAAW,QAAQ,GAAG;AAC/B,mBAAO;AACP;AAAA,UACxB;AACoB,cAAI,IAAI,UAAU,MAAM;AACpB,gBAAI;AACJ,gBAAI;AACA,qBAAO,KAAK,MAAM,IAAI,IAAI;AAAA,YACtD,SAC+BA,IAAG;AACN,sBAAQ,MAAM,sCAAsC,IAAI,IAAI;AAC5D,sBAAQ,MAAM,eAAe,IAAI,GAAG;AACpC,oBAAMA;AAAA,YAClC;AACwB,gBAAI,QAAQ,KAAK,OAAO;AACpB,oBAAM,IAAI,SAAS,QAAW,KAAK,OAAO,QAAW,MAAS;AAAA,YAC1F;AACwB,kBAAM;AAAA,UAC9B,OACyB;AACD,gBAAI;AACJ,gBAAI;AACA,qBAAO,KAAK,MAAM,IAAI,IAAI;AAAA,YACtD,SAC+BA,IAAG;AACN,sBAAQ,MAAM,sCAAsC,IAAI,IAAI;AAC5D,sBAAQ,MAAM,eAAe,IAAI,GAAG;AACpC,oBAAMA;AAAA,YAClC;AAEwB,gBAAI,IAAI,SAAS,SAAS;AACtB,oBAAM,IAAI,SAAS,QAAW,KAAK,OAAO,KAAK,SAAS,MAAS;AAAA,YAC7F;AACwB,kBAAM,EAAE,OAAO,IAAI,OAAO,KAAY;AAAA,UAC9D;AAAA,QACA;AACgB,eAAO;AAAA,MACvB,SACmBA,IAAG;AAEN,YAAIA,cAAa,SAASA,GAAE,SAAS;AACjC;AACJ,cAAMA;AAAA,MACtB,UACoB;AAEJ,YAAI,CAAC;AACD,qBAAW,MAAO;AAAA,MACtC;AAAA,IACA;AACQ,WAAO,IAAI,OAAO,UAAU,UAAU;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,OAAO,mBAAmB,gBAAgB,YAAY;AAClD,QAAI,WAAW;AACf,oBAAgB,YAAY;AACxB,YAAM,cAAc,IAAI,YAAa;AACrC,YAAM,OAAO,8BAA8B,cAAc;AACzD,uBAAiB,SAAS,MAAM;AAC5B,mBAAW,QAAQ,YAAY,OAAO,KAAK,GAAG;AAC1C,gBAAM;AAAA,QAC1B;AAAA,MACA;AACY,iBAAW,QAAQ,YAAY,SAAS;AACpC,cAAM;AAAA,MACtB;AAAA,IACA;AACQ,oBAAgB,WAAW;AACvB,UAAI,UAAU;AACV,cAAM,IAAI,MAAM,0EAA0E;AAAA,MAC1G;AACY,iBAAW;AACX,UAAI,OAAO;AACX,UAAI;AACA,yBAAiB,QAAQ,aAAa;AAClC,cAAI;AACA;AACJ,cAAI;AACA,kBAAM,KAAK,MAAM,IAAI;AAAA,QAC7C;AACgB,eAAO;AAAA,MACvB,SACmBA,IAAG;AAEN,YAAIA,cAAa,SAASA,GAAE,SAAS;AACjC;AACJ,cAAMA;AAAA,MACtB,UACoB;AAEJ,YAAI,CAAC;AACD,qBAAW,MAAO;AAAA,MACtC;AAAA,IACA;AACQ,WAAO,IAAI,OAAO,UAAU,UAAU;AAAA,EAC9C;AAAA,EACI,CAAC,OAAO,aAAa,IAAI;AACrB,WAAO,KAAK,SAAU;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM;AACF,UAAM,OAAO,CAAE;AACf,UAAM,QAAQ,CAAE;AAChB,UAAM,WAAW,KAAK,SAAU;AAChC,UAAM,cAAc,CAAC8I,WAAU;AAC3B,aAAO;AAAA,QACH,MAAM,MAAM;AACR,cAAIA,OAAM,WAAW,GAAG;AACpB,kBAAM,SAAS,SAAS,KAAM;AAC9B,iBAAK,KAAK,MAAM;AAChB,kBAAM,KAAK,MAAM;AAAA,UACzC;AACoB,iBAAOA,OAAM,MAAO;AAAA,QACvB;AAAA,MACJ;AAAA,IACJ;AACD,WAAO;AAAA,MACH,IAAI,OAAO,MAAM,YAAY,IAAI,GAAG,KAAK,UAAU;AAAA,MACnD,IAAI,OAAO,MAAM,YAAY,KAAK,GAAG,KAAK,UAAU;AAAA,IACvD;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,mBAAmB;AACf,UAAM,OAAO;AACb,QAAI;AACJ,UAAM,UAAU,IAAI,YAAa;AACjC,WAAO,IAAIoE,iBAAe;AAAA,MACtB,MAAM,QAAQ;AACV,eAAO,KAAK,OAAO,aAAa,EAAG;AAAA,MACtC;AAAA,MACD,MAAM,KAAK,MAAM;AACb,YAAI;AACA,gBAAM,EAAE,OAAO,KAAM,IAAG,MAAM,KAAK,KAAM;AACzC,cAAI;AACA,mBAAO,KAAK,MAAO;AACvB,gBAAM,QAAQ,QAAQ,OAAO,KAAK,UAAU,KAAK,IAAI,IAAI;AACzD,eAAK,QAAQ,KAAK;AAAA,QACtC,SACuB,KAAK;AACR,eAAK,MAAM,GAAG;AAAA,QAClC;AAAA,MACa;AAAA,MACD,MAAM,SAAS;;AACX,gBAAMpN,MAAA,KAAK,WAAL,gBAAAA,IAAA;AAAA,MACT;AAAA,IACb,CAAS;AAAA,EACT;AACA;AACO,gBAAgB,iBAAiB,UAAU,YAAY;AAC1D,MAAI,CAAC,SAAS,MAAM;AAChB,eAAW,MAAO;AAClB,UAAM,IAAI,YAAY,mDAAmD;AAAA,EACjF;AACI,QAAM,aAAa,IAAI,WAAY;AACnC,QAAM,cAAc,IAAI,YAAa;AACrC,QAAM,OAAO,8BAA8B,SAAS,IAAI;AACxD,mBAAiB,YAAY,cAAc,IAAI,GAAG;AAC9C,eAAW,QAAQ,YAAY,OAAO,QAAQ,GAAG;AAC7C,YAAM,MAAM,WAAW,OAAO,IAAI;AAClC,UAAI;AACA,cAAM;AAAA,IACtB;AAAA,EACA;AACI,aAAW,QAAQ,YAAY,SAAS;AACpC,UAAM,MAAM,WAAW,OAAO,IAAI;AAClC,QAAI;AACA,YAAM;AAAA,EAClB;AACA;AAKA,gBAAgB,cAAc,UAAU;AACpC,MAAI,OAAO,IAAI,WAAY;AAC3B,mBAAiB,SAAS,UAAU;AAChC,QAAI,SAAS,MAAM;AACf;AAAA,IACZ;AACQ,UAAM,cAAc,iBAAiB,cAAc,IAAI,WAAW,KAAK,IACjE,OAAO,UAAU,WAAW,IAAI,YAAa,EAAC,OAAO,KAAK,IACtD;AACV,QAAI,UAAU,IAAI,WAAW,KAAK,SAAS,YAAY,MAAM;AAC7D,YAAQ,IAAI,IAAI;AAChB,YAAQ,IAAI,aAAa,KAAK,MAAM;AACpC,WAAO;AACP,QAAI;AACJ,YAAQ,eAAe,uBAAuB,IAAI,OAAO,IAAI;AACzD,YAAM,KAAK,MAAM,GAAG,YAAY;AAChC,aAAO,KAAK,MAAM,YAAY;AAAA,IAC1C;AAAA,EACA;AACI,MAAI,KAAK,SAAS,GAAG;AACjB,UAAM;AAAA,EACd;AACA;AACA,SAAS,uBAAuB,QAAQ;AAIpC,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,WAAST,KAAI,GAAGA,KAAI,OAAO,SAAS,GAAGA,MAAK;AACxC,QAAI,OAAOA,EAAC,MAAM,WAAW,OAAOA,KAAI,CAAC,MAAM,SAAS;AAEpD,aAAOA,KAAI;AAAA,IACvB;AACQ,QAAI,OAAOA,EAAC,MAAM,YAAY,OAAOA,KAAI,CAAC,MAAM,UAAU;AAEtD,aAAOA,KAAI;AAAA,IACvB;AACQ,QAAI,OAAOA,EAAC,MAAM,YACd,OAAOA,KAAI,CAAC,MAAM,WAClBA,KAAI,IAAI,OAAO,UACf,OAAOA,KAAI,CAAC,MAAM,YAClB,OAAOA,KAAI,CAAC,MAAM,SAAS;AAE3B,aAAOA,KAAI;AAAA,IACvB;AAAA,EACA;AACI,SAAO;AACX;AACA,MAAM,WAAW;AAAA,EACb,cAAc;AACV,SAAK,QAAQ;AACb,SAAK,OAAO,CAAE;AACd,SAAK,SAAS,CAAE;AAAA,EACxB;AAAA,EACI,OAAO,MAAM;AACT,QAAI,KAAK,SAAS,IAAI,GAAG;AACrB,aAAO,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC;AAAA,IACpD;AACQ,QAAI,CAAC,MAAM;AAEP,UAAI,CAAC,KAAK,SAAS,CAAC,KAAK,KAAK;AAC1B,eAAO;AACX,YAAM,MAAM;AAAA,QACR,OAAO,KAAK;AAAA,QACZ,MAAM,KAAK,KAAK,KAAK,IAAI;AAAA,QACzB,KAAK,KAAK;AAAA,MACb;AACD,WAAK,QAAQ;AACb,WAAK,OAAO,CAAE;AACd,WAAK,SAAS,CAAE;AAChB,aAAO;AAAA,IACnB;AACQ,SAAK,OAAO,KAAK,IAAI;AACrB,QAAI,KAAK,WAAW,GAAG,GAAG;AACtB,aAAO;AAAA,IACnB;AACQ,QAAI,CAAC,WAAWE,IAAG,KAAK,IAAI,UAAU,MAAM,GAAG;AAC/C,QAAI,MAAM,WAAW,GAAG,GAAG;AACvB,cAAQ,MAAM,UAAU,CAAC;AAAA,IACrC;AACQ,QAAI,cAAc,SAAS;AACvB,WAAK,QAAQ;AAAA,IACzB,WACiB,cAAc,QAAQ;AAC3B,WAAK,KAAK,KAAK,KAAK;AAAA,IAChC;AACQ,WAAO;AAAA,EACf;AACA;AAUA,SAAS,UAAUD,MAAK,WAAW;AAC/B,QAAM,QAAQA,KAAI,QAAQ,SAAS;AACnC,MAAI,UAAU,IAAI;AACd,WAAO,CAACA,KAAI,UAAU,GAAG,KAAK,GAAG,WAAWA,KAAI,UAAU,QAAQ,UAAU,MAAM,CAAC;AAAA,EAC3F;AACI,SAAO,CAACA,MAAK,IAAI,EAAE;AACvB;ACpTO,MAAM,iBAAiB,CAAC,UAAU,SAAS,QAC9C,OAAO,UAAU,YACjB,OAAO,MAAM,QAAQ,YACrB,OAAO,MAAM,SAAS;AACnB,MAAM,aAAa,CAAC,UAAU,SAAS,QAC1C,OAAO,UAAU,YACjB,OAAO,MAAM,SAAS,YACtB,OAAO,MAAM,iBAAiB,YAC9B,WAAW,KAAK;AAKb,MAAM,aAAa,CAAC,UAAU,SAAS,QAC1C,OAAO,UAAU,YACjB,OAAO,MAAM,SAAS,YACtB,OAAO,MAAM,SAAS,YACtB,OAAO,MAAM,SAAS,cACtB,OAAO,MAAM,UAAU,cACvB,OAAO,MAAM,gBAAgB;AAC1B,MAAM,eAAe,CAAC,UAAU;AACnC,SAAO,WAAW,KAAK,KAAK,eAAe,KAAK,KAAK,eAAe,KAAK;AAC7E;AAUO,eAAe,OAAO,OAAO,MAAM,SAAS;;AAE/C,UAAQ,MAAM;AAEd,MAAI,WAAW,KAAK,GAAG;AACnB,WAAO;AAAA,EACf;AACI,MAAI,eAAe,KAAK,GAAG;AACvB,UAAM2O,QAAO,MAAM,MAAM,KAAM;AAC/B,aAAS,OAAO,IAAI,IAAI,MAAM,GAAG,EAAE,SAAS,MAAM,OAAO,EAAE,IAAG,KAAM;AAIpE,UAAM,OAAO,WAAWA,KAAI,IAAI,CAAE,MAAMA,MAAK,YAAW,KAAO,CAACA,KAAI;AACpE,WAAO,IAAIhB,OAAK,MAAM,MAAM,OAAO;AAAA,EAC3C;AACI,QAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAS,OAAO,QAAQ,KAAK,KAAK;AAClC,MAAI,EAAC,mCAAS,OAAM;AAChB,UAAM,QAAOnN,MAAA,KAAK,CAAC,MAAN,gBAAAA,IAAS;AACtB,QAAI,OAAO,SAAS,UAAU;AAC1B,gBAAU,EAAE,GAAG,SAAS,KAAM;AAAA,IAC1C;AAAA,EACA;AACI,SAAO,IAAImN,OAAK,MAAM,MAAM,OAAO;AACvC;AACA,eAAe,SAAS,OAAO;;AAC3B,MAAI,QAAQ,CAAE;AACd,MAAI,OAAO,UAAU,YACjB,YAAY,OAAO,KAAK;AAAA,EACxB,iBAAiB,aAAa;AAC9B,UAAM,KAAK,KAAK;AAAA,EACxB,WACa,WAAW,KAAK,GAAG;AACxB,UAAM,KAAK,MAAM,MAAM,YAAW,CAAE;AAAA,EAC5C,WACa,wBAAwB,KAAK,GACpC;AACE,qBAAiB,SAAS,OAAO;AAC7B,YAAM,KAAK,KAAK;AAAA,IAC5B;AAAA,EACA,OACS;AACD,UAAM,IAAI,MAAM,yBAAyB,OAAO,KAAK,mBAAkBnN,MAAA,+BAAO,gBAAP,gBAAAA,IACjE,IAAI,YAAY,cAAc,KAAK,CAAC,EAAE;AAAA,EACpD;AACI,SAAO;AACX;AACA,SAAS,cAAc,OAAO;AAC1B,QAAM,QAAQ,OAAO,oBAAoB,KAAK;AAC9C,SAAO,IAAI,MAAM,IAAI,CAAC+I,OAAM,IAAIA,EAAC,GAAG,EAAE,KAAK,IAAI,CAAC;AACpD;AACA,SAAS,QAAQ,OAAO;;AACpB,SAAQ,yBAAyB,MAAM,IAAI,KACvC,yBAAyB,MAAM,QAAQ;AAAA,IAEvC/I,MAAA,yBAAyB,MAAM,IAAI,MAAnC,gBAAAA,IAAsC,MAAM,SAAS;AAC7D;AACA,MAAM,2BAA2B,CAACL,OAAM;AACpC,MAAI,OAAOA,OAAM;AACb,WAAOA;AACX,MAAI,OAAO,WAAW,eAAeA,cAAa;AAC9C,WAAO,OAAOA,EAAC;AACnB,SAAO;AACX;AACA,MAAM,0BAA0B,CAAC,UAAU,SAAS,QAAQ,OAAO,UAAU,YAAY,OAAO,MAAM,OAAO,aAAa,MAAM;AACzH,MAAM,kBAAkB,CAAC,SAAS,QAAQ,OAAO,SAAS,YAAY,KAAK,QAAQ,KAAK,OAAO,WAAW,MAAM;AAWhH,MAAM,8BAA8B,OAAO,SAAS;AACvD,QAAM,OAAO,MAAM,WAAW,KAAK,IAAI;AACvC,SAAO0N,6BAA2B,MAAM,IAAI;AAChD;AACO,MAAM,aAAa,OAAO,SAAS;AACtC,QAAM,OAAO,IAAIH,WAAU;AAC3B,QAAM,QAAQ,IAAI,OAAO,QAAQ,QAAQ,CAAE,CAAA,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,aAAa,MAAM,KAAK,KAAK,CAAC,CAAC;AAClG,SAAO;AACX;AAcA,MAAM,eAAe,OAAO,MAAM,KAAK,UAAU;AAC7C,MAAI,UAAU;AACV;AACJ,MAAI,SAAS,MAAM;AACf,UAAM,IAAI,UAAU,sBAAsB,GAAG,6DAA6D;AAAA,EAClH;AAEI,MAAI,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AACtF,SAAK,OAAO,KAAK,OAAO,KAAK,CAAC;AAAA,EACtC,WACa,aAAa,KAAK,GAAG;AAC1B,UAAM,OAAO,MAAM,OAAO,KAAK;AAC/B,SAAK,OAAO,KAAK,IAAI;AAAA,EAC7B,WACa,MAAM,QAAQ,KAAK,GAAG;AAC3B,UAAM,QAAQ,IAAI,MAAM,IAAI,CAAC,UAAU,aAAa,MAAM,MAAM,MAAM,KAAK,CAAC,CAAC;AAAA,EACrF,WACa,OAAO,UAAU,UAAU;AAChC,UAAM,QAAQ,IAAI,OAAO,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,aAAa,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC;AAAA,EAClH,OACS;AACD,UAAM,IAAI,UAAU,wGAAwG,KAAK,UAAU;AAAA,EACnJ;AACA;AC5JA,IAAI8C,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAG7G,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,OAAK,CAAC,MAAM,IAAI,QAAQ,EAAS,OAAA,IAAI,UAAU,yEAAyE;AAChL,SAAuE,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIqF,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AAEtG,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,OAAK,CAAC,MAAM,IAAI,QAAQ,EAAS,OAAA,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI;AAOJ,eAAe,qBAAqB,OAAO;AACjC,QAAA,EAAE,aAAa;AACjB,MAAA,MAAM,QAAQ,QAAQ;AAChB,UAAA,YAAY,SAAS,QAAQ,SAAS,KAAK,SAAS,SAAS,SAAS,IAAI;AAG5E,QAAA,MAAM,QAAQ,eAAe;AAC7B,aAAO,MAAM,QAAQ,cAAc,gBAAgB,UAAU,MAAM,UAAU;AAAA,IAAA;AAEjF,WAAO,OAAO,gBAAgB,UAAU,MAAM,UAAU;AAAA,EAAA;AAGxD,MAAA,SAAS,WAAW,KAAK;AAClB,WAAA;AAAA,EAAA;AAEP,MAAA,MAAM,QAAQ,kBAAkB;AACzB,WAAA;AAAA,EAAA;AAEX,QAAM,cAAc,SAAS,QAAQ,IAAI,cAAc;AACvD,QAAM,UAAS,2CAAa,SAAS,yBAAuB,2CAAa,SAAS;AAClF,MAAI,QAAQ;AACF,UAAA,OAAO,MAAM,SAAS,KAAK;AACjC,UAAM,YAAY,SAAS,QAAQ,SAAS,KAAK,SAAS,SAAS,IAAI;AAChE,WAAA,cAAc,MAAM,QAAQ;AAAA,EAAA;AAEjC,QAAA/B,QAAO,MAAM,SAAS,KAAK;AACjC,QAAM,YAAY,SAAS,QAAQ,SAAS,KAAK,SAAS,SAASA,KAAI;AAEhE,SAAAA;AACX;AACA,SAAS,cAAc,OAAO,UAAU;AAChC,MAAA,CAAC,SAAS,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,GAAG;AACtD,WAAA;AAAA,EAAA;AAEJ,SAAA,OAAO,eAAe,OAAO,eAAe;AAAA,IAC/C,OAAO,SAAS,QAAQ,IAAI,cAAc;AAAA,IAC1C,YAAY;AAAA,EAAA,CACf;AACL;AAKO,MAAM,mBAAmB,QAAQ;AAAA,EACpC,YAAY,iBAAiB,gBAAgB,sBAAsB;AAC/D,UAAM,CAAC,YAAY;AAIf,cAAQ,IAAI;AAAA,IAAA,CACf;AACD,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AAAA,EAAA;AAAA,EAEzB,YAAY,WAAW;AACnB,WAAO,IAAI,WAAW,KAAK,iBAAiB,OAAO,UAAU,cAAc,UAAU,MAAM,KAAK,cAAc,KAAK,GAAG,KAAK,GAAG,MAAM,QAAQ,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAejJ,aAAa;AACT,WAAO,KAAK,gBAAgB,KAAK,CAACI,OAAMA,GAAE,QAAQ;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBtD,MAAM,eAAe;AACjB,UAAM,CAAC,MAAM,QAAQ,IAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,MAAM,GAAG,KAAK,WAAY,CAAA,CAAC;AACrE,WAAA,EAAE,MAAM,UAAU,YAAY,SAAS,QAAQ,IAAI,cAAc,EAAE;AAAA,EAAA;AAAA,EAE9E,QAAQ;AACA,QAAA,CAAC,KAAK,eAAe;AACrB,WAAK,gBAAgB,KAAK,gBAAgB,KAAK,KAAK,aAAa;AAAA,IAAA;AAErE,WAAO,KAAK;AAAA,EAAA;AAAA,EAEhB,KAAK,aAAa,YAAY;AAC1B,WAAO,KAAK,MAAA,EAAQ,KAAK,aAAa,UAAU;AAAA,EAAA;AAAA,EAEpD,MAAM,YAAY;AACd,WAAO,KAAK,QAAQ,MAAM,UAAU;AAAA,EAAA;AAAA,EAExC,QAAQ,WAAW;AACf,WAAO,KAAK,QAAQ,QAAQ,SAAS;AAAA,EAAA;AAE7C;AACO,MAAM,UAAU;AAAA,EACnB,YAAY;AAAA,IAAE;AAAA,IAAS,aAAa;AAAA,IAAG,UAAU;AAAA;AAAA,IACjD;AAAA,IAAW,OAAO;AAAA,EAAA,GAAoB;AAClC,SAAK,UAAU;AACV,SAAA,aAAa,wBAAwB,cAAc,UAAU;AAC7D,SAAA,UAAU,wBAAwB,WAAW,OAAO;AACzD,SAAK,YAAY;AACjB,SAAK,QAAQ,mBAAmBkE;AAAAA,EAAA;AAAA,EAEpC,YAAY,MAAM;AACd,WAAO,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUZ,eAAe,MAAM;AACV,WAAA;AAAA,MACH,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,cAAc,KAAK,aAAa;AAAA,MAChC,GAAG,mBAAmB;AAAA,MACtB,GAAG,KAAK,YAAY,IAAI;AAAA,IAC5B;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAKJ,gBAAgB,SAAS,eAAe;AAAA,EAAA;AAAA,EACxC,wBAAwB;AACb,WAAA,wBAAwB,OAAO;AAAA,EAAA;AAAA,EAE1C,IAAInN,OAAM,MAAM;AACZ,WAAO,KAAK,cAAc,OAAOA,OAAM,IAAI;AAAA,EAAA;AAAA,EAE/C,KAAKA,OAAM,MAAM;AACb,WAAO,KAAK,cAAc,QAAQA,OAAM,IAAI;AAAA,EAAA;AAAA,EAEhD,MAAMA,OAAM,MAAM;AACd,WAAO,KAAK,cAAc,SAASA,OAAM,IAAI;AAAA,EAAA;AAAA,EAEjD,IAAIA,OAAM,MAAM;AACZ,WAAO,KAAK,cAAc,OAAOA,OAAM,IAAI;AAAA,EAAA;AAAA,EAE/C,OAAOA,OAAM,MAAM;AACf,WAAO,KAAK,cAAc,UAAUA,OAAM,IAAI;AAAA,EAAA;AAAA,EAElD,cAAc,QAAQA,OAAM,MAAM;AACvB,WAAA,KAAK,QAAQ,QAAQ,QAAQ,IAAI,EAAE,KAAK,OAAO0R,UAAS;AAC3D,YAAM,OAAOA,SAAQ,WAAWA,+BAAM,IAAI,IAAI,IAAI,SAAS,MAAMA,MAAK,KAAK,YAAY,CAAC,KAClFA,+BAAM,iBAAgB,WAAWA,MAAK,QAClCA,+BAAM,iBAAgB,cAAc,IAAI,SAASA,MAAK,IAAI,IACtDA,SAAQ,YAAY,OAAOA,+BAAM,IAAI,IAAI,IAAI,SAASA,MAAK,KAAK,MAAM,IAClEA,+BAAM;AACxB,aAAO,EAAE,QAAQ,MAAA1R,OAAM,GAAG0R,OAAM,KAAK;AAAA,IAAA,CACxC,CAAC;AAAA,EAAA;AAAA,EAEN,WAAW1R,OAAM2R,OAAM,MAAM;AAClB,WAAA,KAAK,eAAeA,OAAM,EAAE,QAAQ,OAAO,MAAA3R,OAAM,GAAG,MAAM;AAAA,EAAA;AAAA,EAErE,uBAAuB,MAAM;AACrB,QAAA,OAAO,SAAS,UAAU;AACtB,UAAA,OAAO,WAAW,aAAa;AAC/B,eAAO,OAAO,WAAW,MAAM,MAAM,EAAE,SAAS;AAAA,MAAA;AAEhD,UAAA,OAAO,gBAAgB,aAAa;AAC9B,cAAA,UAAU,IAAI,YAAY;AAC1B,cAAA,UAAU,QAAQ,OAAO,IAAI;AAC5B,eAAA,QAAQ,OAAO,SAAS;AAAA,MAAA;AAAA,IAG9B,WAAA,YAAY,OAAO,IAAI,GAAG;AACxB,aAAA,KAAK,WAAW,SAAS;AAAA,IAAA;AAE7B,WAAA;AAAA,EAAA;AAAA,EAEX,aAAa,SAAS,EAAE,aAAa,EAAE,IAAI,CAAA,GAAI;;AACjC,cAAA,EAAE,GAAG,QAAQ;AACvB,UAAM,EAAE,QAAQ,MAAAA,OAAM,OAAO,UAAmB,OAAO;AACvD,UAAM,OAAO,YAAY,OAAO,QAAQ,IAAI,KAAM,QAAQ,mBAAmB,OAAO,QAAQ,SAAS,WACjG,QAAQ,OACN,gBAAgB,QAAQ,IAAI,IAAI,QAAQ,KAAK,OACzC,QAAQ,OAAO,KAAK,UAAU,QAAQ,MAAM,MAAM,CAAC,IAC/C;AACR,UAAA,gBAAgB,KAAK,uBAAuB,IAAI;AACtD,UAAM,MAAM,KAAK,SAASA,OAAM,KAAK;AACrC,QAAI,aAAa;AACW,8BAAA,WAAW,QAAQ,OAAO;AAC9C,YAAA,UAAU,QAAQ,WAAW,KAAK;AAC1C,UAAM,YAAY,QAAQ,aAAa,KAAK,aAAa,gBAAgB,GAAG;AACtE,UAAA,kBAAkB,QAAQ,UAAU;AACtC,QAAA,SAAOE,MAAA,uCAAW,YAAX,gBAAAA,IAAoB,aAAY,YACvC,mBAAmB,UAAU,QAAQ,WAAW,IAAI;AAKpD,gBAAU,QAAQ,UAAU;AAAA,IAAA;AAE5B,QAAA,KAAK,qBAAqB,WAAW,OAAO;AAC5C,UAAI,CAAC,QAAQ;AACD,gBAAA,iBAAiB,KAAK,sBAAsB;AAChD,cAAA,KAAK,iBAAiB,IAAI,QAAQ;AAAA,IAAA;AAExC,UAAA,aAAa,KAAK,aAAa,EAAE,SAAS,SAAS,eAAe,YAAY;AACpF,UAAM,MAAM;AAAA,MACR;AAAA,MACA,GAAI,QAAQ,EAAE,KAAW;AAAA,MACzB,SAAS;AAAA,MACT,GAAI,aAAa,EAAE,OAAO,UAAU;AAAA;AAAA;AAAA,MAGpC,QAAQ,QAAQ,UAAU;AAAA,IAC9B;AACA,WAAO,EAAE,KAAK,KAAK,SAAS,QAAQ,QAAQ;AAAA,EAAA;AAAA,EAEhD,aAAa,EAAE,SAAS,SAAS,eAAe,cAAe;AAC3D,UAAM,aAAa,CAAC;AACpB,QAAI,eAAe;AACf,iBAAW,gBAAgB,IAAI;AAAA,IAAA;AAE7B,UAAA,iBAAiB,KAAK,eAAe,OAAO;AAClD,oBAAgB,YAAY,cAAc;AAC1C,oBAAgB,YAAY,OAAO;AAEnC,QAAI,gBAAgB,QAAQ,IAAI,KAAK0R,SAAc,QAAQ;AACvD,aAAO,WAAW,cAAc;AAAA,IAAA;AAKhC,QAAA,UAAU,gBAAgB,yBAAyB,MAAM,UACzD,UAAU,SAAS,yBAAyB,MAAM,QAAW;AAClD,iBAAA,yBAAyB,IAAI,OAAO,UAAU;AAAA,IAAA;AAEzD,QAAA,UAAU,gBAAgB,qBAAqB,MAAM,UACrD,UAAU,SAAS,qBAAqB,MAAM,UAC9C,QAAQ,SAAS;AACjB,iBAAW,qBAAqB,IAAI,OAAO,QAAQ,OAAO;AAAA,IAAA;AAEzD,SAAA,gBAAgB,YAAY,OAAO;AACjC,WAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,EAKX,MAAM,eAAe,SAAS;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9B,MAAM,eAAe,SAAS,EAAE,KAAK,WAAW;AAAA,EAAA;AAAA,EAChD,aAAa,SAAS;AACV,WAAA,CAAC,UAAU,CAAA,IACb,OAAO,YAAY,UACjB,OAAO,YAAY,MAAM,KAAK,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,CAAC,IACjE,EAAE,GAAG,QAAQ;AAAA,EAAA;AAAA,EAE3B,gBAAgB,QAAQ,OAAO,SAAS,SAAS;AAC7C,WAAO,SAAS,SAAS,QAAQ,OAAO,SAAS,OAAO;AAAA,EAAA;AAAA,EAE5D,QAAQ,SAAS,mBAAmB,MAAM;AACtC,WAAO,IAAI,WAAW,KAAK,YAAY,SAAS,gBAAgB,CAAC;AAAA,EAAA;AAAA,EAErE,MAAM,YAAY,cAAc,kBAAkB;;AAC9C,UAAM,UAAU,MAAM;AAChB,UAAA,aAAa,QAAQ,cAAc,KAAK;AAC9C,QAAI,oBAAoB,MAAM;AACP,yBAAA;AAAA,IAAA;AAEjB,UAAA,KAAK,eAAe,OAAO;AACjC,UAAM,EAAE,KAAK,KAAK,QAAY,IAAA,KAAK,aAAa,SAAS,EAAE,YAAY,aAAa,iBAAA,CAAkB;AACtG,UAAM,KAAK,eAAe,KAAK,EAAE,KAAK,SAAS;AAC/C,UAAM,WAAW,KAAK,SAAS,IAAI,OAAO;AACtC,SAAA1R,MAAA,QAAQ,WAAR,gBAAAA,IAAgB,SAAS;AACzB,YAAM,IAAI,kBAAkB;AAAA,IAAA;AAE1B,UAAA,aAAa,IAAI,gBAAgB;AACjC,UAAA,WAAW,MAAM,KAAK,iBAAiB,KAAK,KAAK,SAAS,UAAU,EAAE,MAAM,WAAW;AAC7F,QAAI,oBAAoB,OAAO;AACvB,WAAAG,MAAA,QAAQ,WAAR,gBAAAA,IAAgB,SAAS;AACzB,cAAM,IAAI,kBAAkB;AAAA,MAAA;AAEhC,UAAI,kBAAkB;AACX,eAAA,KAAK,aAAa,SAAS,gBAAgB;AAAA,MAAA;AAElD,UAAA,SAAS,SAAS,cAAc;AAChC,cAAM,IAAI,0BAA0B;AAAA,MAAA;AAExC,YAAM,IAAI,mBAAmB,EAAE,OAAO,UAAU;AAAA,IAAA;AAE9C,UAAA,kBAAkB,sBAAsB,SAAS,OAAO;AAC1D,QAAA,CAAC,SAAS,IAAI;AACd,UAAI,oBAAoB,KAAK,YAAY,QAAQ,GAAG;AAC1CwR,cAAAA,gBAAe,aAAa,gBAAgB;AAClD,cAAM,oBAAoBA,aAAY,KAAK,SAAS,QAAQ,KAAK,eAAe;AAChF,eAAO,KAAK,aAAa,SAAS,kBAAkB,eAAe;AAAA,MAAA;AAEjE,YAAA,UAAU,MAAM,SAAS,OAAO,MAAM,CAACzR,OAAM,YAAYA,EAAC,EAAE,OAAO;AACnE,YAAA,UAAU,SAAS,OAAO;AAC1B,YAAA,aAAa,UAAU,SAAY;AACnC,YAAA,eAAe,mBAAmB,kCAAkC;AAC1E,YAAM,oBAAoB,YAAY,KAAK,SAAS,QAAQ,KAAK,iBAAiB,UAAU;AAC5F,YAAM,MAAM,KAAK,gBAAgB,SAAS,QAAQ,SAAS,YAAY,eAAe;AAChF,YAAA;AAAA,IAAA;AAEH,WAAA,EAAE,UAAU,SAAS,WAAW;AAAA,EAAA;AAAA,EAE3C,eAAeuR,OAAM,SAAS;AAC1B,UAAM,UAAU,KAAK,YAAY,SAAS,IAAI;AAC9C,WAAO,IAAI,YAAY,MAAM,SAASA,KAAI;AAAA,EAAA;AAAA,EAE9C,SAAS3R,OAAM,OAAO;AACZ,UAAA,MAAM,cAAcA,KAAI,IAC1B,IAAI,IAAIA,KAAI,IACV,IAAI,IAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,GAAG,KAAKA,MAAK,WAAW,GAAG,IAAIA,MAAK,MAAM,CAAC,IAAIA,MAAK;AAClG,UAAA,eAAe,KAAK,aAAa;AACnC,QAAA,CAAC,WAAW,YAAY,GAAG;AAC3B,cAAQ,EAAE,GAAG,cAAc,GAAG,MAAM;AAAA,IAAA;AAEpC,QAAA,OAAO,UAAU,YAAY,SAAS,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzD,UAAA,SAAS,KAAK,eAAe,KAAK;AAAA,IAAA;AAE1C,WAAO,IAAI,SAAS;AAAA,EAAA;AAAA,EAExB,eAAe,OAAO;AAClB,WAAO,OAAO,QAAQ,KAAK,EACtB,OAAO,CAAC,CAACL,IAAG,KAAK,MAAM,OAAO,UAAU,WAAW,EACnD,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AACnB,UAAA,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AACtF,eAAO,GAAG,mBAAmB,GAAG,CAAC,IAAI,mBAAmB,KAAK,CAAC;AAAA,MAAA;AAElE,UAAI,UAAU,MAAM;AACT,eAAA,GAAG,mBAAmB,GAAG,CAAC;AAAA,MAAA;AAErC,YAAM,IAAI,YAAY,yBAAyB,OAAO,KAAK,mQAAmQ;AAAA,IAAA,CACjU,EACI,KAAK,GAAG;AAAA,EAAA;AAAA,EAEjB,MAAM,iBAAiB,KAAK,MAAMyQ,KAAI,YAAY;AAC9C,UAAM,EAAE,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACpC,QAAA;AACA,aAAO,iBAAiB,SAAS,MAAM,WAAW,OAAO;AAC7D,UAAM,UAAU,WAAW,MAAM,WAAW,MAAA,GAASA,GAAE;AACvD,UAAM,eAAe;AAAA,MACjB,QAAQ,WAAW;AAAA,MACnB,GAAG;AAAA,IACP;AACA,QAAI,aAAa,QAAQ;AAGR,mBAAA,SAAS,aAAa,OAAO,YAAY;AAAA,IAAA;AAE1D;AAAA;AAAA,MAEA,KAAK,MAAM,KAAK,QAAW,KAAK,YAAY,EAAE,QAAQ,MAAM;AACxD,qBAAa,OAAO;AAAA,MACvB,CAAA;AAAA;AAAA,EAAA;AAAA,EAEL,YAAY,UAAU;AAElB,UAAM,oBAAoB,SAAS,QAAQ,IAAI,gBAAgB;AAE/D,QAAI,sBAAsB;AACf,aAAA;AACX,QAAI,sBAAsB;AACf,aAAA;AAEX,QAAI,SAAS,WAAW;AACb,aAAA;AAEX,QAAI,SAAS,WAAW;AACb,aAAA;AAEX,QAAI,SAAS,WAAW;AACb,aAAA;AAEX,QAAI,SAAS,UAAU;AACZ,aAAA;AACJ,WAAA;AAAA,EAAA;AAAA,EAEX,MAAM,aAAa,SAAS,kBAAkB,iBAAiB;AACvD,QAAA;AAEE,UAAA,yBAAyB,mDAAkB;AACjD,QAAI,wBAAwB;AAClB,YAAA,YAAY,WAAW,sBAAsB;AACnD,UAAI,CAAC,OAAO,MAAM,SAAS,GAAG;AACV,wBAAA;AAAA,MAAA;AAAA,IACpB;AAGE,UAAA,mBAAmB,mDAAkB;AACvC,QAAA,oBAAoB,CAAC,eAAe;AAC9B,YAAA,iBAAiB,WAAW,gBAAgB;AAClD,UAAI,CAAC,OAAO,MAAM,cAAc,GAAG;AAC/B,wBAAgB,iBAAiB;AAAA,MAAA,OAEhC;AACD,wBAAgB,KAAK,MAAM,gBAAgB,IAAI,KAAK,IAAI;AAAA,MAAA;AAAA,IAC5D;AAIJ,QAAI,EAAE,iBAAiB,KAAK,iBAAiB,gBAAgB,KAAK,MAAO;AAC/D,YAAA,aAAa,QAAQ,cAAc,KAAK;AAC9B,sBAAA,KAAK,mCAAmC,kBAAkB,UAAU;AAAA,IAAA;AAExF,UAAM,MAAM,aAAa;AACzB,WAAO,KAAK,YAAY,SAAS,mBAAmB,CAAC;AAAA,EAAA;AAAA,EAEzD,mCAAmC,kBAAkB,YAAY;AAC7D,UAAM,oBAAoB;AAC1B,UAAM,gBAAgB;AACtB,UAAM,aAAa,aAAa;AAE1B,UAAA,eAAe,KAAK,IAAI,oBAAoB,KAAK,IAAI,GAAG,UAAU,GAAG,aAAa;AAExF,UAAM,SAAS,IAAI,KAAK,OAAW,IAAA;AACnC,WAAO,eAAe,SAAS;AAAA,EAAA;AAAA,EAEnC,eAAe;AACX,WAAO,GAAG,KAAK,YAAY,IAAI,OAAO,OAAO;AAAA,EAAA;AAErD;AACO,MAAM,aAAa;AAAA,EACtB,YAAYjI,SAAQ,UAAU,MAAM,SAAS;AACpB,yBAAA,IAAI,MAAM,MAAM;AACd+H,6BAAA,MAAM,sBAAsB/H,OAAW;AAC9D,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA,EAAA;AAAA,EAEhB,cAAc;AACJ,UAAA,QAAQ,KAAK,kBAAkB;AACrC,QAAI,CAAC,MAAM;AACA,aAAA;AACJ,WAAA,KAAK,kBAAkB;AAAA,EAAA;AAAA,EAElC,MAAM,cAAc;AACV,UAAA,WAAW,KAAK,aAAa;AACnC,QAAI,CAAC,UAAU;AACL,YAAA,IAAI,YAAY,uFAAuF;AAAA,IAAA;AAEjH,UAAM,cAAc,EAAE,GAAG,KAAK,QAAQ;AACtC,QAAI,YAAY,YAAY,OAAO,YAAY,UAAU,UAAU;AAC/D,kBAAY,QAAQ,EAAE,GAAG,YAAY,OAAO,GAAG,SAAS,OAAO;AAAA,IAAA,WAE1D,SAAS,UAAU;AACxB,YAAM,SAAS,CAAC,GAAG,OAAO,QAAQ,YAAY,SAAS,CAAE,CAAA,GAAG,GAAG,SAAS,IAAI,aAAa,SAAS;AAClG,iBAAW,CAAC,KAAK,KAAK,KAAK,QAAQ;AAC/B,iBAAS,IAAI,aAAa,IAAI,KAAK,KAAK;AAAA,MAAA;AAE5C,kBAAY,QAAQ;AACR,kBAAA,OAAO,SAAS,IAAI,SAAS;AAAA,IAAA;AAEtC,WAAA,MAAM8H,yBAAuB,MAAM,sBAAsB,GAAG,EAAE,eAAe,KAAK,aAAa,WAAW;AAAA,EAAA;AAAA,EAErH,OAAO,YAAY;AAEf,QAAI,OAAO;AACL,UAAA;AACC,WAAA,KAAK,eAAe;AAChB,aAAA,MAAM,KAAK,YAAY;AACxB,YAAA;AAAA,IAAA;AAAA,EACV;AAAA,EAEJ,SAAS,uBAAuB,oBAAI,QAAW,GAAA,OAAO,kBAAkB;AACnD,qBAAA,QAAQ,KAAK,aAAa;AAC5B,iBAAA,QAAQ,KAAK,qBAAqB;AACnC,cAAA;AAAA,MAAA;AAAA,IACV;AAAA,EACJ;AAER;AAUO,MAAM,oBAAoB,WAAW;AAAA,EACxC,YAAY9H,SAAQ,SAASwJ,OAAM;AAC/B,UAAM,SAAS,OAAO,UAAU,IAAIA,MAAKxJ,SAAQ,MAAM,UAAU,MAAM,qBAAqB,KAAK,GAAG,MAAM,OAAO,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAStH,QAAQ,OAAO,aAAa,IAAI;AAC5B,UAAM,OAAO,MAAM;AACnB,qBAAiB,QAAQ,MAAM;AACrB,YAAA;AAAA,IAAA;AAAA,EACV;AAER;AACa,MAAA,wBAAwB,CAAC,YAAY;AACvC,SAAA,IAAI,MAAM,OAAO;AAAA;AAAA,IAExB,QAAQ,QAAQ;AAAA,EAAA,GAAI;AAAA,IAChB,IAAI,QAAQ,MAAM;AACR,YAAA,MAAM,KAAK,SAAS;AAC1B,aAAO,OAAO,IAAI,YAAa,CAAA,KAAK,OAAO,GAAG;AAAA,IAAA;AAAA,EAClD,CACH;AACL;AAIA,MAAM,qBAAqB;AAAA,EACvB,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,eAAe;AACnB;AACa,MAAA,mBAAmB,CAAC,QAAQ;AACrC,SAAQ,OAAO,QAAQ,YACnB,QAAQ,QACR,CAAC,WAAW,GAAG,KACf,OAAO,KAAK,GAAG,EAAE,MAAM,CAACvB,OAAM,OAAO,oBAAoBA,EAAC,CAAC;AACnE;AACA,MAAM,wBAAwB,MAAM;;AAChC,MAAI,OAAO,SAAS,eAAe,KAAK,SAAS,MAAM;AAC5C,WAAA;AAAA,MACH,oBAAoB;AAAA,MACpB,+BAA+B;AAAA,MAC/B,kBAAkB,kBAAkB,KAAK,MAAM,EAAE;AAAA,MACjD,oBAAoB,cAAc,KAAK,MAAM,IAAI;AAAA,MACjD,uBAAuB;AAAA,MACvB,+BAA+B,OAAO,KAAK,YAAY,WAAW,KAAK,YAAU1G,MAAA,KAAK,YAAL,gBAAAA,IAAc,SAAQ;AAAA,IAC3G;AAAA,EAAA;AAEA,MAAA,OAAO,gBAAgB,aAAa;AAC7B,WAAA;AAAA,MACH,oBAAoB;AAAA,MACpB,+BAA+B;AAAA,MAC/B,kBAAkB;AAAA,MAClB,oBAAoB,SAAS,WAAW;AAAA,MACxC,uBAAuB;AAAA,MACvB,+BAA+B,QAAQ;AAAA,IAC3C;AAAA,EAAA;AAGA,MAAA,OAAO,UAAU,SAAS,KAAK,OAAO,YAAY,cAAc,UAAU,CAAC,MAAM,oBAAoB;AAC9F,WAAA;AAAA,MACH,oBAAoB;AAAA,MACpB,+BAA+B;AAAA,MAC/B,kBAAkB,kBAAkB,QAAQ,QAAQ;AAAA,MACpD,oBAAoB,cAAc,QAAQ,IAAI;AAAA,MAC9C,uBAAuB;AAAA,MACvB,+BAA+B,QAAQ;AAAA,IAC3C;AAAA,EAAA;AAEJ,QAAM,cAAc,eAAe;AACnC,MAAI,aAAa;AACN,WAAA;AAAA,MACH,oBAAoB;AAAA,MACpB,+BAA+B;AAAA,MAC/B,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,uBAAuB,WAAW,YAAY,OAAO;AAAA,MACrD,+BAA+B,YAAY;AAAA,IAC/C;AAAA,EAAA;AAGG,SAAA;AAAA,IACH,oBAAoB;AAAA,IACpB,+BAA+B;AAAA,IAC/B,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,uBAAuB;AAAA,IACvB,+BAA+B;AAAA,EACnC;AACJ;AAEA,SAAS,iBAAiB;AACtB,MAAI,OAAO,cAAc,eAAe,CAAC,WAAW;AACzC,WAAA;AAAA,EAAA;AAGX,QAAM,kBAAkB;AAAA,IACpB,EAAE,KAAK,QAAQ,SAAS,uCAAuC;AAAA,IAC/D,EAAE,KAAK,MAAM,SAAS,uCAAuC;AAAA,IAC7D,EAAE,KAAK,MAAM,SAAS,6CAA6C;AAAA,IACnE,EAAE,KAAK,UAAU,SAAS,yCAAyC;AAAA,IACnE,EAAE,KAAK,WAAW,SAAS,0CAA0C;AAAA,IACrE,EAAE,KAAK,UAAU,SAAS,oEAAoE;AAAA,EAClG;AAEA,aAAW,EAAE,KAAK,QAAQ,KAAK,iBAAiB;AAC5C,UAAM,QAAQ,QAAQ,KAAK,UAAU,SAAS;AAC9C,QAAI,OAAO;AACD,YAAA,QAAQ,MAAM,CAAC,KAAK;AACpB,YAAA,QAAQ,MAAM,CAAC,KAAK;AACpB,YAAA,QAAQ,MAAM,CAAC,KAAK;AACnB,aAAA,EAAE,SAAS,KAAK,SAAS,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AAAA,IAAA;AAAA,EACjE;AAEG,SAAA;AACX;AACA,MAAM,gBAAgB,CAAC,SAAS;AAK5B,MAAI,SAAS;AACF,WAAA;AACP,MAAA,SAAS,YAAY,SAAS;AACvB,WAAA;AACX,MAAI,SAAS;AACF,WAAA;AACP,MAAA,SAAS,aAAa,SAAS;AACxB,WAAA;AACP,MAAA;AACA,WAAO,SAAS,IAAI;AACjB,SAAA;AACX;AACA,MAAM,oBAAoB,CAAC,aAAa;AAMpC,aAAW,SAAS,YAAY;AAK5B,MAAA,SAAS,SAAS,KAAK;AAChB,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACX,MAAI,aAAa;AACN,WAAA;AACP,MAAA;AACA,WAAO,SAAS,QAAQ;AACrB,SAAA;AACX;AACA,IAAI;AACJ,MAAM,qBAAqB,MAAM;AACrB,SAAA,qBAAqB,mBAAmB;AACpD;AACa,MAAA,WAAW,CAAC2I,UAAS;AAC1B,MAAA;AACO,WAAA,KAAK,MAAMA,KAAI;AAAA,WAEnB,KAAK;AACD,WAAA;AAAA,EAAA;AAEf;AAEA,MAAM,yBAAyB;AAC/B,MAAM,gBAAgB,CAAC,QAAQ;AACpB,SAAA,uBAAuB,KAAK,GAAG;AAC1C;AACa,MAAA,QAAQ,CAACuH,QAAO,IAAI,QAAQ,CAAC,YAAY,WAAW,SAASA,GAAE,CAAC;AAC7E,MAAM,0BAA0B,CAAC,MAAM/L,OAAM;AACzC,MAAI,OAAOA,OAAM,YAAY,CAAC,OAAO,UAAUA,EAAC,GAAG;AAC/C,UAAM,IAAI,YAAY,GAAG,IAAI,qBAAqB;AAAA,EAAA;AAEtD,MAAIA,KAAI,GAAG;AACP,UAAM,IAAI,YAAY,GAAG,IAAI,6BAA6B;AAAA,EAAA;AAEvD,SAAAA;AACX;AACa,MAAA,cAAc,CAAC,QAAQ;AAChC,MAAI,eAAe;AACR,WAAA;AACX,MAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AACrC,QAAA;AACA,aAAO,IAAI,MAAM,KAAK,UAAU,GAAG,CAAC;AAAA,IAAA,QAElC;AAAA,IAAA;AAAA,EAAE;AAEL,SAAA,IAAI,MAAM,GAAG;AACxB;AAaa,MAAA,UAAU,CAAC,QAAQ;;AACxB,MAAA,OAAO,YAAY,aAAa;AAChC,aAAOhE,OAAAH,MAAA,QAAc,QAAd,gBAAAA,IAAc,SAAd,gBAAAG,IAAoB,WAAU;AAAA,EAAA;AAErC,MAAA,OAAO,SAAS,aAAa;AAC7B,YAAOI,OAAAH,OAAAC,MAAA,KAAK,QAAL,gBAAAA,IAAU,QAAV,gBAAAD,IAAA,KAAAC,KAAgB,SAAhB,gBAAAE,IAAsB;AAAA,EAAK;AAE/B,SAAA;AACX;AAyCO,SAAS,WAAW,KAAK;AAC5B,MAAI,CAAC;AACM,WAAA;AACX,aAAWM,OAAM;AACN,WAAA;AACJ,SAAA;AACX;AAEgB,SAAA,OAAO,KAAK,KAAK;AAC7B,SAAO,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG;AACxD;AAOA,SAAS,gBAAgB,eAAe,YAAY;AAChD,aAAW6F,MAAK,YAAY;AACpB,QAAA,CAAC,OAAO,YAAYA,EAAC;AACrB;AACE,UAAA,WAAWA,GAAE,YAAY;AAC/B,QAAI,CAAC;AACD;AACE,UAAA,MAAM,WAAWA,EAAC;AACxB,QAAI,QAAQ,MAAM;AACd,aAAO,cAAc,QAAQ;AAAA,IAAA,WAExB,QAAQ,QAAW;AACxB,oBAAc,QAAQ,IAAI;AAAA,IAAA;AAAA,EAC9B;AAER;AACA,MAAM,oBAAwB,oBAAA,IAAI,CAAC,iBAAiB,SAAS,CAAC;AAC9C,SAAA,MAAM,WAAW,MAAM;;AACnC,MAAI,OAAO,YAAY,iBAAe1G,MAAA,QAAe,QAAf,gBAAAA,IAAe,cAAa,QAAQ;AACtE,UAAM,eAAe,KAAK,IAAI,CAAC,QAAQ;AACnC,UAAI,CAAC,KAAK;AACC,eAAA;AAAA,MAAA;AAGP,UAAA,IAAI,SAAS,GAAG;AAEV4R,cAAAA,eAAc,EAAE,GAAG,KAAK,SAAS,EAAE,GAAG,IAAI,SAAS,IAAI;AAClD,mBAAA,UAAU,IAAI,SAAS,GAAG;AACjC,cAAI,kBAAkB,IAAI,OAAO,YAAa,CAAA,GAAG;AAC7CA,yBAAY,SAAS,EAAE,MAAM,IAAI;AAAA,UAAA;AAAA,QACrC;AAEGA,eAAAA;AAAAA,MAAA;AAEX,UAAI,cAAc;AAElB,iBAAW,UAAU,KAAK;AACtB,YAAI,kBAAkB,IAAI,OAAO,YAAa,CAAA,GAAG;AAE7B,0BAAA,cAAc,EAAE,GAAG;AACnC,sBAAY,MAAM,IAAI;AAAA,QAAA;AAAA,MAC1B;AAEJ,aAAO,eAAe;AAAA,IAAA,CACzB;AACD,YAAQ,IAAI,gBAAgB,MAAM,IAAI,GAAG,YAAY;AAAA,EAAA;AAE7D;AAIA,MAAM,QAAQ,MAAM;AAChB,SAAO,uCAAuC,QAAQ,SAAS,CAACvI,OAAM;AAClE,UAAM+C,KAAK,KAAK,OAAO,IAAI,KAAM;AACjC,UAAM3I,KAAI4F,OAAM,MAAM+C,KAAKA,KAAI,IAAO;AAC/B,WAAA3I,GAAE,SAAS,EAAE;AAAA,EAAA,CACvB;AACL;AACO,MAAM,qBAAqB,MAAM;AACpC;AAAA;AAAA,IAEA,OAAO,WAAW;AAAA,IAEd,OAAO,OAAO,aAAa;AAAA,IAE3B,OAAO,cAAc;AAAA;AAC7B;AACa,MAAA,oBAAoB,CAAC,YAAY;AACnC,SAAA,QAAO,mCAAS,SAAQ;AACnC;AAQa,MAAA,YAAY,CAAC,SAAS,WAAW;;AACpC,QAAA,mBAAmB,OAAO,YAAY;AACxC,MAAA,kBAAkB,OAAO,GAAG;AAE5B,UAAM,oBAAkBzD,MAAA,OAAO,CAAC,MAAR,gBAAAA,IAAW,iBAC/B,OAAO,UAAU,CAAC,EAAE,QAAQ,gBAAgB,CAACe,KAAI,IAAI,OAAO,KAAK,GAAG,aAAa;AAC1E,eAAA,OAAO,CAAC,QAAQ,kBAAkB,OAAO,YAAY,GAAG,eAAe,GAAG;AAC3E,YAAA,QAAQ,QAAQ,IAAI,GAAG;AAC7B,UAAI,OAAO;AACA,eAAA;AAAA,MAAA;AAAA,IACX;AAAA,EACJ;AAEJ,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC5C,QAAA,IAAI,YAAY,MAAM,kBAAkB;AACpC,UAAA,MAAM,QAAQ,KAAK,GAAG;AACtB,YAAI,MAAM,UAAU;AAChB,iBAAO,MAAM,CAAC;AAClB,gBAAQ,KAAK,YAAY,MAAM,MAAM,oBAAoB,MAAM,iCAAiC;AAChG,eAAO,MAAM,CAAC;AAAA,MAAA;AAEX,aAAA;AAAA,IAAA;AAAA,EACX;AAEG,SAAA;AACX;AAeO,SAAS,MAAM,KAAK;AAChB,SAAA,OAAO,QAAQ,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG;AACvE;AC75BO,MAAM,aAAa,aAAa;AAAA,EACnC,YAAYkH,SAAQ,UAAU,MAAM,SAAS;AACzC,UAAMA,SAAQ,UAAU,MAAM,OAAO;AACrC,SAAK,OAAO,KAAK,QAAQ,CAAE;AAC3B,SAAK,SAAS,KAAK;AAAA,EAC3B;AAAA,EACI,oBAAoB;AAChB,WAAO,KAAK,QAAQ,CAAE;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,iBAAiB;AACb,WAAO;AAAA,EACf;AAAA,EACI,eAAe;AACX,WAAO;AAAA,EACf;AACA;AACO,MAAM,mBAAmB,aAAa;AAAA,EACzC,YAAYA,SAAQ,UAAU,MAAM,SAAS;AACzC,UAAMA,SAAQ,UAAU,MAAM,OAAO;AACrC,SAAK,OAAO,KAAK,QAAQ,CAAE;AAAA,EACnC;AAAA,EACI,oBAAoB;AAChB,WAAO,KAAK,QAAQ,CAAE;AAAA,EAC9B;AAAA;AAAA,EAEI,iBAAiB;AACb,UAAM,OAAO,KAAK,aAAc;AAChC,QAAI,CAAC;AACD,aAAO;AACX,QAAI,YAAY;AACZ,aAAO,KAAK;AAChB,UAAM,SAAS,OAAO,YAAY,KAAK,IAAI,YAAY;AACvD,QAAI,CAAC,OAAO,KAAK,MAAM,EAAE;AACrB,aAAO;AACX,WAAO;AAAA,EACf;AAAA,EACI,eAAe;;AACX,UAAM,OAAO,KAAK,kBAAmB;AACrC,QAAI,CAAC,KAAK,QAAQ;AACd,aAAO;AAAA,IACnB;AACQ,UAAM,MAAKjI,MAAA,KAAK,KAAK,SAAS,CAAC,MAApB,gBAAAA,IAAuB;AAClC,QAAI,CAAC,IAAI;AACL,aAAO;AAAA,IACnB;AACQ,WAAO,EAAE,QAAQ,EAAE,OAAO,GAAE,EAAI;AAAA,EACxC;AACA;ACxDO,MAAM,YAAY;AAAA,EACrB,YAAYiI,SAAQ;AAChB,SAAK,UAAUA;AAAA,EACvB;AACA;oBCHO,MAAM,oBAAoB,YAAY;AAAA,EACzC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,qBAAqB,EAAE,MAAM,GAAG,SAAS,QAAQ,KAAK,UAAU,MAAK,CAAE;AAAA,EACxG;AACA;aCFO,MAAM,aAAa,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,cAAc,IAAI4J,cAA2B,KAAK,OAAO;AAAA,EACtE;AACA;AACAC,OAAK,cAAcC;ACRZ,MAAM,eAAe,YAAY;AAAA;AAAA;AAAA;AAAA,EAIpC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,iBAAiB;AAAA,MACtC;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,QAAQ,4BAA4B,GAAG,mCAAS,QAAS;AAAA,MACpE,kBAAkB;AAAA,IAC9B,CAAS;AAAA,EACT;AACA;ACXO,MAAM,uBAAuB,YAAY;AAAA,EAC5C,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,yBAAyBC,4BAAiC,EAAE,MAAM,GAAG,SAAS,YAAY,EAAE,OAAO,KAAK,MAAK,EAAI,CAAA,CAAC;AAAA,EACnJ;AACA;ACJO,MAAM,qBAAqB,YAAY;AAAA,EAC1C,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,uBAAuBA,4BAAiC,EAAE,MAAM,GAAG,SAAS,YAAY,EAAE,OAAO,KAAK,MAAK,EAAI,CAAA,CAAC;AAAA,EACjJ;AACA;ACCO,MAAM,cAAc,YAAY;AAAA,EACnC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,iBAAiB,IAAIC,eAAiC,KAAK,OAAO;AACvE,SAAK,eAAe,IAAIC,aAA6B,KAAK,OAAO;AACjE,SAAK,SAAS,IAAIC,OAAiB,KAAK,OAAO;AAAA,EACvD;AACA;AACA,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,SAAS;ACdR,MAAM,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAAA,EAIrC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,YAAY,EAAE,MAAM,GAAG,SAAS;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,QAAQ,IAAI,YAAY,OAAO,IAAI,OAAO;AAAA,EAC9D;AAAA,EACI,KAAK,QAAQ,CAAE,GAAE,SAAS;AACtB,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,CAAE,GAAE,KAAK;AAAA,IACtC;AACQ,WAAO,KAAK,QAAQ,WAAW,YAAY,aAAa,EAAE,OAAO,GAAG,SAAS;AAAA,EACrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,OAAO,SAAS,SAAS;AACrB,WAAO,KAAK,QAAQ,KAAK,YAAY,OAAO,WAAW,OAAO;AAAA,EACtE;AACA;AACO,MAAM,oBAAoB,WAAW;AAC5C;AACA,QAAQ,cAAc;AC9Bf,MAAM,mBAAmB,YAAY;AAAA;AAAA;AAAA;AAAA,EAIxC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,eAAe;AAAA,MACpC;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,aAAa,SAAS;AAC3B,WAAO,KAAK,QAAQ,IAAI,eAAe,WAAW,IAAI;AAAA,MAClD,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,aAAa,MAAM,SAAS;AAC/B,WAAO,KAAK,QAAQ,KAAK,eAAe,WAAW,IAAI;AAAA,MACnD;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,QAAQ,CAAE,GAAE,SAAS;AACtB,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,CAAE,GAAE,KAAK;AAAA,IACtC;AACQ,WAAO,KAAK,QAAQ,WAAW,eAAe,gBAAgB;AAAA,MAC1D;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,aAAa,SAAS;AACtB,WAAO,KAAK,QAAQ,OAAO,eAAe,WAAW,IAAI;AAAA,MACrD,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AACA;AACO,MAAM,uBAAuB,WAAW;AAC/C;AACA,WAAW,iBAAiB;ACxDrB,SAAS,4BAA4B,IAAI;AAC5C,SAAO,OAAO,GAAG,UAAU;AAC/B;ACFO,MAAM,qBAAqB,CAAC,YAAY;AAC3C,UAAO,mCAAS,UAAS;AAC7B;AACO,MAAM,oBAAoB,CAAC,YAAY;AAC1C,UAAO,mCAAS,UAAS;AAC7B;AACO,MAAM,gBAAgB,CAAC,YAAY;AACtC,UAAO,mCAAS,UAAS;AAC7B;ACRA,IAAInC,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIqF,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,wBAAwB,+BAA+B,sCAAsC,qCAAqC,yBAAyB,gCAAgC,+BAA+B,wBAAwB,oBAAoB,sBAAsB,sBAAsB,qCAAqC;AAEpV,MAAM,YAAY;AAAA,EACrB,cAAc;AACV,2BAAuB,IAAI,IAAI;AAC/B,SAAK,aAAa,IAAI,gBAAiB;AACvC,kCAA8B,IAAI,MAAM,MAAM;AAC9C,yCAAqC,IAAI,MAAM,MAAM;AAAA,KAAG;AACxD,wCAAoC,IAAI,MAAM,MAAM;AAAA,KAAG;AACvD,4BAAwB,IAAI,MAAM,MAAM;AACxC,mCAA+B,IAAI,MAAM,MAAM;AAAA,KAAG;AAClD,kCAA8B,IAAI,MAAM,MAAM;AAAA,KAAG;AACjD,2BAAuB,IAAI,MAAM,EAAE;AACnC,uBAAmB,IAAI,MAAM,KAAK;AAClC,yBAAqB,IAAI,MAAM,KAAK;AACpC,yBAAqB,IAAI,MAAM,KAAK;AACpC,wCAAoC,IAAI,MAAM,KAAK;AACnDsF,6BAAuB,MAAM,+BAA+B,IAAI,QAAQ,CAAC,SAAS,WAAW;AACzFA,+BAAuB,MAAM,sCAAsC,SAAS,GAAG;AAC/EA,+BAAuB,MAAM,qCAAqC,QAAQ,GAAG;AAAA,IAChF,CAAA,GAAG,GAAG;AACPA,6BAAuB,MAAM,yBAAyB,IAAI,QAAQ,CAAC,SAAS,WAAW;AACnFA,+BAAuB,MAAM,gCAAgC,SAAS,GAAG;AACzEA,+BAAuB,MAAM,+BAA+B,QAAQ,GAAG;AAAA,IAC1E,CAAA,GAAG,GAAG;AAKPD,6BAAuB,MAAM,+BAA+B,GAAG,EAAE,MAAM,MAAM;AAAA,KAAG;AAChFA,6BAAuB,MAAM,yBAAyB,GAAG,EAAE,MAAM,MAAM;AAAA,KAAG;AAAA,EAClF;AAAA,EACI,KAAK,UAAU;AAGX,eAAW,MAAM;AACb,eAAQ,EAAG,KAAK,MAAM;AAClB,aAAK,WAAY;AACjB,aAAK,MAAM,KAAK;AAAA,MAChC,GAAeA,yBAAuB,MAAM,wBAAwB,KAAK,wBAAwB,EAAE,KAAK,IAAI,CAAC;AAAA,IACpG,GAAE,CAAC;AAAA,EACZ;AAAA,EACI,aAAa;AACT,QAAI,KAAK;AACL;AACJA,6BAAuB,MAAM,sCAAsC,GAAG,EAAE,KAAK,IAAI;AACjF,SAAK,MAAM,SAAS;AAAA,EAC5B;AAAA,EACI,IAAI,QAAQ;AACR,WAAOA,yBAAuB,MAAM,oBAAoB,GAAG;AAAA,EACnE;AAAA,EACI,IAAI,UAAU;AACV,WAAOA,yBAAuB,MAAM,sBAAsB,GAAG;AAAA,EACrE;AAAA,EACI,IAAI,UAAU;AACV,WAAOA,yBAAuB,MAAM,sBAAsB,GAAG;AAAA,EACrE;AAAA,EACI,QAAQ;AACJ,SAAK,WAAW,MAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,GAAG,OAAO,UAAU;AAChB,UAAM,YAAYA,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK,MAAMA,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK,IAAI,CAAA;AAC1J,cAAU,KAAK,EAAE,UAAU;AAC3B,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,IAAI,OAAO,UAAU;AACjB,UAAM,YAAYA,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK;AACjF,QAAI,CAAC;AACD,aAAO;AACX,UAAM,QAAQ,UAAU,UAAU,CAACjK,OAAMA,GAAE,aAAa,QAAQ;AAChE,QAAI,SAAS;AACT,gBAAU,OAAO,OAAO,CAAC;AAC7B,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,KAAK,OAAO,UAAU;AAClB,UAAM,YAAYiK,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK,MAAMA,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK,IAAI,CAAA;AAC1J,cAAU,KAAK,EAAE,UAAU,MAAM,KAAI,CAAE;AACvC,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,QAAQ,OAAO;AACX,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCC,+BAAuB,MAAM,qCAAqC,MAAM,GAAG;AAC3E,UAAI,UAAU;AACV,aAAK,KAAK,SAAS,MAAM;AAC7B,WAAK,KAAK,OAAO,OAAO;AAAA,IACpC,CAAS;AAAA,EACT;AAAA,EACI,MAAM,OAAO;AACTA,6BAAuB,MAAM,qCAAqC,MAAM,GAAG;AAC3E,UAAMD,yBAAuB,MAAM,yBAAyB,GAAG;AAAA,EACvE;AAAA,EACI,MAAM,UAAU,MAAM;AAElB,QAAIA,yBAAuB,MAAM,oBAAoB,GAAG,GAAG;AACvD;AAAA,IACZ;AACQ,QAAI,UAAU,OAAO;AACjBC,+BAAuB,MAAM,oBAAoB,MAAM,GAAG;AAC1DD,+BAAuB,MAAM,gCAAgC,GAAG,EAAE,KAAK,IAAI;AAAA,IACvF;AACQ,UAAM,YAAYA,yBAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK;AACjF,QAAI,WAAW;AACXA,+BAAuB,MAAM,wBAAwB,GAAG,EAAE,KAAK,IAAI,UAAU,OAAO,CAACjK,OAAM,CAACA,GAAE,IAAI;AAClG,gBAAU,QAAQ,CAAC,EAAE,SAAU,MAAK,SAAS,GAAG,IAAI,CAAC;AAAA,IACjE;AACQ,QAAI,UAAU,SAAS;AACnB,YAAM,QAAQ,KAAK,CAAC;AACpB,UAAI,CAACiK,yBAAuB,MAAM,qCAAqC,GAAG,KAAK,EAAC,uCAAW,SAAQ;AAC/F,gBAAQ,OAAO,KAAK;AAAA,MACpC;AACYA,+BAAuB,MAAM,qCAAqC,GAAG,EAAE,KAAK,MAAM,KAAK;AACvFA,+BAAuB,MAAM,+BAA+B,GAAG,EAAE,KAAK,MAAM,KAAK;AACjF,WAAK,MAAM,KAAK;AAChB;AAAA,IACZ;AACQ,QAAI,UAAU,SAAS;AAEnB,YAAM,QAAQ,KAAK,CAAC;AACpB,UAAI,CAACA,yBAAuB,MAAM,qCAAqC,GAAG,KAAK,EAAC,uCAAW,SAAQ;AAO/F,gBAAQ,OAAO,KAAK;AAAA,MACpC;AACYA,+BAAuB,MAAM,qCAAqC,GAAG,EAAE,KAAK,MAAM,KAAK;AACvFA,+BAAuB,MAAM,+BAA+B,GAAG,EAAE,KAAK,MAAM,KAAK;AACjF,WAAK,MAAM,KAAK;AAAA,IAC5B;AAAA,EACA;AAAA,EACI,aAAa;AAAA,EAAA;AACjB;AACA,gCAAgC,oBAAI,QAAS,GAAE,uCAAuC,oBAAI,QAAO,GAAI,sCAAsC,oBAAI,WAAW,0BAA0B,oBAAI,QAAS,GAAE,iCAAiC,oBAAI,QAAO,GAAI,gCAAgC,oBAAI,QAAS,GAAE,yBAAyB,oBAAI,QAAO,GAAI,qBAAqB,oBAAI,WAAW,uBAAuB,oBAAI,QAAS,GAAE,uBAAuB,oBAAI,QAAO,GAAI,sCAAsC,oBAAI,QAAS,GAAE,yBAAyB,oBAAI,QAAO,GAAI,2BAA2B,SAASqC,0BAAyB,OAAO;AACvlBpC,2BAAuB,MAAM,sBAAsB,MAAM,GAAG;AAC5D,MAAI,iBAAiB,SAAS,MAAM,SAAS,cAAc;AACvD,YAAQ,IAAI,kBAAmB;AAAA,EACvC;AACI,MAAI,iBAAiB,mBAAmB;AACpCA,6BAAuB,MAAM,sBAAsB,MAAM,GAAG;AAC5D,WAAO,KAAK,MAAM,SAAS,KAAK;AAAA,EACxC;AACI,MAAI,iBAAiB,aAAa;AAC9B,WAAO,KAAK,MAAM,SAAS,KAAK;AAAA,EACxC;AACI,MAAI,iBAAiB,OAAO;AACxB,UAAM,cAAc,IAAI,YAAY,MAAM,OAAO;AAEjD,gBAAY,QAAQ;AACpB,WAAO,KAAK,MAAM,SAAS,WAAW;AAAA,EAC9C;AACI,SAAO,KAAK,MAAM,SAAS,IAAI,YAAY,OAAO,KAAK,CAAC,CAAC;AAC7D;ACnLO,SAAS,6BAA6B,iBAAiB;AAC1D,UAAO,mDAAkB,eAAc;AAC3C;AAmBO,SAAS,mBAAmB,MAAM;AACrC,UAAO,6BAAO,eAAc;AAChC;AACO,SAAS,yBAAyB,YAAY,QAAQ;AACzD,MAAI,CAAC,UAAU,CAAC,sBAAsB,MAAM,GAAG;AAC3C,WAAO;AAAA,MACH,GAAG;AAAA,MACH,SAAS,WAAW,QAAQ,IAAI,CAAC,YAAY;AAAA,QACzC,GAAG;AAAA,QACH,SAAS,EAAE,GAAG,OAAO,SAAS,QAAQ,MAAM,YAAY,OAAO,QAAQ,cAAc,CAAA,EAAI;AAAA,MACzG,EAAc;AAAA,IACL;AAAA,EACT;AACI,SAAO,oBAAoB,YAAY,MAAM;AACjD;AACO,SAAS,oBAAoB,YAAY,QAAQ;AACpD,QAAM,UAAU,WAAW,QAAQ,IAAI,CAAC,WAAW;;AAC/C,QAAI,OAAO,kBAAkB,UAAU;AACnC,YAAM,IAAI,wBAAyB;AAAA,IAC/C;AACQ,QAAI,OAAO,kBAAkB,kBAAkB;AAC3C,YAAM,IAAI,+BAAgC;AAAA,IACtD;AACQ,WAAO;AAAA,MACH,GAAG;AAAA,MACH,SAAS;AAAA,QACL,GAAG,OAAO;AAAA,QACV,cAAYhQ,MAAA,OAAO,QAAQ,eAAf,gBAAAA,IAA2B,IAAI,CAAC,aAAa,cAAc,QAAQ,QAAQ,OAAM,CAAE;AAAA,QAC/F,QAAQ,OAAO,QAAQ,WAAW,CAAC,OAAO,QAAQ,UAC9C,oBAAoB,QAAQ,OAAO,QAAQ,OAAO,IAChD;AAAA,MACT;AAAA,IACJ;AAAA,EACT,CAAK;AACD,SAAO,EAAE,GAAG,YAAY,QAAS;AACrC;AACA,SAAS,oBAAoB,QAAQ,SAAS;;AAC1C,QAAIA,MAAA,OAAO,oBAAP,gBAAAA,IAAwB,UAAS,eAAe;AAChD,WAAO;AAAA,EACf;AACI,QAAIG,MAAA,OAAO,oBAAP,gBAAAA,IAAwB,UAAS,eAAe;AAChD,QAAI,eAAe,OAAO,iBAAiB;AACvC,YAAM,kBAAkB,OAAO;AAC/B,aAAO,gBAAgB,UAAU,OAAO;AAAA,IACpD;AACQ,WAAO,KAAK,MAAM,OAAO;AAAA,EACjC;AACI,SAAO;AACX;AACA,SAAS,cAAc,QAAQ,UAAU;;AACrC,QAAM,aAAYH,MAAA,OAAO,UAAP,gBAAAA,IAAc,KAAK,CAACqS;;AAAc,aAAArS,MAAAqS,WAAU,aAAV,gBAAArS,IAAoB,UAAS,SAAS,SAAS;AAAA;AACnG,SAAO;AAAA,IACH,GAAG;AAAA,IACH,UAAU;AAAA,MACN,GAAG,SAAS;AAAA,MACZ,kBAAkB,mBAAmB,SAAS,IAAI,UAAU,UAAU,SAAS,SAAS,SAAS,KAC3F,uCAAW,SAAS,UAAS,KAAK,MAAM,SAAS,SAAS,SAAS,IAC/D;AAAA,IACb;AAAA,EACJ;AACL;AACO,SAAS,oBAAoB,QAAQ,UAAU;;AAClD,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACf;AACI,QAAM,aAAYA,MAAA,OAAO,UAAP,gBAAAA,IAAc,KAAK,CAACqS;;AAAc,aAAArS,MAAAqS,WAAU,aAAV,gBAAArS,IAAoB,UAAS,SAAS,SAAS;AAAA;AACnG,SAAO,mBAAmB,SAAS,MAAK,uCAAW,SAAS,WAAU;AAC1E;AACO,SAAS,sBAAsB,QAAQ;;AAC1C,MAAI,6BAA6B,OAAO,eAAe,GAAG;AACtD,WAAO;AAAA,EACf;AACI,WAAQA,MAAA,OAAO,UAAP,gBAAAA,IAAc,KAAK,CAACyI,OAAM,mBAAmBA,EAAC,KAAMA,GAAE,SAAS,cAAcA,GAAE,SAAS,WAAW,UAAU;AACzH;AACO,SAAS,mBAAmB,OAAO;AACtC,aAAW,QAAQ,SAAS,IAAI;AAC5B,QAAI,KAAK,SAAS,YAAY;AAC1B,YAAM,IAAI,YAAY,2EAA2E,KAAK,IAAI,IAAI;AAAA,IAC1H;AACQ,QAAI,KAAK,SAAS,WAAW,MAAM;AAC/B,YAAM,IAAI,YAAY,SAAS,KAAK,SAAS,IAAI,4FAA4F;AAAA,IACzJ;AAAA,EACA;AACA;ACvHA,IAAIsH,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,yCAAyC,+CAA+C,+CAA+C,oDAAoD,0DAA0D,mDAAmD,8CAA8C;AAM1V,MAAM,+BAA+B;AAC9B,MAAM,qCAAqC,YAAY;AAAA,EAC1D,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,4CAAwC,IAAI,IAAI;AAChD,SAAK,mBAAmB,CAAE;AAC1B,SAAK,WAAW,CAAE;AAAA,EAC1B;AAAA,EACI,mBAAmB,gBAAgB;;AAC/B,SAAK,iBAAiB,KAAK,cAAc;AACzC,SAAK,MAAM,kBAAkB,cAAc;AAC3C,UAAM,WAAU1K,MAAA,eAAe,QAAQ,CAAC,MAAxB,gBAAAA,IAA2B;AAC3C,QAAI;AACA,WAAK,YAAY,OAAO;AAC5B,WAAO;AAAA,EACf;AAAA,EACI,YAAY,SAAS,OAAO,MAAM;AAC9B,QAAI,EAAE,aAAa;AACf,cAAQ,UAAU;AACtB,SAAK,SAAS,KAAK,OAAO;AAC1B,QAAI,MAAM;AACN,WAAK,MAAM,WAAW,OAAO;AAC7B,WAAK,kBAAkB,OAAO,KAAK,cAAc,OAAO,MAAM,QAAQ,SAAS;AAE3E,aAAK,MAAM,sBAAsB,QAAQ,OAAO;AAAA,MAChE,WACqB,mBAAmB,OAAO,KAAK,QAAQ,eAAe;AAC3D,aAAK,MAAM,gBAAgB,QAAQ,aAAa;AAAA,MAChE,WACqB,mBAAmB,OAAO,KAAK,QAAQ,YAAY;AACxD,mBAAW,aAAa,QAAQ,YAAY;AACxC,cAAI,UAAU,SAAS,YAAY;AAC/B,iBAAK,MAAM,gBAAgB,UAAU,QAAQ;AAAA,UACrE;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,sBAAsB;AACxB,UAAM,KAAK,KAAM;AACjB,UAAM,aAAa,KAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC;AACzE,QAAI,CAAC;AACD,YAAM,IAAI,YAAY,iDAAiD;AAC3E,WAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,eAAe;AACjB,UAAM,KAAK,KAAM;AACjB,WAAO+P,yBAAuB,MAAM,yCAAyC,KAAK,6CAA6C,EAAE,KAAK,IAAI;AAAA,EAClJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,eAAe;AACjB,UAAM,KAAK,KAAM;AACjB,WAAOA,yBAAuB,MAAM,yCAAyC,KAAK,6CAA6C,EAAE,KAAK,IAAI;AAAA,EAClJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,MAAM,oBAAoB;AACtB,UAAM,KAAK,KAAM;AACjB,WAAOA,yBAAuB,MAAM,yCAAyC,KAAK,kDAAkD,EAAE,KAAK,IAAI;AAAA,EACvJ;AAAA,EACI,MAAM,0BAA0B;AAC5B,UAAM,KAAK,KAAM;AACjB,WAAOA,yBAAuB,MAAM,yCAAyC,KAAK,wDAAwD,EAAE,KAAK,IAAI;AAAA,EAC7J;AAAA,EACI,MAAM,aAAa;AACf,UAAM,KAAK,KAAM;AACjB,WAAOA,yBAAuB,MAAM,yCAAyC,KAAK,iDAAiD,EAAE,KAAK,IAAI;AAAA,EACtJ;AAAA,EACI,qBAAqB;AACjB,WAAO,CAAC,GAAG,KAAK,gBAAgB;AAAA,EACxC;AAAA,EACI,aAAa;AACT,UAAM,aAAa,KAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC;AACzE,QAAI;AACA,WAAK,MAAM,uBAAuB,UAAU;AAChD,UAAM,eAAeA,yBAAuB,MAAM,yCAAyC,KAAK,6CAA6C,EAAE,KAAK,IAAI;AACxJ,QAAI;AACA,WAAK,MAAM,gBAAgB,YAAY;AAC3C,UAAM,eAAeA,yBAAuB,MAAM,yCAAyC,KAAK,6CAA6C,EAAE,KAAK,IAAI;AACxJ,QAAI;AACA,WAAK,MAAM,gBAAgB,YAAY;AAC3C,UAAM,oBAAoBA,yBAAuB,MAAM,yCAAyC,KAAK,kDAAkD,EAAE,KAAK,IAAI;AAClK,QAAI;AACA,WAAK,MAAM,qBAAqB,iBAAiB;AACrD,UAAM,0BAA0BA,yBAAuB,MAAM,yCAAyC,KAAK,wDAAwD,EAAE,KAAK,IAAI;AAC9K,QAAI,2BAA2B;AAC3B,WAAK,MAAM,2BAA2B,uBAAuB;AACjE,QAAI,KAAK,iBAAiB,KAAK,CAAC1G,OAAMA,GAAE,KAAK,GAAG;AAC5C,WAAK,MAAM,cAAc0G,yBAAuB,MAAM,yCAAyC,KAAK,iDAAiD,EAAE,KAAK,IAAI,CAAC;AAAA,IAC7K;AAAA,EACA;AAAA,EACI,MAAM,sBAAsB9H,SAAQ,QAAQ,SAAS;AACjD,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ8H,6BAAuB,MAAM,yCAAyC,KAAK,4CAA4C,EAAE,KAAK,MAAM,MAAM;AAC1I,UAAM,iBAAiB,MAAM9H,QAAO,KAAK,YAAY,OAAO,EAAE,GAAG,QAAQ,QAAQ,MAAK,GAAI,EAAE,GAAG,SAAS,QAAQ,KAAK,WAAW,QAAQ;AACxI,SAAK,WAAY;AACjB,WAAO,KAAK,mBAAmB,oBAAoB,gBAAgB,MAAM,CAAC;AAAA,EAClF;AAAA,EACI,MAAM,mBAAmBA,SAAQ,QAAQ,SAAS;AAC9C,eAAW,WAAW,OAAO,UAAU;AACnC,WAAK,YAAY,SAAS,KAAK;AAAA,IAC3C;AACQ,WAAO,MAAM,KAAK,sBAAsBA,SAAQ,QAAQ,OAAO;AAAA,EACvE;AAAA,EACI,MAAM,cAAcA,SAAQ,QAAQ,SAAS;;AACzC,UAAM,OAAO;AACb,UAAM,EAAE,gBAAgB,QAAQ,QAAQ,GAAG,WAAY,IAAG;AAC1D,UAAM,uBAAuB,OAAO,kBAAkB,aAAY,+CAAe;AACjF,UAAM,EAAE,qBAAqB,6BAA8B,IAAG,WAAW,CAAE;AAC3E,UAAM,kBAAkB,CAAE;AAC1B,eAAWyC,MAAK,OAAO,WAAW;AAC9B,sBAAgBA,GAAE,QAAQA,GAAE,SAAS,IAAI,IAAIA;AAAA,IACzD;AACQ,UAAM,YAAY,OAAO,UAAU,IAAI,CAACA,QAAO;AAAA,MAC3C,MAAMA,GAAE,QAAQA,GAAE,SAAS;AAAA,MAC3B,YAAYA,GAAE;AAAA,MACd,aAAaA,GAAE;AAAA,IAC3B,EAAU;AACF,eAAW,WAAW,OAAO,UAAU;AACnC,WAAK,YAAY,SAAS,KAAK;AAAA,IAC3C;AACQ,aAASnL,KAAI,GAAGA,KAAI,oBAAoB,EAAEA,IAAG;AACzC,YAAM,iBAAiB,MAAM,KAAK,sBAAsB0I,SAAQ;AAAA,QAC5D,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,UAAU,CAAC,GAAG,KAAK,QAAQ;AAAA,MAC9B,GAAE,OAAO;AACV,YAAM,WAAUjI,MAAA,eAAe,QAAQ,CAAC,MAAxB,gBAAAA,IAA2B;AAC3C,UAAI,CAAC,SAAS;AACV,cAAM,IAAI,YAAY,4CAA4C;AAAA,MAClF;AACY,UAAI,CAAC,QAAQ;AACT;AACJ,YAAM,EAAE,MAAM,WAAW,KAAM,IAAG,QAAQ;AAC1C,YAAM,KAAK,gBAAgB,IAAI;AAC/B,UAAI,CAAC,IAAI;AACL,cAAMsS,WAAU,0BAA0B,KAAK,UAAU,IAAI,CAAC,4BAA4B,UACrF,IAAI,CAAC5H,OAAM,KAAK,UAAUA,GAAE,IAAI,CAAC,EACjC,KAAK,IAAI,CAAC;AACf,aAAK,YAAY,EAAE,MAAM,MAAM,SAAA4H,SAAO,CAAE;AACxC;AAAA,MAChB,WACqB,wBAAwB,yBAAyB,MAAM;AAC5D,cAAMA,WAAU,0BAA0B,KAAK,UAAU,IAAI,CAAC,KAAK,KAAK,UAAU,oBAAoB,CAAC;AACvG,aAAK,YAAY,EAAE,MAAM,MAAM,SAAAA,SAAO,CAAE;AACxC;AAAA,MAChB;AACY,UAAI;AACJ,UAAI;AACA,iBAAS,4BAA4B,EAAE,IAAI,MAAM,GAAG,MAAM,IAAI,IAAI;AAAA,MAClF,SACmB,OAAO;AACV,aAAK,YAAY;AAAA,UACb;AAAA,UACA;AAAA,UACA,SAAS,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AAAA,QAClF,CAAiB;AACD;AAAA,MAChB;AAEY,YAAM,aAAa,MAAM,GAAG,SAAS,QAAQ,IAAI;AACjD,YAAM,UAAUvC,yBAAuB,MAAM,yCAAyC,KAAK,yDAAyD,EAAE,KAAK,MAAM,UAAU;AAC3K,WAAK,YAAY,EAAE,MAAM,MAAM,QAAO,CAAE;AACxC,UAAI;AACA;AAAA,IAChB;AAAA,EACA;AAAA,EACI,MAAM,UAAU9H,SAAQ,QAAQ,SAAS;;AACrC,UAAM,OAAO;AACb,UAAM,EAAE,cAAc,QAAQ,QAAQ,GAAG,WAAY,IAAG;AACxD,UAAM,uBAAuB,OAAO,gBAAgB,cAAYjI,MAAA,2CAAa,aAAb,gBAAAA,IAAuB;AACvF,UAAM,EAAE,qBAAqB,6BAA8B,IAAG,WAAW,CAAE;AAE3E,UAAM,aAAa,OAAO,MAAM,IAAI,CAAC,SAAS;AAC1C,UAAI,mBAAmB,IAAI,GAAG;AAC1B,YAAI,CAAC,KAAK,WAAW;AACjB,gBAAM,IAAI,YAAY,uEAAuE;AAAA,QACjH;AACgB,eAAO;AAAA,UACH,MAAM;AAAA,UACN,UAAU;AAAA,YACN,UAAU,KAAK;AAAA,YACf,MAAM,KAAK,SAAS;AAAA,YACpB,aAAa,KAAK,SAAS,eAAe;AAAA,YAC1C,YAAY,KAAK,SAAS;AAAA,YAC1B,OAAO,KAAK;AAAA,YACZ,QAAQ;AAAA,UACX;AAAA,QACJ;AAAA,MACjB;AACY,aAAO;AAAA,IACnB,CAAS;AACD,UAAM,kBAAkB,CAAE;AAC1B,eAAW0K,MAAK,YAAY;AACxB,UAAIA,GAAE,SAAS,YAAY;AACvB,wBAAgBA,GAAE,SAAS,QAAQA,GAAE,SAAS,SAAS,IAAI,IAAIA,GAAE;AAAA,MACjF;AAAA,IACA;AACQ,UAAM,QAAQ,WAAW,SACrB,WAAW,IAAI,CAACjC,OAAMA,GAAE,SAAS,aAC7B;AAAA,MACI,MAAM;AAAA,MACN,UAAU;AAAA,QACN,MAAMA,GAAE,SAAS,QAAQA,GAAE,SAAS,SAAS;AAAA,QAC7C,YAAYA,GAAE,SAAS;AAAA,QACvB,aAAaA,GAAE,SAAS;AAAA,QACxB,QAAQA,GAAE,SAAS;AAAA,MACtB;AAAA,IACrB,IACkBA,EAAC,IACL;AACN,eAAW,WAAW,OAAO,UAAU;AACnC,WAAK,YAAY,SAAS,KAAK;AAAA,IAC3C;AACQ,aAASlJ,KAAI,GAAGA,KAAI,oBAAoB,EAAEA,IAAG;AACzC,YAAM,iBAAiB,MAAM,KAAK,sBAAsB0I,SAAQ;AAAA,QAC5D,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,UAAU,CAAC,GAAG,KAAK,QAAQ;AAAA,MAC9B,GAAE,OAAO;AACV,YAAM,WAAU9H,MAAA,eAAe,QAAQ,CAAC,MAAxB,gBAAAA,IAA2B;AAC3C,UAAI,CAAC,SAAS;AACV,cAAM,IAAI,YAAY,4CAA4C;AAAA,MAClF;AACY,UAAI,GAACE,MAAA,QAAQ,eAAR,gBAAAA,IAAoB,SAAQ;AAC7B;AAAA,MAChB;AACY,iBAAW,aAAa,QAAQ,YAAY;AACxC,YAAI,UAAU,SAAS;AACnB;AACJ,cAAM,eAAe,UAAU;AAC/B,cAAM,EAAE,MAAM,WAAW,KAAM,IAAG,UAAU;AAC5C,cAAM,KAAK,gBAAgB,IAAI;AAC/B,YAAI,CAAC,IAAI;AACL,gBAAMiS,WAAU,sBAAsB,KAAK,UAAU,IAAI,CAAC,4BAA4B,OAAO,KAAK,eAAe,EAC5G,IAAI,CAACC,UAAS,KAAK,UAAUA,KAAI,CAAC,EAClC,KAAK,IAAI,CAAC;AACf,eAAK,YAAY,EAAE,MAAM,cAAc,SAAAD,SAAO,CAAE;AAChD;AAAA,QACpB,WACyB,wBAAwB,yBAAyB,MAAM;AAC5D,gBAAMA,WAAU,sBAAsB,KAAK,UAAU,IAAI,CAAC,KAAK,KAAK,UAAU,oBAAoB,CAAC;AACnG,eAAK,YAAY,EAAE,MAAM,cAAc,SAAAA,SAAO,CAAE;AAChD;AAAA,QACpB;AACgB,YAAI;AACJ,YAAI;AACA,mBAAS,4BAA4B,EAAE,IAAI,MAAM,GAAG,MAAM,IAAI,IAAI;AAAA,QACtF,SACuB,OAAO;AACV,gBAAMA,WAAU,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AACrE,eAAK,YAAY,EAAE,MAAM,cAAc,SAAAA,SAAO,CAAE;AAChD;AAAA,QACpB;AAEgB,cAAM,aAAa,MAAM,GAAG,SAAS,QAAQ,IAAI;AACjD,cAAM,UAAUvC,yBAAuB,MAAM,yCAAyC,KAAK,yDAAyD,EAAE,KAAK,MAAM,UAAU;AAC3K,aAAK,YAAY,EAAE,MAAM,cAAc,QAAO,CAAE;AAChD,YAAI,sBAAsB;AACtB;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AACQ;AAAA,EACR;AACA;AACA,0CAA0C,oBAAI,QAAO,GAAI,gDAAgD,SAASyC,iDAAgD;AAC9J,SAAOzC,yBAAuB,MAAM,yCAAyC,KAAK,6CAA6C,EAAE,KAAK,IAAI,EAAE,WAAW;AAC3J,GAAG,gDAAgD,SAAS0C,iDAAgD;AACxG,MAAIlT,KAAI,KAAK,SAAS;AACtB,SAAOA,OAAM,GAAG;AACZ,UAAM,UAAU,KAAK,SAASA,EAAC;AAC/B,QAAI,mBAAmB,OAAO,GAAG;AAC7B,YAAM,EAAE,eAAe,GAAG,KAAI,IAAK;AAEnC,YAAM,MAAM;AAAA,QACR,GAAG;AAAA,QACH,SAAS,QAAQ,WAAW;AAAA,QAC5B,SAAS,QAAQ,WAAW;AAAA,MAC/B;AACD,UAAI,eAAe;AACf,YAAI,gBAAgB;AAAA,MACpC;AACY,aAAO;AAAA,IACnB;AAAA,EACA;AACI,QAAM,IAAI,YAAY,4EAA4E;AACtG,GAAG,qDAAqD,SAASmT,sDAAqD;;AAClH,WAASnT,KAAI,KAAK,SAAS,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAChD,UAAM,UAAU,KAAK,SAASA,EAAC;AAC/B,QAAI,mBAAmB,OAAO,MAAK,mCAAS,gBAAe;AACvD,aAAO,QAAQ;AAAA,IAC3B;AACQ,QAAI,mBAAmB,OAAO,OAAKS,MAAA,mCAAS,eAAT,gBAAAA,IAAqB,SAAQ;AAC5D,cAAOG,MAAA,QAAQ,WAAW,GAAG,EAAE,MAAxB,gBAAAA,IAA2B;AAAA,IAC9C;AAAA,EACA;AACI;AACJ,GAAG,2DAA2D,SAASwS,4DAA2D;AAC9H,WAASpT,KAAI,KAAK,SAAS,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAChD,UAAM,UAAU,KAAK,SAASA,EAAC;AAC/B,QAAI,kBAAkB,OAAO,KAAK,QAAQ,WAAW,MAAM;AACvD,aAAO,QAAQ;AAAA,IAC3B;AACQ,QAAI,cAAc,OAAO,KACrB,QAAQ,WAAW,QACnB,OAAO,QAAQ,YAAY,YAC3B,KAAK,SAAS,KAAK,CAACI,OAAM;;AAAA,aAAAA,GAAE,SAAS,iBACjCK,MAAAL,GAAE,eAAF,gBAAAK,IAAc,KAAK,CAAC4P,OAAMA,GAAE,SAAS,cAAcA,GAAE,OAAO,QAAQ;AAAA,KAAa,GAAG;AACxF,aAAO,QAAQ;AAAA,IAC3B;AAAA,EACA;AACI;AACJ,GAAG,oDAAoD,SAASgD,qDAAoD;AAChH,QAAM,QAAQ;AAAA,IACV,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,cAAc;AAAA,EACjB;AACD,aAAW,EAAE,WAAW,KAAK,kBAAkB;AAC3C,QAAI,OAAO;AACP,YAAM,qBAAqB,MAAM;AACjC,YAAM,iBAAiB,MAAM;AAC7B,YAAM,gBAAgB,MAAM;AAAA,IACxC;AAAA,EACA;AACI,SAAO;AACX,GAAG,+CAA+C,SAASC,8CAA6C,QAAQ;AAC5G,MAAI,OAAO,KAAK,QAAQ,OAAO,IAAI,GAAG;AAClC,UAAM,IAAI,YAAY,8HAA8H;AAAA,EAC5J;AACA,GAAG,4DAA4D,SAASC,2DAA0D,YAAY;AAC1I,SAAQ,OAAO,eAAe,WAAW,aACnC,eAAe,SAAY,cACvB,KAAK,UAAU,UAAU;AACvC;AC5WO,MAAM,6BAA6B,6BAA6B;AAAA;AAAA,EAEnE,OAAO,aAAa7K,SAAQ,QAAQ,SAAS;AACzC,UAAM,SAAS,IAAI,qBAAsB;AACzC,UAAM,OAAO;AAAA,MACT,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,eAAgB;AAAA,IAChF;AACD,WAAO,KAAK,MAAM,OAAO,cAAcA,SAAQ,QAAQ,IAAI,CAAC;AAC5D,WAAO;AAAA,EACf;AAAA,EACI,OAAO,SAASA,SAAQ,QAAQ,SAAS;AACrC,UAAM,SAAS,IAAI,qBAAsB;AACzC,UAAM,OAAO;AAAA,MACT,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,WAAY;AAAA,IAC5E;AACD,WAAO,KAAK,MAAM,OAAO,UAAUA,SAAQ,QAAQ,IAAI,CAAC;AACxD,WAAO;AAAA,EACf;AAAA,EACI,YAAY,SAAS,OAAO,MAAM;AAC9B,UAAM,YAAY,SAAS,IAAI;AAC/B,QAAI,mBAAmB,OAAO,KAAK,QAAQ,SAAS;AAChD,WAAK,MAAM,WAAW,QAAQ,OAAO;AAAA,IACjD;AAAA,EACA;AACA;AC5BA,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,OAAO;AACb,MAAM,OAAO;AACb,MAAM,MAAM;AACZ,MAAM,WAAW;AACjB,MAAM,iBAAiB;AACvB,MAAM,MAAM,WAAW;AACvB,MAAM,UAAU,OAAO,OAAO,MAAM;AACpC,MAAM,OAAO,MAAM,MAAM;AACzB,MAAM,aAAa,MAAM;AACzB,MAAM,MAAM,OAAO;AACnB,MAAM,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAKA;AACJ;AAEA,MAAM,oBAAoB,MAAM;AAChC;AACA,MAAM,sBAAsB,MAAM;AAClC;AASA,SAAS,UAAU,YAAY,eAAe,MAAM,KAAK;AACrD,MAAI,OAAO,eAAe,UAAU;AAChC,UAAM,IAAI,UAAU,sBAAsB,OAAO,UAAU,EAAE;AAAA,EACrE;AACI,MAAI,CAAC,WAAW,QAAQ;AACpB,UAAM,IAAI,MAAM,GAAG,UAAU,WAAW;AAAA,EAChD;AACI,SAAO,WAAW,WAAW,KAAI,GAAI,YAAY;AACrD;AACA,MAAM,aAAa,CAAC,YAAY,UAAU;AACtC,QAAM,SAAS,WAAW;AAC1B,MAAI,QAAQ;AACZ,QAAM,kBAAkB,CAAC,QAAQ;AAC7B,UAAM,IAAI,YAAY,GAAG,GAAG,gBAAgB,KAAK,EAAE;AAAA,EACtD;AACD,QAAM,sBAAsB,CAAC,QAAQ;AACjC,UAAM,IAAI,cAAc,GAAG,GAAG,gBAAgB,KAAK,EAAE;AAAA,EACxD;AACD,QAAM,WAAW,MAAM;AACnB,cAAW;AACX,QAAI,SAAS;AACT,sBAAgB,yBAAyB;AAC7C,QAAI,WAAW,KAAK,MAAM;AACtB,aAAO,SAAU;AACrB,QAAI,WAAW,KAAK,MAAM;AACtB,aAAO,SAAU;AACrB,QAAI,WAAW,KAAK,MAAM;AACtB,aAAO,SAAU;AACrB,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,UAC1C,MAAM,OAAO,SAAS,SAAS,QAAQ,KAAK,OAAO,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AAC9F,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,UAC1C,MAAM,OAAO,SAAS,SAAS,QAAQ,KAAK,OAAO,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AAC9F,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,WAC1C,MAAM,OAAO,SAAS,SAAS,QAAQ,KAAK,QAAQ,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AAC/F,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,cAC1C,MAAM,WAAW,SAAS,SAAS,QAAQ,KAAK,WAAW,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AACtG,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,eAC1C,MAAM,iBAAiB,SACpB,IAAI,SAAS,SACb,SAAS,QAAQ,KACjB,YAAY,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AAC1D,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,QAAI,WAAW,UAAU,OAAO,QAAQ,CAAC,MAAM,SAC1C,MAAM,MAAM,SAAS,SAAS,QAAQ,KAAK,MAAM,WAAW,WAAW,UAAU,KAAK,CAAC,GAAI;AAC5F,eAAS;AACT,aAAO;AAAA,IACnB;AACQ,WAAO,SAAU;AAAA,EACpB;AACD,QAAM,WAAW,MAAM;AACnB,UAAM,QAAQ;AACd,QAAI4I,UAAS;AACb;AACA,WAAO,QAAQ,WAAW,WAAW,KAAK,MAAM,OAAQA,WAAU,WAAW,QAAQ,CAAC,MAAM,OAAQ;AAChG,MAAAA,UAAS,WAAW,KAAK,MAAM,OAAO,CAACA,UAAS;AAChD;AAAA,IACZ;AACQ,QAAI,WAAW,OAAO,KAAK,KAAK,KAAK;AACjC,UAAI;AACA,eAAO,KAAK,MAAM,WAAW,UAAU,OAAO,EAAE,QAAQ,OAAOA,OAAM,CAAC,CAAC;AAAA,MACvF,SACmB3Q,IAAG;AACN,4BAAoB,OAAOA,EAAC,CAAC;AAAA,MAC7C;AAAA,IACA,WACiB,MAAM,MAAM,OAAO;AACxB,UAAI;AACA,eAAO,KAAK,MAAM,WAAW,UAAU,OAAO,QAAQ,OAAO2Q,OAAM,CAAC,IAAI,GAAG;AAAA,MAC3F,SACmB3Q,IAAG;AAEN,eAAO,KAAK,MAAM,WAAW,UAAU,OAAO,WAAW,YAAY,IAAI,CAAC,IAAI,GAAG;AAAA,MACjG;AAAA,IACA;AACQ,oBAAgB,6BAA6B;AAAA,EAChD;AACD,QAAM,WAAW,MAAM;AACnB;AACA,cAAW;AACX,UAAM,MAAM,CAAE;AACd,QAAI;AACA,aAAO,WAAW,KAAK,MAAM,KAAK;AAC9B,kBAAW;AACX,YAAI,SAAS,UAAU,MAAM,MAAM;AAC/B,iBAAO;AACX,cAAM,MAAM,SAAU;AACtB,kBAAW;AACX;AACA,YAAI;AACA,gBAAM,QAAQ,SAAU;AACxB,iBAAO,eAAe,KAAK,KAAK,EAAE,OAAO,UAAU,MAAM,YAAY,MAAM,cAAc,KAAI,CAAE;AAAA,QACnH,SACuBA,IAAG;AACN,cAAI,MAAM,MAAM;AACZ,mBAAO;AAAA;AAEP,kBAAMA;AAAA,QAC9B;AACgB,kBAAW;AACX,YAAI,WAAW,KAAK,MAAM;AACtB;AAAA,MACpB;AAAA,IACA,SACeA,IAAG;AACN,UAAI,MAAM,MAAM;AACZ,eAAO;AAAA;AAEP,wBAAgB,+BAA+B;AAAA,IAC/D;AACQ;AACA,WAAO;AAAA,EACV;AACD,QAAM,WAAW,MAAM;AACnB;AACA,UAAMwD,OAAM,CAAE;AACd,QAAI;AACA,aAAO,WAAW,KAAK,MAAM,KAAK;AAC9B,QAAAA,KAAI,KAAK,UAAU;AACnB,kBAAW;AACX,YAAI,WAAW,KAAK,MAAM,KAAK;AAC3B;AAAA,QACpB;AAAA,MACA;AAAA,IACA,SACexD,IAAG;AACN,UAAI,MAAM,MAAM,OAAO;AACnB,eAAOwD;AAAA,MACvB;AACY,sBAAgB,8BAA8B;AAAA,IAC1D;AACQ;AACA,WAAOA;AAAA,EACV;AACD,QAAM,WAAW,MAAM;AACnB,QAAI,UAAU,GAAG;AACb,UAAI,eAAe,OAAO,MAAM,MAAM;AAClC,wBAAgB,sBAAsB;AAC1C,UAAI;AACA,eAAO,KAAK,MAAM,UAAU;AAAA,MAC5C,SACmBxD,IAAG;AACN,YAAI,MAAM,MAAM,OAAO;AACnB,cAAI;AACA,gBAAI,QAAQ,WAAW,WAAW,SAAS,CAAC;AACxC,qBAAO,KAAK,MAAM,WAAW,UAAU,GAAG,WAAW,YAAY,GAAG,CAAC,CAAC;AAC1E,mBAAO,KAAK,MAAM,WAAW,UAAU,GAAG,WAAW,YAAY,GAAG,CAAC,CAAC;AAAA,UAC9F,SAC2BA,IAAG;AAAA,UAAA;AAAA,QAC9B;AACgB,4BAAoB,OAAOA,EAAC,CAAC;AAAA,MAC7C;AAAA,IACA;AACQ,UAAM,QAAQ;AACd,QAAI,WAAW,KAAK,MAAM;AACtB;AACJ,WAAO,WAAW,KAAK,KAAK,CAAC,MAAM,SAAS,WAAW,KAAK,CAAC;AACzD;AACJ,QAAI,SAAS,UAAU,EAAE,MAAM,MAAM;AACjC,sBAAgB,6BAA6B;AACjD,QAAI;AACA,aAAO,KAAK,MAAM,WAAW,UAAU,OAAO,KAAK,CAAC;AAAA,IAChE,SACeA,IAAG;AACN,UAAI,WAAW,UAAU,OAAO,KAAK,MAAM,OAAO,MAAM,MAAM;AAC1D,wBAAgB,sBAAsB;AAC1C,UAAI;AACA,eAAO,KAAK,MAAM,WAAW,UAAU,OAAO,WAAW,YAAY,GAAG,CAAC,CAAC;AAAA,MAC1F,SACmBA,IAAG;AACN,4BAAoB,OAAOA,EAAC,CAAC;AAAA,MAC7C;AAAA,IACA;AAAA,EACK;AACD,QAAM,YAAY,MAAM;AACpB,WAAO,QAAQ,UAAU,SAAU,SAAS,WAAW,KAAK,CAAC,GAAG;AAC5D;AAAA,IACZ;AAAA,EACK;AACD,SAAO,SAAU;AACrB;AAEA,MAAM,eAAe,CAAC,UAAU,UAAU,OAAO,MAAM,MAAM,MAAM,GAAG;AC9OtE,IAAI8P,2BAAkE,SAAU,UAAU,OAAO,OAAO3I,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIqF,2BAAkE,SAAU,UAAU,OAAO1I,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,iCAAiC,8BAA8B,yCAAyC,qDAAqD,oCAAoC,2CAA2C,gCAAgC,6CAA6C,6CAA6C,kCAAkC,sDAAsD;AAM3b,MAAM,6BAA6B,6BAA6B;AAAA,EACnE,YAAY,QAAQ;AAChB,UAAO;AACP,oCAAgC,IAAI,IAAI;AACxC,iCAA6B,IAAI,MAAM,MAAM;AAC7C,4CAAwC,IAAI,MAAM,MAAM;AACxD,wDAAoD,IAAI,MAAM,MAAM;AACpEsF,6BAAuB,MAAM,8BAA8B,QAAQ,GAAG;AACtEA,6BAAuB,MAAM,yCAAyC,CAAA,GAAI,GAAG;AAAA,EACrF;AAAA,EACI,IAAI,gCAAgC;AAChC,WAAOD,yBAAuB,MAAM,qDAAqD,GAAG;AAAA,EACpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQI,OAAO,mBAAmB,QAAQ;AAC9B,UAAM,SAAS,IAAI,qBAAqB,IAAI;AAC5C,WAAO,KAAK,MAAM,OAAO,oBAAoB,MAAM,CAAC;AACpD,WAAO;AAAA,EACf;AAAA,EACI,OAAO,qBAAqB9H,SAAQ,QAAQ,SAAS;AACjD,UAAM,SAAS,IAAI,qBAAqB,MAAM;AAC9C,WAAO,KAAK,MAAM,OAAO,mBAAmBA,SAAQ,EAAE,GAAG,QAAQ,QAAQ,KAAI,GAAI,EAAE,GAAG,SAAS,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,SAAU,EAAA,CAAE,CAAC;AACzK,WAAO;AAAA,EACf;AAAA,EACI,MAAM,sBAAsBA,SAAQ,QAAQ,SAAS;;AACjD,UAAM;AACN,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ8H,6BAAuB,MAAM,iCAAiC,KAAK,kCAAkC,EAAE,KAAK,IAAI;AAChH,UAAM,SAAS,MAAM9H,QAAO,KAAK,YAAY,OAAO,EAAE,GAAG,QAAQ,QAAQ,KAAI,GAAI,EAAE,GAAG,SAAS,QAAQ,KAAK,WAAW,QAAQ;AAC/H,SAAK,WAAY;AACjB,qBAAiB,SAAS,QAAQ;AAC9B8H,+BAAuB,MAAM,iCAAiC,KAAK,8BAA8B,EAAE,KAAK,MAAM,KAAK;AAAA,IAC/H;AACQ,SAAI/P,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,mBAAmB+P,yBAAuB,MAAM,iCAAiC,KAAK,gCAAgC,EAAE,KAAK,IAAI,CAAC;AAAA,EACtJ;AAAA,EACI,MAAM,oBAAoB,gBAAgB,SAAS;;AAC/C,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQA,6BAAuB,MAAM,iCAAiC,KAAK,kCAAkC,EAAE,KAAK,IAAI;AAChH,SAAK,WAAY;AACjB,UAAM,SAAS,OAAO,mBAAmB,gBAAgB,KAAK,UAAU;AACxE,QAAI;AACJ,qBAAiB,SAAS,QAAQ;AAC9B,UAAI,UAAU,WAAW,MAAM,IAAI;AAE/B,aAAK,mBAAmBA,yBAAuB,MAAM,iCAAiC,KAAK,gCAAgC,EAAE,KAAK,IAAI,CAAC;AAAA,MACvJ;AACYA,+BAAuB,MAAM,iCAAiC,KAAK,8BAA8B,EAAE,KAAK,MAAM,KAAK;AACnH,eAAS,MAAM;AAAA,IAC3B;AACQ,SAAI/P,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,mBAAmB+P,yBAAuB,MAAM,iCAAiC,KAAK,gCAAgC,EAAE,KAAK,IAAI,CAAC;AAAA,EACtJ;AAAA,EACI,EAAE,+BAA+B,oBAAI,QAAO,GAAI,0CAA0C,oBAAI,QAAO,GAAI,sDAAsD,oBAAI,QAAO,GAAI,kCAAkC,oBAAI,QAAO,GAAI,qCAAqC,SAASgD,sCAAqC;AAC9S,QAAI,KAAK;AACL;AACJ/C,6BAAuB,MAAM,qDAAqD,QAAW,GAAG;AAAA,EACxG,GAAO,4CAA4C,SAASgD,2CAA0C,QAAQ;AACtG,QAAI,QAAQjD,yBAAuB,MAAM,yCAAyC,GAAG,EAAE,OAAO,KAAK;AACnG,QAAI,OAAO;AACP,aAAO;AAAA,IACnB;AACQ,YAAQ;AAAA,MACJ,cAAc;AAAA,MACd,cAAc;AAAA,MACd,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,iBAAiB,oBAAI,IAAK;AAAA,MAC1B,yBAAyB;AAAA,IAC5B;AACDA,6BAAuB,MAAM,yCAAyC,GAAG,EAAE,OAAO,KAAK,IAAI;AAC3F,WAAO;AAAA,EACf,GAAO,iCAAiC,SAASkD,gCAA+B,OAAO;;AAC/E,QAAI,KAAK;AACL;AACJ,UAAM,aAAalD,yBAAuB,MAAM,iCAAiC,KAAK,8CAA8C,EAAE,KAAK,MAAM,KAAK;AACtJ,SAAK,MAAM,SAAS,OAAO,UAAU;AACrC,eAAW,UAAU,MAAM,SAAS;AAChC,YAAM,iBAAiB,WAAW,QAAQ,OAAO,KAAK;AACtD,UAAI,OAAO,MAAM,WAAW,UACxB/P,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS,iBACjCG,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS;AACjC,aAAK,MAAM,WAAW,OAAO,MAAM,SAAS,eAAe,QAAQ,OAAO;AAC1E,aAAK,MAAM,iBAAiB;AAAA,UACxB,OAAO,OAAO,MAAM;AAAA,UACpB,UAAU,eAAe,QAAQ;AAAA,UACjC,QAAQ,eAAe,QAAQ;AAAA,QACnD,CAAiB;AAAA,MACjB;AACY,UAAI,OAAO,MAAM,WAAW,UACxBE,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS,iBACjCD,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS;AACjC,aAAK,MAAM,iBAAiB;AAAA,UACxB,OAAO,OAAO,MAAM;AAAA,UACpB,UAAU,eAAe,QAAQ;AAAA,QACrD,CAAiB;AAAA,MACjB;AACY,YAAIG,MAAA,OAAO,aAAP,gBAAAA,IAAiB,YAAW,UAAQD,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS,aAAa;AAClF,aAAK,MAAM,0BAA0B;AAAA,UACjC,UAASG,MAAA,OAAO,aAAP,gBAAAA,IAAiB;AAAA,UAC1B,YAAUD,MAAA,eAAe,aAAf,gBAAAA,IAAyB,YAAW,CAAE;AAAA,QACpE,CAAiB;AAAA,MACjB;AACY,YAAIG,MAAA,OAAO,aAAP,gBAAAA,IAAiB,YAAW,UAAQD,MAAA,eAAe,YAAf,gBAAAA,IAAwB,UAAS,aAAa;AAClF,aAAK,MAAM,0BAA0B;AAAA,UACjC,UAASG,MAAA,OAAO,aAAP,gBAAAA,IAAiB;AAAA,UAC1B,YAAUD,MAAA,eAAe,aAAf,gBAAAA,IAAyB,YAAW,CAAE;AAAA,QACpE,CAAiB;AAAA,MACjB;AACY,YAAM,QAAQmP,yBAAuB,MAAM,iCAAiC,KAAK,yCAAyC,EAAE,KAAK,MAAM,cAAc;AACrJ,UAAI,eAAe,eAAe;AAC9BA,iCAAuB,MAAM,iCAAiC,KAAK,2CAA2C,EAAE,KAAK,MAAM,cAAc;AACzI,YAAI,MAAM,2BAA2B,MAAM;AACvCA,mCAAuB,MAAM,iCAAiC,KAAK,2CAA2C,EAAE,KAAK,MAAM,gBAAgB,MAAM,uBAAuB;AAAA,QAC5L;AAAA,MACA;AACY,iBAAW,YAAY,OAAO,MAAM,cAAc,CAAA,GAAI;AAClD,YAAI,MAAM,4BAA4B,SAAS,OAAO;AAClDA,mCAAuB,MAAM,iCAAiC,KAAK,2CAA2C,EAAE,KAAK,MAAM,cAAc;AAEzI,cAAI,MAAM,2BAA2B,MAAM;AACvCA,qCAAuB,MAAM,iCAAiC,KAAK,2CAA2C,EAAE,KAAK,MAAM,gBAAgB,MAAM,uBAAuB;AAAA,UAChM;AAAA,QACA;AACgB,cAAM,0BAA0B,SAAS;AAAA,MACzD;AACY,iBAAW,iBAAiB,OAAO,MAAM,cAAc,CAAA,GAAI;AACvD,cAAM,oBAAmBhP,MAAA,eAAe,QAAQ,eAAvB,gBAAAA,IAAoC,cAAc;AAC3E,YAAI,EAAC,qDAAkB,OAAM;AACzB;AAAA,QACpB;AACgB,aAAI,qDAAkB,UAAS,YAAY;AACvC,eAAK,MAAM,uCAAuC;AAAA,YAC9C,OAAMD,MAAA,iBAAiB,aAAjB,gBAAAA,IAA2B;AAAA,YACjC,OAAO,cAAc;AAAA,YACrB,WAAW,iBAAiB,SAAS;AAAA,YACrC,kBAAkB,iBAAiB,SAAS;AAAA,YAC5C,mBAAiBG,MAAA,cAAc,aAAd,gBAAAA,IAAwB,cAAa;AAAA,UAC9E,CAAqB;AAAA,QACrB,OACqB;AACD,sBAAY,qDAAkB,IAAI;AAAA,QACtD;AAAA,MACA;AAAA,IACA;AAAA,EACK,GAAE,8CAA8C,SAASiS,6CAA4C,gBAAgB,eAAe;;AACjI,UAAM,QAAQnD,yBAAuB,MAAM,iCAAiC,KAAK,yCAAyC,EAAE,KAAK,MAAM,cAAc;AACrJ,QAAI,MAAM,gBAAgB,IAAI,aAAa,GAAG;AAE1C;AAAA,IACZ;AACQ,UAAM,oBAAmB/P,MAAA,eAAe,QAAQ,eAAvB,gBAAAA,IAAoC;AAC7D,QAAI,CAAC,kBAAkB;AACnB,YAAM,IAAI,MAAM,uBAAuB;AAAA,IACnD;AACQ,QAAI,CAAC,iBAAiB,MAAM;AACxB,YAAM,IAAI,MAAM,mCAAmC;AAAA,IAC/D;AACQ,QAAI,iBAAiB,SAAS,YAAY;AACtC,YAAM,aAAY+P,OAAAA,MAAAA,yBAAuB,MAAM,8BAA8B,GAAG,MAA9DA,gBAAAA,IAAiE,UAAjEA,gBAAAA,IAAwE,KAAK,CAAC,SAAS,KAAK,SAAS,cAAc,KAAK,SAAS,SAAS,iBAAiB,SAAS;AACtL,WAAK,MAAM,sCAAsC;AAAA,QAC7C,MAAM,iBAAiB,SAAS;AAAA,QAChC,OAAO;AAAA,QACP,WAAW,iBAAiB,SAAS;AAAA,QACrC,kBAAkB,mBAAmB,SAAS,IAAI,UAAU,UAAU,iBAAiB,SAAS,SAAS,KACnG,uCAAW,SAAS,UAAS,KAAK,MAAM,iBAAiB,SAAS,SAAS,IACvE;AAAA,MAC1B,CAAa;AAAA,IACb,OACa;AACD,kBAAY,iBAAiB,IAAI;AAAA,IAC7C;AAAA,EACA,GAAO,8CAA8C,SAASoD,6CAA4C,gBAAgB;;AAClH,UAAM,QAAQpD,yBAAuB,MAAM,iCAAiC,KAAK,yCAAyC,EAAE,KAAK,MAAM,cAAc;AACrJ,QAAI,eAAe,QAAQ,WAAW,CAAC,MAAM,cAAc;AACvD,YAAM,eAAe;AACrB,YAAM,iBAAiBA,yBAAuB,MAAM,iCAAiC,KAAK,oDAAoD,EAAE,KAAK,IAAI;AACzJ,WAAK,MAAM,gBAAgB;AAAA,QACvB,SAAS,eAAe,QAAQ;AAAA,QAChC,QAAQ,iBAAiB,eAAe,UAAU,eAAe,QAAQ,OAAO,IAAI;AAAA,MACpG,CAAa;AAAA,IACb;AACQ,QAAI,eAAe,QAAQ,WAAW,CAAC,MAAM,cAAc;AACvD,YAAM,eAAe;AACrB,WAAK,MAAM,gBAAgB,EAAE,SAAS,eAAe,QAAQ,SAAS;AAAA,IAClF;AACQ,UAAI/P,MAAA,eAAe,aAAf,gBAAAA,IAAyB,YAAW,CAAC,MAAM,uBAAuB;AAClE,YAAM,wBAAwB;AAC9B,WAAK,MAAM,yBAAyB,EAAE,SAAS,eAAe,SAAS,SAAS;AAAA,IAC5F;AACQ,UAAIG,MAAA,eAAe,aAAf,gBAAAA,IAAyB,YAAW,CAAC,MAAM,uBAAuB;AAClE,YAAM,wBAAwB;AAC9B,WAAK,MAAM,yBAAyB,EAAE,SAAS,eAAe,SAAS,SAAS;AAAA,IAC5F;AAAA,EACA,GAAO,mCAAmC,SAASiT,oCAAmC;AAC9E,QAAI,KAAK,OAAO;AACZ,YAAM,IAAI,YAAY,yCAAyC;AAAA,IAC3E;AACQ,UAAM,WAAWrD,yBAAuB,MAAM,qDAAqD,GAAG;AACtG,QAAI,CAAC,UAAU;AACX,YAAM,IAAI,YAAY,0CAA0C;AAAA,IAC5E;AACQC,6BAAuB,MAAM,qDAAqD,QAAW,GAAG;AAChGA,6BAAuB,MAAM,yCAAyC,CAAA,GAAI,GAAG;AAC7E,WAAO,uBAAuB,UAAUD,yBAAuB,MAAM,8BAA8B,GAAG,CAAC;AAAA,EAC/G,GAAO,uDAAuD,SAASsD,wDAAuD;;AACtH,UAAM,kBAAiBtD,MAAAA,yBAAuB,MAAM,8BAA8B,GAAG,MAA9DA,gBAAAA,IAAiE;AACxF,QAAI,6BAA6B,cAAc,GAAG;AAC9C,aAAO;AAAA,IACnB;AACQ,WAAO;AAAA,EACf,GAAO,iDAAiD,SAASuD,gDAA+C,OAAO;AAC/G,QAAItT,KAAIG,KAAIE,KAAID;AAChB,QAAI,WAAW2P,yBAAuB,MAAM,qDAAqD,GAAG;AACpG,UAAM,EAAE,SAAS,GAAG,KAAI,IAAK;AAC7B,QAAI,CAAC,UAAU;AACX,iBAAWC,yBAAuB,MAAM,qDAAqD;AAAA,QACzF,GAAG;AAAA,QACH,SAAS,CAAE;AAAA,MACd,GAAE,GAAG;AAAA,IAClB,OACa;AACD,aAAO,OAAO,UAAU,IAAI;AAAA,IACxC;AACQ,eAAW,EAAE,OAAO,eAAe,OAAO,WAAW,MAAM,GAAG,MAAK,KAAM,MAAM,SAAS;AACpF,UAAI,SAAS,SAAS,QAAQ,KAAK;AACnC,UAAI,CAAC,QAAQ;AACT,iBAAS,SAAS,QAAQ,KAAK,IAAI,EAAE,eAAe,OAAO,SAAS,CAAA,GAAI,UAAU,GAAG,MAAO;AAAA,MAC5G;AACY,UAAI,UAAU;AACV,YAAI,CAAC,OAAO,UAAU;AAClB,iBAAO,WAAW,OAAO,OAAO,CAAA,GAAI,QAAQ;AAAA,QAChE,OACqB;AACD,gBAAM,EAAE,SAAAsC,UAAS,SAAAiB,UAAS,GAAGC,MAAM,IAAG;AAEtC,iBAAO,OAAO,OAAO,UAAUA,KAAI;AACnC,cAAIlB,UAAS;AACT,aAACtS,MAAK,OAAO,UAAU,YAAYA,IAAG,UAAU;AAChD,mBAAO,SAAS,QAAQ,KAAK,GAAGsS,QAAO;AAAA,UAC/D;AACoB,cAAIiB,UAAS;AACT,aAACpT,MAAK,OAAO,UAAU,YAAYA,IAAG,UAAU;AAChD,mBAAO,SAAS,QAAQ,KAAK,GAAGoT,QAAO;AAAA,UAC/D;AAAA,QACA;AAAA,MACA;AACY,UAAI,eAAe;AACf,eAAO,gBAAgB;AACvB,YAAIxD,yBAAuB,MAAM,8BAA8B,GAAG,KAAK,sBAAsBA,yBAAuB,MAAM,8BAA8B,GAAG,CAAC,GAAG;AAC3J,cAAI,kBAAkB,UAAU;AAC5B,kBAAM,IAAI,wBAAyB;AAAA,UAC3D;AACoB,cAAI,kBAAkB,kBAAkB;AACpC,kBAAM,IAAI,+BAAgC;AAAA,UAClE;AAAA,QACA;AAAA,MACA;AACY,aAAO,OAAO,QAAQ,KAAK;AAC3B,UAAI,CAAC;AACD;AACJ,YAAM,EAAE,SAAS,SAAS,eAAe,MAAM,YAAY,GAAGyD,MAAI,IAAK;AAEvE,aAAO,OAAO,OAAO,SAASA,KAAI;AAClC,UAAI,SAAS;AACT,eAAO,QAAQ,WAAW,OAAO,QAAQ,WAAW,MAAM;AAAA,MAC1E;AACY,UAAI;AACA,eAAO,QAAQ,OAAO;AAC1B,UAAI,eAAe;AACf,YAAI,CAAC,OAAO,QAAQ,eAAe;AAC/B,iBAAO,QAAQ,gBAAgB;AAAA,QACnD,OACqB;AACD,cAAI,cAAc;AACd,mBAAO,QAAQ,cAAc,OAAO,cAAc;AACtD,cAAI,cAAc,WAAW;AACzB,aAACnT,MAAK,OAAO,QAAQ,eAAe,cAAcA,IAAG,YAAY;AACjE,mBAAO,QAAQ,cAAc,aAAa,cAAc;AAAA,UAChF;AAAA,QACA;AAAA,MACA;AACY,UAAI,SAAS;AACT,eAAO,QAAQ,WAAW,OAAO,QAAQ,WAAW,MAAM;AAC1D,YAAI,CAAC,OAAO,QAAQ,WAAW0P,yBAAuB,MAAM,iCAAiC,KAAK,oDAAoD,EAAE,KAAK,IAAI,GAAG;AAChK,iBAAO,QAAQ,SAAS,aAAa,OAAO,QAAQ,OAAO;AAAA,QAC/E;AAAA,MACA;AACY,UAAI,YAAY;AACZ,YAAI,CAAC,OAAO,QAAQ;AAChB,iBAAO,QAAQ,aAAa,CAAE;AAClC,mBAAW,EAAE,OAAA0D,QAAO,IAAI,MAAM,UAAU,IAAI,GAAGD,MAAM,KAAI,YAAY;AACjE,gBAAM,aAAcpT,MAAK,OAAO,QAAQ,YAAYqT,MAAK,MAAMrT,IAAGqT,MAAK,IAAI,CAAE;AAC7E,iBAAO,OAAO,WAAWD,KAAI;AAC7B,cAAI;AACA,sBAAU,KAAK;AACnB,cAAI;AACA,sBAAU,OAAO;AACrB,cAAI;AACA,sBAAU,aAAa,UAAU,WAAW,EAAE,MAAM,GAAG,QAAQ,IAAI,WAAW,GAAE;AACpF,cAAI,yBAAI;AACJ,sBAAU,SAAS,OAAO,GAAG;AACjC,cAAI,yBAAI,WAAW;AACf,sBAAU,SAAS,aAAa,GAAG;AACnC,gBAAI,oBAAoBzD,yBAAuB,MAAM,8BAA8B,GAAG,GAAG,SAAS,GAAG;AACjG,wBAAU,SAAS,mBAAmB,aAAa,UAAU,SAAS,SAAS;AAAA,YAC3G;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,IACA;AACQ,WAAO;AAAA,EACf,GAAO,OAAO,kBAAkB;AACxB,UAAM,YAAY,CAAE;AACpB,UAAM,YAAY,CAAE;AACpB,QAAI,OAAO;AACX,SAAK,GAAG,SAAS,CAAC,UAAU;AACxB,YAAM,SAAS,UAAU,MAAO;AAChC,UAAI,QAAQ;AACR,eAAO,QAAQ,KAAK;AAAA,MACpC,OACiB;AACD,kBAAU,KAAK,KAAK;AAAA,MACpC;AAAA,IACA,CAAS;AACD,SAAK,GAAG,OAAO,MAAM;AACjB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,QAAQ,MAAS;AAAA,MACxC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,SAAK,GAAG,SAAS,CAAC,QAAQ;AACtB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,OAAO,GAAG;AAAA,MACjC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,SAAK,GAAG,SAAS,CAAC,QAAQ;AACtB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,OAAO,GAAG;AAAA,MACjC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,WAAO;AAAA,MACH,MAAM,YAAY;AACd,YAAI,CAAC,UAAU,QAAQ;AACnB,cAAI,MAAM;AACN,mBAAO,EAAE,OAAO,QAAW,MAAM,KAAM;AAAA,UAC/D;AACoB,iBAAO,IAAI,QAAQ,CAAC,SAAS,WAAW,UAAU,KAAK,EAAE,SAAS,QAAQ,CAAC,EAAE,KAAK,CAAC2D,WAAWA,SAAQ,EAAE,OAAOA,QAAO,MAAM,MAAK,IAAK,EAAE,OAAO,QAAW,MAAM,KAAM,CAAC;AAAA,QAC3L;AACgB,cAAM,QAAQ,UAAU,MAAO;AAC/B,eAAO,EAAE,OAAO,OAAO,MAAM,MAAO;AAAA,MACvC;AAAA,MACD,QAAQ,YAAY;AAChB,aAAK,MAAO;AACZ,eAAO,EAAE,OAAO,QAAW,MAAM,KAAM;AAAA,MAC1C;AAAA,IACJ;AAAA,EACT;AAAA,EACI,mBAAmB;AACf,UAAM,SAAS,IAAI,OAAO,KAAK,OAAO,aAAa,EAAE,KAAK,IAAI,GAAG,KAAK,UAAU;AAChF,WAAO,OAAO,iBAAkB;AAAA,EACxC;AACA;AACA,SAAS,uBAAuB,UAAU,QAAQ;AAC9C,QAAM,EAAE,IAAI,SAAS,SAAS,OAAO,oBAAoB,GAAG,KAAI,IAAK;AACrE,QAAM,aAAa;AAAA,IACf,GAAG;AAAA,IACH;AAAA,IACA,SAAS,QAAQ,IAAI,CAAC,EAAE,SAAS,eAAe,OAAO,UAAU,GAAG,iBAAiB;AACjF,UAAI,CAAC,eAAe;AAChB,cAAM,IAAI,YAAY,oCAAoC,KAAK,EAAE;AAAA,MACjF;AACY,YAAM,EAAE,UAAU,MAAM,eAAe,YAAY,GAAG,YAAW,IAAK;AACtE,YAAM,OAAO,QAAQ;AACrB,UAAI,CAAC,MAAM;AACP,cAAM,IAAI,YAAY,2BAA2B,KAAK,EAAE;AAAA,MACxE;AACY,UAAI,eAAe;AACf,cAAM,EAAE,WAAW,MAAM,KAAM,IAAG;AAClC,YAAI,QAAQ,MAAM;AACd,gBAAM,IAAI,YAAY,8CAA8C,KAAK,EAAE;AAAA,QAC/F;AACgB,YAAI,CAAC,MAAM;AACP,gBAAM,IAAI,YAAY,yCAAyC,KAAK,EAAE;AAAA,QAC1F;AACgB,eAAO;AAAA,UACH,GAAG;AAAA,UACH,SAAS;AAAA,YACL;AAAA,YACA,eAAe,EAAE,WAAW,MAAM,KAAM;AAAA,YACxC;AAAA,YACA,SAAS,QAAQ,WAAW;AAAA,UAC/B;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,QACH;AAAA,MACjB;AACY,UAAI,YAAY;AACZ,eAAO;AAAA,UACH,GAAG;AAAA,UACH;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS;AAAA,YACL,GAAG;AAAA,YACH;AAAA,YACA;AAAA,YACA,SAAS,QAAQ,WAAW;AAAA,YAC5B,YAAY,WAAW,IAAI,CAAC,WAAWnU,OAAM;AACzC,oBAAM,EAAE,UAAU,IAAI,MAAM,IAAA0J,KAAI,GAAG,SAAQ,IAAK;AAChD,oBAAM,EAAE,WAAW,MAAM,MAAM,GAAG,OAAM,IAAK,MAAM,CAAE;AACrD,kBAAIA,OAAM,MAAM;AACZ,sBAAM,IAAI,YAAY,mBAAmB,KAAK,gBAAgB1J,EAAC;AAAA,EAAS,IAAI,QAAQ,CAAC,EAAE;AAAA,cACvH;AAC4B,kBAAI,QAAQ,MAAM;AACd,sBAAM,IAAI,YAAY,mBAAmB,KAAK,gBAAgBA,EAAC;AAAA,EAAW,IAAI,QAAQ,CAAC,EAAE;AAAA,cACzH;AAC4B,kBAAI,QAAQ,MAAM;AACd,sBAAM,IAAI,YAAY,mBAAmB,KAAK,gBAAgBA,EAAC;AAAA,EAAoB,IAAI,QAAQ,CAAC,EAAE;AAAA,cAClI;AAC4B,kBAAI,QAAQ,MAAM;AACd,sBAAM,IAAI,YAAY,mBAAmB,KAAK,gBAAgBA,EAAC;AAAA,EAAyB,IAAI,QAAQ,CAAC,EAAE;AAAA,cACvI;AAC4B,qBAAO,EAAE,GAAG,UAAU,IAAA0J,KAAI,MAAM,UAAU,EAAE,GAAG,QAAQ,MAAM,WAAW,KAAI,EAAI;AAAA,YAC5G,CAAyB;AAAA,UACJ;AAAA,QACJ;AAAA,MACjB;AACY,aAAO;AAAA,QACH,GAAG;AAAA,QACH,SAAS,EAAE,GAAG,aAAa,SAAS,MAAM,SAAS,QAAQ,WAAW,KAAM;AAAA,QAC5E;AAAA,QACA;AAAA,QACA;AAAA,MACH;AAAA,IACb,CAAS;AAAA,IACD;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,GAAI,qBAAqB,EAAE,mBAAoB,IAAG;EACrD;AACD,SAAO,yBAAyB,YAAY,MAAM;AACtD;AACA,SAAS,IAAItJ,IAAG;AACZ,SAAO,KAAK,UAAUA,EAAC;AAC3B;AASA,SAAS,YAAY6B,KAAI;AAAA;AChflB,MAAM,sCAAsC,qBAAqB;AAAA,EACpE,OAAO,mBAAmB,QAAQ;AAC9B,UAAM,SAAS,IAAI,8BAA8B,IAAI;AACrD,WAAO,KAAK,MAAM,OAAO,oBAAoB,MAAM,CAAC;AACpD,WAAO;AAAA,EACf;AAAA;AAAA,EAEI,OAAO,aAAayG,SAAQ,QAAQ,SAAS;AACzC,UAAM,SAAS,IAAI,8BAA8B,IAAI;AACrD,UAAM,OAAO;AAAA,MACT,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,eAAgB;AAAA,IAChF;AACD,WAAO,KAAK,MAAM,OAAO,cAAcA,SAAQ,QAAQ,IAAI,CAAC;AAC5D,WAAO;AAAA,EACf;AAAA,EACI,OAAO,SAASA,SAAQ,QAAQ,SAAS;AACrC,UAAM,SAAS,IAAI;AAAA;AAAA,MAEnB;AAAA,IAAM;AACN,UAAM,OAAO;AAAA,MACT,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,WAAY;AAAA,IAC5E;AACD,WAAO,KAAK,MAAM,OAAO,UAAUA,SAAQ,QAAQ,IAAI,CAAC;AACxD,WAAO;AAAA,EACf;AACA;oBClBO,MAAM8J,qBAAoB,YAAY;AAAA,EACzC,MAAM,MAAM,SAAS;AACjB,uBAAmB,KAAK,KAAK;AAC7B,WAAO,KAAK,QAAQ,KAAK,YACpB,OAAO,MAAM;AAAA,MACd,GAAG;AAAA,MACH,SAAS;AAAA,QACL,GAAG,mCAAS;AAAA,QACZ,6BAA6B;AAAA,MAChC;AAAA,IACJ,CAAA,EACI,YAAY,CAAC,eAAe,oBAAoB,YAAY,IAAI,CAAC;AAAA,EAC9E;AAAA,EACI,aAAa,MAAM,SAAS;AACxB,QAAI,KAAK,QAAQ;AACb,aAAO,8BAA8B,aAAa,KAAK,SAAS,MAAM,OAAO;AAAA,IACzF;AACQ,WAAO,qBAAqB,aAAa,KAAK,SAAS,MAAM,OAAO;AAAA,EAC5E;AAAA,EACI,SAAS,MAAM,SAAS;AACpB,QAAI,KAAK,QAAQ;AACb,aAAO,8BAA8B,SAAS,KAAK,SAAS,MAAM,OAAO;AAAA,IACrF;AACQ,WAAO,qBAAqB,SAAS,KAAK,SAAS,MAAM,OAAO;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,MAAM,SAAS;AAClB,WAAO,qBAAqB,qBAAqB,KAAK,SAAS,MAAM,OAAO;AAAA,EACpF;AACA;ACtCO,MAAMD,cAAa,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,cAAc,IAAID,cAA2B,KAAK,OAAO;AAAA,EACtE;AACA;AAAA,CACC,SAAUC,OAAM;AACb,EAAAA,MAAK,cAAcD;AACvB,GAAGC,UAASA,QAAO,CAAA,EAAG;ACTf,MAAM,iBAAiB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUtC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,sBAAsB;AAAA,MAC3C;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AACA;ACfO,MAAM,iBAAiB,YAAY;AAAA,EACtC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,WAAW,IAAI6B,SAAqB,KAAK,OAAO;AAAA,EAC7D;AACA;AACA,SAAS,WAAW;ACVpB,IAAI,yBAAkE,SAAU,UAAU,OAAOtM,OAAMqD,IAAG;AACtG,MAAIrD,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAOrD,UAAS,MAAMqD,KAAIrD,UAAS,MAAMqD,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,yBAAkE,SAAU,UAAU,OAAO,OAAOrD,OAAMqD,IAAG;AAC7G,MAAIrD,UAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAIA,UAAS,OAAO,CAACqD,GAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQrD,UAAS,MAAMqD,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAI,4BAA4B,yBAAyB,mCAAmC,mCAAmC,kCAAkC,2BAA2B,sCAAsC,iCAAiC,uCAAuC,kCAAkC,+BAA+B,qCAAqC,yCAAyC,2BAA2B,6BAA6B,gCAAgC,gCAAgC,8BAA8B,oCAAoC,oCAAoC,oCAAoC;AAKprB,MAAM,wBAAwB,YAAY;AAAA,EAC7C,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,+BAA2B,IAAI,IAAI;AAEnC,4BAAwB,IAAI,MAAM,EAAE;AAGpC,sCAAkC,IAAI,MAAM,EAAE;AAC9C,sCAAkC,IAAI,MAAM,EAAE;AAC9C,qCAAiC,IAAI,MAAM,MAAM;AACjD,8BAA0B,IAAI,MAAM,MAAM;AAC1C,yCAAqC,IAAI,MAAM,MAAM;AACrD,oCAAgC,IAAI,MAAM,MAAM;AAChD,0CAAsC,IAAI,MAAM,MAAM;AACtD,qCAAiC,IAAI,MAAM,MAAM;AAEjD,kCAA8B,IAAI,MAAM,MAAM;AAC9C,wCAAoC,IAAI,MAAM,MAAM;AACpD,4CAAwC,IAAI,MAAM,MAAM;AAAA,EAChE;AAAA,EACI,EAAE,0BAA0B,oBAAI,WAAW,oCAAoC,oBAAI,QAAS,GAAE,oCAAoC,oBAAI,QAAS,GAAE,mCAAmC,oBAAI,QAAO,GAAI,4BAA4B,oBAAI,QAAO,GAAI,uCAAuC,oBAAI,WAAW,kCAAkC,oBAAI,QAAS,GAAE,wCAAwC,oBAAI,QAAS,GAAE,mCAAmC,oBAAI,QAAO,GAAI,gCAAgC,oBAAI,QAAO,GAAI,sCAAsC,oBAAI,WAAW,0CAA0C,oBAAI,WAAW,6BAA6B,oBAAI,QAAS,GAAE,OAAO,kBAAkB;AAC5pB,UAAM,YAAY,CAAE;AACpB,UAAM,YAAY,CAAE;AACpB,QAAI,OAAO;AAEX,SAAK,GAAG,SAAS,CAAC,UAAU;AACxB,YAAM,SAAS,UAAU,MAAO;AAChC,UAAI,QAAQ;AACR,eAAO,QAAQ,KAAK;AAAA,MACpC,OACiB;AACD,kBAAU,KAAK,KAAK;AAAA,MACpC;AAAA,IACA,CAAS;AACD,SAAK,GAAG,OAAO,MAAM;AACjB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,QAAQ,MAAS;AAAA,MACxC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,SAAK,GAAG,SAAS,CAAC,QAAQ;AACtB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,OAAO,GAAG;AAAA,MACjC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,SAAK,GAAG,SAAS,CAAC,QAAQ;AACtB,aAAO;AACP,iBAAW,UAAU,WAAW;AAC5B,eAAO,OAAO,GAAG;AAAA,MACjC;AACY,gBAAU,SAAS;AAAA,IAC/B,CAAS;AACD,WAAO;AAAA,MACH,MAAM,YAAY;AACd,YAAI,CAAC,UAAU,QAAQ;AACnB,cAAI,MAAM;AACN,mBAAO,EAAE,OAAO,QAAW,MAAM,KAAM;AAAA,UAC/D;AACoB,iBAAO,IAAI,QAAQ,CAAC,SAAS,WAAW,UAAU,KAAK,EAAE,SAAS,QAAQ,CAAC,EAAE,KAAK,CAACgJ,WAAWA,SAAQ,EAAE,OAAOA,QAAO,MAAM,MAAK,IAAK,EAAE,OAAO,QAAW,MAAM,KAAM,CAAC;AAAA,QAC3L;AACgB,cAAM,QAAQ,UAAU,MAAO;AAC/B,eAAO,EAAE,OAAO,OAAO,MAAM,MAAO;AAAA,MACvC;AAAA,MACD,QAAQ,YAAY;AAChB,aAAK,MAAO;AACZ,eAAO,EAAE,OAAO,QAAW,MAAM,KAAM;AAAA,MAC1C;AAAA,IACJ;AAAA,EACT;AAAA,EACI,OAAO,mBAAmB,QAAQ;AAC9B,UAAM,SAAS,IAAI,gBAAiB;AACpC,WAAO,KAAK,MAAM,OAAO,oBAAoB,MAAM,CAAC;AACpD,WAAO;AAAA,EACf;AAAA,EACI,MAAM,oBAAoB,gBAAgB,SAAS;;AAC/C,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ,SAAK,WAAY;AACjB,UAAM,SAAS,OAAO,mBAAmB,gBAAgB,KAAK,UAAU;AACxE,qBAAiB,SAAS,QAAQ;AAC9B,6BAAuB,MAAM,4BAA4B,KAAK,yBAAyB,EAAE,KAAK,MAAM,KAAK;AAAA,IACrH;AACQ,SAAI1T,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,QAAQ,uBAAuB,MAAM,4BAA4B,KAAK,2BAA2B,EAAE,KAAK,IAAI,CAAC;AAAA,EACjI;AAAA,EACI,mBAAmB;AACf,UAAM,SAAS,IAAI,OAAO,KAAK,OAAO,aAAa,EAAE,KAAK,IAAI,GAAG,KAAK,UAAU;AAChF,WAAO,OAAO,iBAAkB;AAAA,EACxC;AAAA,EACI,OAAO,0BAA0B,UAAU,OAAO,MAAM,QAAQ,SAAS;AACrE,UAAM,SAAS,IAAI,gBAAiB;AACpC,WAAO,KAAK,MAAM,OAAO,wBAAwB,UAAU,OAAO,MAAM,QAAQ;AAAA,MAC5E,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,SAAU;AAAA,IACnF,CAAS,CAAC;AACF,WAAO;AAAA,EACf;AAAA,EACI,MAAM,2BAA2B,KAAK,UAAU,OAAO,QAAQ,SAAS;;AACpE,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ,UAAM,OAAO,EAAE,GAAG,QAAQ,QAAQ,KAAM;AACxC,UAAM,SAAS,MAAM,IAAI,kBAAkB,UAAU,OAAO,MAAM;AAAA,MAC9D,GAAG;AAAA,MACH,QAAQ,KAAK,WAAW;AAAA,IACpC,CAAS;AACD,SAAK,WAAY;AACjB,qBAAiB,SAAS,QAAQ;AAC9B,6BAAuB,MAAM,4BAA4B,KAAK,yBAAyB,EAAE,KAAK,MAAM,KAAK;AAAA,IACrH;AACQ,SAAIA,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,QAAQ,uBAAuB,MAAM,4BAA4B,KAAK,2BAA2B,EAAE,KAAK,IAAI,CAAC;AAAA,EACjI;AAAA,EACI,OAAO,4BAA4B,QAAQ,QAAQ,SAAS;AACxD,UAAM,SAAS,IAAI,gBAAiB;AACpC,WAAO,KAAK,MAAM,OAAO,uBAAuB,QAAQ,QAAQ;AAAA,MAC5D,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,SAAU;AAAA,IACnF,CAAS,CAAC;AACF,WAAO;AAAA,EACf;AAAA,EACI,OAAO,sBAAsB,UAAU,MAAM,QAAQ,SAAS;AAC1D,UAAM,SAAS,IAAI,gBAAiB;AACpC,WAAO,KAAK,MAAM,OAAO,oBAAoB,UAAU,MAAM,QAAQ;AAAA,MACjE,GAAG;AAAA,MACH,SAAS,EAAE,GAAG,mCAAS,SAAS,6BAA6B,SAAU;AAAA,IACnF,CAAS,CAAC;AACF,WAAO;AAAA,EACf;AAAA,EACI,eAAe;AACX,WAAO,uBAAuB,MAAM,+BAA+B,GAAG;AAAA,EAC9E;AAAA,EACI,aAAa;AACT,WAAO,uBAAuB,MAAM,qCAAqC,GAAG;AAAA,EACpF;AAAA,EACI,yBAAyB;AACrB,WAAO,uBAAuB,MAAM,kCAAkC,GAAG;AAAA,EACjF;AAAA,EACI,yBAAyB;AACrB,WAAO,uBAAuB,MAAM,yCAAyC,GAAG;AAAA,EACxF;AAAA,EACI,MAAM,gBAAgB;AAClB,UAAM,KAAK,KAAM;AACjB,WAAO,OAAO,OAAO,uBAAuB,MAAM,mCAAmC,GAAG,CAAC;AAAA,EACjG;AAAA,EACI,MAAM,gBAAgB;AAClB,UAAM,KAAK,KAAM;AACjB,WAAO,OAAO,OAAO,uBAAuB,MAAM,mCAAmC,GAAG,CAAC;AAAA,EACjG;AAAA,EACI,MAAM,WAAW;AACb,UAAM,KAAK,KAAM;AACjB,QAAI,CAAC,uBAAuB,MAAM,2BAA2B,GAAG;AAC5D,YAAM,MAAM,6BAA6B;AAC7C,WAAO,uBAAuB,MAAM,2BAA2B,GAAG;AAAA,EAC1E;AAAA,EACI,MAAM,6BAA6B,QAAQ,QAAQ,SAAS;;AACxD,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ,UAAM,OAAO,EAAE,GAAG,QAAQ,QAAQ,KAAM;AACxC,UAAM,SAAS,MAAM,OAAO,aAAa,MAAM,EAAE,GAAG,SAAS,QAAQ,KAAK,WAAW,OAAM,CAAE;AAC7F,SAAK,WAAY;AACjB,qBAAiB,SAAS,QAAQ;AAC9B,6BAAuB,MAAM,4BAA4B,KAAK,yBAAyB,EAAE,KAAK,MAAM,KAAK;AAAA,IACrH;AACQ,SAAIA,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,QAAQ,uBAAuB,MAAM,4BAA4B,KAAK,2BAA2B,EAAE,KAAK,IAAI,CAAC;AAAA,EACjI;AAAA,EACI,MAAM,uBAAuB,KAAK,UAAU,QAAQ,SAAS;;AACzD,UAAM,SAAS,mCAAS;AACxB,QAAI,QAAQ;AACR,UAAI,OAAO;AACP,aAAK,WAAW,MAAO;AAC3B,aAAO,iBAAiB,SAAS,MAAM,KAAK,WAAW,OAAO;AAAA,IAC1E;AACQ,UAAM,OAAO,EAAE,GAAG,QAAQ,QAAQ,KAAM;AACxC,UAAM,SAAS,MAAM,IAAI,OAAO,UAAU,MAAM,EAAE,GAAG,SAAS,QAAQ,KAAK,WAAW,OAAM,CAAE;AAC9F,SAAK,WAAY;AACjB,qBAAiB,SAAS,QAAQ;AAC9B,6BAAuB,MAAM,4BAA4B,KAAK,yBAAyB,EAAE,KAAK,MAAM,KAAK;AAAA,IACrH;AACQ,SAAIA,MAAA,OAAO,WAAW,WAAlB,gBAAAA,IAA0B,SAAS;AACnC,YAAM,IAAI,kBAAmB;AAAA,IACzC;AACQ,WAAO,KAAK,QAAQ,uBAAuB,MAAM,4BAA4B,KAAK,2BAA2B,EAAE,KAAK,IAAI,CAAC;AAAA,EACjI;AAAA,EACI,OAAO,gBAAgB,KAAK,OAAO;AAC/B,eAAW,CAAC,KAAK,UAAU,KAAK,OAAO,QAAQ,KAAK,GAAG;AACnD,UAAI,CAAC,IAAI,eAAe,GAAG,GAAG;AAC1B,YAAI,GAAG,IAAI;AACX;AAAA,MAChB;AACY,UAAI,WAAW,IAAI,GAAG;AACtB,UAAI,aAAa,QAAQ,aAAa,QAAW;AAC7C,YAAI,GAAG,IAAI;AACX;AAAA,MAChB;AAEY,UAAI,QAAQ,WAAW,QAAQ,QAAQ;AACnC,YAAI,GAAG,IAAI;AACX;AAAA,MAChB;AAEY,UAAI,OAAO,aAAa,YAAY,OAAO,eAAe,UAAU;AAChE,oBAAY;AAAA,MAC5B,WACqB,OAAO,aAAa,YAAY,OAAO,eAAe,UAAU;AACrE,oBAAY;AAAA,MAC5B,WACqB4T,MAAW,QAAQ,KAAKA,MAAW,UAAU,GAAG;AACrD,mBAAW,KAAK,gBAAgB,UAAU,UAAU;AAAA,MACpE,WACqB,MAAM,QAAQ,QAAQ,KAAK,MAAM,QAAQ,UAAU,GAAG;AAC3D,YAAI,SAAS,MAAM,CAACjU,OAAM,OAAOA,OAAM,YAAY,OAAOA,OAAM,QAAQ,GAAG;AACvE,mBAAS,KAAK,GAAG,UAAU;AAC3B;AAAA,QACpB;AACgB,mBAAW,cAAc,YAAY;AACjC,cAAI,CAACiU,MAAW,UAAU,GAAG;AACzB,kBAAM,IAAI,MAAM,uDAAuD,UAAU,EAAE;AAAA,UAC3G;AACoB,gBAAM,QAAQ,WAAW,OAAO;AAChC,cAAI,SAAS,MAAM;AACf,oBAAQ,MAAM,UAAU;AACxB,kBAAM,IAAI,MAAM,wDAAwD;AAAA,UAChG;AACoB,cAAI,OAAO,UAAU,UAAU;AAC3B,kBAAM,IAAI,MAAM,wEAAwE,KAAK,EAAE;AAAA,UACvH;AACoB,gBAAM,WAAW,SAAS,KAAK;AAC/B,cAAI,YAAY,MAAM;AAClB,qBAAS,KAAK,UAAU;AAAA,UAChD,OACyB;AACD,qBAAS,KAAK,IAAI,KAAK,gBAAgB,UAAU,UAAU;AAAA,UACnF;AAAA,QACA;AACgB;AAAA,MAChB,OACiB;AACD,cAAM,MAAM,0BAA0B,GAAG,iBAAiB,UAAU,eAAe,QAAQ,EAAE;AAAA,MAC7G;AACY,UAAI,GAAG,IAAI;AAAA,IACvB;AACQ,WAAO;AAAA,EACf;AAAA,EACI,QAAQ,KAAK;AACT,WAAO;AAAA,EACf;AAAA,EACI,MAAM,uBAAuB,QAAQ,QAAQ,SAAS;AAClD,WAAO,MAAM,KAAK,6BAA6B,QAAQ,QAAQ,OAAO;AAAA,EAC9E;AAAA,EACI,MAAM,oBAAoB,UAAU,MAAM,QAAQ,SAAS;AACvD,WAAO,MAAM,KAAK,uBAAuB,MAAM,UAAU,QAAQ,OAAO;AAAA,EAChF;AAAA,EACI,MAAM,wBAAwB,UAAU,OAAO,MAAM,QAAQ,SAAS;AAClE,WAAO,MAAM,KAAK,2BAA2B,MAAM,UAAU,OAAO,QAAQ,OAAO;AAAA,EAC3F;AACA;AACA,4BAA4B,SAASC,2BAA0B,OAAO;AAClE,MAAI,KAAK;AACL;AACJ,yBAAuB,MAAM,+BAA+B,OAAO,GAAG;AACtE,yBAAuB,MAAM,4BAA4B,KAAK,4BAA4B,EAAE,KAAK,MAAM,KAAK;AAC5G,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AAED;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,4BAA4B,KAAK,0BAA0B,EAAE,KAAK,MAAM,KAAK;AAC1G;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,4BAA4B,KAAK,8BAA8B,EAAE,KAAK,MAAM,KAAK;AAC9G;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,4BAA4B,KAAK,8BAA8B,EAAE,KAAK,MAAM,KAAK;AAC9G;AAAA,IACJ,KAAK;AAED,YAAM,IAAI,MAAM,qFAAqF;AAAA,EACjH;AACA,GAAG,8BAA8B,SAASC,+BAA8B;AACpE,MAAI,KAAK,OAAO;AACZ,UAAM,IAAI,YAAY,yCAAyC;AAAA,EACvE;AACI,MAAI,CAAC,uBAAuB,MAAM,2BAA2B,GAAG;AAC5D,UAAM,MAAM,iCAAiC;AACjD,SAAO,uBAAuB,MAAM,2BAA2B,GAAG;AACtE,GAAG,iCAAiC,SAASC,gCAA+B,OAAO;AAC/E,QAAM,CAAC,oBAAoB,UAAU,IAAI,uBAAuB,MAAM,4BAA4B,KAAK,kCAAkC,EAAE,KAAK,MAAM,OAAO,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAChO,yBAAuB,MAAM,kCAAkC,oBAAoB,GAAG;AACtF,yBAAuB,MAAM,mCAAmC,GAAG,EAAE,mBAAmB,EAAE,IAAI;AAC9F,aAAW,WAAW,YAAY;AAC9B,UAAM,kBAAkB,mBAAmB,QAAQ,QAAQ,KAAK;AAChE,SAAI,mDAAiB,SAAQ,QAAQ;AACjC,WAAK,MAAM,eAAe,gBAAgB,IAAI;AAAA,IAC1D;AAAA,EACA;AACI,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AACD,WAAK,MAAM,kBAAkB,MAAM,IAAI;AACvC;AAAA,IACJ,KAAK;AACD;AAAA,IACJ,KAAK;AACD,WAAK,MAAM,gBAAgB,MAAM,KAAK,OAAO,kBAAkB;AAC/D,UAAI,MAAM,KAAK,MAAM,SAAS;AAC1B,mBAAW,WAAW,MAAM,KAAK,MAAM,SAAS;AAE5C,cAAI,QAAQ,QAAQ,UAAU,QAAQ,MAAM;AACxC,gBAAI,YAAY,QAAQ;AACxB,gBAAI,WAAW,mBAAmB,QAAQ,QAAQ,KAAK;AACvD,gBAAI,YAAY,SAAS,QAAQ,QAAQ;AACrC,mBAAK,MAAM,aAAa,WAAW,SAAS,IAAI;AAAA,YAC5E,OAC6B;AACD,oBAAM,MAAM,qEAAqE;AAAA,YAC7G;AAAA,UACA;AACoB,cAAI,QAAQ,SAAS,uBAAuB,MAAM,sCAAsC,GAAG,GAAG;AAE1F,gBAAI,uBAAuB,MAAM,iCAAiC,GAAG,GAAG;AACpE,sBAAQ,uBAAuB,MAAM,iCAAiC,GAAG,EAAE,MAAI;AAAA,gBAC3E,KAAK;AACD,uBAAK,MAAM,YAAY,uBAAuB,MAAM,iCAAiC,GAAG,EAAE,MAAM,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AACnK;AAAA,gBACJ,KAAK;AACD,uBAAK,MAAM,iBAAiB,uBAAuB,MAAM,iCAAiC,GAAG,EAAE,YAAY,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC9K;AAAA,cACpC;AAAA,YACA;AACwB,mCAAuB,MAAM,sCAAsC,QAAQ,OAAO,GAAG;AAAA,UAC7G;AACoB,iCAAuB,MAAM,iCAAiC,mBAAmB,QAAQ,QAAQ,KAAK,GAAG,GAAG;AAAA,QAChI;AAAA,MACA;AACY;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAED,UAAI,uBAAuB,MAAM,sCAAsC,GAAG,MAAM,QAAW;AACvF,cAAM,iBAAiB,MAAM,KAAK,QAAQ,uBAAuB,MAAM,sCAAsC,GAAG,CAAC;AACjH,YAAI,gBAAgB;AAChB,kBAAQ,eAAe,MAAI;AAAA,YACvB,KAAK;AACD,mBAAK,MAAM,iBAAiB,eAAe,YAAY,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC1H;AAAA,YACJ,KAAK;AACD,mBAAK,MAAM,YAAY,eAAe,MAAM,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC/G;AAAA,UAC5B;AAAA,QACA;AAAA,MACA;AACY,UAAI,uBAAuB,MAAM,kCAAkC,GAAG,GAAG;AACrE,aAAK,MAAM,eAAe,MAAM,IAAI;AAAA,MACpD;AACY,6BAAuB,MAAM,kCAAkC,QAAW,GAAG;AAAA,EACzF;AACA,GAAG,iCAAiC,SAASC,gCAA+B,OAAO;AAC/E,QAAM,qBAAqB,uBAAuB,MAAM,4BAA4B,KAAK,kCAAkC,EAAE,KAAK,MAAM,KAAK;AAC7I,yBAAuB,MAAM,yCAAyC,oBAAoB,GAAG;AAC7F,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AACD,WAAK,MAAM,kBAAkB,MAAM,IAAI;AACvC;AAAA,IACJ,KAAK;AACD,YAAM,QAAQ,MAAM,KAAK;AACzB,UAAI,MAAM,gBACN,MAAM,aAAa,QAAQ,gBAC3B,MAAM,aAAa,cACnB,mBAAmB,aAAa,QAAQ,cAAc;AACtD,mBAAW,YAAY,MAAM,aAAa,YAAY;AAClD,cAAI,SAAS,SAAS,uBAAuB,MAAM,uCAAuC,GAAG,GAAG;AAC5F,iBAAK,MAAM,iBAAiB,UAAU,mBAAmB,aAAa,WAAW,SAAS,KAAK,CAAC;AAAA,UACxH,OACyB;AACD,gBAAI,uBAAuB,MAAM,kCAAkC,GAAG,GAAG;AACrE,mBAAK,MAAM,gBAAgB,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAAA,YAC1H;AACwB,mCAAuB,MAAM,uCAAuC,SAAS,OAAO,GAAG;AACvF,mCAAuB,MAAM,kCAAkC,mBAAmB,aAAa,WAAW,SAAS,KAAK,GAAG,GAAG;AAC9H,gBAAI,uBAAuB,MAAM,kCAAkC,GAAG;AAClE,mBAAK,MAAM,mBAAmB,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAAA,UAC7H;AAAA,QACA;AAAA,MACA;AACY,WAAK,MAAM,gBAAgB,MAAM,KAAK,OAAO,kBAAkB;AAC/D;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,yCAAyC,QAAW,GAAG;AACpF,YAAM,UAAU,MAAM,KAAK;AAC3B,UAAI,QAAQ,QAAQ,cAAc;AAC9B,YAAI,uBAAuB,MAAM,kCAAkC,GAAG,GAAG;AACrE,eAAK,MAAM,gBAAgB,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC9F,iCAAuB,MAAM,kCAAkC,QAAW,GAAG;AAAA,QACjG;AAAA,MACA;AACY,WAAK,MAAM,eAAe,MAAM,MAAM,kBAAkB;AACxD;AAAA,EAGZ;AACA,GAAG,+BAA+B,SAASC,8BAA6B,OAAO;AAC3E,yBAAuB,MAAM,yBAAyB,GAAG,EAAE,KAAK,KAAK;AACrE,OAAK,MAAM,SAAS,KAAK;AAC7B,GAAG,qCAAqC,SAASC,oCAAmC,OAAO;AACvF,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AACD,6BAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE,IAAI,MAAM;AAC5F,aAAO,MAAM;AAAA,IACjB,KAAK;AACD,UAAI,WAAW,uBAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE;AACjG,UAAI,CAAC,UAAU;AACX,cAAM,MAAM,uDAAuD;AAAA,MACnF;AACY,UAAI,OAAO,MAAM;AACjB,UAAI,KAAK,OAAO;AACZ,cAAM,cAAc,gBAAgB,gBAAgB,UAAU,KAAK,KAAK;AACxE,+BAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE,IAAI;AAAA,MACtG;AACY,aAAO,uBAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE;AAAA,IAC7F,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE,IAAI,MAAM;AAC5F;AAAA,EACZ;AACI,MAAI,uBAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE;AAClF,WAAO,uBAAuB,MAAM,mCAAmC,GAAG,EAAE,MAAM,KAAK,EAAE;AAC7F,QAAM,IAAI,MAAM,uBAAuB;AAC3C,GAAG,qCAAqC,SAASC,oCAAmC,OAAO,UAAU;AACjG,MAAI,aAAa,CAAE;AACnB,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AAED,aAAO,CAAC,MAAM,MAAM,UAAU;AAAA,IAClC,KAAK;AACD,UAAI,CAAC,UAAU;AACX,cAAM,MAAM,wFAAwF;AAAA,MACpH;AACY,UAAI,OAAO,MAAM;AAEjB,UAAI,KAAK,MAAM,SAAS;AACpB,mBAAW,kBAAkB,KAAK,MAAM,SAAS;AAC7C,cAAI,eAAe,SAAS,SAAS,SAAS;AAC1C,gBAAI,iBAAiB,SAAS,QAAQ,eAAe,KAAK;AAC1D,qBAAS,QAAQ,eAAe,KAAK,IAAI,uBAAuB,MAAM,4BAA4B,KAAK,kCAAkC,EAAE,KAAK,MAAM,gBAAgB,cAAc;AAAA,UAC5M,OACyB;AACD,qBAAS,QAAQ,eAAe,KAAK,IAAI;AAEzC,uBAAW,KAAK,cAAc;AAAA,UACtD;AAAA,QACA;AAAA,MACA;AACY,aAAO,CAAC,UAAU,UAAU;AAAA,IAChC,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAED,UAAI,UAAU;AACV,eAAO,CAAC,UAAU,UAAU;AAAA,MAC5C,OACiB;AACD,cAAM,MAAM,yDAAyD;AAAA,MACrF;AAAA,EACA;AACI,QAAM,MAAM,yCAAyC;AACzD,GAAG,qCAAqC,SAASC,oCAAmC,gBAAgB,gBAAgB;AAChH,SAAO,gBAAgB,gBAAgB,gBAAgB,cAAc;AACzE,GAAG,6BAA6B,SAASC,4BAA2B,OAAO;AACvE,yBAAuB,MAAM,qCAAqC,MAAM,MAAM,GAAG;AACjF,UAAQ,MAAM,OAAK;AAAA,IACf,KAAK;AACD;AAAA,IACJ,KAAK;AACD;AAAA,IACJ,KAAK;AACD;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,6BAAuB,MAAM,2BAA2B,MAAM,MAAM,GAAG;AACvE,UAAI,uBAAuB,MAAM,kCAAkC,GAAG,GAAG;AACrE,aAAK,MAAM,gBAAgB,uBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC9F,+BAAuB,MAAM,kCAAkC,QAAW,GAAG;AAAA,MAC7F;AACY;AAAA,EAGZ;AACA;ACpiBO,MAAM,iBAAiB,YAAY;AAAA;AAAA;AAAA;AAAA,EAItC,OAAO,UAAU,MAAM,SAAS;AAC5B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,aAAa;AAAA,MACtD;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,UAAU,WAAW,SAAS;AACnC,WAAO,KAAK,QAAQ,IAAI,YAAY,QAAQ,aAAa,SAAS,IAAI;AAAA,MAClE,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,WAAW,MAAM,SAAS;AACvC,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,aAAa,SAAS,IAAI;AAAA,MACnE;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,UAAU,QAAQ,CAAA,GAAI,SAAS;AAChC,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,UAAU,CAAA,GAAI,KAAK;AAAA,IAChD;AACQ,WAAO,KAAK,QAAQ,WAAW,YAAY,QAAQ,aAAa,cAAc;AAAA,MAC1E;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU,WAAW,SAAS;AAC9B,WAAO,KAAK,QAAQ,OAAO,YAAY,QAAQ,aAAa,SAAS,IAAI;AAAA,MACrE,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AACA;AACO,MAAM,qBAAqB,WAAW;AAC7C;AACA,SAAS,eAAe;ACpDjB,MAAM,cAAc,YAAY;AAAA,EACnC,SAAS,UAAU,OAAO,QAAQ,QAAQ,CAAE,GAAE,SAAS;AACnD,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,SAAS,UAAU,OAAO,QAAQ,CAAE,GAAE,KAAK;AAAA,IACnE;AACQ,WAAO,KAAK,QAAQ,IAAI,YAAY,QAAQ,SAAS,KAAK,UAAU,MAAM,IAAI;AAAA,MAC1E;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,UAAU,OAAO,QAAQ,CAAA,GAAI,SAAS;AACvC,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,UAAU,OAAO,CAAA,GAAI,KAAK;AAAA,IACvD;AACQ,WAAO,KAAK,QAAQ,WAAW,YAAY,QAAQ,SAAS,KAAK,UAAU,cAAc;AAAA,MACrF;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AACA;AACO,MAAM,qBAAqB,WAAW;AAC7C;AACA,MAAM,eAAe;ACpBd,MAAM,aAAa,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,QAAQ,IAAIC,MAAe,KAAK,OAAO;AAAA,EACpD;AAAA,EACI,OAAO,UAAU,QAAQ,SAAS;AAC9B,UAAM,EAAE,SAAS,GAAG,KAAI,IAAK;AAC7B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAAA,MAClD,OAAO,EAAE,QAAS;AAAA,MAClB;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,MAChE,QAAQ,OAAO,UAAU;AAAA,IACrC,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,UAAU,OAAO,SAAS;AAC/B,WAAO,KAAK,QAAQ,IAAI,YAAY,QAAQ,SAAS,KAAK,IAAI;AAAA,MAC1D,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,OAAO,MAAM,SAAS;AACnC,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,SAAS,KAAK,IAAI;AAAA,MAC3D;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,UAAU,QAAQ,CAAA,GAAI,SAAS;AAChC,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,UAAU,CAAA,GAAI,KAAK;AAAA,IAChD;AACQ,WAAO,KAAK,QAAQ,WAAW,YAAY,QAAQ,SAAS,UAAU;AAAA,MAClE;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,OAAO,SAAS;AAC7B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,SAAS,KAAK,WAAW;AAAA,MAClE,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,cAAc,UAAU,MAAM,SAAS;AACzC,UAAM,MAAM,MAAM,KAAK,OAAO,UAAU,MAAM,OAAO;AACrD,WAAO,MAAM,KAAK,KAAK,UAAU,IAAI,IAAI,OAAO;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,gBAAgB,UAAU,MAAM,SAAS;AACrC,WAAO,gBAAgB,sBAAsB,UAAU,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM,OAAO;AAAA,EAC5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,KAAK,UAAU,OAAO,SAAS;AACjC,UAAM,UAAU,EAAE,GAAG,mCAAS,SAAS,2BAA2B,OAAQ;AAC1E,QAAI,mCAAS,gBAAgB;AACzB,cAAQ,kCAAkC,IAAI,QAAQ,eAAe,SAAU;AAAA,IAC3F;AACQ,WAAO,MAAM;AACT,YAAM,EAAE,MAAM,KAAK,SAAQ,IAAK,MAAM,KAAK,SAAS,UAAU,OAAO;AAAA,QACjE,GAAG;AAAA,QACH,SAAS,EAAE,GAAG,mCAAS,SAAS,GAAG,QAAS;AAAA,MAC/C,CAAA,EAAE,aAAc;AACjB,cAAQ,IAAI,QAAM;AAAA;AAAA,QAEd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,cAAI,gBAAgB;AACpB,cAAI,mCAAS,gBAAgB;AACzB,4BAAgB,QAAQ;AAAA,UAChD,OACyB;AACD,kBAAM,iBAAiB,SAAS,QAAQ,IAAI,sBAAsB;AAClE,gBAAI,gBAAgB;AAChB,oBAAM,mBAAmB,SAAS,cAAc;AAChD,kBAAI,CAAC,MAAM,gBAAgB,GAAG;AAC1B,gCAAgB;AAAA,cAChD;AAAA,YACA;AAAA,UACA;AACoB,gBAAM,MAAM,aAAa;AACzB;AAAA;AAAA,QAEJ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,iBAAO;AAAA,MAC3B;AAAA,IACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,MAAM,SAAS;AAC5B,WAAO,gBAAgB,sBAAsB,UAAU,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM,OAAO;AAAA,EAC5G;AAAA,EACI,kBAAkB,UAAU,OAAO,MAAM,SAAS;AAC9C,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,SAAS,KAAK,wBAAwB;AAAA,MAC/E;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,MAChE,QAAQ,KAAK,UAAU;AAAA,IACnC,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,yBAAyB,UAAU,OAAO,MAAM,SAAS;AAC3D,UAAM,MAAM,MAAM,KAAK,kBAAkB,UAAU,OAAO,MAAM,OAAO;AACvE,WAAO,MAAM,KAAK,KAAK,UAAU,IAAI,IAAI,OAAO;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,wBAAwB,UAAU,OAAO,MAAM,SAAS;AACpD,WAAO,gBAAgB,0BAA0B,UAAU,OAAO,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM,OAAO;AAAA,EACvH;AACA;AACO,MAAM,iBAAiB,WAAW;AACzC;AACA,KAAK,WAAW;AAChB,KAAK,QAAQ;AACb,KAAK,eAAe;ACxJb,MAAM,gBAAgB,YAAY;AAAA,EACrC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,OAAO,IAAIC,KAAa,KAAK,OAAO;AACzC,SAAK,WAAW,IAAIC,SAAqB,KAAK,OAAO;AAAA,EAC7D;AAAA,EACI,OAAO,OAAO,CAAE,GAAE,SAAS;AACvB,QAAI,iBAAiB,IAAI,GAAG;AACxB,aAAO,KAAK,OAAO,CAAE,GAAE,IAAI;AAAA,IACvC;AACQ,WAAO,KAAK,QAAQ,KAAK,YAAY;AAAA,MACjC;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,UAAU,SAAS;AACxB,WAAO,KAAK,QAAQ,IAAI,YAAY,QAAQ,IAAI;AAAA,MAC5C,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,MAAM,SAAS;AAC5B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,IAAI;AAAA,MAC7C;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU,SAAS;AACnB,WAAO,KAAK,QAAQ,OAAO,YAAY,QAAQ,IAAI;AAAA,MAC/C,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,aAAa,MAAM,SAAS;AACxB,WAAO,KAAK,QAAQ,KAAK,iBAAiB;AAAA,MACtC;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,MAChE,QAAQ,KAAK,UAAU;AAAA,IACnC,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,iBAAiB,MAAM,SAAS;AAClC,UAAM,MAAM,MAAM,KAAK,aAAa,MAAM,OAAO;AACjD,WAAO,MAAM,KAAK,KAAK,KAAK,IAAI,WAAW,IAAI,IAAI,OAAO;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA,EAII,mBAAmB,MAAM,SAAS;AAC9B,WAAO,gBAAgB,4BAA4B,MAAM,KAAK,QAAQ,KAAK,SAAS,OAAO;AAAA,EACnG;AACA;AACA,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,QAAQ,eAAe;AC5EhB,MAAM,sBAAsB,OAAO,aAAa;AACnD,QAAM,UAAU,MAAM,QAAQ,WAAW,QAAQ;AACjD,QAAM,WAAW,QAAQ,OAAO,CAAC,WAAW,OAAO,WAAW,UAAU;AACxE,MAAI,SAAS,QAAQ;AACjB,eAAW,UAAU,UAAU;AAC3B,cAAQ,MAAM,OAAO,MAAM;AAAA,IACvC;AACQ,UAAM,IAAI,MAAM,GAAG,SAAS,MAAM,2CAA2C;AAAA,EACrF;AAEI,QAAM,SAAS,CAAE;AACjB,aAAW,UAAU,SAAS;AAC1B,QAAI,OAAO,WAAW,aAAa;AAC/B,aAAO,KAAK,OAAO,KAAK;AAAA,IACpC;AAAA,EACA;AACI,SAAO;AACX;cChBO,MAAM,cAAc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnC,OAAO,eAAe,MAAM,SAAS;AACjC,WAAO,KAAK,QAAQ,KAAK,kBAAkB,aAAa,UAAU;AAAA,MAC9D;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,eAAe,QAAQ,SAAS;AACrC,WAAO,KAAK,QAAQ,IAAI,kBAAkB,aAAa,UAAU,MAAM,IAAI;AAAA,MACvE,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,eAAe,QAAQ,CAAA,GAAI,SAAS;AACrC,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,eAAe,CAAA,GAAI,KAAK;AAAA,IACrD;AACQ,WAAO,KAAK,QAAQ,WAAW,kBAAkB,aAAa,UAAU,sBAAsB;AAAA,MAC1F;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,eAAe,QAAQ,SAAS;AAChC,WAAO,KAAK,QAAQ,OAAO,kBAAkB,aAAa,UAAU,MAAM,IAAI;AAAA,MAC1E,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,cAAc,eAAe,MAAM,SAAS;AAC9C,UAAM,OAAO,MAAM,KAAK,OAAO,eAAe,MAAM,OAAO;AAC3D,WAAO,MAAM,KAAK,KAAK,eAAe,KAAK,IAAI,OAAO;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,KAAK,eAAe,QAAQ,SAAS;AACvC,UAAM,UAAU,EAAE,GAAG,mCAAS,SAAS,2BAA2B,OAAQ;AAC1E,QAAI,mCAAS,gBAAgB;AACzB,cAAQ,kCAAkC,IAAI,QAAQ,eAAe,SAAU;AAAA,IAC3F;AACQ,WAAO,MAAM;AACT,YAAM,eAAe,MAAM,KAAK,SAAS,eAAe,QAAQ;AAAA,QAC5D,GAAG;AAAA,QACH;AAAA,MACH,CAAA,EAAE,aAAc;AACjB,YAAM,OAAO,aAAa;AAC1B,cAAQ,KAAK,QAAM;AAAA,QACf,KAAK;AACD,cAAI,gBAAgB;AACpB,cAAI,mCAAS,gBAAgB;AACzB,4BAAgB,QAAQ;AAAA,UAChD,OACyB;AACD,kBAAM,iBAAiB,aAAa,SAAS,QAAQ,IAAI,sBAAsB;AAC/E,gBAAI,gBAAgB;AAChB,oBAAM,mBAAmB,SAAS,cAAc;AAChD,kBAAI,CAAC,MAAM,gBAAgB,GAAG;AAC1B,gCAAgB;AAAA,cAChD;AAAA,YACA;AAAA,UACA;AACoB,gBAAM,MAAM,aAAa;AACzB;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AACD,iBAAO;AAAA,MAC3B;AAAA,IACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,OAAO,eAAe,MAAM,SAAS;AACvC,UAAM,WAAW,MAAM,KAAK,QAAQ,MAAM,OAAO,EAAE,MAAY,SAAS,aAAY,GAAI,OAAO;AAC/F,WAAO,KAAK,OAAO,eAAe,EAAE,SAAS,SAAS,GAAI,GAAE,OAAO;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,cAAc,eAAe,MAAM,SAAS;AAC9C,UAAM,WAAW,MAAM,KAAK,OAAO,eAAe,MAAM,OAAO;AAC/D,WAAO,MAAM,KAAK,KAAK,eAAe,SAAS,IAAI,OAAO;AAAA,EAClE;AACA;AACO,MAAM,6BAA6B,WAAW;AACrD;AACAC,QAAM,uBAAuB;AC7GtB,MAAM,oBAAoB,YAAY;AAAA;AAAA;AAAA;AAAA,EAIzC,OAAO,eAAe,MAAM,SAAS;AACjC,WAAO,KAAK,QAAQ,KAAK,kBAAkB,aAAa,iBAAiB;AAAA,MACrE;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,eAAe,SAAS,SAAS;AACtC,WAAO,KAAK,QAAQ,IAAI,kBAAkB,aAAa,iBAAiB,OAAO,IAAI;AAAA,MAC/E,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,OAAO,eAAe,SAAS,SAAS;AACpC,WAAO,KAAK,QAAQ,KAAK,kBAAkB,aAAa,iBAAiB,OAAO,WAAW;AAAA,MACvF,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,cAAc,eAAe,MAAM,SAAS;AAC9C,UAAM,QAAQ,MAAM,KAAK,OAAO,eAAe,IAAI;AACnD,WAAO,MAAM,KAAK,KAAK,eAAe,MAAM,IAAI,OAAO;AAAA,EAC/D;AAAA,EACI,UAAU,eAAe,SAAS,QAAQ,CAAA,GAAI,SAAS;AACnD,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,UAAU,eAAe,SAAS,CAAA,GAAI,KAAK;AAAA,IACnE;AACQ,WAAO,KAAK,QAAQ,WAAW,kBAAkB,aAAa,iBAAiB,OAAO,UAAU,sBAAsB,EAAE,OAAO,GAAG,SAAS,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAO,GAAI;AAAA,EACrN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,MAAM,KAAK,eAAe,SAAS,SAAS;AACxC,UAAM,UAAU,EAAE,GAAG,mCAAS,SAAS,2BAA2B,OAAQ;AAC1E,QAAI,mCAAS,gBAAgB;AACzB,cAAQ,kCAAkC,IAAI,QAAQ,eAAe,SAAU;AAAA,IAC3F;AACQ,WAAO,MAAM;AACT,YAAM,EAAE,MAAM,OAAO,SAAQ,IAAK,MAAM,KAAK,SAAS,eAAe,SAAS;AAAA,QAC1E,GAAG;AAAA,QACH;AAAA,MACH,CAAA,EAAE,aAAc;AACjB,cAAQ,MAAM,QAAM;AAAA,QAChB,KAAK;AACD,cAAI,gBAAgB;AACpB,cAAI,mCAAS,gBAAgB;AACzB,4BAAgB,QAAQ;AAAA,UAChD,OACyB;AACD,kBAAM,iBAAiB,SAAS,QAAQ,IAAI,sBAAsB;AAClE,gBAAI,gBAAgB;AAChB,oBAAM,mBAAmB,SAAS,cAAc;AAChD,kBAAI,CAAC,MAAM,gBAAgB,GAAG;AAC1B,gCAAgB;AAAA,cAChD;AAAA,YACA;AAAA,UACA;AACoB,gBAAM,MAAM,aAAa;AACzB;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,iBAAO;AAAA,MAC3B;AAAA,IACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,MAAM,cAAc,eAAe,EAAE,OAAO,UAAU,CAAA,EAAI,GAAE,SAAS;AACjE,QAAI,SAAS,QAAQ,MAAM,UAAU,GAAG;AACpC,YAAM,IAAI,MAAM,gHAAgH;AAAA,IAC5I;AACQ,UAAM,yBAAwB,mCAAS,mBAAkB;AAEzD,UAAM,mBAAmB,KAAK,IAAI,uBAAuB,MAAM,MAAM;AACrE,UAAMxM,UAAS,KAAK;AACpB,UAAM,eAAe,MAAM,OAAQ;AACnC,UAAM,aAAa,CAAC,GAAG,OAAO;AAG9B,mBAAe,aAAa,UAAU;AAClC,eAAS,QAAQ,UAAU;AACvB,cAAM,UAAU,MAAMA,QAAO,MAAM,OAAO,EAAE,MAAM,MAAM,SAAS,aAAY,GAAI,OAAO;AACxF,mBAAW,KAAK,QAAQ,EAAE;AAAA,MAC1C;AAAA,IACA;AAEQ,UAAM,UAAU,MAAM,gBAAgB,EAAE,KAAK,YAAY,EAAE,IAAI,YAAY;AAE3E,UAAM,oBAAoB,OAAO;AACjC,WAAO,MAAM,KAAK,cAAc,eAAe;AAAA,MAC3C,UAAU;AAAA,IACtB,CAAS;AAAA,EACT;AACA;AChHO,MAAM,qBAAqB,YAAY;AAAA,EAC1C,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,QAAQ,IAAIyM,QAAe,KAAK,OAAO;AAC5C,SAAK,cAAc,IAAIC,YAA2B,KAAK,OAAO;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,kBAAkB;AAAA,MACvC;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,eAAe,SAAS;AAC7B,WAAO,KAAK,QAAQ,IAAI,kBAAkB,aAAa,IAAI;AAAA,MACvD,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,eAAe,MAAM,SAAS;AACjC,WAAO,KAAK,QAAQ,KAAK,kBAAkB,aAAa,IAAI;AAAA,MACxD;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA,EACI,KAAK,QAAQ,CAAE,GAAE,SAAS;AACtB,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,CAAE,GAAE,KAAK;AAAA,IACtC;AACQ,WAAO,KAAK,QAAQ,WAAW,kBAAkB,kBAAkB;AAAA,MAC/D;AAAA,MACA,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,eAAe,SAAS;AACxB,WAAO,KAAK,QAAQ,OAAO,kBAAkB,aAAa,IAAI;AAAA,MAC1D,GAAG;AAAA,MACH,SAAS,EAAE,eAAe,iBAAiB,GAAG,mCAAS,QAAS;AAAA,IAC5E,CAAS;AAAA,EACT;AACA;AACO,MAAM,yBAAyB,WAAW;AACjD;AACA,aAAa,mBAAmB;AAChC,aAAa,QAAQF;AACrB,aAAa,uBAAuB;AACpC,aAAa,cAAc;ACxDpB,MAAM,aAAa,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,WAAW,IAAIG,SAAqB,KAAK,OAAO;AACrD,SAAK,eAAe,IAAIC,aAA6B,KAAK,OAAO;AACjE,SAAK,OAAO,IAAIC,MAAa,KAAK,OAAO;AACzC,SAAK,aAAa,IAAIC,WAAyB,KAAK,OAAO;AAC3D,SAAK,UAAU,IAAIC,QAAmB,KAAK,OAAO;AAAA,EAC1D;AACA;AACA,KAAK,WAAW;AAChB,KAAK,eAAe;AACpB,KAAK,mBAAmB;AACxB,KAAK,aAAa;AAClB,KAAK,iBAAiB;AACtB,KAAK,UAAU;ACzBR,MAAMjD,qBAAoB,YAAY;AAAA,EACzC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,gBAAgB,EAAE,MAAM,GAAG,SAAS,QAAQ,KAAK,UAAU,MAAK,CAAE;AAAA,EACnG;AACA;ACJO,MAAM,mBAAmB,YAAY;AAAA;AAAA;AAAA;AAAA,EAIxC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,eAAe,EAAE,MAAM,GAAG,SAAS;AAAA,EACpE;AACA;ACFO,MAAM0C,eAAc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBnC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,UAAUzC,4BAAiC,EAAE,MAAM,GAAG,QAAO,CAAE,CAAC;AAAA,EACjG;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,QAAQ,SAAS;AACtB,WAAO,KAAK,QAAQ,IAAI,UAAU,MAAM,IAAI,OAAO;AAAA,EAC3D;AAAA,EACI,KAAK,QAAQ,CAAE,GAAE,SAAS;AACtB,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,CAAE,GAAE,KAAK;AAAA,IACtC;AACQ,WAAO,KAAK,QAAQ,WAAW,UAAU,iBAAiB,EAAE,OAAO,GAAG,SAAS;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,QAAQ,SAAS;AACjB,WAAO,KAAK,QAAQ,OAAO,UAAU,MAAM,IAAI,OAAO;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAII,QAAQ,QAAQ,SAAS;AACrB,WAAO,KAAK,QAAQ,IAAI,UAAU,MAAM,YAAY;AAAA,MAChD,GAAG;AAAA,MACH,SAAS,EAAE,QAAQ,sBAAsB,GAAG,mCAAS,QAAS;AAAA,MAC9D,kBAAkB;AAAA,IAC9B,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,gBAAgB,QAAQ,SAAS;AAC7B,WAAO,KAAK,QAAQ,IAAI,UAAU,MAAM,YAAY,OAAO;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA,EAII,MAAM,kBAAkB,IAAI,EAAE,eAAe,KAAM,UAAU,KAAK,KAAK,IAAM,IAAG,IAAI;AAChF,UAAM,kBAAkB,oBAAI,IAAI,CAAC,aAAa,SAAS,SAAS,CAAC;AACjE,UAAM,QAAQ,KAAK,IAAK;AACxB,QAAI,OAAO,MAAM,KAAK,SAAS,EAAE;AACjC,WAAO,CAAC,KAAK,UAAU,CAAC,gBAAgB,IAAI,KAAK,MAAM,GAAG;AACtD,YAAM,MAAM,YAAY;AACxB,aAAO,MAAM,KAAK,SAAS,EAAE;AAC7B,UAAI,KAAK,QAAQ,QAAQ,SAAS;AAC9B,cAAM,IAAI,0BAA0B;AAAA,UAChC,SAAS,iCAAiC,EAAE,+BAA+B,OAAO;AAAA,QACtG,CAAiB;AAAA,MACjB;AAAA,IACA;AACQ,WAAO;AAAA,EACf;AACA;AACO,MAAM,wBAAwB,WAAW;AAChD;AACAyC,OAAM,kBAAkB;ACvFjB,MAAM,oBAAoB,YAAY;AAAA,EACzC,KAAK,iBAAiB,QAAQ,CAAA,GAAI,SAAS;AACvC,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,iBAAiB,CAAA,GAAI,KAAK;AAAA,IACvD;AACQ,WAAO,KAAK,QAAQ,WAAW,qBAAqB,eAAe,gBAAgB,8BAA8B,EAAE,OAAO,GAAG,QAAO,CAAE;AAAA,EAC9I;AACA;AACO,MAAM,qCAAqC,WAAW;AAC7D;AACA,YAAY,+BAA+B;ACRpC,MAAM,aAAa,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,cAAc,IAAIQ,YAA2B,KAAK,OAAO;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,qBAAqB,EAAE,MAAM,GAAG,SAAS;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMI,SAAS,iBAAiB,SAAS;AAC/B,WAAO,KAAK,QAAQ,IAAI,qBAAqB,eAAe,IAAI,OAAO;AAAA,EAC/E;AAAA,EACI,KAAK,QAAQ,CAAE,GAAE,SAAS;AACtB,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,KAAK,CAAE,GAAE,KAAK;AAAA,IACtC;AACQ,WAAO,KAAK,QAAQ,WAAW,qBAAqB,oBAAoB,EAAE,OAAO,GAAG,SAAS;AAAA,EACrG;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,iBAAiB,SAAS;AAC7B,WAAO,KAAK,QAAQ,KAAK,qBAAqB,eAAe,WAAW,OAAO;AAAA,EACvF;AAAA,EACI,WAAW,iBAAiB,QAAQ,CAAA,GAAI,SAAS;AAC7C,QAAI,iBAAiB,KAAK,GAAG;AACzB,aAAO,KAAK,WAAW,iBAAiB,CAAA,GAAI,KAAK;AAAA,IAC7D;AACQ,WAAO,KAAK,QAAQ,WAAW,qBAAqB,eAAe,WAAW,yBAAyB;AAAA,MACnG;AAAA,MACA,GAAG;AAAA,IACf,CAAS;AAAA,EACT;AACA;AACO,MAAM,2BAA2B,WAAW;AACnD;AACO,MAAM,gCAAgC,WAAW;AACxD;AACA,KAAK,qBAAqB;AAC1B,KAAK,0BAA0B;AAC/B,KAAK,cAAc;AACnB,KAAK,+BAA+B;ACxD7B,MAAM,mBAAmB,YAAY;AAAA,EACxC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,OAAO,IAAIC,KAAa,KAAK,OAAO;AAAA,EACjD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,0BAA0B;ACT9B,MAAM,eAAe,YAAY;AAAA;AAAA;AAAA;AAAA,EAIpC,gBAAgB,MAAM,SAAS;AAC3B,WAAO,KAAK,QAAQ,KAAK,sBAAsBlD,4BAAiC,EAAE,MAAM,GAAG,QAAO,CAAE,CAAC;AAAA,EAC7G;AAAA;AAAA;AAAA;AAAA,EAII,KAAK,MAAM,SAAS;AAChB,WAAO,KAAK,QAAQ,KAAK,iBAAiBA,4BAAiC,EAAE,MAAM,GAAG,QAAO,CAAE,CAAC;AAAA,EACxG;AAAA;AAAA;AAAA;AAAA,EAII,SAAS,MAAM,SAAS;AACpB,WAAO,KAAK,QAAQ,KAAK,uBAAuB,EAAE,MAAM,GAAG,SAAS;AAAA,EAC5E;AACA;ACnBO,MAAM,eAAe,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpC,SAAS,OAAO,SAAS;AACrB,WAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,IAAI,OAAO;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,KAAK,SAAS;AACV,WAAO,KAAK,QAAQ,WAAW,WAAW,YAAY,OAAO;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,OAAO,SAAS;AAChB,WAAO,KAAK,QAAQ,OAAO,WAAW,KAAK,IAAI,OAAO;AAAA,EAC9D;AACA;AAIO,MAAM,mBAAmB,KAAK;AACrC;AACA,OAAO,aAAa;AC7Bb,MAAM,oBAAoB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzC,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,gBAAgB,EAAE,MAAM,GAAG,SAAS;AAAA,EACrE;AACA;ACPO,MAAM,cAAc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcnC,OAAO,UAAU,MAAM,SAAS;AAC5B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,UAAUA,4BAAiC,EAAE,MAAM,GAAG,QAAS,CAAA,CAAC;AAAA,EACrH;AACA;AChBO,MAAM,gBAAgB,YAAY;AAAA,EACrC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,QAAQ,IAAImD,MAAe,KAAK,OAAO;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBI,OAAO,MAAM,SAAS;AAClB,WAAO,KAAK,QAAQ,KAAK,YAAY,EAAE,MAAM,GAAG,SAAS;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,UAAU,SAAS;AACtB,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,WAAW,OAAO;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBI,SAAS,UAAU,MAAM,SAAS;AAC9B,WAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,aAAa,EAAE,MAAM,GAAG,QAAO,CAAE;AAAA,EACtF;AACA;AACA,QAAQ,QAAQ;AC1DhB,IAAI;AAsBS,MAAA,eAAeC,UAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBvC,YAAY,EAAE,UAAUC,QAAa,iBAAiB,GAAG,SAASA,QAAa,gBAAgB,GAAG,eAAeA,QAAa,eAAe,KAAK,MAAM,UAAUA,QAAa,mBAAmB,KAAK,MAAM,GAAG,KAAS,IAAA,IAAI;AACzN,QAAI,WAAW,QAAW;AAChB,YAAA,IAAIC,YAAmB,oLAAoL;AAAA,IAAA;AAErN,UAAM,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,MACH,SAAS,WAAW;AAAA,IACxB;AACA,QAAI,CAAC,QAAQ,2BAA2BC,sBAA2B;AACzD,YAAA,IAAID,YAAmB,obAAob;AAAA,IAAA;AAE/c,UAAA;AAAA,MACF,SAAS,QAAQ;AAAA,MACjB,SAAS,QAAQ,WAAW;AAAA,MAC5B,WAAW,QAAQ;AAAA,MACnB,YAAY,QAAQ;AAAA,MACpB,OAAO,QAAQ;AAAA,IAAA,CAClB;AACD,SAAK,cAAc,IAAIE,aAAgB,IAAI;AAC3C,SAAK,OAAO,IAAIC,OAAS,IAAI;AAC7B,SAAK,aAAa,IAAIC,WAAe,IAAI;AACzC,SAAK,QAAQ,IAAIC,OAAU,IAAI;AAC/B,SAAK,SAAS,IAAIC,OAAW,IAAI;AACjC,SAAK,QAAQ,IAAIC,MAAU,IAAI;AAC/B,SAAK,cAAc,IAAIC,YAAgB,IAAI;AAC3C,SAAK,SAAS,IAAIC,OAAW,IAAI;AACjC,SAAK,aAAa,IAAIC,WAAe,IAAI;AACzC,SAAK,OAAO,IAAIC,KAAS,IAAI;AAC7B,SAAK,UAAU,IAAIC,QAAY,IAAI;AACnC,SAAK,UAAU,IAAIC,QAAY,IAAI;AACnC,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,UAAU;AAAA,EAAA;AAAA,EAEnB,eAAe;AACX,WAAO,KAAK,SAAS;AAAA,EAAA;AAAA,EAEzB,eAAe,MAAM;AACV,WAAA;AAAA,MACH,GAAG,MAAM,eAAe,IAAI;AAAA,MAC5B,uBAAuB,KAAK;AAAA,MAC5B,kBAAkB,KAAK;AAAA,MACvB,GAAG,KAAK,SAAS;AAAA,IACrB;AAAA,EAAA;AAAA,EAEJ,YAAY,MAAM;AACd,WAAO,EAAE,eAAe,UAAU,KAAK,MAAM,GAAG;AAAA,EAAA;AAAA,EAEpD,eAAe,OAAO;AAClB,WAAOC,UAAa,OAAO,EAAE,aAAa,YAAY;AAAA,EAAA;AAE9D;AACA,KAAK;AACL,OAAO,SAAS;AAChB,OAAO,kBAAkB;AACzB,OAAO,cAAcd;AACrB,OAAO,WAAWe;AAClB,OAAO,qBAAqBC;AAC5B,OAAO,4BAA4BC;AACnC,OAAO,oBAAoBC;AAC3B,OAAO,gBAAgBC;AACvB,OAAO,gBAAgBC;AACvB,OAAO,iBAAiBC;AACxB,OAAO,kBAAkBC;AACzB,OAAO,sBAAsBC;AAC7B,OAAO,sBAAsBC;AAC7B,OAAO,wBAAwBC;AAC/B,OAAO,2BAA2BC;AAClC,OAAO,SAASC;AAChB,OAAO,eAAeC;AACtB,OAAO,cAAcnF;AACrB,OAAO,OAAOD;AACd,OAAO,aAAa;AACpB,OAAO,QAAQ2C;AACf,OAAO,kBAAkB;AACzB,OAAO,SAAS;AAChB,OAAO,QAAQ;AACf,OAAO,cAAc;AACrB,OAAO,SAAS;AAChB,OAAO,aAAa;AACpB,OAAO,aAAa;AACpB,OAAO,OAAO;AACd,OAAO,UAAU;AACjB,OAAO,cAAc;AACrB,OAAO,UAAU0C;ACzHV,SAAS,cAAcvK,MAAoB;AAChD,UAAQ,OAAO,uBAAuB,OAAOnN,IAAG,WAAmB;AAC7D,QAAA;AACF,YAAMwI,UAAS,IAAI,OAAO,EAAE,QAAQ;AACpC,YAAM,SAAS,MAAMA,QAAO,OAAO,KAAK;AACxC,aAAO,OAAO,KAAK,IAAI,CAAC,UAAU,MAAM,EAAE;AAAA,aACnC,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AAED,UAAQ,OAAO,0BAA0B,OAAOxI,IAAG,QAAgB,YAAoB;AACjF,QAAA;AACF,YAAMwI,UAAS,IAAI,UAAU,EAAE,QAAQ,SAAS;AAChD,YAAM,SAAS,MAAMA,QAAO,OAAO,KAAK;AACxC,aAAO,OAAO,KAAK,IAAI,CAAC,UAAU,MAAM,EAAE;AAAA,aACnC,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AAED,UAAQ,OAAO,uBAAuB,OAAOxI,IAAG,YAAoB;AAC9D,QAAA;AACF,YAAM,SAAS,IAAI,OAAO,EAAE,MAAM,SAAS;AACrC,YAAA,OAAO,MAAM,OAAO,KAAK;AAC/B,aAAO,KAAK,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI;AAAA,aACrC,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AAED,UAAQ,OAAO,iCAAiC,OAAOA,IAAG,QAAgB,YAAoB;AACxF,QAAA;AACF,YAAMwI,UAAS,IAAI,OAAO,EAAE,QAAQ,SAAS;AAC7C,YAAM,OAAO,MAAMA,QAAO,OAAO,KAAK;AACtC,aAAO,KAAK,KAAK,IAAI,CAAC,UAAU,MAAM,EAAE;AAAA,aACjC,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AAED,UAAQ,OAAO,4BAA4B,OAAOxI,IAAG,WAAmB;AAClE,QAAA;AACI,YAAA,MAAM,+DAA+D,MAAM;AAC3E,YAAA,WAAW,MAAM,MAAM,GAAG;AAC1B,YAAA,OAAO,MAAM,SAAS,KAAK;AACjC,aAAO,KAAK,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI;AAAA,aACrC,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AAED,UAAQ,OAAO,0BAA0B,OAAOA,IAAG,WAAmB;;AAChE,QAAA;AACF,YAAMwI,UAAS,IAAI,QAAQ,EAAE,QAAQ;AACrC,YAAM,SAAS,MAAMA,QAAO,OAAO,KAAK;AACjC,eAAAjI,MAAA,OAAO,SAAP,gBAAAA,IAAa,IAAI,CAAC,UAAU,MAAM,QAAO,CAAC;AAAA,aAC1C,OAAO;AACd,aAAO,CAAC;AAAA,IAAA;AAAA,EACV,CACD;AACH;ACjEA,MAAM,gBAAgB,KAAK,kBAAkB;AAAA,EAC3C,EAAE,MAAM,OAAO;AAAA,EACf,EAAE,MAAM,YAAY;AACtB,CAAC;AAED,MAAM,YAAY,KAAK,kBAAkB;AAAA,EACvC,EAAE,MAAM,OAAO;AAAA,EACf,EAAE,MAAM,QAAQ;AAAA,EAChB,EAAE,MAAM,MAAM;AAAA,EACd,EAAE,MAAM,YAAY;AACtB,CAAC;AAEM,SAAS,eAAe4M,MAAoB;AACzC,UAAA,OAAO,+BAA+B,MAAM;AAClD,kBAAc,MAAM;AAAA,EAAA,CACrB;AAEO,UAAA,OAAO,2BAA2B,MAAM;AAC9C,cAAU,MAAM;AAAA,EAAA,CACjB;AACH;ACfO,SAAS,WAAWA,MAAoB;AAC7C,gBAAiB;AACjB,mBAAiBA,IAAG;AACpB,iBAAkB;AAClB,gBAAiB;AACjB,iBAAkB;AACpB;ACVA,SAAS,4BAA4B;AAAA,EACnC;AAAA,IACE,QAAQ;AAAA,IACR,YAAY;AAAA,MACV,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,QAAQ;AAAA,IAAA;AAAA,EACV;AAEJ,CAAC;AAED,SAAS,4BAA4B;AAAA,EACnC;AAAA,IACE,QAAQ;AAAA,IACR,YAAY;AAAA,MACV,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,QAAQ;AAAA,IAAA;AAAA,EACV;AAEJ,CAAC;AAEM,SAAS,eAAe;AACpB,WAAA,OAAO,cAAc,CAAC,QAAQ;AAC/B,UAAA,MAAM,IAAI,IAAI,QAAQ,kBAAkB,QAAQ,aAAa,UAAU,aAAa,SAAS;AAC5F,WAAAwK,MAAI,MAAM,GAAG;AAAA,EAAA,CACrB;AAEQ,WAAA,OAAO,OAAO,CAAC,QAAQ;AAE9B,UAAM,MAAM,IAAI,IAAI,UAAU,CAAC;AAC/B,UAAM,YAAYtX,OAAK,KAAK,QAAY,IAAA,aAAa,SAAS,GAAG;AACjE,WAAOsX,MAAI,MAAM,UAAU,SAAS,EAAE;AAAA,EAAA,CACvC;AAEH;ACzBgB,cAAc,YAAY,GAAG;AAC7C,MAAMC,cAAYvX,OAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAY7D,QAAA,IAAY,WAAWA,OAAK,KAAKuX,aAAW,OAAO;AAE5C,MAAM,YAAYvX,OAAK,KAAK,QAAA,IAAY,UAAU,eAAe;AACjE,MAAM,gBAAgBA,OAAK,KAAK,QAAA,IAAY,UAAU,MAAM;AACtD,MAAA,sBAAsB,QAAY,IAAA;AAE/C,QAAA,IAAY,cAAc,sBACtBA,OAAK,KAAK,QAAY,IAAA,UAAU,QAAQ,IACxC;AAGJ,IAAIwX,KAAG,QAAA,EAAU,WAAW,KAAK;AAC/B,MAAI,4BAA4B;AAGlC,IAAI,QAAQ,aAAa;AACnB,MAAA,kBAAkB,IAAI,SAAS;AAErC,IAAI,CAAC,IAAI,6BAA6B;AACpC,MAAI,KAAK;AACT,UAAQ,KAAK,CAAC;AAChB;AAEA,IAAI,MAA4B;AAChC,MAAM,UAAUxX,OAAK,KAAKuX,aAAW,sBAAsB;AAC3D,MAAM,YAAYvX,OAAK,KAAK,eAAe,YAAY;AAEvD,eAAe,UAAU;AACnB,MAAA,QAAQ,aAAa,SAAS;AAChC,eAAW,QAAQ,UAAU;AAAA,EAAA,WACpB,QAAQ,aAAa,UAAU;AACxC,mBAAe,QAAQ,UAAU;AAEjC,UAAM,UAAU,WAAW;AAC3B,QAAI,SAAS;AACX,iBAAW,OAAO;AAAA,IAAA;AAAA,EACpB;AAGY,gBAAA;AACD,eAAA;AACA,eAAA;AACf;AAEA,eAAe,eAAe;AAC5B,QAAM,IAAI,cAAc;AAAA,IACtB,OAAO;AAAA,IACP,MAAMA,OAAK,KAAK,QAAA,IAAY,aAAa,aAAa;AAAA,IACtD,gBAAgB;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA;AAAA,EAOF,CACD;AAGG,MAAA,YAAY,QAAQ,WAAW;AAAA,IACjC,CAAC,SAAS,aAAa;AACZ,eAAA,EAAE,gBAAgB,EAAE,GAAG,QAAQ,gBAAgB,QAAQ,IAAI,GAAG;AAAA,IAAA;AAAA,EAE3E;AAEA,MAAI,YAAY,QAAQ,WAAW,kBAAkB,CAAC,SAAS,aAAa;AACjE,aAAA;AAAA,MACP,iBAAiB;AAAA,QACf,GAAG,QAAQ;AAAA,QACX,+BAA+B,CAAC,GAAG;AAAA,QACnC,oCAAoC,CAAC,MAAM;AAAA,QAC3C,gCAAgC,CAAC,OAAO,QAAQ,OAAO,UAAU,SAAS;AAAA,QAC1E,gCAAgC,CAAC,gBAAgB,eAAe;AAAA,MAAA;AAAA,IAClE,CACD;AAAA,EAAA,CACF;AAED,MAAI,qBAAqB;AACvB,QAAI,QAAQ,mBAAmB;AAE/B,QAAI,YAAY,aAAa;AAAA,EAAA,OACxB;AACL,QAAI,QAAQ,IAAI;AAChB,QAAI,SAAS,SAAS;AAAA,EAAA;AAIpB,MAAA,YAAY,GAAG,mBAAmB,MAAM;AAC1C,+BAAK,YAAY,KAAK,6CAA4B,KAAK,GAAE;EAAgB,CAC1E;AAGD,MAAI,YAAY,qBAAqB,CAAC,EAAE,UAAU;AAC5C,QAAA,IAAI,WAAW,QAAQ;AACzB,YAAM,aAAa,GAAG;AAEjB,WAAA,EAAE,QAAQ,OAAO;AAAA,EAAA,CACzB;AAEG,MAAA,GAAG,SAAS,CAAC,UAAU;AACrB,QAAA,CAAC+M,WAAS,YAAY;AACxB,YAAM,eAAe;AACrB,iCAAK;AACE,aAAA;AAAA,IAAA;AAGF,WAAA;AAAA,EAAA,CACR;AAGD,SAAO,GAAG;AAGJ,QAAA,sBAAsB,MAAM,IAAI,eAAe;AACjD,MAAA,QAAQ,aAAa,YAAY,qBAAqB;AACxD,aAAS,GAAG;AACZA,eAAS,cAAc,KAAK;AAAA,EAAA;AAI9B,aAAW,GAAG;AAER,QAAA,mBAAmB,MAAM,IAAI,YAAY;AAC/C,MAAI,qBAAqB;AAAA,IACvB,aAAa;AAAA,IACb,cAAc;AAAA,EAAA,CACf;AACH;AAEA,IAAI,UAAA,EAAY,KAAK,OAAO;AAE5B,IAAI,GAAG,qBAAqB,YAAY;AAChC,QAAA;AAEN,MAAI,QAAQ,aAAa,YAAYA,WAAS,YAAY;AACxD,UAAM,QAAQ;AACd,QAAI,KAAK;AAAA,EAAA;AAEb,CAAC;AAED,IAAI,GAAG,mBAAmB,MAAM;AAC9B,MAAI,KAAK;AAEP,QAAI,IAAI,YAAY;AAClB,UAAI,QAAQ;AAEd,QAAI,MAAM;AAAA,EAAA;AAEd,CAAC;AAED,IAAI,GAAG,eAAe,MAAM;AAC1BA,aAAS,cAAc,IAAI;AAC7B,CAAC;AAED,IAAI,GAAG,YAAY,MAAM;AACjB,QAAA,aAAa,cAAc,cAAc;AAC/C,MAAI,WAAW,QAAQ;AACV,eAAA,CAAC,EAAE,MAAM;AAAA,EAAA,OACf;AACL,QAAI,KAAK;AACP,UAAI,KAAK;AAAA,IAAA,OACJ;AACQ,mBAAA;AAAA,IAAA;AAAA,EACf;AAEJ,CAAC;AAGD,QAAQ,OAAO,YAAY,CAACpN,IAAG,QAAQ;AAC/B,QAAA,cAAc,IAAI,cAAc;AAAA,IACpC,gBAAgB;AAAA,MACd;AAAA,MACA,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,IAAA;AAAA,EACpB,CACD;AAED,MAAI,qBAAqB;AACvB,gBAAY,QAAQ,GAAG,mBAAmB,IAAI,GAAG,EAAE;AAAA,EAAA,OAC9C;AACL,gBAAY,SAAS,WAAW,EAAE,MAAM,KAAK;AAAA,EAAA;AAEjD,CAAC;","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,177,178,179,180,181,182,187,188,189,190,191,192,193,194,195,196,197,214,215,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319]}